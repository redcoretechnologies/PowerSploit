PCMNCg0KUG93ZXJVcCBhaW1zIHRvIGJlIGEgY2xlYXJpbmdob3VzZSBvZiBjb21tb24gV2luZG93cyBwcml2aWxlZ2UgZXNjYWxhdGlvbg0KdmVjdG9ycyB0aGF0IHJlbHkgb24gbWlzY29uZmlndXJhdGlvbnMuIFNlZSBSRUFETUUubWQgZm9yIG1vcmUgaW5mb3JtYXRpb24uDQoNCkF1dGhvcjogQGhhcm1qMHkNCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZQ0KUmVxdWlyZWQgRGVwZW5kZW5jaWVzOiBOb25lDQpPcHRpb25hbCBEZXBlbmRlbmNpZXM6IE5vbmUNCg0KIz4NCg0KI1JlcXVpcmVzIC1WZXJzaW9uIDINCg0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIw0KIyBQU1JlZmxlY3QgY29kZSBmb3IgV2luZG93cyBBUEkgYWNjZXNzDQojIEF1dGhvcjogQG1hdHRpZmVzdGF0aW9uDQojICAgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL21hdHRpZmVzdGF0aW9uL1BTUmVmbGVjdC9tYXN0ZXIvUFNSZWZsZWN0LnBzbTENCiMNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoNCmZ1bmN0aW9uIE5ldy1Jbk1lbW9yeU1vZHVsZSB7DQo8Iw0KLlNZTk9QU0lTDQoNCkNyZWF0ZXMgYW4gaW4tbWVtb3J5IGFzc2VtYmx5IGFuZCBtb2R1bGUNCg0KQXV0aG9yOiBNYXR0aGV3IEdyYWViZXIgKEBtYXR0aWZlc3RhdGlvbikNCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZQ0KUmVxdWlyZWQgRGVwZW5kZW5jaWVzOiBOb25lDQpPcHRpb25hbCBEZXBlbmRlbmNpZXM6IE5vbmUNCg0KLkRFU0NSSVBUSU9ODQoNCldoZW4gZGVmaW5pbmcgY3VzdG9tIGVudW1zLCBzdHJ1Y3RzLCBhbmQgdW5tYW5hZ2VkIGZ1bmN0aW9ucywgaXQgaXMNCm5lY2Vzc2FyeSB0byBhc3NvY2lhdGUgdG8gYW4gYXNzZW1ibHkgbW9kdWxlLiBUaGlzIGhlbHBlciBmdW5jdGlvbg0KY3JlYXRlcyBhbiBpbi1tZW1vcnkgbW9kdWxlIHRoYXQgY2FuIGJlIHBhc3NlZCB0byB0aGUgJ2VudW0nLA0KJ3N0cnVjdCcsIGFuZCBBZGQtV2luMzJUeXBlIGZ1bmN0aW9ucy4NCg0KLlBBUkFNRVRFUiBNb2R1bGVOYW1lDQoNClNwZWNpZmllcyB0aGUgZGVzaXJlZCBuYW1lIGZvciB0aGUgaW4tbWVtb3J5IGFzc2VtYmx5IGFuZCBtb2R1bGUuIElmDQpNb2R1bGVOYW1lIGlzIG5vdCBwcm92aWRlZCwgaXQgd2lsbCBkZWZhdWx0IHRvIGEgR1VJRC4NCg0KLkVYQU1QTEUNCg0KJE1vZHVsZSA9IE5ldy1Jbk1lbW9yeU1vZHVsZSAtTW9kdWxlTmFtZSBXaW4zMg0KIz4NCg0KICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU1VzZVNob3VsZFByb2Nlc3NGb3JTdGF0ZUNoYW5naW5nRnVuY3Rpb25zJywgJycpXQ0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0gKA0KICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCldDQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgIFtTdHJpbmddDQogICAgICAgICRNb2R1bGVOYW1lID0gW0d1aWRdOjpOZXdHdWlkKCkuVG9TdHJpbmcoKQ0KICAgICkNCg0KICAgICRBcHBEb21haW4gPSBbUmVmbGVjdGlvbi5Bc3NlbWJseV0uQXNzZW1ibHkuR2V0VHlwZSgnU3lzdGVtLkFwcERvbWFpbicpLkdldFByb3BlcnR5KCdDdXJyZW50RG9tYWluJykuR2V0VmFsdWUoJG51bGwsIEAoKSkNCiAgICAkTG9hZGVkQXNzZW1ibGllcyA9ICRBcHBEb21haW4uR2V0QXNzZW1ibGllcygpDQoNCiAgICBmb3JlYWNoICgkQXNzZW1ibHkgaW4gJExvYWRlZEFzc2VtYmxpZXMpIHsNCiAgICAgICAgaWYgKCRBc3NlbWJseS5GdWxsTmFtZSAtYW5kICgkQXNzZW1ibHkuRnVsbE5hbWUuU3BsaXQoJywnKVswXSAtZXEgJE1vZHVsZU5hbWUpKSB7DQogICAgICAgICAgICByZXR1cm4gJEFzc2VtYmx5DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAkRHluQXNzZW1ibHkgPSBOZXctT2JqZWN0IFJlZmxlY3Rpb24uQXNzZW1ibHlOYW1lKCRNb2R1bGVOYW1lKQ0KICAgICREb21haW4gPSAkQXBwRG9tYWluDQogICAgJEFzc2VtYmx5QnVpbGRlciA9ICREb21haW4uRGVmaW5lRHluYW1pY0Fzc2VtYmx5KCREeW5Bc3NlbWJseSwgJ1J1bicpDQogICAgJE1vZHVsZUJ1aWxkZXIgPSAkQXNzZW1ibHlCdWlsZGVyLkRlZmluZUR5bmFtaWNNb2R1bGUoJE1vZHVsZU5hbWUsICRGYWxzZSkNCg0KICAgIHJldHVybiAkTW9kdWxlQnVpbGRlcg0KfQ0KDQoNCiMgQSBoZWxwZXIgZnVuY3Rpb24gdXNlZCB0byByZWR1Y2UgdHlwaW5nIHdoaWxlIGRlZmluaW5nIGZ1bmN0aW9uDQojIHByb3RvdHlwZXMgZm9yIEFkZC1XaW4zMlR5cGUuDQpmdW5jdGlvbiBmdW5jIHsNCiAgICBQYXJhbSAoDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAwLCBNYW5kYXRvcnkgPSAkVHJ1ZSldDQogICAgICAgIFtTdHJpbmddDQogICAgICAgICREbGxOYW1lLA0KDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAxLCBNYW5kYXRvcnkgPSAkVHJ1ZSldDQogICAgICAgIFtzdHJpbmddDQogICAgICAgICRGdW5jdGlvbk5hbWUsDQoNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDIsIE1hbmRhdG9yeSA9ICRUcnVlKV0NCiAgICAgICAgW1R5cGVdDQogICAgICAgICRSZXR1cm5UeXBlLA0KDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAzKV0NCiAgICAgICAgW1R5cGVbXV0NCiAgICAgICAgJFBhcmFtZXRlclR5cGVzLA0KDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSA0KV0NCiAgICAgICAgW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLkNhbGxpbmdDb252ZW50aW9uXQ0KICAgICAgICAkTmF0aXZlQ2FsbGluZ0NvbnZlbnRpb24sDQoNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDUpXQ0KICAgICAgICBbUnVudGltZS5JbnRlcm9wU2VydmljZXMuQ2hhclNldF0NCiAgICAgICAgJENoYXJzZXQsDQoNCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgJEVudHJ5UG9pbnQsDQoNCiAgICAgICAgW1N3aXRjaF0NCiAgICAgICAgJFNldExhc3RFcnJvcg0KICAgICkNCg0KICAgICRQcm9wZXJ0aWVzID0gQHsNCiAgICAgICAgRGxsTmFtZSA9ICREbGxOYW1lDQogICAgICAgIEZ1bmN0aW9uTmFtZSA9ICRGdW5jdGlvbk5hbWUNCiAgICAgICAgUmV0dXJuVHlwZSA9ICRSZXR1cm5UeXBlDQogICAgfQ0KDQogICAgaWYgKCRQYXJhbWV0ZXJUeXBlcykgeyAkUHJvcGVydGllc1snUGFyYW1ldGVyVHlwZXMnXSA9ICRQYXJhbWV0ZXJUeXBlcyB9DQogICAgaWYgKCROYXRpdmVDYWxsaW5nQ29udmVudGlvbikgeyAkUHJvcGVydGllc1snTmF0aXZlQ2FsbGluZ0NvbnZlbnRpb24nXSA9ICROYXRpdmVDYWxsaW5nQ29udmVudGlvbiB9DQogICAgaWYgKCRDaGFyc2V0KSB7ICRQcm9wZXJ0aWVzWydDaGFyc2V0J10gPSAkQ2hhcnNldCB9DQogICAgaWYgKCRTZXRMYXN0RXJyb3IpIHsgJFByb3BlcnRpZXNbJ1NldExhc3RFcnJvciddID0gJFNldExhc3RFcnJvciB9DQogICAgaWYgKCRFbnRyeVBvaW50KSB7ICRQcm9wZXJ0aWVzWydFbnRyeVBvaW50J10gPSAkRW50cnlQb2ludCB9DQoNCiAgICBOZXctT2JqZWN0IFBTT2JqZWN0IC1Qcm9wZXJ0eSAkUHJvcGVydGllcw0KfQ0KDQoNCmZ1bmN0aW9uIEFkZC1XaW4zMlR5cGUNCnsNCjwjDQouU1lOT1BTSVMNCg0KQ3JlYXRlcyBhIC5ORVQgdHlwZSBmb3IgYW4gdW5tYW5hZ2VkIFdpbjMyIGZ1bmN0aW9uLg0KDQpBdXRob3I6IE1hdHRoZXcgR3JhZWJlciAoQG1hdHRpZmVzdGF0aW9uKQ0KTGljZW5zZTogQlNEIDMtQ2xhdXNlDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IE5vbmUNCk9wdGlvbmFsIERlcGVuZGVuY2llczogZnVuYw0KDQouREVTQ1JJUFRJT04NCg0KQWRkLVdpbjMyVHlwZSBlbmFibGVzIHlvdSB0byBlYXNpbHkgaW50ZXJhY3Qgd2l0aCB1bm1hbmFnZWQgKGkuZS4NCldpbjMyIHVubWFuYWdlZCkgZnVuY3Rpb25zIGluIFBvd2VyU2hlbGwuIEFmdGVyIHByb3ZpZGluZw0KQWRkLVdpbjMyVHlwZSB3aXRoIGEgZnVuY3Rpb24gc2lnbmF0dXJlLCBhIC5ORVQgdHlwZSBpcyBjcmVhdGVkDQp1c2luZyByZWZsZWN0aW9uIChpLmUuIGNzYy5leGUgaXMgbmV2ZXIgY2FsbGVkIGxpa2Ugd2l0aCBBZGQtVHlwZSkuDQoNClRoZSAnZnVuYycgaGVscGVyIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIHRvIHJlZHVjZSB0eXBpbmcgd2hlbiBkZWZpbmluZw0KbXVsdGlwbGUgZnVuY3Rpb24gZGVmaW5pdGlvbnMuDQoNCi5QQVJBTUVURVIgRGxsTmFtZQ0KDQpUaGUgbmFtZSBvZiB0aGUgRExMLg0KDQouUEFSQU1FVEVSIEZ1bmN0aW9uTmFtZQ0KDQpUaGUgbmFtZSBvZiB0aGUgdGFyZ2V0IGZ1bmN0aW9uLg0KDQouUEFSQU1FVEVSIEVudHJ5UG9pbnQNCg0KVGhlIERMTCBleHBvcnQgZnVuY3Rpb24gbmFtZS4gVGhpcyBhcmd1bWVudCBzaG91bGQgYmUgc3BlY2lmaWVkIGlmIHRoZQ0Kc3BlY2lmaWVkIGZ1bmN0aW9uIG5hbWUgaXMgZGlmZmVyZW50IHRoYW4gdGhlIG5hbWUgb2YgdGhlIGV4cG9ydGVkDQpmdW5jdGlvbi4NCg0KLlBBUkFNRVRFUiBSZXR1cm5UeXBlDQoNClRoZSByZXR1cm4gdHlwZSBvZiB0aGUgZnVuY3Rpb24uDQoNCi5QQVJBTUVURVIgUGFyYW1ldGVyVHlwZXMNCg0KVGhlIGZ1bmN0aW9uIHBhcmFtZXRlcnMuDQoNCi5QQVJBTUVURVIgTmF0aXZlQ2FsbGluZ0NvbnZlbnRpb24NCg0KU3BlY2lmaWVzIHRoZSBuYXRpdmUgY2FsbGluZyBjb252ZW50aW9uIG9mIHRoZSBmdW5jdGlvbi4gRGVmYXVsdHMgdG8NCnN0ZGNhbGwuDQoNCi5QQVJBTUVURVIgQ2hhcnNldA0KDQpJZiB5b3UgbmVlZCB0byBleHBsaWNpdGx5IGNhbGwgYW4gJ0EnIG9yICdXJyBXaW4zMiBmdW5jdGlvbiwgeW91IGNhbg0Kc3BlY2lmeSB0aGUgY2hhcmFjdGVyIHNldC4NCg0KLlBBUkFNRVRFUiBTZXRMYXN0RXJyb3INCg0KSW5kaWNhdGVzIHdoZXRoZXIgdGhlIGNhbGxlZSBjYWxscyB0aGUgU2V0TGFzdEVycm9yIFdpbjMyIEFQSQ0KZnVuY3Rpb24gYmVmb3JlIHJldHVybmluZyBmcm9tIHRoZSBhdHRyaWJ1dGVkIG1ldGhvZC4NCg0KLlBBUkFNRVRFUiBNb2R1bGUNCg0KVGhlIGluLW1lbW9yeSBtb2R1bGUgdGhhdCB3aWxsIGhvc3QgdGhlIGZ1bmN0aW9ucy4gVXNlDQpOZXctSW5NZW1vcnlNb2R1bGUgdG8gZGVmaW5lIGFuIGluLW1lbW9yeSBtb2R1bGUuDQoNCi5QQVJBTUVURVIgTmFtZXNwYWNlDQoNCkFuIG9wdGlvbmFsIG5hbWVzcGFjZSB0byBwcmVwZW5kIHRvIHRoZSB0eXBlLiBBZGQtV2luMzJUeXBlIGRlZmF1bHRzDQp0byBhIG5hbWVzcGFjZSBjb25zaXN0aW5nIG9ubHkgb2YgdGhlIG5hbWUgb2YgdGhlIERMTC4NCg0KLkVYQU1QTEUNCg0KJE1vZCA9IE5ldy1Jbk1lbW9yeU1vZHVsZSAtTW9kdWxlTmFtZSBXaW4zMg0KDQokRnVuY3Rpb25EZWZpbml0aW9ucyA9IEAoDQogIChmdW5jIGtlcm5lbDMyIEdldFByb2NBZGRyZXNzIChbSW50UHRyXSkgQChbSW50UHRyXSwgW1N0cmluZ10pIC1DaGFyc2V0IEFuc2kgLVNldExhc3RFcnJvciksDQogIChmdW5jIGtlcm5lbDMyIEdldE1vZHVsZUhhbmRsZSAoW0ludHB0cl0pIEAoW1N0cmluZ10pIC1TZXRMYXN0RXJyb3IpLA0KICAoZnVuYyBudGRsbCBSdGxHZXRDdXJyZW50UGViIChbSW50UHRyXSkgQCgpKQ0KKQ0KDQokVHlwZXMgPSAkRnVuY3Rpb25EZWZpbml0aW9ucyB8IEFkZC1XaW4zMlR5cGUgLU1vZHVsZSAkTW9kIC1OYW1lc3BhY2UgJ1dpbjMyJw0KJEtlcm5lbDMyID0gJFR5cGVzWydrZXJuZWwzMiddDQokTnRkbGwgPSAkVHlwZXNbJ250ZGxsJ10NCiROdGRsbDo6UnRsR2V0Q3VycmVudFBlYigpDQokbnRkbGxiYXNlID0gJEtlcm5lbDMyOjpHZXRNb2R1bGVIYW5kbGUoJ250ZGxsJykNCiRLZXJuZWwzMjo6R2V0UHJvY0FkZHJlc3MoJG50ZGxsYmFzZSwgJ1J0bEdldEN1cnJlbnRQZWInKQ0KDQouTk9URVMNCg0KSW5zcGlyZWQgYnkgTGVlIEhvbG1lcycgSW52b2tlLVdpbmRvd3NBcGkgaHR0cDovL3Bvc2hjb2RlLm9yZy8yMTg5DQoNCldoZW4gZGVmaW5pbmcgbXVsdGlwbGUgZnVuY3Rpb24gcHJvdG90eXBlcywgaXQgaXMgaWRlYWwgdG8gcHJvdmlkZQ0KQWRkLVdpbjMyVHlwZSB3aXRoIGFuIGFycmF5IG9mIGZ1bmN0aW9uIHNpZ25hdHVyZXMuIFRoYXQgd2F5LCB0aGV5DQphcmUgYWxsIGluY29ycG9yYXRlZCBpbnRvIHRoZSBzYW1lIGluLW1lbW9yeSBtb2R1bGUuDQojPg0KDQogICAgW091dHB1dFR5cGUoW0hhc2h0YWJsZV0pXQ0KICAgIFBhcmFtKA0KICAgICAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeT0kVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmVCeVByb3BlcnR5TmFtZT0kVHJ1ZSldDQogICAgICAgIFtTdHJpbmddDQogICAgICAgICREbGxOYW1lLA0KDQogICAgICAgIFtQYXJhbWV0ZXIoTWFuZGF0b3J5PSRUcnVlLCBWYWx1ZUZyb21QaXBlbGluZUJ5UHJvcGVydHlOYW1lPSRUcnVlKV0NCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgJEZ1bmN0aW9uTmFtZSwNCg0KICAgICAgICBbUGFyYW1ldGVyKFZhbHVlRnJvbVBpcGVsaW5lQnlQcm9wZXJ0eU5hbWU9JFRydWUpXQ0KICAgICAgICBbU3RyaW5nXQ0KICAgICAgICAkRW50cnlQb2ludCwNCg0KICAgICAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeT0kVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmVCeVByb3BlcnR5TmFtZT0kVHJ1ZSldDQogICAgICAgIFtUeXBlXQ0KICAgICAgICAkUmV0dXJuVHlwZSwNCg0KICAgICAgICBbUGFyYW1ldGVyKFZhbHVlRnJvbVBpcGVsaW5lQnlQcm9wZXJ0eU5hbWU9JFRydWUpXQ0KICAgICAgICBbVHlwZVtdXQ0KICAgICAgICAkUGFyYW1ldGVyVHlwZXMsDQoNCiAgICAgICAgW1BhcmFtZXRlcihWYWx1ZUZyb21QaXBlbGluZUJ5UHJvcGVydHlOYW1lPSRUcnVlKV0NCiAgICAgICAgW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLkNhbGxpbmdDb252ZW50aW9uXQ0KICAgICAgICAkTmF0aXZlQ2FsbGluZ0NvbnZlbnRpb24gPSBbUnVudGltZS5JbnRlcm9wU2VydmljZXMuQ2FsbGluZ0NvbnZlbnRpb25dOjpTdGRDYWxsLA0KDQogICAgICAgIFtQYXJhbWV0ZXIoVmFsdWVGcm9tUGlwZWxpbmVCeVByb3BlcnR5TmFtZT0kVHJ1ZSldDQogICAgICAgIFtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5DaGFyU2V0XQ0KICAgICAgICAkQ2hhcnNldCA9IFtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5DaGFyU2V0XTo6QXV0bywNCg0KICAgICAgICBbUGFyYW1ldGVyKFZhbHVlRnJvbVBpcGVsaW5lQnlQcm9wZXJ0eU5hbWU9JFRydWUpXQ0KICAgICAgICBbU3dpdGNoXQ0KICAgICAgICAkU2V0TGFzdEVycm9yLA0KDQogICAgICAgIFtQYXJhbWV0ZXIoTWFuZGF0b3J5PSRUcnVlKV0NCiAgICAgICAgW1ZhbGlkYXRlU2NyaXB0KHsoJF8gLWlzIFtSZWZsZWN0aW9uLkVtaXQuTW9kdWxlQnVpbGRlcl0pIC1vciAoJF8gLWlzIFtSZWZsZWN0aW9uLkFzc2VtYmx5XSl9KV0NCiAgICAgICAgJE1vZHVsZSwNCg0KICAgICAgICBbVmFsaWRhdGVOb3ROdWxsKCldDQogICAgICAgIFtTdHJpbmddDQogICAgICAgICROYW1lc3BhY2UgPSAnJw0KICAgICkNCg0KICAgIEJFR0lODQogICAgew0KICAgICAgICAkVHlwZUhhc2ggPSBAe30NCiAgICB9DQoNCiAgICBQUk9DRVNTDQogICAgew0KICAgICAgICBpZiAoJE1vZHVsZSAtaXMgW1JlZmxlY3Rpb24uQXNzZW1ibHldKQ0KICAgICAgICB7DQogICAgICAgICAgICBpZiAoJE5hbWVzcGFjZSkNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAkVHlwZUhhc2hbJERsbE5hbWVdID0gJE1vZHVsZS5HZXRUeXBlKCIkTmFtZXNwYWNlLiREbGxOYW1lIikNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAkVHlwZUhhc2hbJERsbE5hbWVdID0gJE1vZHVsZS5HZXRUeXBlKCREbGxOYW1lKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGVsc2UNCiAgICAgICAgew0KICAgICAgICAgICAgIyBEZWZpbmUgb25lIHR5cGUgZm9yIGVhY2ggRExMDQogICAgICAgICAgICBpZiAoISRUeXBlSGFzaC5Db250YWluc0tleSgkRGxsTmFtZSkpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgaWYgKCROYW1lc3BhY2UpDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAkVHlwZUhhc2hbJERsbE5hbWVdID0gJE1vZHVsZS5EZWZpbmVUeXBlKCIkTmFtZXNwYWNlLiREbGxOYW1lIiwgJ1B1YmxpYyxCZWZvcmVGaWVsZEluaXQnKQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBlbHNlDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAkVHlwZUhhc2hbJERsbE5hbWVdID0gJE1vZHVsZS5EZWZpbmVUeXBlKCREbGxOYW1lLCAnUHVibGljLEJlZm9yZUZpZWxkSW5pdCcpDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAkTWV0aG9kID0gJFR5cGVIYXNoWyREbGxOYW1lXS5EZWZpbmVNZXRob2QoDQogICAgICAgICAgICAgICAgJEZ1bmN0aW9uTmFtZSwNCiAgICAgICAgICAgICAgICAnUHVibGljLFN0YXRpYyxQaW52b2tlSW1wbCcsDQogICAgICAgICAgICAgICAgJFJldHVyblR5cGUsDQogICAgICAgICAgICAgICAgJFBhcmFtZXRlclR5cGVzKQ0KDQogICAgICAgICAgICAjIE1ha2UgZWFjaCBCeVJlZiBwYXJhbWV0ZXIgYW4gT3V0IHBhcmFtZXRlcg0KICAgICAgICAgICAgJGkgPSAxDQogICAgICAgICAgICBmb3JlYWNoKCRQYXJhbWV0ZXIgaW4gJFBhcmFtZXRlclR5cGVzKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIGlmICgkUGFyYW1ldGVyLklzQnlSZWYpDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBbdm9pZF0gJE1ldGhvZC5EZWZpbmVQYXJhbWV0ZXIoJGksICdPdXQnLCAkbnVsbCkNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAkaSsrDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICREbGxJbXBvcnQgPSBbUnVudGltZS5JbnRlcm9wU2VydmljZXMuRGxsSW1wb3J0QXR0cmlidXRlXQ0KICAgICAgICAgICAgJFNldExhc3RFcnJvckZpZWxkID0gJERsbEltcG9ydC5HZXRGaWVsZCgnU2V0TGFzdEVycm9yJykNCiAgICAgICAgICAgICRDYWxsaW5nQ29udmVudGlvbkZpZWxkID0gJERsbEltcG9ydC5HZXRGaWVsZCgnQ2FsbGluZ0NvbnZlbnRpb24nKQ0KICAgICAgICAgICAgJENoYXJzZXRGaWVsZCA9ICREbGxJbXBvcnQuR2V0RmllbGQoJ0NoYXJTZXQnKQ0KICAgICAgICAgICAgJEVudHJ5UG9pbnRGaWVsZCA9ICREbGxJbXBvcnQuR2V0RmllbGQoJ0VudHJ5UG9pbnQnKQ0KICAgICAgICAgICAgaWYgKCRTZXRMYXN0RXJyb3IpIHsgJFNMRVZhbHVlID0gJFRydWUgfSBlbHNlIHsgJFNMRVZhbHVlID0gJEZhbHNlIH0NCg0KICAgICAgICAgICAgaWYgKCRQU0JvdW5kUGFyYW1ldGVyc1snRW50cnlQb2ludCddKSB7ICRFeHBvcnRlZEZ1bmNOYW1lID0gJEVudHJ5UG9pbnQgfSBlbHNlIHsgJEV4cG9ydGVkRnVuY05hbWUgPSAkRnVuY3Rpb25OYW1lIH0NCg0KICAgICAgICAgICAgIyBFcXVpdmFsZW50IHRvIEMjIHZlcnNpb24gb2YgW0RsbEltcG9ydChEbGxOYW1lKV0NCiAgICAgICAgICAgICRDb25zdHJ1Y3RvciA9IFtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5EbGxJbXBvcnRBdHRyaWJ1dGVdLkdldENvbnN0cnVjdG9yKFtTdHJpbmddKQ0KICAgICAgICAgICAgJERsbEltcG9ydEF0dHJpYnV0ZSA9IE5ldy1PYmplY3QgUmVmbGVjdGlvbi5FbWl0LkN1c3RvbUF0dHJpYnV0ZUJ1aWxkZXIoJENvbnN0cnVjdG9yLA0KICAgICAgICAgICAgICAgICREbGxOYW1lLCBbUmVmbGVjdGlvbi5Qcm9wZXJ0eUluZm9bXV0gQCgpLCBbT2JqZWN0W11dIEAoKSwNCiAgICAgICAgICAgICAgICBbUmVmbGVjdGlvbi5GaWVsZEluZm9bXV0gQCgkU2V0TGFzdEVycm9yRmllbGQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJENhbGxpbmdDb252ZW50aW9uRmllbGQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJENoYXJzZXRGaWVsZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkRW50cnlQb2ludEZpZWxkKSwNCiAgICAgICAgICAgICAgICBbT2JqZWN0W11dIEAoJFNMRVZhbHVlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLkNhbGxpbmdDb252ZW50aW9uXSAkTmF0aXZlQ2FsbGluZ0NvbnZlbnRpb24pLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLkNoYXJTZXRdICRDaGFyc2V0KSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJEV4cG9ydGVkRnVuY05hbWUpKQ0KDQogICAgICAgICAgICAkTWV0aG9kLlNldEN1c3RvbUF0dHJpYnV0ZSgkRGxsSW1wb3J0QXR0cmlidXRlKQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgRU5EDQogICAgew0KICAgICAgICBpZiAoJE1vZHVsZSAtaXMgW1JlZmxlY3Rpb24uQXNzZW1ibHldKQ0KICAgICAgICB7DQogICAgICAgICAgICByZXR1cm4gJFR5cGVIYXNoDQogICAgICAgIH0NCg0KICAgICAgICAkUmV0dXJuVHlwZXMgPSBAe30NCg0KICAgICAgICBmb3JlYWNoICgkS2V5IGluICRUeXBlSGFzaC5LZXlzKQ0KICAgICAgICB7DQogICAgICAgICAgICAkVHlwZSA9ICRUeXBlSGFzaFskS2V5XS5DcmVhdGVUeXBlKCkNCg0KICAgICAgICAgICAgJFJldHVyblR5cGVzWyRLZXldID0gJFR5cGUNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkUmV0dXJuVHlwZXMNCiAgICB9DQp9DQoNCg0KZnVuY3Rpb24gcHNlbnVtIHsNCjwjDQouU1lOT1BTSVMNCg0KQ3JlYXRlcyBhbiBpbi1tZW1vcnkgZW51bWVyYXRpb24gZm9yIHVzZSBpbiB5b3VyIFBvd2VyU2hlbGwgc2Vzc2lvbi4NCg0KQXV0aG9yOiBNYXR0aGV3IEdyYWViZXIgKEBtYXR0aWZlc3RhdGlvbikNCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZQ0KUmVxdWlyZWQgRGVwZW5kZW5jaWVzOiBOb25lDQpPcHRpb25hbCBEZXBlbmRlbmNpZXM6IE5vbmUNCg0KLkRFU0NSSVBUSU9ODQoNClRoZSAncHNlbnVtJyBmdW5jdGlvbiBmYWNpbGl0YXRlcyB0aGUgY3JlYXRpb24gb2YgZW51bXMgZW50aXJlbHkgaW4NCm1lbW9yeSB1c2luZyBhcyBjbG9zZSB0byBhICJDIHN0eWxlIiBhcyBQb3dlclNoZWxsIHdpbGwgYWxsb3cuDQoNCi5QQVJBTUVURVIgTW9kdWxlDQoNClRoZSBpbi1tZW1vcnkgbW9kdWxlIHRoYXQgd2lsbCBob3N0IHRoZSBlbnVtLiBVc2UNCk5ldy1Jbk1lbW9yeU1vZHVsZSB0byBkZWZpbmUgYW4gaW4tbWVtb3J5IG1vZHVsZS4NCg0KLlBBUkFNRVRFUiBGdWxsTmFtZQ0KDQpUaGUgZnVsbHktcXVhbGlmaWVkIG5hbWUgb2YgdGhlIGVudW0uDQoNCi5QQVJBTUVURVIgVHlwZQ0KDQpUaGUgdHlwZSBvZiBlYWNoIGVudW0gZWxlbWVudC4NCg0KLlBBUkFNRVRFUiBFbnVtRWxlbWVudHMNCg0KQSBoYXNodGFibGUgb2YgZW51bSBlbGVtZW50cy4NCg0KLlBBUkFNRVRFUiBCaXRmaWVsZA0KDQpTcGVjaWZpZXMgdGhhdCB0aGUgZW51bSBzaG91bGQgYmUgdHJlYXRlZCBhcyBhIGJpdGZpZWxkLg0KDQouRVhBTVBMRQ0KDQokTW9kID0gTmV3LUluTWVtb3J5TW9kdWxlIC1Nb2R1bGVOYW1lIFdpbjMyDQoNCiRJbWFnZVN1YnN5c3RlbSA9IHBzZW51bSAkTW9kIFBFLklNQUdFX1NVQlNZU1RFTSBVSW50MTYgQHsNCiAgICBVTktOT1dOID0gICAgICAgICAgICAgICAgICAwDQogICAgTkFUSVZFID0gICAgICAgICAgICAgICAgICAgMSAjIEltYWdlIGRvZXNuJ3QgcmVxdWlyZSBhIHN1YnN5c3RlbS4NCiAgICBXSU5ET1dTX0dVSSA9ICAgICAgICAgICAgICAyICMgSW1hZ2UgcnVucyBpbiB0aGUgV2luZG93cyBHVUkgc3Vic3lzdGVtLg0KICAgIFdJTkRPV1NfQ1VJID0gICAgICAgICAgICAgIDMgIyBJbWFnZSBydW5zIGluIHRoZSBXaW5kb3dzIGNoYXJhY3RlciBzdWJzeXN0ZW0uDQogICAgT1MyX0NVSSA9ICAgICAgICAgICAgICAgICAgNSAjIEltYWdlIHJ1bnMgaW4gdGhlIE9TLzIgY2hhcmFjdGVyIHN1YnN5c3RlbS4NCiAgICBQT1NJWF9DVUkgPSAgICAgICAgICAgICAgICA3ICMgSW1hZ2UgcnVucyBpbiB0aGUgUG9zaXggY2hhcmFjdGVyIHN1YnN5c3RlbS4NCiAgICBOQVRJVkVfV0lORE9XUyA9ICAgICAgICAgICA4ICMgSW1hZ2UgaXMgYSBuYXRpdmUgV2luOXggZHJpdmVyLg0KICAgIFdJTkRPV1NfQ0VfR1VJID0gICAgICAgICAgIDkgIyBJbWFnZSBydW5zIGluIHRoZSBXaW5kb3dzIENFIHN1YnN5c3RlbS4NCiAgICBFRklfQVBQTElDQVRJT04gPSAgICAgICAgICAxMA0KICAgIEVGSV9CT09UX1NFUlZJQ0VfRFJJVkVSID0gIDExDQogICAgRUZJX1JVTlRJTUVfRFJJVkVSID0gICAgICAgMTINCiAgICBFRklfUk9NID0gICAgICAgICAgICAgICAgICAxMw0KICAgIFhCT1ggPSAgICAgICAgICAgICAgICAgICAgIDE0DQogICAgV0lORE9XU19CT09UX0FQUExJQ0FUSU9OID0gMTYNCn0NCg0KLk5PVEVTDQoNClBvd2VyU2hlbGwgcHVyaXN0cyBtYXkgZGlzYWdyZWUgd2l0aCB0aGUgbmFtaW5nIG9mIHRoaXMgZnVuY3Rpb24gYnV0DQphZ2FpbiwgdGhpcyB3YXMgZGV2ZWxvcGVkIGluIHN1Y2ggYSB3YXkgc28gYXMgdG8gZW11bGF0ZSBhICJDIHN0eWxlIg0KZGVmaW5pdGlvbiBhcyBjbG9zZWx5IGFzIHBvc3NpYmxlLiBTb3JyeSwgSSdtIG5vdCBnb2luZyB0byBuYW1lIGl0DQpOZXctRW51bS4gOlANCiM+DQoNCiAgICBbT3V0cHV0VHlwZShbVHlwZV0pXQ0KICAgIFBhcmFtICgNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDAsIE1hbmRhdG9yeT0kVHJ1ZSldDQogICAgICAgIFtWYWxpZGF0ZVNjcmlwdCh7KCRfIC1pcyBbUmVmbGVjdGlvbi5FbWl0Lk1vZHVsZUJ1aWxkZXJdKSAtb3IgKCRfIC1pcyBbUmVmbGVjdGlvbi5Bc3NlbWJseV0pfSldDQogICAgICAgICRNb2R1bGUsDQoNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeT0kVHJ1ZSldDQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgIFtTdHJpbmddDQogICAgICAgICRGdWxsTmFtZSwNCg0KICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMiwgTWFuZGF0b3J5PSRUcnVlKV0NCiAgICAgICAgW1R5cGVdDQogICAgICAgICRUeXBlLA0KDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAzLCBNYW5kYXRvcnk9JFRydWUpXQ0KICAgICAgICBbVmFsaWRhdGVOb3ROdWxsT3JFbXB0eSgpXQ0KICAgICAgICBbSGFzaHRhYmxlXQ0KICAgICAgICAkRW51bUVsZW1lbnRzLA0KDQogICAgICAgIFtTd2l0Y2hdDQogICAgICAgICRCaXRmaWVsZA0KICAgICkNCg0KICAgIGlmICgkTW9kdWxlIC1pcyBbUmVmbGVjdGlvbi5Bc3NlbWJseV0pDQogICAgew0KICAgICAgICByZXR1cm4gKCRNb2R1bGUuR2V0VHlwZSgkRnVsbE5hbWUpKQ0KICAgIH0NCg0KICAgICRFbnVtVHlwZSA9ICRUeXBlIC1hcyBbVHlwZV0NCg0KICAgICRFbnVtQnVpbGRlciA9ICRNb2R1bGUuRGVmaW5lRW51bSgkRnVsbE5hbWUsICdQdWJsaWMnLCAkRW51bVR5cGUpDQoNCiAgICBpZiAoJEJpdGZpZWxkKQ0KICAgIHsNCiAgICAgICAgJEZsYWdzQ29uc3RydWN0b3IgPSBbRmxhZ3NBdHRyaWJ1dGVdLkdldENvbnN0cnVjdG9yKEAoKSkNCiAgICAgICAgJEZsYWdzQ3VzdG9tQXR0cmlidXRlID0gTmV3LU9iamVjdCBSZWZsZWN0aW9uLkVtaXQuQ3VzdG9tQXR0cmlidXRlQnVpbGRlcigkRmxhZ3NDb25zdHJ1Y3RvciwgQCgpKQ0KICAgICAgICAkRW51bUJ1aWxkZXIuU2V0Q3VzdG9tQXR0cmlidXRlKCRGbGFnc0N1c3RvbUF0dHJpYnV0ZSkNCiAgICB9DQoNCiAgICBmb3JlYWNoICgkS2V5IGluICRFbnVtRWxlbWVudHMuS2V5cykNCiAgICB7DQogICAgICAgICMgQXBwbHkgdGhlIHNwZWNpZmllZCBlbnVtIHR5cGUgdG8gZWFjaCBlbGVtZW50DQogICAgICAgICRudWxsID0gJEVudW1CdWlsZGVyLkRlZmluZUxpdGVyYWwoJEtleSwgJEVudW1FbGVtZW50c1skS2V5XSAtYXMgJEVudW1UeXBlKQ0KICAgIH0NCg0KICAgICRFbnVtQnVpbGRlci5DcmVhdGVUeXBlKCkNCn0NCg0KDQojIEEgaGVscGVyIGZ1bmN0aW9uIHVzZWQgdG8gcmVkdWNlIHR5cGluZyB3aGlsZSBkZWZpbmluZyBzdHJ1Y3QNCiMgZmllbGRzLg0KZnVuY3Rpb24gZmllbGQgew0KICAgIFBhcmFtICgNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDAsIE1hbmRhdG9yeT0kVHJ1ZSldDQogICAgICAgIFtVSW50MTZdDQogICAgICAgICRQb3NpdGlvbiwNCg0KICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMSwgTWFuZGF0b3J5PSRUcnVlKV0NCiAgICAgICAgW1R5cGVdDQogICAgICAgICRUeXBlLA0KDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAyKV0NCiAgICAgICAgW1VJbnQxNl0NCiAgICAgICAgJE9mZnNldCwNCg0KICAgICAgICBbT2JqZWN0W11dDQogICAgICAgICRNYXJzaGFsQXMNCiAgICApDQoNCiAgICBAew0KICAgICAgICBQb3NpdGlvbiA9ICRQb3NpdGlvbg0KICAgICAgICBUeXBlID0gJFR5cGUgLWFzIFtUeXBlXQ0KICAgICAgICBPZmZzZXQgPSAkT2Zmc2V0DQogICAgICAgIE1hcnNoYWxBcyA9ICRNYXJzaGFsQXMNCiAgICB9DQp9DQoNCg0KZnVuY3Rpb24gc3RydWN0DQp7DQo8Iw0KLlNZTk9QU0lTDQoNCkNyZWF0ZXMgYW4gaW4tbWVtb3J5IHN0cnVjdCBmb3IgdXNlIGluIHlvdXIgUG93ZXJTaGVsbCBzZXNzaW9uLg0KDQpBdXRob3I6IE1hdHRoZXcgR3JhZWJlciAoQG1hdHRpZmVzdGF0aW9uKQ0KTGljZW5zZTogQlNEIDMtQ2xhdXNlDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IE5vbmUNCk9wdGlvbmFsIERlcGVuZGVuY2llczogZmllbGQNCg0KLkRFU0NSSVBUSU9ODQoNClRoZSAnc3RydWN0JyBmdW5jdGlvbiBmYWNpbGl0YXRlcyB0aGUgY3JlYXRpb24gb2Ygc3RydWN0cyBlbnRpcmVseSBpbg0KbWVtb3J5IHVzaW5nIGFzIGNsb3NlIHRvIGEgIkMgc3R5bGUiIGFzIFBvd2VyU2hlbGwgd2lsbCBhbGxvdy4gU3RydWN0DQpmaWVsZHMgYXJlIHNwZWNpZmllZCB1c2luZyBhIGhhc2h0YWJsZSB3aGVyZSBlYWNoIGZpZWxkIG9mIHRoZSBzdHJ1Y3QNCmlzIGNvbXByb3NlZCBvZiB0aGUgb3JkZXIgaW4gd2hpY2ggaXQgc2hvdWxkIGJlIGRlZmluZWQsIGl0cyAuTkVUDQp0eXBlLCBhbmQgb3B0aW9uYWxseSwgaXRzIG9mZnNldCBhbmQgc3BlY2lhbCBtYXJzaGFsaW5nIGF0dHJpYnV0ZXMuDQoNCk9uZSBvZiB0aGUgZmVhdHVyZXMgb2YgJ3N0cnVjdCcgaXMgdGhhdCBhZnRlciB5b3VyIHN0cnVjdCBpcyBkZWZpbmVkLA0KaXQgd2lsbCBjb21lIHdpdGggYSBidWlsdC1pbiBHZXRTaXplIG1ldGhvZCBhcyB3ZWxsIGFzIGFuIGV4cGxpY2l0DQpjb252ZXJ0ZXIgc28gdGhhdCB5b3UgY2FuIGVhc2lseSBjYXN0IGFuIEludFB0ciB0byB0aGUgc3RydWN0IHdpdGhvdXQNCnJlbHlpbmcgdXBvbiBjYWxsaW5nIFNpemVPZiBhbmQvb3IgUHRyVG9TdHJ1Y3R1cmUgaW4gdGhlIE1hcnNoYWwNCmNsYXNzLg0KDQouUEFSQU1FVEVSIE1vZHVsZQ0KDQpUaGUgaW4tbWVtb3J5IG1vZHVsZSB0aGF0IHdpbGwgaG9zdCB0aGUgc3RydWN0LiBVc2UNCk5ldy1Jbk1lbW9yeU1vZHVsZSB0byBkZWZpbmUgYW4gaW4tbWVtb3J5IG1vZHVsZS4NCg0KLlBBUkFNRVRFUiBGdWxsTmFtZQ0KDQpUaGUgZnVsbHktcXVhbGlmaWVkIG5hbWUgb2YgdGhlIHN0cnVjdC4NCg0KLlBBUkFNRVRFUiBTdHJ1Y3RGaWVsZHMNCg0KQSBoYXNodGFibGUgb2YgZmllbGRzLiBVc2UgdGhlICdmaWVsZCcgaGVscGVyIGZ1bmN0aW9uIHRvIGVhc2UNCmRlZmluaW5nIGVhY2ggZmllbGQuDQoNCi5QQVJBTUVURVIgUGFja2luZ1NpemUNCg0KU3BlY2lmaWVzIHRoZSBtZW1vcnkgYWxpZ25tZW50IG9mIGZpZWxkcy4NCg0KLlBBUkFNRVRFUiBFeHBsaWNpdExheW91dA0KDQpJbmRpY2F0ZXMgdGhhdCBhbiBleHBsaWNpdCBvZmZzZXQgZm9yIGVhY2ggZmllbGQgd2lsbCBiZSBzcGVjaWZpZWQuDQoNCi5FWEFNUExFDQoNCiRNb2QgPSBOZXctSW5NZW1vcnlNb2R1bGUgLU1vZHVsZU5hbWUgV2luMzINCg0KJEltYWdlRG9zU2lnbmF0dXJlID0gcHNlbnVtICRNb2QgUEUuSU1BR0VfRE9TX1NJR05BVFVSRSBVSW50MTYgQHsNCiAgICBET1NfU0lHTkFUVVJFID0gICAgMHg1QTREDQogICAgT1MyX1NJR05BVFVSRSA9ICAgIDB4NDU0RQ0KICAgIE9TMl9TSUdOQVRVUkVfTEUgPSAweDQ1NEMNCiAgICBWWERfU0lHTkFUVVJFID0gICAgMHg0NTRDDQp9DQoNCiRJbWFnZURvc0hlYWRlciA9IHN0cnVjdCAkTW9kIFBFLklNQUdFX0RPU19IRUFERVIgQHsNCiAgICBlX21hZ2ljID0gICAgZmllbGQgMCAkSW1hZ2VEb3NTaWduYXR1cmUNCiAgICBlX2NibHAgPSAgICAgZmllbGQgMSBVSW50MTYNCiAgICBlX2NwID0gICAgICAgZmllbGQgMiBVSW50MTYNCiAgICBlX2NybGMgPSAgICAgZmllbGQgMyBVSW50MTYNCiAgICBlX2NwYXJoZHIgPSAgZmllbGQgNCBVSW50MTYNCiAgICBlX21pbmFsbG9jID0gZmllbGQgNSBVSW50MTYNCiAgICBlX21heGFsbG9jID0gZmllbGQgNiBVSW50MTYNCiAgICBlX3NzID0gICAgICAgZmllbGQgNyBVSW50MTYNCiAgICBlX3NwID0gICAgICAgZmllbGQgOCBVSW50MTYNCiAgICBlX2NzdW0gPSAgICAgZmllbGQgOSBVSW50MTYNCiAgICBlX2lwID0gICAgICAgZmllbGQgMTAgVUludDE2DQogICAgZV9jcyA9ICAgICAgIGZpZWxkIDExIFVJbnQxNg0KICAgIGVfbGZhcmxjID0gICBmaWVsZCAxMiBVSW50MTYNCiAgICBlX292bm8gPSAgICAgZmllbGQgMTMgVUludDE2DQogICAgZV9yZXMgPSAgICAgIGZpZWxkIDE0IFVJbnQxNltdIC1NYXJzaGFsQXMgQCgnQnlWYWxBcnJheScsIDQpDQogICAgZV9vZW1pZCA9ICAgIGZpZWxkIDE1IFVJbnQxNg0KICAgIGVfb2VtaW5mbyA9ICBmaWVsZCAxNiBVSW50MTYNCiAgICBlX3JlczIgPSAgICAgZmllbGQgMTcgVUludDE2W10gLU1hcnNoYWxBcyBAKCdCeVZhbEFycmF5JywgMTApDQogICAgZV9sZmFuZXcgPSAgIGZpZWxkIDE4IEludDMyDQp9DQoNCiMgRXhhbXBsZSBvZiB1c2luZyBhbiBleHBsaWNpdCBsYXlvdXQgaW4gb3JkZXIgdG8gY3JlYXRlIGEgdW5pb24uDQokVGVzdFVuaW9uID0gc3RydWN0ICRNb2QgVGVzdFVuaW9uIEB7DQogICAgZmllbGQxID0gZmllbGQgMCBVSW50MzIgMA0KICAgIGZpZWxkMiA9IGZpZWxkIDEgSW50UHRyIDANCn0gLUV4cGxpY2l0TGF5b3V0DQoNCi5OT1RFUw0KDQpQb3dlclNoZWxsIHB1cmlzdHMgbWF5IGRpc2FncmVlIHdpdGggdGhlIG5hbWluZyBvZiB0aGlzIGZ1bmN0aW9uIGJ1dA0KYWdhaW4sIHRoaXMgd2FzIGRldmVsb3BlZCBpbiBzdWNoIGEgd2F5IHNvIGFzIHRvIGVtdWxhdGUgYSAiQyBzdHlsZSINCmRlZmluaXRpb24gYXMgY2xvc2VseSBhcyBwb3NzaWJsZS4gU29ycnksIEknbSBub3QgZ29pbmcgdG8gbmFtZSBpdA0KTmV3LVN0cnVjdC4gOlANCiM+DQoNCiAgICBbT3V0cHV0VHlwZShbVHlwZV0pXQ0KICAgIFBhcmFtICgNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeT0kVHJ1ZSldDQogICAgICAgIFtWYWxpZGF0ZVNjcmlwdCh7KCRfIC1pcyBbUmVmbGVjdGlvbi5FbWl0Lk1vZHVsZUJ1aWxkZXJdKSAtb3IgKCRfIC1pcyBbUmVmbGVjdGlvbi5Bc3NlbWJseV0pfSldDQogICAgICAgICRNb2R1bGUsDQoNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDIsIE1hbmRhdG9yeT0kVHJ1ZSldDQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgIFtTdHJpbmddDQogICAgICAgICRGdWxsTmFtZSwNCg0KICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMywgTWFuZGF0b3J5PSRUcnVlKV0NCiAgICAgICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0NCiAgICAgICAgW0hhc2h0YWJsZV0NCiAgICAgICAgJFN0cnVjdEZpZWxkcywNCg0KICAgICAgICBbUmVmbGVjdGlvbi5FbWl0LlBhY2tpbmdTaXplXQ0KICAgICAgICAkUGFja2luZ1NpemUgPSBbUmVmbGVjdGlvbi5FbWl0LlBhY2tpbmdTaXplXTo6VW5zcGVjaWZpZWQsDQoNCiAgICAgICAgW1N3aXRjaF0NCiAgICAgICAgJEV4cGxpY2l0TGF5b3V0DQogICAgKQ0KDQogICAgaWYgKCRNb2R1bGUgLWlzIFtSZWZsZWN0aW9uLkFzc2VtYmx5XSkNCiAgICB7DQogICAgICAgIHJldHVybiAoJE1vZHVsZS5HZXRUeXBlKCRGdWxsTmFtZSkpDQogICAgfQ0KDQogICAgW1JlZmxlY3Rpb24uVHlwZUF0dHJpYnV0ZXNdICRTdHJ1Y3RBdHRyaWJ1dGVzID0gJ0Fuc2lDbGFzcywNCiAgICAgICAgQ2xhc3MsDQogICAgICAgIFB1YmxpYywNCiAgICAgICAgU2VhbGVkLA0KICAgICAgICBCZWZvcmVGaWVsZEluaXQnDQoNCiAgICBpZiAoJEV4cGxpY2l0TGF5b3V0KQ0KICAgIHsNCiAgICAgICAgJFN0cnVjdEF0dHJpYnV0ZXMgPSAkU3RydWN0QXR0cmlidXRlcyAtYm9yIFtSZWZsZWN0aW9uLlR5cGVBdHRyaWJ1dGVzXTo6RXhwbGljaXRMYXlvdXQNCiAgICB9DQogICAgZWxzZQ0KICAgIHsNCiAgICAgICAgJFN0cnVjdEF0dHJpYnV0ZXMgPSAkU3RydWN0QXR0cmlidXRlcyAtYm9yIFtSZWZsZWN0aW9uLlR5cGVBdHRyaWJ1dGVzXTo6U2VxdWVudGlhbExheW91dA0KICAgIH0NCg0KICAgICRTdHJ1Y3RCdWlsZGVyID0gJE1vZHVsZS5EZWZpbmVUeXBlKCRGdWxsTmFtZSwgJFN0cnVjdEF0dHJpYnV0ZXMsIFtWYWx1ZVR5cGVdLCAkUGFja2luZ1NpemUpDQogICAgJENvbnN0cnVjdG9ySW5mbyA9IFtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsQXNBdHRyaWJ1dGVdLkdldENvbnN0cnVjdG9ycygpWzBdDQogICAgJFNpemVDb25zdCA9IEAoW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxBc0F0dHJpYnV0ZV0uR2V0RmllbGQoJ1NpemVDb25zdCcpKQ0KDQogICAgJEZpZWxkcyA9IE5ldy1PYmplY3QgSGFzaHRhYmxlW10oJFN0cnVjdEZpZWxkcy5Db3VudCkNCg0KICAgICMgU29ydCBlYWNoIGZpZWxkIGFjY29yZGluZyB0byB0aGUgb3JkZXJzIHNwZWNpZmllZA0KICAgICMgVW5mb3J0dW5hdGVseSwgUFN2MiBkb2Vzbid0IGhhdmUgdGhlIGx1eHVyeSBvZiB0aGUNCiAgICAjIGhhc2h0YWJsZSBbT3JkZXJlZF0gYWNjZWxlcmF0b3IuDQogICAgZm9yZWFjaCAoJEZpZWxkIGluICRTdHJ1Y3RGaWVsZHMuS2V5cykNCiAgICB7DQogICAgICAgICRJbmRleCA9ICRTdHJ1Y3RGaWVsZHNbJEZpZWxkXVsnUG9zaXRpb24nXQ0KICAgICAgICAkRmllbGRzWyRJbmRleF0gPSBAe0ZpZWxkTmFtZSA9ICRGaWVsZDsgUHJvcGVydGllcyA9ICRTdHJ1Y3RGaWVsZHNbJEZpZWxkXX0NCiAgICB9DQoNCiAgICBmb3JlYWNoICgkRmllbGQgaW4gJEZpZWxkcykNCiAgICB7DQogICAgICAgICRGaWVsZE5hbWUgPSAkRmllbGRbJ0ZpZWxkTmFtZSddDQogICAgICAgICRGaWVsZFByb3AgPSAkRmllbGRbJ1Byb3BlcnRpZXMnXQ0KDQogICAgICAgICRPZmZzZXQgPSAkRmllbGRQcm9wWydPZmZzZXQnXQ0KICAgICAgICAkVHlwZSA9ICRGaWVsZFByb3BbJ1R5cGUnXQ0KICAgICAgICAkTWFyc2hhbEFzID0gJEZpZWxkUHJvcFsnTWFyc2hhbEFzJ10NCg0KICAgICAgICAkTmV3RmllbGQgPSAkU3RydWN0QnVpbGRlci5EZWZpbmVGaWVsZCgkRmllbGROYW1lLCAkVHlwZSwgJ1B1YmxpYycpDQoNCiAgICAgICAgaWYgKCRNYXJzaGFsQXMpDQogICAgICAgIHsNCiAgICAgICAgICAgICRVbm1hbmFnZWRUeXBlID0gJE1hcnNoYWxBc1swXSAtYXMgKFtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5Vbm1hbmFnZWRUeXBlXSkNCiAgICAgICAgICAgIGlmICgkTWFyc2hhbEFzWzFdKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICRTaXplID0gJE1hcnNoYWxBc1sxXQ0KICAgICAgICAgICAgICAgICRBdHRyaWJCdWlsZGVyID0gTmV3LU9iamVjdCBSZWZsZWN0aW9uLkVtaXQuQ3VzdG9tQXR0cmlidXRlQnVpbGRlcigkQ29uc3RydWN0b3JJbmZvLA0KICAgICAgICAgICAgICAgICAgICAkVW5tYW5hZ2VkVHlwZSwgJFNpemVDb25zdCwgQCgkU2l6ZSkpDQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgJEF0dHJpYkJ1aWxkZXIgPSBOZXctT2JqZWN0IFJlZmxlY3Rpb24uRW1pdC5DdXN0b21BdHRyaWJ1dGVCdWlsZGVyKCRDb25zdHJ1Y3RvckluZm8sIFtPYmplY3RbXV0gQCgkVW5tYW5hZ2VkVHlwZSkpDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICROZXdGaWVsZC5TZXRDdXN0b21BdHRyaWJ1dGUoJEF0dHJpYkJ1aWxkZXIpDQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJEV4cGxpY2l0TGF5b3V0KSB7ICROZXdGaWVsZC5TZXRPZmZzZXQoJE9mZnNldCkgfQ0KICAgIH0NCg0KICAgICMgTWFrZSB0aGUgc3RydWN0IGF3YXJlIG9mIGl0cyBvd24gc2l6ZS4NCiAgICAjIE5vIG1vcmUgaGF2aW5nIHRvIGNhbGwgW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTaXplT2YhDQogICAgJFNpemVNZXRob2QgPSAkU3RydWN0QnVpbGRlci5EZWZpbmVNZXRob2QoJ0dldFNpemUnLA0KICAgICAgICAnUHVibGljLCBTdGF0aWMnLA0KICAgICAgICBbSW50XSwNCiAgICAgICAgW1R5cGVbXV0gQCgpKQ0KICAgICRJTEdlbmVyYXRvciA9ICRTaXplTWV0aG9kLkdldElMR2VuZXJhdG9yKCkNCiAgICAjIFRoYW5rcyBmb3IgdGhlIGhlbHAsIEphc29uIFNoaXJrIQ0KICAgICRJTEdlbmVyYXRvci5FbWl0KFtSZWZsZWN0aW9uLkVtaXQuT3BDb2Rlc106OkxkdG9rZW4sICRTdHJ1Y3RCdWlsZGVyKQ0KICAgICRJTEdlbmVyYXRvci5FbWl0KFtSZWZsZWN0aW9uLkVtaXQuT3BDb2Rlc106OkNhbGwsDQogICAgICAgIFtUeXBlXS5HZXRNZXRob2QoJ0dldFR5cGVGcm9tSGFuZGxlJykpDQogICAgJElMR2VuZXJhdG9yLkVtaXQoW1JlZmxlY3Rpb24uRW1pdC5PcENvZGVzXTo6Q2FsbCwNCiAgICAgICAgW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdLkdldE1ldGhvZCgnU2l6ZU9mJywgW1R5cGVbXV0gQChbVHlwZV0pKSkNCiAgICAkSUxHZW5lcmF0b3IuRW1pdChbUmVmbGVjdGlvbi5FbWl0Lk9wQ29kZXNdOjpSZXQpDQoNCiAgICAjIEFsbG93IGZvciBleHBsaWNpdCBjYXN0aW5nIGZyb20gYW4gSW50UHRyDQogICAgIyBObyBtb3JlIGhhdmluZyB0byBjYWxsIFtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUhDQogICAgJEltcGxpY2l0Q29udmVydGVyID0gJFN0cnVjdEJ1aWxkZXIuRGVmaW5lTWV0aG9kKCdvcF9JbXBsaWNpdCcsDQogICAgICAgICdQcml2YXRlU2NvcGUsIFB1YmxpYywgU3RhdGljLCBIaWRlQnlTaWcsIFNwZWNpYWxOYW1lJywNCiAgICAgICAgJFN0cnVjdEJ1aWxkZXIsDQogICAgICAgIFtUeXBlW11dIEAoW0ludFB0cl0pKQ0KICAgICRJTEdlbmVyYXRvcjIgPSAkSW1wbGljaXRDb252ZXJ0ZXIuR2V0SUxHZW5lcmF0b3IoKQ0KICAgICRJTEdlbmVyYXRvcjIuRW1pdChbUmVmbGVjdGlvbi5FbWl0Lk9wQ29kZXNdOjpOb3ApDQogICAgJElMR2VuZXJhdG9yMi5FbWl0KFtSZWZsZWN0aW9uLkVtaXQuT3BDb2Rlc106OkxkYXJnXzApDQogICAgJElMR2VuZXJhdG9yMi5FbWl0KFtSZWZsZWN0aW9uLkVtaXQuT3BDb2Rlc106OkxkdG9rZW4sICRTdHJ1Y3RCdWlsZGVyKQ0KICAgICRJTEdlbmVyYXRvcjIuRW1pdChbUmVmbGVjdGlvbi5FbWl0Lk9wQ29kZXNdOjpDYWxsLA0KICAgICAgICBbVHlwZV0uR2V0TWV0aG9kKCdHZXRUeXBlRnJvbUhhbmRsZScpKQ0KICAgICRJTEdlbmVyYXRvcjIuRW1pdChbUmVmbGVjdGlvbi5FbWl0Lk9wQ29kZXNdOjpDYWxsLA0KICAgICAgICBbUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF0uR2V0TWV0aG9kKCdQdHJUb1N0cnVjdHVyZScsIFtUeXBlW11dIEAoW0ludFB0cl0sIFtUeXBlXSkpKQ0KICAgICRJTEdlbmVyYXRvcjIuRW1pdChbUmVmbGVjdGlvbi5FbWl0Lk9wQ29kZXNdOjpVbmJveF9BbnksICRTdHJ1Y3RCdWlsZGVyKQ0KICAgICRJTEdlbmVyYXRvcjIuRW1pdChbUmVmbGVjdGlvbi5FbWl0Lk9wQ29kZXNdOjpSZXQpDQoNCiAgICAkU3RydWN0QnVpbGRlci5DcmVhdGVUeXBlKCkNCn0NCg0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIw0KIyBQb3dlclVwIEhlbHBlcnMNCiMNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoNCmZ1bmN0aW9uIEdldC1Nb2RpZmlhYmxlUGF0aCB7DQo8Iw0KLlNZTk9QU0lTDQoNClBhcnNlcyBhIHBhc3NlZCBzdHJpbmcgY29udGFpbmluZyBtdWx0aXBsZSBwb3NzaWJsZSBmaWxlL2ZvbGRlciBwYXRocyBhbmQgcmV0dXJucw0KdGhlIGZpbGUgcGF0aHMgd2hlcmUgdGhlIGN1cnJlbnQgdXNlciBoYXMgbW9kaWZpY2F0aW9uIHJpZ2h0cy4NCg0KQXV0aG9yOiBXaWxsIFNjaHJvZWRlciAoQGhhcm1qMHkpICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IE5vbmUgIA0KDQouREVTQ1JJUFRJT04NCg0KVGFrZXMgYSBjb21wbGV4IHBhdGggc3BlY2lmaWNhdGlvbiBvZiBhbiBpbml0aWFsIGZpbGUvZm9sZGVyIHBhdGggd2l0aCBwb3NzaWJsZQ0KY29uZmlndXJhdGlvbiBmaWxlcywgJ3Rva2VuaXplcycgdGhlIHN0cmluZyBpbiBhIG51bWJlciBvZiBwb3NzaWJsZSB3YXlzLCBhbmQNCmVudW1lcmF0ZXMgdGhlIEFDTHMgZm9yIGVhY2ggcGF0aCB0aGF0IGN1cnJlbnRseSBleGlzdHMgb24gdGhlIHN5c3RlbS4gQW55IHBhdGggdGhhdA0KdGhlIGN1cnJlbnQgdXNlciBoYXMgbW9kaWZpY2F0aW9uIHJpZ2h0cyBvbiBpcyByZXR1cm5lZCBpbiBhIGN1c3RvbSBvYmplY3QgdGhhdCBjb250YWlucw0KdGhlIG1vZGlmaWFibGUgcGF0aCwgYXNzb2NpYXRlZCBwZXJtaXNzaW9uIHNldCwgYW5kIHRoZSBJZGVudGl0eVJlZmVyZW5jZSB3aXRoIHRoZSBzcGVjaWZpZWQNCnJpZ2h0cy4gVGhlIFNJRCBvZiB0aGUgY3VycmVudCB1c2VyIGFuZCBhbnkgZ3JvdXAgaGUvc2hlIGFyZSBhIHBhcnQgb2YgYXJlIHVzZWQgYXMgdGhlDQpjb21wYXJpc29uIHNldCBhZ2FpbnN0IHRoZSBwYXJzZWQgcGF0aCBEQUNMcy4NCg0KLlBBUkFNRVRFUiBQYXRoDQoNClRoZSBzdHJpbmcgcGF0aCB0byBwYXJzZSBmb3IgbW9kaWZpYWJsZSBmaWxlcy4gUmVxdWlyZWQNCg0KLlBBUkFNRVRFUiBMaXRlcmFsDQoNClN3aXRjaC4gVHJlYXQgYWxsIHBhdGhzIGFzIGxpdGVyYWwgKGkuZS4gZG9uJ3QgZG8gJ3Rva2VuaXphdGlvbicpLg0KDQouRVhBTVBMRQ0KDQonIkM6XFRlbXBcYmxhaC5leGUiIC1mICJDOlxUZW1wXGNvbmZpZy5pbmkiJyB8IEdldC1Nb2RpZmlhYmxlUGF0aA0KDQpQYXRoICAgICAgICAgICAgICAgICAgICAgICBQZXJtaXNzaW9ucyAgICAgICAgICAgICAgICBJZGVudGl0eVJlZmVyZW5jZQ0KLS0tLSAgICAgICAgICAgICAgICAgICAgICAgLS0tLS0tLS0tLS0gICAgICAgICAgICAgICAgLS0tLS0tLS0tLS0tLS0tLS0NCkM6XFRlbXBcYmxhaC5leGUgICAgICAgICAgIHtSZWFkQXR0cmlidXRlcywgUmVhZENvLi4uIE5UIEFVVEhPUklUWVxBdXRoZW50aWMuLi4NCkM6XFRlbXBcY29uZmlnLmluaSAgICAgICAgIHtSZWFkQXR0cmlidXRlcywgUmVhZENvLi4uIE5UIEFVVEhPUklUWVxBdXRoZW50aWMuLi4NCg0KLkVYQU1QTEUNCg0KR2V0LUNoaWxkSXRlbSBDOlxWdWxuXCAtUmVjdXJzZSB8IEdldC1Nb2RpZmlhYmxlUGF0aA0KDQpQYXRoICAgICAgICAgICAgICAgICAgICAgICBQZXJtaXNzaW9ucyAgICAgICAgICAgICAgICBJZGVudGl0eVJlZmVyZW5jZQ0KLS0tLSAgICAgICAgICAgICAgICAgICAgICAgLS0tLS0tLS0tLS0gICAgICAgICAgICAgICAgLS0tLS0tLS0tLS0tLS0tLS0NCkM6XFZ1bG5cYmxhaC5iYXQgICAgICAgICAgIHtSZWFkQXR0cmlidXRlcywgUmVhZENvLi4uIE5UIEFVVEhPUklUWVxBdXRoZW50aWMuLi4NCkM6XFZ1bG5cY29uZmlnLmluaSAgICAgICAgIHtSZWFkQXR0cmlidXRlcywgUmVhZENvLi4uIE5UIEFVVEhPUklUWVxBdXRoZW50aWMuLi4NCi4uLg0KDQouT1VUUFVUUw0KDQpQb3dlclVwLlRva2VuUHJpdmlsZWdlLk1vZGlmaWFibGVQYXRoDQoNCkN1c3RvbSBQU09iamVjdCBjb250YWluaW5nIHRoZSBQZXJtaXNzaW9ucywgTW9kaWZpYWJsZVBhdGgsIElkZW50aXR5UmVmZXJlbmNlIGZvcg0KYSBtb2RpZmlhYmxlIHBhdGguDQojPg0KDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnUG93ZXJVcC5Nb2RpZmlhYmxlUGF0aCcpXQ0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAwLCBNYW5kYXRvcnkgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmUgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmVCeVByb3BlcnR5TmFtZSA9ICRUcnVlKV0NCiAgICAgICAgW0FsaWFzKCdGdWxsTmFtZScpXQ0KICAgICAgICBbU3RyaW5nW11dDQogICAgICAgICRQYXRoLA0KDQogICAgICAgIFtBbGlhcygnTGl0ZXJhbFBhdGhzJyldDQogICAgICAgIFtTd2l0Y2hdDQogICAgICAgICRMaXRlcmFsDQogICAgKQ0KDQogICAgQkVHSU4gew0KICAgICAgICAjIGZyb20gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8yODAyOTg3Mi9yZXRyaWV2aW5nLXNlY3VyaXR5LWRlc2NyaXB0b3ItYW5kLWdldHRpbmctbnVtYmVyLWZvci1maWxlc3lzdGVtcmlnaHRzDQogICAgICAgICRBY2Nlc3NNYXNrID0gQHsNCiAgICAgICAgICAgIFt1aW50MzJdJzB4ODAwMDAwMDAnID0gJ0dlbmVyaWNSZWFkJw0KICAgICAgICAgICAgW3VpbnQzMl0nMHg0MDAwMDAwMCcgPSAnR2VuZXJpY1dyaXRlJw0KICAgICAgICAgICAgW3VpbnQzMl0nMHgyMDAwMDAwMCcgPSAnR2VuZXJpY0V4ZWN1dGUnDQogICAgICAgICAgICBbdWludDMyXScweDEwMDAwMDAwJyA9ICdHZW5lcmljQWxsJw0KICAgICAgICAgICAgW3VpbnQzMl0nMHgwMjAwMDAwMCcgPSAnTWF4aW11bUFsbG93ZWQnDQogICAgICAgICAgICBbdWludDMyXScweDAxMDAwMDAwJyA9ICdBY2Nlc3NTeXN0ZW1TZWN1cml0eScNCiAgICAgICAgICAgIFt1aW50MzJdJzB4MDAxMDAwMDAnID0gJ1N5bmNocm9uaXplJw0KICAgICAgICAgICAgW3VpbnQzMl0nMHgwMDA4MDAwMCcgPSAnV3JpdGVPd25lcicNCiAgICAgICAgICAgIFt1aW50MzJdJzB4MDAwNDAwMDAnID0gJ1dyaXRlREFDJw0KICAgICAgICAgICAgW3VpbnQzMl0nMHgwMDAyMDAwMCcgPSAnUmVhZENvbnRyb2wnDQogICAgICAgICAgICBbdWludDMyXScweDAwMDEwMDAwJyA9ICdEZWxldGUnDQogICAgICAgICAgICBbdWludDMyXScweDAwMDAwMTAwJyA9ICdXcml0ZUF0dHJpYnV0ZXMnDQogICAgICAgICAgICBbdWludDMyXScweDAwMDAwMDgwJyA9ICdSZWFkQXR0cmlidXRlcycNCiAgICAgICAgICAgIFt1aW50MzJdJzB4MDAwMDAwNDAnID0gJ0RlbGV0ZUNoaWxkJw0KICAgICAgICAgICAgW3VpbnQzMl0nMHgwMDAwMDAyMCcgPSAnRXhlY3V0ZS9UcmF2ZXJzZScNCiAgICAgICAgICAgIFt1aW50MzJdJzB4MDAwMDAwMTAnID0gJ1dyaXRlRXh0ZW5kZWRBdHRyaWJ1dGVzJw0KICAgICAgICAgICAgW3VpbnQzMl0nMHgwMDAwMDAwOCcgPSAnUmVhZEV4dGVuZGVkQXR0cmlidXRlcycNCiAgICAgICAgICAgIFt1aW50MzJdJzB4MDAwMDAwMDQnID0gJ0FwcGVuZERhdGEvQWRkU3ViZGlyZWN0b3J5Jw0KICAgICAgICAgICAgW3VpbnQzMl0nMHgwMDAwMDAwMicgPSAnV3JpdGVEYXRhL0FkZEZpbGUnDQogICAgICAgICAgICBbdWludDMyXScweDAwMDAwMDAxJyA9ICdSZWFkRGF0YS9MaXN0RGlyZWN0b3J5Jw0KICAgICAgICB9DQoNCiAgICAgICAgJFVzZXJJZGVudGl0eSA9IFtTeXN0ZW0uU2VjdXJpdHkuUHJpbmNpcGFsLldpbmRvd3NJZGVudGl0eV06OkdldEN1cnJlbnQoKQ0KICAgICAgICAkQ3VycmVudFVzZXJTaWRzID0gJFVzZXJJZGVudGl0eS5Hcm91cHMgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmRQcm9wZXJ0eSBWYWx1ZQ0KICAgICAgICAkQ3VycmVudFVzZXJTaWRzICs9ICRVc2VySWRlbnRpdHkuVXNlci5WYWx1ZQ0KICAgICAgICAkVHJhbnNsYXRlZElkZW50aXR5UmVmZXJlbmNlcyA9IEB7fQ0KICAgIH0NCg0KICAgIFBST0NFU1Mgew0KDQogICAgICAgIEZvckVhY2goJFRhcmdldFBhdGggaW4gJFBhdGgpIHsNCg0KICAgICAgICAgICAgJENhbmRpZGF0ZVBhdGhzID0gQCgpDQoNCiAgICAgICAgICAgICMgcG9zc2libGUgc2VwYXJhdG9yIGNoYXJhY3RlciBjb21iaW5hdGlvbnMNCiAgICAgICAgICAgICRTZXBhcmF0aW9uQ2hhcmFjdGVyU2V0cyA9IEAoJyInLCAiJyIsICcgJywgImAiJyIsICciICcsICInICIsICJgIicgIikNCg0KICAgICAgICAgICAgaWYgKCRQU0JvdW5kUGFyYW1ldGVyc1snTGl0ZXJhbCddKSB7DQoNCiAgICAgICAgICAgICAgICAkVGVtcFBhdGggPSAkKFtTeXN0ZW0uRW52aXJvbm1lbnRdOjpFeHBhbmRFbnZpcm9ubWVudFZhcmlhYmxlcygkVGFyZ2V0UGF0aCkpDQoNCiAgICAgICAgICAgICAgICBpZiAoVGVzdC1QYXRoIC1QYXRoICRUZW1wUGF0aCAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSkgew0KICAgICAgICAgICAgICAgICAgICAkQ2FuZGlkYXRlUGF0aHMgKz0gUmVzb2x2ZS1QYXRoIC1QYXRoICRUZW1wUGF0aCB8IFNlbGVjdC1PYmplY3QgLUV4cGFuZFByb3BlcnR5IFBhdGgNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICMgaWYgdGhlIHBhdGggZG9lc24ndCBleGlzdCwgY2hlY2sgaWYgdGhlIHBhcmVudCBmb2xkZXIgYWxsb3dzIGZvciBtb2RpZmljYXRpb24NCiAgICAgICAgICAgICAgICAgICAgJFBhcmVudFBhdGggPSBTcGxpdC1QYXRoIC1QYXRoICRUZW1wUGF0aCAtUGFyZW50ICAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZQ0KICAgICAgICAgICAgICAgICAgICBpZiAoJFBhcmVudFBhdGggLWFuZCAoVGVzdC1QYXRoIC1QYXRoICRQYXJlbnRQYXRoKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgJENhbmRpZGF0ZVBhdGhzICs9IFJlc29sdmUtUGF0aCAtUGF0aCAkUGFyZW50UGF0aCAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSB8IFNlbGVjdC1PYmplY3QgLUV4cGFuZFByb3BlcnR5IFBhdGgNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgICAgIEZvckVhY2goJFNlcGFyYXRpb25DaGFyYWN0ZXJTZXQgaW4gJFNlcGFyYXRpb25DaGFyYWN0ZXJTZXRzKSB7DQogICAgICAgICAgICAgICAgICAgICRUYXJnZXRQYXRoLlNwbGl0KCRTZXBhcmF0aW9uQ2hhcmFjdGVyU2V0KSB8IFdoZXJlLU9iamVjdCB7JF8gLWFuZCAoJF8udHJpbSgpIC1uZSAnJyl9IHwgRm9yRWFjaC1PYmplY3Qgew0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKCRTZXBhcmF0aW9uQ2hhcmFjdGVyU2V0IC1ub3RtYXRjaCAnICcpKSB7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkVGVtcFBhdGggPSAkKFtTeXN0ZW0uRW52aXJvbm1lbnRdOjpFeHBhbmRFbnZpcm9ubWVudFZhcmlhYmxlcygkXykpLlRyaW0oKQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRUZW1wUGF0aCAtYW5kICgkVGVtcFBhdGggLW5lICcnKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoVGVzdC1QYXRoIC1QYXRoICRUZW1wUGF0aCAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBpZiB0aGUgcGF0aCBleGlzdHMsIHJlc29sdmUgaXQgYW5kIGFkZCBpdCB0byB0aGUgY2FuZGlkYXRlIGxpc3QNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRDYW5kaWRhdGVQYXRocyArPSBSZXNvbHZlLVBhdGggLVBhdGggJFRlbXBQYXRoIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kUHJvcGVydHkgUGF0aA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIGlmIHRoZSBwYXRoIGRvZXNuJ3QgZXhpc3QsIGNoZWNrIGlmIHRoZSBwYXJlbnQgZm9sZGVyIGFsbG93cyBmb3IgbW9kaWZpY2F0aW9uDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRQYXJlbnRQYXRoID0gKFNwbGl0LVBhdGggLVBhdGggJFRlbXBQYXRoIC1QYXJlbnQgLUVycm9yQWN0aW9uIFNpbGVudGx5Q29udGludWUpLlRyaW0oKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkUGFyZW50UGF0aCAtYW5kICgkUGFyZW50UGF0aCAtbmUgJycpIC1hbmQgKFRlc3QtUGF0aCAtUGF0aCAkUGFyZW50UGF0aCAgLUVycm9yQWN0aW9uIFNpbGVudGx5Q29udGludWUpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRDYW5kaWRhdGVQYXRocyArPSBSZXNvbHZlLVBhdGggLVBhdGggJFBhcmVudFBhdGggLUVycm9yQWN0aW9uIFNpbGVudGx5Q29udGludWUgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmRQcm9wZXJ0eSBQYXRoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2gge30NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgaWYgdGhlIHNlcGFyYXRvciBjb250YWlucyBhIHNwYWNlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJENhbmRpZGF0ZVBhdGhzICs9IFJlc29sdmUtUGF0aCAtUGF0aCAkKFtTeXN0ZW0uRW52aXJvbm1lbnRdOjpFeHBhbmRFbnZpcm9ubWVudFZhcmlhYmxlcygkXykpIC1FcnJvckFjdGlvbiBTaWxlbnRseUNvbnRpbnVlIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kUHJvcGVydHkgUGF0aCB8IEZvckVhY2gtT2JqZWN0IHskXy5UcmltKCl9IHwgV2hlcmUtT2JqZWN0IHsoJF8gLW5lICcnKSAtYW5kIChUZXN0LVBhdGggLVBhdGggJF8pfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAkQ2FuZGlkYXRlUGF0aHMgfCBTb3J0LU9iamVjdCAtVW5pcXVlIHwgRm9yRWFjaC1PYmplY3Qgew0KICAgICAgICAgICAgICAgICRDYW5kaWRhdGVQYXRoID0gJF8NCiAgICAgICAgICAgICAgICBHZXQtQWNsIC1QYXRoICRDYW5kaWRhdGVQYXRoIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kUHJvcGVydHkgQWNjZXNzIHwgV2hlcmUtT2JqZWN0IHsoJF8uQWNjZXNzQ29udHJvbFR5cGUgLW1hdGNoICdBbGxvdycpfSB8IEZvckVhY2gtT2JqZWN0IHsNCg0KICAgICAgICAgICAgICAgICAgICAkRmlsZVN5c3RlbVJpZ2h0cyA9ICRfLkZpbGVTeXN0ZW1SaWdodHMudmFsdWVfXw0KDQogICAgICAgICAgICAgICAgICAgICRQZXJtaXNzaW9ucyA9ICRBY2Nlc3NNYXNrLktleXMgfCBXaGVyZS1PYmplY3QgeyAkRmlsZVN5c3RlbVJpZ2h0cyAtYmFuZCAkXyB9IHwgRm9yRWFjaC1PYmplY3QgeyAkQWNjZXNzTWFza1skX10gfQ0KDQogICAgICAgICAgICAgICAgICAgICMgdGhlIHNldCBvZiBwZXJtaXNzaW9uIHR5cGVzIHRoYXQgYWxsb3cgZm9yIG1vZGlmaWNhdGlvbg0KICAgICAgICAgICAgICAgICAgICAkQ29tcGFyaXNvbiA9IENvbXBhcmUtT2JqZWN0IC1SZWZlcmVuY2VPYmplY3QgJFBlcm1pc3Npb25zIC1EaWZmZXJlbmNlT2JqZWN0IEAoJ0dlbmVyaWNXcml0ZScsICdHZW5lcmljQWxsJywgJ01heGltdW1BbGxvd2VkJywgJ1dyaXRlT3duZXInLCAnV3JpdGVEQUMnLCAnV3JpdGVEYXRhL0FkZEZpbGUnLCAnQXBwZW5kRGF0YS9BZGRTdWJkaXJlY3RvcnknKSAtSW5jbHVkZUVxdWFsIC1FeGNsdWRlRGlmZmVyZW50DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKCRDb21wYXJpc29uKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJF8uSWRlbnRpdHlSZWZlcmVuY2UgLW5vdG1hdGNoICdeUy0xLTUuKicpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoLW5vdCAoJFRyYW5zbGF0ZWRJZGVudGl0eVJlZmVyZW5jZXNbJF8uSWRlbnRpdHlSZWZlcmVuY2VdKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIHRyYW5zbGF0ZSB0aGUgSWRlbnRpdHlSZWZlcmVuY2UgaWYgaXQncyBhIHVzZXJuYW1lIGFuZCBub3QgYSBTSUQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJElkZW50aXR5VXNlciA9IE5ldy1PYmplY3QgU3lzdGVtLlNlY3VyaXR5LlByaW5jaXBhbC5OVEFjY291bnQoJF8uSWRlbnRpdHlSZWZlcmVuY2UpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRUcmFuc2xhdGVkSWRlbnRpdHlSZWZlcmVuY2VzWyRfLklkZW50aXR5UmVmZXJlbmNlXSA9ICRJZGVudGl0eVVzZXIuVHJhbnNsYXRlKFtTeXN0ZW0uU2VjdXJpdHkuUHJpbmNpcGFsLlNlY3VyaXR5SWRlbnRpZmllcl0pIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kUHJvcGVydHkgVmFsdWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJElkZW50aXR5U0lEID0gJFRyYW5zbGF0ZWRJZGVudGl0eVJlZmVyZW5jZXNbJF8uSWRlbnRpdHlSZWZlcmVuY2VdDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkSWRlbnRpdHlTSUQgPSAkXy5JZGVudGl0eVJlZmVyZW5jZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJEN1cnJlbnRVc2VyU2lkcyAtY29udGFpbnMgJElkZW50aXR5U0lEKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJE91dCA9IE5ldy1PYmplY3QgUFNPYmplY3QNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ01vZGlmaWFibGVQYXRoJyAkQ2FuZGlkYXRlUGF0aA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnSWRlbnRpdHlSZWZlcmVuY2UnICRfLklkZW50aXR5UmVmZXJlbmNlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdQZXJtaXNzaW9ucycgJFBlcm1pc3Npb25zDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJE91dC5QU09iamVjdC5UeXBlTmFtZXMuSW5zZXJ0KDAsICdQb3dlclVwLk1vZGlmaWFibGVQYXRoJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkT3V0DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9DQoNCg0KZnVuY3Rpb24gR2V0LVRva2VuSW5mb3JtYXRpb24gew0KPCMNCi5TWU5PUFNJUw0KDQpIZWxwZXJzIHRoYXQgcmV0dXJucyB0b2tlbiBncm91cHMgb3IgcHJpdmlsZWdlcyBmb3IgYSBwYXNzZWQgcHJvY2Vzcy90aHJlYWQgdG9rZW4uDQpVc2VkIGJ5IEdldC1Qcm9jZXNzVG9rZW5Hcm91cCBhbmQgR2V0LVByb2Nlc3NUb2tlblByaXZpbGVnZS4NCg0KQXV0aG9yOiBXaWxsIFNjaHJvZWRlciAoQGhhcm1qMHkpICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IFBTUmVmbGVjdCAgDQoNCi5ERVNDUklQVElPTg0KDQpXcmFwcyB0aGUgR2V0VG9rZW5JbmZvcm1hdGlvbigpIFdpbiAzMkFQSSBjYWxsIHRvIHF1ZXJ5IHRoZSBnaXZlbiB0b2tlbiBmb3INCmVpdGhlciB0b2tlbiBncm91cHMgKC1JbmZvcm1hdGlvbkNsYXNzICJHcm91cHMiKSBvciBwcml2aWxlZ2VzICgtSW5mb3JtYXRpb25DbGFzcyAiUHJpdmlsZWdlcyIpLg0KRm9yIHRva2VuIGdyb3VwcywgZ3JvdXAgaXMgaXRlcmF0ZWQgdGhyb3VnaCBhbmQgdGhlIFNJRCBzdHJ1Y3R1cmUgaXMgY29udmVydGVkIHRvIGEgcmVhZGFibGUNCnN0cmluZyB1c2luZyBDb252ZXJ0U2lkVG9TdHJpbmdTaWQoKSwgYW5kIHRoZSB1bmlxdWUgbGlzdCBvZiBTSURzIHRoZSB1c2VyIGlzIGEgcGFydCBvZg0KKGRpc2FibGVkIG9yIG5vdCkgaXMgcmV0dXJuZWQgYXMgYSBzdHJpbmcgYXJyYXkuDQoNCi5QQVJBTUVURVIgVG9rZW5IYW5kbGUNCg0KVGhlIEludFB0ciB0b2tlbiBoYW5kbGUgdG8gcXVlcnkuIFJlcXVpcmVkLg0KDQouUEFSQU1FVEVSIEluZm9ybWF0aW9uQ2xhc3MNCg0KVGhlIHR5cGUgb2YgaW5mb3JtYXRpb24gdG8gcXVlcnkgZm9yIHRoZSB0b2tlbiBoYW5kbGUsIGVpdGhlciAnR3JvdXBzJywgJ1ByaXZpbGVnZXMnLCBvciAnVHlwZScuDQoNCi5PVVRQVVRTDQoNClBvd2VyVXAuVG9rZW5Hcm91cA0KDQpPdXRwdXRzIGEgY3VzdG9tIG9iamVjdCBjb250YWluaW5nIHRoZSB0b2tlbiBncm91cCAoU0lEL2F0dHJpYnV0ZXMpIGZvciB0aGUgc3BlY2lmaWVkIHRva2VuIGlmDQoiLUluZm9ybWF0aW9uQ2xhc3MgJ0dyb3VwcyciIGlzIHBhc3NlZC4NCg0KUG93ZXJVcC5Ub2tlblByaXZpbGVnZQ0KDQpPdXRwdXRzIGEgY3VzdG9tIG9iamVjdCBjb250YWluaW5nIHRoZSB0b2tlbiBwcml2aWxlZ2UgKG5hbWUvYXR0cmlidXRlcykgZm9yIHRoZSBzcGVjaWZpZWQgdG9rZW4gaWYNCiItSW5mb3JtYXRpb25DbGFzcyAnUHJpdmlsZWdlcyciIGlzIHBhc3NlZA0KDQpQb3dlclVwLlRva2VuVHlwZQ0KDQpPdXRwdXRzIGEgY3VzdG9tIG9iamVjdCBjb250YWluaW5nIHRoZSB0b2tlbiB0eXBlIGFuZCBpbXBlcnNvbmF0aW9uIGxldmVsIGZvciB0aGUgc3BlY2lmaWVkIHRva2VuIGlmDQoiLUluZm9ybWF0aW9uQ2xhc3MgJ1R5cGUnIiBpcyBwYXNzZWQNCg0KLkxJTksNCg0KaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS93aW5kb3dzL2Rlc2t0b3AvYWE0NDY2NzEodj12cy44NSkuYXNweA0KaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS93aW5kb3dzL2Rlc2t0b3AvYWEzNzk2MjQodj12cy44NSkuYXNweA0KaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS93aW5kb3dzL2Rlc2t0b3AvYWEzNzk1NTQodj12cy44NSkuYXNweA0KaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS93aW5kb3dzL2Rlc2t0b3AvYWEzNzk2MjYodj12cy44NSkuYXNweA0KaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS93aW5kb3dzL2Rlc2t0b3AvYWEzNzk2MzAodj12cy44NSkuYXNweA0KIz4NCg0KICAgIFtPdXRwdXRUeXBlKCdQb3dlclVwLlRva2VuR3JvdXAnKV0NCiAgICBbT3V0cHV0VHlwZSgnUG93ZXJVcC5Ub2tlblByaXZpbGVnZScpXQ0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAwLCBNYW5kYXRvcnkgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmUgPSAkVHJ1ZSldDQogICAgICAgIFtBbGlhcygnaFRva2VuJywgJ1Rva2VuJyldDQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgIFtJbnRQdHJdDQogICAgICAgICRUb2tlbkhhbmRsZSwNCg0KICAgICAgICBbU3RyaW5nW11dDQogICAgICAgIFtWYWxpZGF0ZVNldCgnR3JvdXBzJywgJ1ByaXZpbGVnZXMnLCAnVHlwZScpXQ0KICAgICAgICAkSW5mb3JtYXRpb25DbGFzcyA9ICdQcml2aWxlZ2VzJw0KICAgICkNCg0KICAgIFBST0NFU1Mgew0KICAgICAgICBpZiAoJEluZm9ybWF0aW9uQ2xhc3MgLWVxICdHcm91cHMnKSB7DQogICAgICAgICAgICAjIHF1ZXJ5IHRoZSBwcm9jZXNzIHRva2VuIHdpdGggdGhlIFRPS0VOX0lORk9STUFUSU9OX0NMQVNTID0gMiBlbnVtIHRvIHJldHJpZXZlIGEgVE9LRU5fR1JPVVBTIHN0cnVjdHVyZQ0KDQogICAgICAgICAgICAjIGluaXRpYWwgcXVlcnkgdG8gZGV0ZXJtaW5lIHRoZSBuZWNlc3NhcnkgYnVmZmVyIHNpemUNCiAgICAgICAgICAgICRUb2tlbkdyb3Vwc1B0clNpemUgPSAwDQogICAgICAgICAgICAkU3VjY2VzcyA9ICRBZHZhcGkzMjo6R2V0VG9rZW5JbmZvcm1hdGlvbigkVG9rZW5IYW5kbGUsIDIsIDAsICRUb2tlbkdyb3Vwc1B0clNpemUsIFtyZWZdJFRva2VuR3JvdXBzUHRyU2l6ZSkNCiAgICAgICAgICAgIFtJbnRQdHJdJFRva2VuR3JvdXBzUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRUb2tlbkdyb3Vwc1B0clNpemUpDQoNCiAgICAgICAgICAgICRTdWNjZXNzID0gJEFkdmFwaTMyOjpHZXRUb2tlbkluZm9ybWF0aW9uKCRUb2tlbkhhbmRsZSwgMiwgJFRva2VuR3JvdXBzUHRyLCAkVG9rZW5Hcm91cHNQdHJTaXplLCBbcmVmXSRUb2tlbkdyb3Vwc1B0clNpemUpOyRMYXN0RXJyb3IgPSBbUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldExhc3RXaW4zMkVycm9yKCkNCg0KICAgICAgICAgICAgaWYgKCRTdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgJFRva2VuR3JvdXBzID0gJFRva2VuR3JvdXBzUHRyIC1hcyAkVE9LRU5fR1JPVVBTDQogICAgICAgICAgICAgICAgRm9yICgkaT0wOyAkaSAtbHQgJFRva2VuR3JvdXBzLkdyb3VwQ291bnQ7ICRpKyspIHsNCiAgICAgICAgICAgICAgICAgICAgIyBjb252ZXJ0IGVhY2ggdG9rZW4gZ3JvdXAgU0lEIHRvIGEgZGlzcGxheWFibGUgc3RyaW5nDQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKCRUb2tlbkdyb3Vwcy5Hcm91cHNbJGldLlNJRCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgJFNpZFN0cmluZyA9ICcnDQogICAgICAgICAgICAgICAgICAgICAgICAkUmVzdWx0ID0gJEFkdmFwaTMyOjpDb252ZXJ0U2lkVG9TdHJpbmdTaWQoJFRva2VuR3JvdXBzLkdyb3Vwc1skaV0uU0lELCBbcmVmXSRTaWRTdHJpbmcpOyRMYXN0RXJyb3IgPSBbUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldExhc3RXaW4zMkVycm9yKCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkUmVzdWx0IC1lcSAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiRXJyb3I6ICQoKFtDb21wb25lbnRNb2RlbC5XaW4zMkV4Y2VwdGlvbl0gJExhc3RFcnJvcikuTWVzc2FnZSkiDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkR3JvdXBTaWQgPSBOZXctT2JqZWN0IFBTT2JqZWN0DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJEdyb3VwU2lkIHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ1NJRCcgJFNpZFN0cmluZw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgY2FzdCB0aGUgYXR0dHJpYnV0ZXMgZmllbGQgYXMgb3VyIFNpZEF0dHJpYnV0ZXMgZW51bQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRHcm91cFNpZCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdBdHRyaWJ1dGVzJyAoJFRva2VuR3JvdXBzLkdyb3Vwc1skaV0uQXR0cmlidXRlcyAtYXMgJFNpZEF0dHJpYnV0ZXMpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJEdyb3VwU2lkIHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ1Rva2VuSGFuZGxlJyAkVG9rZW5IYW5kbGUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkR3JvdXBTaWQuUFNPYmplY3QuVHlwZU5hbWVzLkluc2VydCgwLCAnUG93ZXJVcC5Ub2tlbkdyb3VwJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkR3JvdXBTaWQNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgKFtDb21wb25lbnRNb2RlbC5XaW4zMkV4Y2VwdGlvbl0gJExhc3RFcnJvcikNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkZyZWVIR2xvYmFsKCRUb2tlbkdyb3Vwc1B0cikNCiAgICAgICAgfQ0KICAgICAgICBlbHNlaWYgKCRJbmZvcm1hdGlvbkNsYXNzIC1lcSAnUHJpdmlsZWdlcycpIHsNCiAgICAgICAgICAgICMgcXVlcnkgdGhlIHByb2Nlc3MgdG9rZW4gd2l0aCB0aGUgVE9LRU5fSU5GT1JNQVRJT05fQ0xBU1MgPSAzIGVudW0gdG8gcmV0cmlldmUgYSBUT0tFTl9QUklWSUxFR0VTIHN0cnVjdHVyZQ0KDQogICAgICAgICAgICAjIGluaXRpYWwgcXVlcnkgdG8gZGV0ZXJtaW5lIHRoZSBuZWNlc3NhcnkgYnVmZmVyIHNpemUNCiAgICAgICAgICAgICRUb2tlblByaXZpbGVnZXNQdHJTaXplID0gMA0KICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkQWR2YXBpMzI6OkdldFRva2VuSW5mb3JtYXRpb24oJFRva2VuSGFuZGxlLCAzLCAwLCAkVG9rZW5Qcml2aWxlZ2VzUHRyU2l6ZSwgW3JlZl0kVG9rZW5Qcml2aWxlZ2VzUHRyU2l6ZSkNCiAgICAgICAgICAgIFtJbnRQdHJdJFRva2VuUHJpdmlsZWdlc1B0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkVG9rZW5Qcml2aWxlZ2VzUHRyU2l6ZSkNCg0KICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkQWR2YXBpMzI6OkdldFRva2VuSW5mb3JtYXRpb24oJFRva2VuSGFuZGxlLCAzLCAkVG9rZW5Qcml2aWxlZ2VzUHRyLCAkVG9rZW5Qcml2aWxlZ2VzUHRyU2l6ZSwgW3JlZl0kVG9rZW5Qcml2aWxlZ2VzUHRyU2l6ZSk7JExhc3RFcnJvciA9IFtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0TGFzdFdpbjMyRXJyb3IoKQ0KDQogICAgICAgICAgICBpZiAoJFN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICAkVG9rZW5Qcml2aWxlZ2VzID0gJFRva2VuUHJpdmlsZWdlc1B0ciAtYXMgJFRPS0VOX1BSSVZJTEVHRVMNCiAgICAgICAgICAgICAgICBGb3IgKCRpPTA7ICRpIC1sdCAkVG9rZW5Qcml2aWxlZ2VzLlByaXZpbGVnZUNvdW50OyAkaSsrKSB7DQogICAgICAgICAgICAgICAgICAgICRQcml2aWxlZ2UgPSBOZXctT2JqZWN0IFBTT2JqZWN0DQogICAgICAgICAgICAgICAgICAgICRQcml2aWxlZ2UgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnUHJpdmlsZWdlJyAkVG9rZW5Qcml2aWxlZ2VzLlByaXZpbGVnZXNbJGldLkx1aWQuTG93UGFydC5Ub1N0cmluZygpDQogICAgICAgICAgICAgICAgICAgICMgY2FzdCB0aGUgbG93ZXIgTHVpZCBmaWVsZCBhcyBvdXIgTHVpZEF0dHJpYnV0ZXMgZW51bQ0KICAgICAgICAgICAgICAgICAgICAkUHJpdmlsZWdlIHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ0F0dHJpYnV0ZXMnICgkVG9rZW5Qcml2aWxlZ2VzLlByaXZpbGVnZXNbJGldLkF0dHJpYnV0ZXMgLWFzICRMdWlkQXR0cmlidXRlcykNCiAgICAgICAgICAgICAgICAgICAgJFByaXZpbGVnZSB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdUb2tlbkhhbmRsZScgJFRva2VuSGFuZGxlDQogICAgICAgICAgICAgICAgICAgICRQcml2aWxlZ2UuUFNPYmplY3QuVHlwZU5hbWVzLkluc2VydCgwLCAnUG93ZXJVcC5Ub2tlblByaXZpbGVnZScpDQogICAgICAgICAgICAgICAgICAgICRQcml2aWxlZ2UNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nIChbQ29tcG9uZW50TW9kZWwuV2luMzJFeGNlcHRpb25dICRMYXN0RXJyb3IpDQogICAgICAgICAgICB9DQogICAgICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpGcmVlSEdsb2JhbCgkVG9rZW5Qcml2aWxlZ2VzUHRyKQ0KICAgICAgICB9DQogICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgJFRva2VuUmVzdWx0ID0gTmV3LU9iamVjdCBQU09iamVjdA0KDQogICAgICAgICAgICAjIHF1ZXJ5IHRoZSBwcm9jZXNzIHRva2VuIHdpdGggdGhlIFRPS0VOX0lORk9STUFUSU9OX0NMQVNTID0gOCBlbnVtIHRvIHJldHJpZXZlIGEgVE9LRU5fVFlQRSBlbnVtDQoNCiAgICAgICAgICAgICMgaW5pdGlhbCBxdWVyeSB0byBkZXRlcm1pbmUgdGhlIG5lY2Vzc2FyeSBidWZmZXIgc2l6ZQ0KICAgICAgICAgICAgJFRva2VuVHlwZVB0clNpemUgPSAwDQogICAgICAgICAgICAkU3VjY2VzcyA9ICRBZHZhcGkzMjo6R2V0VG9rZW5JbmZvcm1hdGlvbigkVG9rZW5IYW5kbGUsIDgsIDAsICRUb2tlblR5cGVQdHJTaXplLCBbcmVmXSRUb2tlblR5cGVQdHJTaXplKQ0KICAgICAgICAgICAgW0ludFB0cl0kVG9rZW5UeXBlUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRUb2tlblR5cGVQdHJTaXplKQ0KDQogICAgICAgICAgICAkU3VjY2VzcyA9ICRBZHZhcGkzMjo6R2V0VG9rZW5JbmZvcm1hdGlvbigkVG9rZW5IYW5kbGUsIDgsICRUb2tlblR5cGVQdHIsICRUb2tlblR5cGVQdHJTaXplLCBbcmVmXSRUb2tlblR5cGVQdHJTaXplKTskTGFzdEVycm9yID0gW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpDQoNCiAgICAgICAgICAgIGlmICgkU3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICRUZW1wID0gJFRva2VuVHlwZVB0ciAtYXMgJFRPS0VOX1RZUEUNCiAgICAgICAgICAgICAgICAkVG9rZW5SZXN1bHQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnVHlwZScgJFRlbXAuVHlwZQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAoW0NvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uXSAkTGFzdEVycm9yKQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6RnJlZUhHbG9iYWwoJFRva2VuVHlwZVB0cikNCg0KICAgICAgICAgICAgIyBub3cgcXVlcnkgdGhlIHByb2Nlc3MgdG9rZW4gd2l0aCB0aGUgVE9LRU5fSU5GT1JNQVRJT05fQ0xBU1MgPSA4IGVudW0gdG8gcmV0cmlldmUgYSBTRUNVUklUWV9JTVBFUlNPTkFUSU9OX0xFVkVMIGVudW0NCg0KICAgICAgICAgICAgIyBpbml0aWFsIHF1ZXJ5IHRvIGRldGVybWluZSB0aGUgbmVjZXNzYXJ5IGJ1ZmZlciBzaXplDQogICAgICAgICAgICAkVG9rZW5JbXBlcnNvbmF0aW9uTGV2ZWxQdHJTaXplID0gMA0KICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkQWR2YXBpMzI6OkdldFRva2VuSW5mb3JtYXRpb24oJFRva2VuSGFuZGxlLCA4LCAwLCAkVG9rZW5JbXBlcnNvbmF0aW9uTGV2ZWxQdHJTaXplLCBbcmVmXSRUb2tlbkltcGVyc29uYXRpb25MZXZlbFB0clNpemUpDQogICAgICAgICAgICBbSW50UHRyXSRUb2tlbkltcGVyc29uYXRpb25MZXZlbFB0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkVG9rZW5JbXBlcnNvbmF0aW9uTGV2ZWxQdHJTaXplKQ0KDQogICAgICAgICAgICAkU3VjY2VzczIgPSAkQWR2YXBpMzI6OkdldFRva2VuSW5mb3JtYXRpb24oJFRva2VuSGFuZGxlLCA4LCAkVG9rZW5JbXBlcnNvbmF0aW9uTGV2ZWxQdHIsICRUb2tlbkltcGVyc29uYXRpb25MZXZlbFB0clNpemUsIFtyZWZdJFRva2VuSW1wZXJzb25hdGlvbkxldmVsUHRyU2l6ZSk7JExhc3RFcnJvciA9IFtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0TGFzdFdpbjMyRXJyb3IoKQ0KDQogICAgICAgICAgICBpZiAoJFN1Y2Nlc3MyKSB7DQogICAgICAgICAgICAgICAgJFRlbXAgPSAkVG9rZW5JbXBlcnNvbmF0aW9uTGV2ZWxQdHIgLWFzICRJTVBFUlNPTkFUSU9OX0xFVkVMDQogICAgICAgICAgICAgICAgJFRva2VuUmVzdWx0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ0ltcGVyc29uYXRpb25MZXZlbCcgJFRlbXAuSW1wZXJzb25hdGlvbkxldmVsDQogICAgICAgICAgICAgICAgJFRva2VuUmVzdWx0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ1Rva2VuSGFuZGxlJyAkVG9rZW5IYW5kbGUNCiAgICAgICAgICAgICAgICAkVG9rZW5SZXN1bHQuUFNPYmplY3QuVHlwZU5hbWVzLkluc2VydCgwLCAnUG93ZXJVcC5Ub2tlblR5cGUnKQ0KICAgICAgICAgICAgICAgICRUb2tlblJlc3VsdA0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAoW0NvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uXSAkTGFzdEVycm9yKQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6RnJlZUhHbG9iYWwoJFRva2VuSW1wZXJzb25hdGlvbkxldmVsUHRyKQ0KICAgICAgICB9DQogICAgfQ0KfQ0KDQoNCmZ1bmN0aW9uIEdldC1Qcm9jZXNzVG9rZW5Hcm91cCB7DQo8Iw0KLlNZTk9QU0lTDQoNClJldHVybnMgYWxsIFNJRHMgdGhhdCB0aGUgY3VycmVudCB0b2tlbiBjb250ZXh0IGlzIGEgcGFydCBvZiwgd2hldGhlciB0aGV5IGFyZSBkaXNhYmxlZCBvciBub3QuDQoNCkF1dGhvcjogV2lsbCBTY2hyb2VkZXIgKEBoYXJtajB5KSAgDQpMaWNlbnNlOiBCU0QgMy1DbGF1c2UgIA0KUmVxdWlyZWQgRGVwZW5kZW5jaWVzOiBQU1JlZmxlY3QsIEdldC1Ub2tlbkluZm9ybWF0aW9uICANCg0KLkRFU0NSSVBUSU9ODQoNCkZpcnN0LCBpZiBhIHByb2Nlc3MgSUQgaXMgcGFzc2VkLCB0aGVuIHRoZSBwcm9jZXNzIGlzIG9wZW5lZCB1c2luZyBPcGVuUHJvY2VzcygpLA0Kb3RoZXJ3aXNlIEdldEN1cnJlbnRQcm9jZXNzKCkgaXMgdXNlZCB0byBvcGVuIHVwIGEgcHNldWRvaGFuZGxlIHRvIHRoZSBjdXJyZW50IHByb2Nlc3MuDQpPcGVuUHJvY2Vzc1Rva2VuKCkgaXMgdGhlbiB1c2VkIHRvIGdldCBhIGhhbmRsZSB0byB0aGUgc3BlY2lmaWVkIHByb2Nlc3MgdG9rZW4uIFRoZSB0b2tlbg0KaXMgdGhlbiBwYXNzZWQgdG8gR2V0LVRva2VuSW5mb3JtYXRpb24gdG8gcXVlcnkgdGhlIGN1cnJlbnQgdG9rZW4gZ3JvdXBzIGZvciB0aGUgc3BlY2lmaWVkDQp0b2tlbi4NCg0KLlBBUkFNRVRFUiBJZA0KDQpUaGUgcHJvY2VzcyBJRCB0byBlbnVtZXJhdGUgdG9rZW4gZ3JvdXBzIGZvciwgb3RoZXJ3aXNlIGRlZmF1bHRzIHRvIHRoZSBjdXJyZW50IHByb2Nlc3MuDQoNCi5FWEFNUExFDQoNCkdldC1Qcm9jZXNzVG9rZW5Hcm91cA0KDQpTSUQgICAgICAgICAgICAgICAgICAgICAgICAgIEF0dHJpYnV0ZXMgICAgICAgICBUb2tlbkhhbmRsZSAgICAgICAgICAgUHJvY2Vzc0lkDQotLS0gICAgICAgICAgICAgICAgICAgICAgICAgIC0tLS0tLS0tLS0gICAgICAgICAtLS0tLS0tLS0tLSAgICAgICAgICAgLS0tLS0tLS0tDQpTLTEtNS0yMS04OTAxNzE4Li4uIC4uLlNFX0dST1VQX0VOQUJMRUQgICAgICAgICAgICAgICAgMTYxNiAgICAgICAgICAgICAgICAzNjg0DQpTLTEtMS0wICAgICAgICAgICAgIC4uLlNFX0dST1VQX0VOQUJMRUQgICAgICAgICAgICAgICAgMTYxNiAgICAgICAgICAgICAgICAzNjg0DQpTLTEtNS0zMi01NDQgICAgICAgIC4uLiwgU0VfR1JPVVBfT1dORVIgICAgICAgICAgICAgICAgMTYxNiAgICAgICAgICAgICAgICAzNjg0DQpTLTEtNS0zMi01NDUgICAgICAgIC4uLlNFX0dST1VQX0VOQUJMRUQgICAgICAgICAgICAgICAgMTYxNiAgICAgICAgICAgICAgICAzNjg0DQpTLTEtNS00ICAgICAgICAgICAgIC4uLlNFX0dST1VQX0VOQUJMRUQgICAgICAgICAgICAgICAgMTYxNiAgICAgICAgICAgICAgICAzNjg0DQpTLTEtMi0xICAgICAgICAgICAgIC4uLlNFX0dST1VQX0VOQUJMRUQgICAgICAgICAgICAgICAgMTYxNiAgICAgICAgICAgICAgICAzNjg0DQpTLTEtNS0xMSAgICAgICAgICAgIC4uLlNFX0dST1VQX0VOQUJMRUQgICAgICAgICAgICAgICAgMTYxNiAgICAgICAgICAgICAgICAzNjg0DQpTLTEtNS0xNSAgICAgICAgICAgIC4uLlNFX0dST1VQX0VOQUJMRUQgICAgICAgICAgICAgICAgMTYxNiAgICAgICAgICAgICAgICAzNjg0DQpTLTEtNS01LTAtMTA1MzQ1OSAgIC4uLk5URUdSSVRZX0VOQUJMRUQgICAgICAgICAgICAgICAgMTYxNiAgICAgICAgICAgICAgICAzNjg0DQpTLTEtMi0wICAgICAgICAgICAgIC4uLlNFX0dST1VQX0VOQUJMRUQgICAgICAgICAgICAgICAgMTYxNiAgICAgICAgICAgICAgICAzNjg0DQpTLTEtMTgtMSAgICAgICAgICAgIC4uLlNFX0dST1VQX0VOQUJMRUQgICAgICAgICAgICAgICAgMTYxNiAgICAgICAgICAgICAgICAzNjg0DQpTLTEtMTYtMTIyODggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTYxNiAgICAgICAgICAgICAgICAzNjg0DQoNCi5FWEFNUExFDQoNCkdldC1Qcm9jZXNzIG5vdGVwYWQgfCBHZXQtUHJvY2Vzc1Rva2VuR3JvdXANCg0KU0lEICAgICAgICAgICAgICAgICAgICAgICAgICBBdHRyaWJ1dGVzICAgICAgICAgVG9rZW5IYW5kbGUgICAgICAgICAgIFByb2Nlc3NJZA0KLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAtLS0tLS0tLS0tICAgICAgICAgLS0tLS0tLS0tLS0gICAgICAgICAgIC0tLS0tLS0tLQ0KUy0xLTUtMjEtODkwMTcxOC4uLiAuLi5TRV9HUk9VUF9FTkFCTEVEICAgICAgICAgICAgICAgIDE4OTIgICAgICAgICAgICAgICAgMjA0NA0KUy0xLTEtMCAgICAgICAgICAgICAuLi5TRV9HUk9VUF9FTkFCTEVEICAgICAgICAgICAgICAgIDE4OTIgICAgICAgICAgICAgICAgMjA0NA0KUy0xLTUtMzItNTQ0ICAgICAgICAuLi5TRV9GT1JfREVOWV9PTkxZICAgICAgICAgICAgICAgIDE4OTIgICAgICAgICAgICAgICAgMjA0NA0KUy0xLTUtMzItNTQ1ICAgICAgICAuLi5TRV9HUk9VUF9FTkFCTEVEICAgICAgICAgICAgICAgIDE4OTIgICAgICAgICAgICAgICAgMjA0NA0KUy0xLTUtNCAgICAgICAgICAgICAuLi5TRV9HUk9VUF9FTkFCTEVEICAgICAgICAgICAgICAgIDE4OTIgICAgICAgICAgICAgICAgMjA0NA0KUy0xLTItMSAgICAgICAgICAgICAuLi5TRV9HUk9VUF9FTkFCTEVEICAgICAgICAgICAgICAgIDE4OTIgICAgICAgICAgICAgICAgMjA0NA0KUy0xLTUtMTEgICAgICAgICAgICAuLi5TRV9HUk9VUF9FTkFCTEVEICAgICAgICAgICAgICAgIDE4OTIgICAgICAgICAgICAgICAgMjA0NA0KUy0xLTUtMTUgICAgICAgICAgICAuLi5TRV9HUk9VUF9FTkFCTEVEICAgICAgICAgICAgICAgIDE4OTIgICAgICAgICAgICAgICAgMjA0NA0KUy0xLTUtNS0wLTEwNTM0NTkgICAuLi5OVEVHUklUWV9FTkFCTEVEICAgICAgICAgICAgICAgIDE4OTIgICAgICAgICAgICAgICAgMjA0NA0KUy0xLTItMCAgICAgICAgICAgICAuLi5TRV9HUk9VUF9FTkFCTEVEICAgICAgICAgICAgICAgIDE4OTIgICAgICAgICAgICAgICAgMjA0NA0KUy0xLTE4LTEgICAgICAgICAgICAuLi5TRV9HUk9VUF9FTkFCTEVEICAgICAgICAgICAgICAgIDE4OTIgICAgICAgICAgICAgICAgMjA0NA0KUy0xLTE2LTgxOTIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE4OTIgICAgICAgICAgICAgICAgMjA0NA0KDQoNCi5PVVRQVVRTDQoNClBvd2VyVXAuVG9rZW5Hcm91cA0KDQpPdXRwdXRzIGEgY3VzdG9tIG9iamVjdCBjb250YWluaW5nIHRoZSB0b2tlbiBncm91cCAoU0lEL2F0dHJpYnV0ZXMpIGZvciB0aGUgc3BlY2lmaWVkIHByb2Nlc3MuDQojPg0KDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnUG93ZXJVcC5Ub2tlbkdyb3VwJyldDQogICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICBQYXJhbSgNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDAsIFZhbHVlRnJvbVBpcGVsaW5lID0gJFRydWUsIFZhbHVlRnJvbVBpcGVsaW5lQnlQcm9wZXJ0eU5hbWUgPSAkVHJ1ZSldDQogICAgICAgIFtBbGlhcygnUHJvY2Vzc0lEJyldDQogICAgICAgIFtVSW50MzJdDQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgICRJZA0KICAgICkNCg0KICAgIFBST0NFU1Mgew0KICAgICAgICBpZiAoJFBTQm91bmRQYXJhbWV0ZXJzWydJZCddKSB7DQogICAgICAgICAgICAkUHJvY2Vzc0hhbmRsZSA9ICRLZXJuZWwzMjo6T3BlblByb2Nlc3MoMHg0MDAsICRGYWxzZSwgJElkKTskTGFzdEVycm9yID0gW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpDQogICAgICAgICAgICBpZiAoJFByb2Nlc3NIYW5kbGUgLWVxIDApIHsNCiAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nIChbQ29tcG9uZW50TW9kZWwuV2luMzJFeGNlcHRpb25dICRMYXN0RXJyb3IpDQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAkUHJvY2Vzc0lEID0gJElkDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAjIG9wZW4gdXAgYSBwc2V1ZG8gaGFuZGxlIHRvIHRoZSBjdXJyZW50IHByb2Nlc3MtIGRvbid0IG5lZWQgdG8gd29ycnkgYWJvdXQgY2xvc2luZw0KICAgICAgICAgICAgJFByb2Nlc3NIYW5kbGUgPSAkS2VybmVsMzI6OkdldEN1cnJlbnRQcm9jZXNzKCkNCiAgICAgICAgICAgICRQcm9jZXNzSUQgPSAkUElEDQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJFByb2Nlc3NIYW5kbGUpIHsNCiAgICAgICAgICAgIFtJbnRQdHJdJGhQcm9jVG9rZW4gPSBbSW50UHRyXTo6WmVybw0KICAgICAgICAgICAgJFRPS0VOX1FVRVJZID0gMHgwMDA4DQogICAgICAgICAgICAkU3VjY2VzcyA9ICRBZHZhcGkzMjo6T3BlblByb2Nlc3NUb2tlbigkUHJvY2Vzc0hhbmRsZSwgJFRPS0VOX1FVRVJZLCBbcmVmXSRoUHJvY1Rva2VuKTskTGFzdEVycm9yID0gW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpDQoNCiAgICAgICAgICAgIGlmICgkU3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICRUb2tlbkdyb3VwcyA9IEdldC1Ub2tlbkluZm9ybWF0aW9uIC1Ub2tlbkhhbmRsZSAkaFByb2NUb2tlbiAtSW5mb3JtYXRpb25DbGFzcyAnR3JvdXBzJw0KICAgICAgICAgICAgICAgICRUb2tlbkdyb3VwcyB8IEZvckVhY2gtT2JqZWN0IHsNCiAgICAgICAgICAgICAgICAgICAgJF8gfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnUHJvY2Vzc0lkJyAkUHJvY2Vzc0lEDQogICAgICAgICAgICAgICAgICAgICRfDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAoW0NvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uXSAkTGFzdEVycm9yKQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoJFBTQm91bmRQYXJhbWV0ZXJzWydJZCddKSB7DQogICAgICAgICAgICAgICAgIyBjbG9zZSB0aGUgaGFuZGxlIGlmIHdlIHVzZWQgT3BlblByb2Nlc3MoKQ0KICAgICAgICAgICAgICAgICROdWxsID0gJEtlcm5lbDMyOjpDbG9zZUhhbmRsZSgkUHJvY2Vzc0hhbmRsZSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCn0NCg0KDQpmdW5jdGlvbiBHZXQtUHJvY2Vzc1Rva2VuUHJpdmlsZWdlIHsNCjwjDQouU1lOT1BTSVMNCg0KUmV0dXJucyBhbGwgcHJpdmlsZWdlcyBmb3IgdGhlIGN1cnJlbnQgKG9yIHNwZWNpZmllZCkgcHJvY2VzcyBJRC4NCg0KQXV0aG9yOiBXaWxsIFNjaHJvZWRlciAoQGhhcm1qMHkpICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IFBTUmVmbGVjdCwgR2V0LVRva2VuSW5mb3JtYXRpb24gIA0KDQouREVTQ1JJUFRJT04NCg0KRmlyc3QsIGlmIGEgcHJvY2VzcyBJRCBpcyBwYXNzZWQsIHRoZW4gdGhlIHByb2Nlc3MgaXMgb3BlbmVkIHVzaW5nIE9wZW5Qcm9jZXNzKCksDQpvdGhlcndpc2UgR2V0Q3VycmVudFByb2Nlc3MoKSBpcyB1c2VkIHRvIG9wZW4gdXAgYSBwc2V1ZG9oYW5kbGUgdG8gdGhlIGN1cnJlbnQgcHJvY2Vzcy4NCk9wZW5Qcm9jZXNzVG9rZW4oKSBpcyB0aGVuIHVzZWQgdG8gZ2V0IGEgaGFuZGxlIHRvIHRoZSBzcGVjaWZpZWQgcHJvY2VzcyB0b2tlbi4gVGhlIHRva2VuDQppcyB0aGVuIHBhc3NlZCB0byBHZXQtVG9rZW5JbmZvcm1hdGlvbiB0byBxdWVyeSB0aGUgY3VycmVudCBwcml2aWxlZ2VzIGZvciB0aGUgc3BlY2lmaWVkDQp0b2tlbi4NCg0KLlBBUkFNRVRFUiBJZA0KDQpUaGUgcHJvY2VzcyBJRCB0byBlbnVtZXJhdGUgdG9rZW4gZ3JvdXBzIGZvciwgb3RoZXJ3aXNlIGRlZmF1bHRzIHRvIHRoZSBjdXJyZW50IHByb2Nlc3MuDQoNCi5QQVJBTUVURVIgU3BlY2lhbA0KDQpTd2l0Y2guIE9ubHkgcmV0dXJuICdzcGVjaWFsJyBwcml2aWxlZ2VzLCBtZWFuaW5nIGFkbWluLWxldmVsIHByaXZpbGVnZXMuDQpUaGVzZSBpbmNsdWRlIFNlU2VjdXJpdHlQcml2aWxlZ2UsIFNlVGFrZU93bmVyc2hpcFByaXZpbGVnZSwgU2VMb2FkRHJpdmVyUHJpdmlsZWdlLCBTZUJhY2t1cFByaXZpbGVnZSwNClNlUmVzdG9yZVByaXZpbGVnZSwgU2VEZWJ1Z1ByaXZpbGVnZSwgU2VTeXN0ZW1FbnZpcm9ubWVudFByaXZpbGVnZSwgU2VJbXBlcnNvbmF0ZVByaXZpbGVnZSwgU2VUY2JQcml2aWxlZ2UuDQoNCi5FWEFNUExFDQoNCkdldC1Qcm9jZXNzVG9rZW5Qcml2aWxlZ2UgfCBmdCAtYQ0KDQpXQVJOSU5HOiAyIGNvbHVtbnMgZG8gbm90IGZpdCBpbnRvIHRoZSBkaXNwbGF5IGFuZCB3ZXJlIHJlbW92ZWQuDQoNClByaXZpbGVnZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEF0dHJpYnV0ZXMNCi0tLS0tLS0tLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tLS0tLS0tLS0NClNlVW5zb2xpY2l0ZWRJbnB1dFByaXZpbGVnZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlVGNiUHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlU2VjdXJpdHlQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlVGFrZU93bmVyc2hpcFByaXZpbGVnZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlTG9hZERyaXZlclByaXZpbGVnZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlU3lzdGVtUHJvZmlsZVByaXZpbGVnZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlU3lzdGVtdGltZVByaXZpbGVnZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlUHJvZmlsZVNpbmdsZVByb2Nlc3NQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlSW5jcmVhc2VCYXNlUHJpb3JpdHlQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlQ3JlYXRlUGFnZWZpbGVQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlQmFja3VwUHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlUmVzdG9yZVByaXZpbGVnZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlU2h1dGRvd25Qcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlRGVidWdQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU0VfUFJJVklMRUdFX0VOQUJMRUQNClNlU3lzdGVtRW52aXJvbm1lbnRQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlQ2hhbmdlTm90aWZ5UHJpdmlsZWdlICAgICAgICAgLi4uRUdFX0VOQUJMRURfQllfREVGQVVMVCwgU0VfUFJJVklMRUdFX0VOQUJMRUQNClNlUmVtb3RlU2h1dGRvd25Qcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlVW5kb2NrUHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlTWFuYWdlVm9sdW1lUHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlSW1wZXJzb25hdGVQcml2aWxlZ2UgICAgICAgICAgLi4uRUdFX0VOQUJMRURfQllfREVGQVVMVCwgU0VfUFJJVklMRUdFX0VOQUJMRUQNClNlQ3JlYXRlR2xvYmFsUHJpdmlsZWdlICAgICAgICAgLi4uRUdFX0VOQUJMRURfQllfREVGQVVMVCwgU0VfUFJJVklMRUdFX0VOQUJMRUQNClNlSW5jcmVhc2VXb3JraW5nU2V0UHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlVGltZVpvbmVQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNClNlQ3JlYXRlU3ltYm9saWNMaW5rUHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQNCg0KLkVYQU1QTEUNCg0KR2V0LVByb2Nlc3NUb2tlblByaXZpbGVnZSAtU3BlY2lhbA0KDQpQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgIEF0dHJpYnV0ZXMgICAgICAgICBUb2tlbkhhbmRsZSAgICAgICAgICAgUHJvY2Vzc0lkDQotLS0tLS0tLS0gICAgICAgICAgICAgICAgICAgIC0tLS0tLS0tLS0gICAgICAgICAtLS0tLS0tLS0tLSAgICAgICAgICAgLS0tLS0tLS0tDQpTZVRjYlByaXZpbGVnZSAgICAgICAgICAgICAgICAgRElTQUJMRUQgICAgICAgICAgICAgICAgMjI2OCAgICAgICAgICAgICAgICAzNjg0DQpTZVNlY3VyaXR5UHJpdmlsZWdlICAgICAgICAgICAgRElTQUJMRUQgICAgICAgICAgICAgICAgMjI2OCAgICAgICAgICAgICAgICAzNjg0DQpTZVRha2VPd25lcnNoaXBQLi4uICAgICAgICAgICAgRElTQUJMRUQgICAgICAgICAgICAgICAgMjI2OCAgICAgICAgICAgICAgICAzNjg0DQpTZUxvYWREcml2ZXJQcml2Li4uICAgICAgICAgICAgRElTQUJMRUQgICAgICAgICAgICAgICAgMjI2OCAgICAgICAgICAgICAgICAzNjg0DQpTZUJhY2t1cFByaXZpbGVnZSAgICAgICAgICAgICAgRElTQUJMRUQgICAgICAgICAgICAgICAgMjI2OCAgICAgICAgICAgICAgICAzNjg0DQpTZVJlc3RvcmVQcml2aWxlZ2UgICAgICAgICAgICAgRElTQUJMRUQgICAgICAgICAgICAgICAgMjI2OCAgICAgICAgICAgICAgICAzNjg0DQpTZURlYnVnUHJpdmlsZWdlICAgIC4uLlJJVklMRUdFX0VOQUJMRUQgICAgICAgICAgICAgICAgMjI2OCAgICAgICAgICAgICAgICAzNjg0DQpTZVN5c3RlbUVudmlyb25tLi4uICAgICAgICAgICAgRElTQUJMRUQgICAgICAgICAgICAgICAgMjI2OCAgICAgICAgICAgICAgICAzNjg0DQpTZUltcGVyc29uYXRlUHJpLi4uIC4uLlJJVklMRUdFX0VOQUJMRUQgICAgICAgICAgICAgICAgMjI2OCAgICAgICAgICAgICAgICAzNjg0DQoNCi5FWEFNUExFDQoNCkdldC1Qcm9jZXNzIG5vdGVwYWQgfCBHZXQtUHJvY2Vzc1Rva2VuUHJpdmlsZWdlIHwgZmwNCg0KUHJpdmlsZWdlICAgOiBTZVNodXRkb3duUHJpdmlsZWdlDQpBdHRyaWJ1dGVzICA6IERJU0FCTEVEDQpUb2tlbkhhbmRsZSA6IDIxNjQNClByb2Nlc3NJZCAgIDogMjA0NA0KDQpQcml2aWxlZ2UgICA6IFNlQ2hhbmdlTm90aWZ5UHJpdmlsZWdlDQpBdHRyaWJ1dGVzICA6IFNFX1BSSVZJTEVHRV9FTkFCTEVEX0JZX0RFRkFVTFQsIFNFX1BSSVZJTEVHRV9FTkFCTEVEDQpUb2tlbkhhbmRsZSA6IDIxNjQNClByb2Nlc3NJZCAgIDogMjA0NA0KDQpQcml2aWxlZ2UgICA6IFNlVW5kb2NrUHJpdmlsZWdlDQpBdHRyaWJ1dGVzICA6IERJU0FCTEVEDQpUb2tlbkhhbmRsZSA6IDIxNjQNClByb2Nlc3NJZCAgIDogMjA0NA0KDQpQcml2aWxlZ2UgICA6IFNlSW5jcmVhc2VXb3JraW5nU2V0UHJpdmlsZWdlDQpBdHRyaWJ1dGVzICA6IERJU0FCTEVEDQpUb2tlbkhhbmRsZSA6IDIxNjQNClByb2Nlc3NJZCAgIDogMjA0NA0KDQpQcml2aWxlZ2UgICA6IFNlVGltZVpvbmVQcml2aWxlZ2UNCkF0dHJpYnV0ZXMgIDogRElTQUJMRUQNClRva2VuSGFuZGxlIDogMjE2NA0KUHJvY2Vzc0lkICAgOiAyMDQ0DQoNCi5PVVRQVVRTDQoNClBvd2VyVXAuVG9rZW5Qcml2aWxlZ2UNCg0KT3V0cHV0cyBhIGN1c3RvbSBvYmplY3QgY29udGFpbmluZyB0aGUgdG9rZW4gcHJpdmlsZWdlIChuYW1lL2F0dHJpYnV0ZXMpIGZvciB0aGUgc3BlY2lmaWVkIHByb2Nlc3MuDQojPg0KDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnUG93ZXJVcC5Ub2tlblByaXZpbGVnZScpXQ0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAwLCBWYWx1ZUZyb21QaXBlbGluZSA9ICRUcnVlLCBWYWx1ZUZyb21QaXBlbGluZUJ5UHJvcGVydHlOYW1lID0gJFRydWUpXQ0KICAgICAgICBbQWxpYXMoJ1Byb2Nlc3NJRCcpXQ0KICAgICAgICBbVUludDMyXQ0KICAgICAgICBbVmFsaWRhdGVOb3ROdWxsT3JFbXB0eSgpXQ0KICAgICAgICAkSWQsDQoNCiAgICAgICAgW1N3aXRjaF0NCiAgICAgICAgW0FsaWFzKCdQcml2aWxlZ2VkJyldDQogICAgICAgICRTcGVjaWFsDQogICAgKQ0KDQogICAgQkVHSU4gew0KICAgICAgICAkU3BlY2lhbFByaXZpbGVnZXMgPSBAKCdTZVNlY3VyaXR5UHJpdmlsZWdlJywgJ1NlVGFrZU93bmVyc2hpcFByaXZpbGVnZScsICdTZUxvYWREcml2ZXJQcml2aWxlZ2UnLCAnU2VCYWNrdXBQcml2aWxlZ2UnLCAnU2VSZXN0b3JlUHJpdmlsZWdlJywgJ1NlRGVidWdQcml2aWxlZ2UnLCAnU2VTeXN0ZW1FbnZpcm9ubWVudFByaXZpbGVnZScsICdTZUltcGVyc29uYXRlUHJpdmlsZWdlJywgJ1NlVGNiUHJpdmlsZWdlJykNCiAgICB9DQoNCiAgICBQUk9DRVNTIHsNCiAgICAgICAgaWYgKCRQU0JvdW5kUGFyYW1ldGVyc1snSWQnXSkgew0KICAgICAgICAgICAgJFByb2Nlc3NIYW5kbGUgPSAkS2VybmVsMzI6Ok9wZW5Qcm9jZXNzKDB4NDAwLCAkRmFsc2UsICRJZCk7JExhc3RFcnJvciA9IFtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0TGFzdFdpbjMyRXJyb3IoKQ0KICAgICAgICAgICAgaWYgKCRQcm9jZXNzSGFuZGxlIC1lcSAwKSB7DQogICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAoW0NvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uXSAkTGFzdEVycm9yKQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgJFByb2Nlc3NJRCA9ICRJZA0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgIyBvcGVuIHVwIGEgcHNldWRvIGhhbmRsZSB0byB0aGUgY3VycmVudCBwcm9jZXNzLSBkb24ndCBuZWVkIHRvIHdvcnJ5IGFib3V0IGNsb3NpbmcNCiAgICAgICAgICAgICRQcm9jZXNzSGFuZGxlID0gJEtlcm5lbDMyOjpHZXRDdXJyZW50UHJvY2VzcygpDQogICAgICAgICAgICAkUHJvY2Vzc0lEID0gJFBJRA0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCRQcm9jZXNzSGFuZGxlKSB7DQogICAgICAgICAgICBbSW50UHRyXSRoUHJvY1Rva2VuID0gW0ludFB0cl06Olplcm8NCiAgICAgICAgICAgICRUT0tFTl9RVUVSWSA9IDB4MDAwOA0KICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkQWR2YXBpMzI6Ok9wZW5Qcm9jZXNzVG9rZW4oJFByb2Nlc3NIYW5kbGUsICRUT0tFTl9RVUVSWSwgW3JlZl0kaFByb2NUb2tlbik7JExhc3RFcnJvciA9IFtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0TGFzdFdpbjMyRXJyb3IoKQ0KICAgICAgICAgICAgaWYgKCRTdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgR2V0LVRva2VuSW5mb3JtYXRpb24gLVRva2VuSGFuZGxlICRoUHJvY1Rva2VuIC1JbmZvcm1hdGlvbkNsYXNzICdQcml2aWxlZ2VzJyB8IEZvckVhY2gtT2JqZWN0IHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCRQU0JvdW5kUGFyYW1ldGVyc1snU3BlY2lhbCddKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJFNwZWNpYWxQcml2aWxlZ2VzIC1Db250YWlucyAkXy5Qcml2aWxlZ2UpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkXyB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdQcm9jZXNzSWQnICRQcm9jZXNzSUQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkXyB8IEFkZC1NZW1iZXIgQWxpYXNwcm9wZXJ0eSBOYW1lIFByb2Nlc3NJZA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRfDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkXyB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdQcm9jZXNzSWQnICRQcm9jZXNzSUQNCiAgICAgICAgICAgICAgICAgICAgICAgICRfDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nIChbQ29tcG9uZW50TW9kZWwuV2luMzJFeGNlcHRpb25dICRMYXN0RXJyb3IpDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmICgkUFNCb3VuZFBhcmFtZXRlcnNbJ0lkJ10pIHsNCiAgICAgICAgICAgICAgICAjIGNsb3NlIHRoZSBoYW5kbGUgaWYgd2UgdXNlZCBPcGVuUHJvY2VzcygpDQogICAgICAgICAgICAgICAgJE51bGwgPSAkS2VybmVsMzI6OkNsb3NlSGFuZGxlKCRQcm9jZXNzSGFuZGxlKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ0KDQoNCmZ1bmN0aW9uIEdldC1Qcm9jZXNzVG9rZW5UeXBlIHsNCjwjDQouU1lOT1BTSVMNCg0KUmV0dXJucyB0aGUgdG9rZW4gdHlwZSBhbmQgaW1wZXJzb25hdGlvbiBsZXZlbC4NCg0KQXV0aG9yOiBXaWxsIFNjaHJvZWRlciAoQGhhcm1qMHkpICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IFBTUmVmbGVjdCwgR2V0LVRva2VuSW5mb3JtYXRpb24gIA0KDQouREVTQ1JJUFRJT04NCg0KRmlyc3QsIGlmIGEgcHJvY2VzcyBJRCBpcyBwYXNzZWQsIHRoZW4gdGhlIHByb2Nlc3MgaXMgb3BlbmVkIHVzaW5nIE9wZW5Qcm9jZXNzKCksDQpvdGhlcndpc2UgR2V0Q3VycmVudFByb2Nlc3MoKSBpcyB1c2VkIHRvIG9wZW4gdXAgYSBwc2V1ZG9oYW5kbGUgdG8gdGhlIGN1cnJlbnQgcHJvY2Vzcy4NCk9wZW5Qcm9jZXNzVG9rZW4oKSBpcyB0aGVuIHVzZWQgdG8gZ2V0IGEgaGFuZGxlIHRvIHRoZSBzcGVjaWZpZWQgcHJvY2VzcyB0b2tlbi4gVGhlIHRva2VuDQppcyB0aGVuIHBhc3NlZCB0byBHZXQtVG9rZW5JbmZvcm1hdGlvbiB0byBxdWVyeSB0aGUgdHlwZSBhbmQgaW1wZXJzb25hdGlvbiBsZXZlbCBmb3IgdGhlDQpzcGVjaWZpZWQgdG9rZW4uDQoNCi5QQVJBTUVURVIgSWQNCg0KVGhlIHByb2Nlc3MgSUQgdG8gZW51bWVyYXRlIHRva2VuIGdyb3VwcyBmb3IsIG90aGVyd2lzZSBkZWZhdWx0cyB0byB0aGUgY3VycmVudCBwcm9jZXNzLg0KDQouRVhBTVBMRQ0KDQpHZXQtUHJvY2Vzc1Rva2VuVHlwZQ0KDQogICAgICAgICAgICAgICBUeXBlICBJbXBlcnNvbmF0aW9uTGV2ZWwgICAgICAgICBUb2tlbkhhbmRsZSAgICAgICAgICAgUHJvY2Vzc0lkDQogICAgICAgICAgICAgICAtLS0tICAtLS0tLS0tLS0tLS0tLS0tLS0gICAgICAgICAtLS0tLS0tLS0tLSAgICAgICAgICAgLS0tLS0tLS0tDQogICAgICAgICAgICBQcmltYXJ5ICAgICAgSWRlbnRpZmljYXRpb24gICAgICAgICAgICAgICAgIDg3MiAgICAgICAgICAgICAgICAzNjg0DQoNCg0KLkVYQU1QTEUNCg0KR2V0LVByb2Nlc3Mgbm90ZXBhZCB8IEdldC1Qcm9jZXNzVG9rZW5UeXBlIHwgZmwNCg0KVHlwZSAgICAgICAgICAgICAgIDogUHJpbWFyeQ0KSW1wZXJzb25hdGlvbkxldmVsIDogSWRlbnRpZmljYXRpb24NClRva2VuSGFuZGxlICAgICAgICA6IDEzNTYNClByb2Nlc3NJZCAgICAgICAgICA6IDIwNDQNCg0KLk9VVFBVVFMNCg0KUG93ZXJVcC5Ub2tlblR5cGUNCg0KT3V0cHV0cyBhIGN1c3RvbSBvYmplY3QgY29udGFpbmluZyB0aGUgdG9rZW4gdHlwZSBhbmQgaW1wZXJzb25hdGlvbiBsZXZlbCBmb3IgdGhlIHNwZWNpZmllZCBwcm9jZXNzLg0KIz4NCg0KICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU1Nob3VsZFByb2Nlc3MnLCAnJyldDQogICAgW091dHB1dFR5cGUoJ1Bvd2VyVXAuVG9rZW5UeXBlJyldDQogICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICBQYXJhbSgNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDAsIFZhbHVlRnJvbVBpcGVsaW5lID0gJFRydWUsIFZhbHVlRnJvbVBpcGVsaW5lQnlQcm9wZXJ0eU5hbWUgPSAkVHJ1ZSldDQogICAgICAgIFtBbGlhcygnUHJvY2Vzc0lEJyldDQogICAgICAgIFtVSW50MzJdDQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgICRJZA0KICAgICkNCg0KICAgIFBST0NFU1Mgew0KICAgICAgICBpZiAoJFBTQm91bmRQYXJhbWV0ZXJzWydJZCddKSB7DQogICAgICAgICAgICAkUHJvY2Vzc0hhbmRsZSA9ICRLZXJuZWwzMjo6T3BlblByb2Nlc3MoMHg0MDAsICRGYWxzZSwgJElkKTskTGFzdEVycm9yID0gW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpDQogICAgICAgICAgICBpZiAoJFByb2Nlc3NIYW5kbGUgLWVxIDApIHsNCiAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nIChbQ29tcG9uZW50TW9kZWwuV2luMzJFeGNlcHRpb25dICRMYXN0RXJyb3IpDQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAkUHJvY2Vzc0lEID0gJElkDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAjIG9wZW4gdXAgYSBwc2V1ZG8gaGFuZGxlIHRvIHRoZSBjdXJyZW50IHByb2Nlc3MtIGRvbid0IG5lZWQgdG8gd29ycnkgYWJvdXQgY2xvc2luZw0KICAgICAgICAgICAgJFByb2Nlc3NIYW5kbGUgPSAkS2VybmVsMzI6OkdldEN1cnJlbnRQcm9jZXNzKCkNCiAgICAgICAgICAgICRQcm9jZXNzSUQgPSAkUElEDQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJFByb2Nlc3NIYW5kbGUpIHsNCiAgICAgICAgICAgIFtJbnRQdHJdJGhQcm9jVG9rZW4gPSBbSW50UHRyXTo6WmVybw0KICAgICAgICAgICAgJFRPS0VOX1FVRVJZID0gMHgwMDA4DQogICAgICAgICAgICAkU3VjY2VzcyA9ICRBZHZhcGkzMjo6T3BlblByb2Nlc3NUb2tlbigkUHJvY2Vzc0hhbmRsZSwgJFRPS0VOX1FVRVJZLCBbcmVmXSRoUHJvY1Rva2VuKTskTGFzdEVycm9yID0gW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpDQoNCiAgICAgICAgICAgIGlmICgkU3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICRUb2tlblR5cGUgPSBHZXQtVG9rZW5JbmZvcm1hdGlvbiAtVG9rZW5IYW5kbGUgJGhQcm9jVG9rZW4gLUluZm9ybWF0aW9uQ2xhc3MgJ1R5cGUnDQogICAgICAgICAgICAgICAgJFRva2VuVHlwZSB8IEZvckVhY2gtT2JqZWN0IHsNCiAgICAgICAgICAgICAgICAgICAgJF8gfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnUHJvY2Vzc0lkJyAkUHJvY2Vzc0lEDQogICAgICAgICAgICAgICAgICAgICRfDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAoW0NvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uXSAkTGFzdEVycm9yKQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoJFBTQm91bmRQYXJhbWV0ZXJzWydJZCddKSB7DQogICAgICAgICAgICAgICAgIyBjbG9zZSB0aGUgaGFuZGxlIGlmIHdlIHVzZWQgT3BlblByb2Nlc3MoKQ0KICAgICAgICAgICAgICAgICROdWxsID0gJEtlcm5lbDMyOjpDbG9zZUhhbmRsZSgkUHJvY2Vzc0hhbmRsZSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCn0NCg0KDQpmdW5jdGlvbiBFbmFibGUtUHJpdmlsZWdlIHsNCjwjDQouU1lOT1BTSVMNCg0KRW5hYmxlcyBhIHNwZWNpZmljIHByaXZpbGVnZSBmb3IgdGhlIGN1cnJlbnQgcHJvY2Vzcy4NCg0KQXV0aG9yOiBXaWxsIFNjaHJvZWRlciAoQGhhcm1qMHkpICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IFBTUmVmbGVjdCAgDQoNCi5ERVNDUklQVElPTg0KDQpVc2VzIFJ0bEFkanVzdFByaXZpbGVnZSB0byBlbmFibGUgYSBzcGVjaWZpYyBwcml2aWxlZ2UgZm9yIHRoZSBjdXJyZW50IHByb2Nlc3MuDQpQcml2aWxlZ2VzIGNhbiBiZSBwYXNzZWQgYnkgc3RyaW5nLCBvciB0aGUgb3V0cHV0IGZyb20gR2V0LVByb2Nlc3NUb2tlblByaXZpbGVnZQ0KY2FuIGJlIHBhc3NlZCBvbiB0aGUgcGlwZWxpbmUuDQoNCi5FWEFNUExFDQoNCkdldC1Qcm9jZXNzVG9rZW5Qcml2aWxlZ2UNCg0KICAgICAgICAgICAgICAgICAgICBQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgIEF0dHJpYnV0ZXMgICAgICAgICAgICAgICAgICAgICBQcm9jZXNzSWQNCiAgICAgICAgICAgICAgICAgICAgLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAtLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgLS0tLS0tLS0tDQogICAgICAgICAgU2VTaHV0ZG93blByaXZpbGVnZSAgICAgICAgICAgICAgICAgICAgICBESVNBQkxFRCAgICAgICAgICAgICAgICAgICAgICAgICAgMzYyMA0KICAgICAgU2VDaGFuZ2VOb3RpZnlQcml2aWxlZ2UgLi4uQVVMVCwgU0VfUFJJVklMRUdFX0VOQUJMRUQgICAgICAgICAgICAgICAgICAgICAgICAgIDM2MjANCiAgICAgICAgICAgIFNlVW5kb2NrUHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICAgIERJU0FCTEVEICAgICAgICAgICAgICAgICAgICAgICAgICAzNjIwDQpTZUluY3JlYXNlV29ya2luZ1NldFByaXZpbGVnZSAgICAgICAgICAgICAgICAgICAgICBESVNBQkxFRCAgICAgICAgICAgICAgICAgICAgICAgICAgMzYyMA0KICAgICAgICAgIFNlVGltZVpvbmVQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQgICAgICAgICAgICAgICAgICAgICAgICAgIDM2MjANCg0KRW5hYmxlLVByaXZpbGVnZSBTZVNodXRkb3duUHJpdmlsZWdlDQoNCkdldC1Qcm9jZXNzVG9rZW5Qcml2aWxlZ2UNCg0KICAgICAgICAgICAgICAgICAgICBQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgIEF0dHJpYnV0ZXMgICAgICAgICAgICAgICAgICAgICBQcm9jZXNzSWQNCiAgICAgICAgICAgICAgICAgICAgLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAtLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgLS0tLS0tLS0tDQogICAgICAgICAgU2VTaHV0ZG93blByaXZpbGVnZSAgICAgICAgICBTRV9QUklWSUxFR0VfRU5BQkxFRCAgICAgICAgICAgICAgICAgICAgICAgICAgMzYyMA0KICAgICAgU2VDaGFuZ2VOb3RpZnlQcml2aWxlZ2UgLi4uQVVMVCwgU0VfUFJJVklMRUdFX0VOQUJMRUQgICAgICAgICAgICAgICAgICAgICAgICAgIDM2MjANCiAgICAgICAgICAgIFNlVW5kb2NrUHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICAgIERJU0FCTEVEICAgICAgICAgICAgICAgICAgICAgICAgICAzNjIwDQpTZUluY3JlYXNlV29ya2luZ1NldFByaXZpbGVnZSAgICAgICAgICAgICAgICAgICAgICBESVNBQkxFRCAgICAgICAgICAgICAgICAgICAgICAgICAgMzYyMA0KICAgICAgICAgIFNlVGltZVpvbmVQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQgICAgICAgICAgICAgICAgICAgICAgICAgIDM2MjANCg0KLkVYQU1QTEUNCg0KR2V0LVByb2Nlc3NUb2tlblByaXZpbGVnZQ0KDQpQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXR0cmlidXRlcyAgICAgICAgICAgICAgICAgICAgIFByb2Nlc3NJZA0KLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tLS0tLS0tLS0gICAgICAgICAgICAgICAgICAgICAtLS0tLS0tLS0NClNlU2h1dGRvd25Qcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERJU0FCTEVEICAgICAgICAgICAgICAgICAgICAgICAgICAyODI4DQpTZUNoYW5nZU5vdGlmeVByaXZpbGVnZSAgICAgICAuLi5BVUxULCBTRV9QUklWSUxFR0VfRU5BQkxFRCAgICAgICAgICAgICAgICAgICAgICAgICAgMjgyOA0KU2VVbmRvY2tQcml2aWxlZ2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRElTQUJMRUQgICAgICAgICAgICAgICAgICAgICAgICAgIDI4MjgNClNlSW5jcmVhc2VXb3JraW5nU2V0UHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICAgIERJU0FCTEVEICAgICAgICAgICAgICAgICAgICAgICAgICAyODI4DQpTZVRpbWVab25lUHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBESVNBQkxFRCAgICAgICAgICAgICAgICAgICAgICAgICAgMjgyOA0KDQoNCkdldC1Qcm9jZXNzVG9rZW5Qcml2aWxlZ2UgfCBFbmFibGUtUHJpdmlsZWdlIC1WZXJib3NlDQpWRVJCT1NFOiBBdHRlbXB0aW5nIHRvIGVuYWJsZSBTZVNodXRkb3duUHJpdmlsZWdlDQpWRVJCT1NFOiBBdHRlbXB0aW5nIHRvIGVuYWJsZSBTZUNoYW5nZU5vdGlmeVByaXZpbGVnZQ0KVkVSQk9TRTogQXR0ZW1wdGluZyB0byBlbmFibGUgU2VVbmRvY2tQcml2aWxlZ2UNClZFUkJPU0U6IEF0dGVtcHRpbmcgdG8gZW5hYmxlIFNlSW5jcmVhc2VXb3JraW5nU2V0UHJpdmlsZWdlDQpWRVJCT1NFOiBBdHRlbXB0aW5nIHRvIGVuYWJsZSBTZVRpbWVab25lUHJpdmlsZWdlDQoNCkdldC1Qcm9jZXNzVG9rZW5Qcml2aWxlZ2UNCg0KUHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEF0dHJpYnV0ZXMgICAgICAgICAgICAgICAgICAgICBQcm9jZXNzSWQNCi0tLS0tLS0tLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgLS0tLS0tLS0tDQpTZVNodXRkb3duUHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICBTRV9QUklWSUxFR0VfRU5BQkxFRCAgICAgICAgICAgICAgICAgICAgICAgICAgMjgyOA0KU2VDaGFuZ2VOb3RpZnlQcml2aWxlZ2UgICAgICAgLi4uQVVMVCwgU0VfUFJJVklMRUdFX0VOQUJMRUQgICAgICAgICAgICAgICAgICAgICAgICAgIDI4MjgNClNlVW5kb2NrUHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICAgIFNFX1BSSVZJTEVHRV9FTkFCTEVEICAgICAgICAgICAgICAgICAgICAgICAgICAyODI4DQpTZUluY3JlYXNlV29ya2luZ1NldFByaXZpbGVnZSAgICAgICAgICBTRV9QUklWSUxFR0VfRU5BQkxFRCAgICAgICAgICAgICAgICAgICAgICAgICAgMjgyOA0KU2VUaW1lWm9uZVByaXZpbGVnZSAgICAgICAgICAgICAgICAgICAgU0VfUFJJVklMRUdFX0VOQUJMRUQgICAgICAgICAgICAgICAgICAgICAgICAgIDI4MjgNCg0KLkxJTksNCg0KaHR0cDovL2ZvcnVtLnN5c2ludGVybmFscy5jb20vdGlwLWVhc3ktd2F5LXRvLWVuYWJsZS1wcml2aWxlZ2VzX3RvcGljMTU3NDUuaHRtbA0KIz4NCg0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAwLCBNYW5kYXRvcnkgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmUgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmVCeVByb3BlcnR5TmFtZSA9ICRUcnVlKV0NCiAgICAgICAgW0FsaWFzKCdQcml2aWxlZ2VzJyldDQogICAgICAgIFtWYWxpZGF0ZVNldCgnU2VDcmVhdGVUb2tlblByaXZpbGVnZScsICdTZUFzc2lnblByaW1hcnlUb2tlblByaXZpbGVnZScsICdTZUxvY2tNZW1vcnlQcml2aWxlZ2UnLCAnU2VJbmNyZWFzZVF1b3RhUHJpdmlsZWdlJywgJ1NlVW5zb2xpY2l0ZWRJbnB1dFByaXZpbGVnZScsICdTZU1hY2hpbmVBY2NvdW50UHJpdmlsZWdlJywgJ1NlVGNiUHJpdmlsZWdlJywgJ1NlU2VjdXJpdHlQcml2aWxlZ2UnLCAnU2VUYWtlT3duZXJzaGlwUHJpdmlsZWdlJywgJ1NlTG9hZERyaXZlclByaXZpbGVnZScsICdTZVN5c3RlbVByb2ZpbGVQcml2aWxlZ2UnLCAnU2VTeXN0ZW10aW1lUHJpdmlsZWdlJywgJ1NlUHJvZmlsZVNpbmdsZVByb2Nlc3NQcml2aWxlZ2UnLCAnU2VJbmNyZWFzZUJhc2VQcmlvcml0eVByaXZpbGVnZScsICdTZUNyZWF0ZVBhZ2VmaWxlUHJpdmlsZWdlJywgJ1NlQ3JlYXRlUGVybWFuZW50UHJpdmlsZWdlJywgJ1NlQmFja3VwUHJpdmlsZWdlJywgJ1NlUmVzdG9yZVByaXZpbGVnZScsICdTZVNodXRkb3duUHJpdmlsZWdlJywgJ1NlRGVidWdQcml2aWxlZ2UnLCAnU2VBdWRpdFByaXZpbGVnZScsICdTZVN5c3RlbUVudmlyb25tZW50UHJpdmlsZWdlJywgJ1NlQ2hhbmdlTm90aWZ5UHJpdmlsZWdlJywgJ1NlUmVtb3RlU2h1dGRvd25Qcml2aWxlZ2UnLCAnU2VVbmRvY2tQcml2aWxlZ2UnLCAnU2VTeW5jQWdlbnRQcml2aWxlZ2UnLCAnU2VFbmFibGVEZWxlZ2F0aW9uUHJpdmlsZWdlJywgJ1NlTWFuYWdlVm9sdW1lUHJpdmlsZWdlJywgJ1NlSW1wZXJzb25hdGVQcml2aWxlZ2UnLCAnU2VDcmVhdGVHbG9iYWxQcml2aWxlZ2UnLCAnU2VUcnVzdGVkQ3JlZE1hbkFjY2Vzc1ByaXZpbGVnZScsICdTZVJlbGFiZWxQcml2aWxlZ2UnLCAnU2VJbmNyZWFzZVdvcmtpbmdTZXRQcml2aWxlZ2UnLCAnU2VUaW1lWm9uZVByaXZpbGVnZScsICdTZUNyZWF0ZVN5bWJvbGljTGlua1ByaXZpbGVnZScpXQ0KICAgICAgICBbU3RyaW5nW11dDQogICAgICAgICRQcml2aWxlZ2UNCiAgICApDQoNCiAgICBQUk9DRVNTIHsNCiAgICAgICAgRm9yRWFjaCAoJFByaXYgaW4gJFByaXZpbGVnZSkgew0KICAgICAgICAgICAgW1VJbnQzMl0kUHJldmlvdXNTdGF0ZSA9IDANCiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkF0dGVtcHRpbmcgdG8gZW5hYmxlICRQcml2Ig0KICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkTlREbGw6OlJ0bEFkanVzdFByaXZpbGVnZSgkU2VjdXJpdHlFbnRpdHk6OiRQcml2LCAkVHJ1ZSwgJEZhbHNlLCBbcmVmXSRQcmV2aW91c1N0YXRlKQ0KICAgICAgICAgICAgaWYgKCRTdWNjZXNzIC1uZSAwKSB7DQogICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiUnRsQWRqdXN0UHJpdmlsZWdlIGZvciAkUHJpdiBmYWlsZWQ6ICRTdWNjZXNzIg0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ0KDQoNCmZ1bmN0aW9uIEFkZC1TZXJ2aWNlRGFjbCB7DQo8Iw0KLlNZTk9QU0lTDQoNCkFkZHMgYSBEYWNsIGZpZWxkIHRvIGEgc2VydmljZSBvYmplY3QgcmV0dXJuZWQgYnkgR2V0LVNlcnZpY2UuDQoNCkF1dGhvcjogTWF0dGhldyBHcmFlYmVyIChAbWF0dGlmZXN0YXRpb24pICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IFBTUmVmbGVjdCAgDQoNCi5ERVNDUklQVElPTg0KDQpUYWtlcyBvbmUgb3IgbW9yZSBTZXJ2aWNlUHJvY2Vzcy5TZXJ2aWNlQ29udHJvbGxlciBvYmplY3RzIG9uIHRoZSBwaXBlbGluZSBhbmQgYWRkcyBhDQpEYWNsIGZpZWxkIHRvIGVhY2ggb2JqZWN0LiBJdCBkb2VzIHRoaXMgYnkgb3BlbmluZyBhIGhhbmRsZSB3aXRoIFJlYWRDb250cm9sIGZvciB0aGUNCnNlcnZpY2Ugd2l0aCB1c2luZyB0aGUgR2V0U2VydmljZUhhbmRsZSBXaW4zMiBBUEkgY2FsbCBhbmQgdGhlbiB1c2VzDQpRdWVyeVNlcnZpY2VPYmplY3RTZWN1cml0eSB0byByZXRyaWV2ZSBhIGNvcHkgb2YgdGhlIHNlY3VyaXR5IGRlc2NyaXB0b3IgZm9yIHRoZSBzZXJ2aWNlLg0KDQouUEFSQU1FVEVSIE5hbWUNCg0KQW4gYXJyYXkgb2Ygb25lIG9yIG1vcmUgc2VydmljZSBuYW1lcyB0byBhZGQgYSBzZXJ2aWNlIERhY2wgZm9yLiBQYXNzYWJsZSBvbiB0aGUgcGlwZWxpbmUuDQoNCi5FWEFNUExFDQoNCkdldC1TZXJ2aWNlIHwgQWRkLVNlcnZpY2VEYWNsDQoNCkFkZCBEYWNscyBmb3IgZXZlcnkgc2VydmljZSB0aGUgY3VycmVudCB1c2VyIGNhbiByZWFkLg0KDQouRVhBTVBMRQ0KDQpHZXQtU2VydmljZSAtTmFtZSBWTVRvb2xzIHwgQWRkLVNlcnZpY2VEYWNsDQoNCkFkZCB0aGUgRGFjbCB0byB0aGUgVk1Ub29scyBzZXJ2aWNlIG9iamVjdC4NCg0KLk9VVFBVVFMNCg0KU2VydmljZVByb2Nlc3MuU2VydmljZUNvbnRyb2xsZXINCg0KLkxJTksNCg0KaHR0cHM6Ly9yb2huc3Bvd2Vyc2hlbGxibG9nLndvcmRwcmVzcy5jb20vMjAxMy8wMy8xOS92aWV3aW5nLXNlcnZpY2UtYWNscy8NCiM+DQoNCiAgICBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNTaG91bGRQcm9jZXNzJywgJycpXQ0KICAgIFtPdXRwdXRUeXBlKCdTZXJ2aWNlUHJvY2Vzcy5TZXJ2aWNlQ29udHJvbGxlcicpXQ0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAwLCBNYW5kYXRvcnkgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmUgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmVCeVByb3BlcnR5TmFtZSA9ICRUcnVlKV0NCiAgICAgICAgW0FsaWFzKCdTZXJ2aWNlTmFtZScpXQ0KICAgICAgICBbU3RyaW5nW11dDQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgICROYW1lDQogICAgKQ0KDQogICAgQkVHSU4gew0KICAgICAgICBmaWx0ZXIgTG9jYWw6R2V0LVNlcnZpY2VSZWFkQ29udHJvbEhhbmRsZSB7DQogICAgICAgICAgICBbT3V0cHV0VHlwZShbSW50UHRyXSldDQogICAgICAgICAgICBQYXJhbSgNCiAgICAgICAgICAgICAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeSA9ICRUcnVlLCBWYWx1ZUZyb21QaXBlbGluZSA9ICRUcnVlKV0NCiAgICAgICAgICAgICAgICBbVmFsaWRhdGVOb3ROdWxsT3JFbXB0eSgpXQ0KICAgICAgICAgICAgICAgIFtWYWxpZGF0ZVNjcmlwdCh7ICRfIC1hcyAnU2VydmljZVByb2Nlc3MuU2VydmljZUNvbnRyb2xsZXInIH0pXQ0KICAgICAgICAgICAgICAgICRTZXJ2aWNlDQogICAgICAgICAgICApDQoNCiAgICAgICAgICAgICRHZXRTZXJ2aWNlSGFuZGxlID0gW1NlcnZpY2VQcm9jZXNzLlNlcnZpY2VDb250cm9sbGVyXS5HZXRNZXRob2QoJ0dldFNlcnZpY2VIYW5kbGUnLCBbUmVmbGVjdGlvbi5CaW5kaW5nRmxhZ3NdICdJbnN0YW5jZSwgTm9uUHVibGljJykNCiAgICAgICAgICAgICRSZWFkQ29udHJvbCA9IDB4MDAwMjAwMDANCiAgICAgICAgICAgICRSYXdIYW5kbGUgPSAkR2V0U2VydmljZUhhbmRsZS5JbnZva2UoJFNlcnZpY2UsIEAoJFJlYWRDb250cm9sKSkNCiAgICAgICAgICAgICRSYXdIYW5kbGUNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIFBST0NFU1Mgew0KICAgICAgICBGb3JFYWNoKCRTZXJ2aWNlTmFtZSBpbiAkTmFtZSkgew0KDQogICAgICAgICAgICAkSW5kaXZpZHVhbFNlcnZpY2UgPSBHZXQtU2VydmljZSAtTmFtZSAkU2VydmljZU5hbWUgLUVycm9yQWN0aW9uIFN0b3ANCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJBZGQtU2VydmljZURhY2wgSW5kaXZpZHVhbFNlcnZpY2UgOiAkKCRJbmRpdmlkdWFsU2VydmljZS5OYW1lKSINCiAgICAgICAgICAgICAgICAkU2VydmljZUhhbmRsZSA9IEdldC1TZXJ2aWNlUmVhZENvbnRyb2xIYW5kbGUgLVNlcnZpY2UgJEluZGl2aWR1YWxTZXJ2aWNlDQogICAgICAgICAgICB9DQogICAgICAgICAgICBjYXRjaCB7DQogICAgICAgICAgICAgICAgJFNlcnZpY2VIYW5kbGUgPSAkTnVsbA0KICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkVycm9yIG9wZW5pbmcgdXAgdGhlIHNlcnZpY2UgaGFuZGxlIHdpdGggcmVhZCBjb250cm9sIGZvciAkKCRJbmRpdmlkdWFsU2VydmljZS5OYW1lKSA6ICRfIg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoJFNlcnZpY2VIYW5kbGUgLWFuZCAoJFNlcnZpY2VIYW5kbGUgLW5lIFtJbnRQdHJdOjpaZXJvKSkgew0KICAgICAgICAgICAgICAgICRTaXplTmVlZGVkID0gMA0KDQogICAgICAgICAgICAgICAgJFJlc3VsdCA9ICRBZHZhcGkzMjo6UXVlcnlTZXJ2aWNlT2JqZWN0U2VjdXJpdHkoJFNlcnZpY2VIYW5kbGUsIFtTZWN1cml0eS5BY2Nlc3NDb250cm9sLlNlY3VyaXR5SW5mb3NdOjpEaXNjcmV0aW9uYXJ5QWNsLCBAKCksIDAsIFtSZWZdICRTaXplTmVlZGVkKTskTGFzdEVycm9yID0gW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpDQoNCiAgICAgICAgICAgICAgICAjIDEyMiA9PSBUaGUgZGF0YSBhcmVhIHBhc3NlZCB0byBhIHN5c3RlbSBjYWxsIGlzIHRvbyBzbWFsbA0KICAgICAgICAgICAgICAgIGlmICgoLW5vdCAkUmVzdWx0KSAtYW5kICgkTGFzdEVycm9yIC1lcSAxMjIpIC1hbmQgKCRTaXplTmVlZGVkIC1ndCAwKSkgew0KICAgICAgICAgICAgICAgICAgICAkQmluYXJ5U2VjdXJpdHlEZXNjcmlwdG9yID0gTmV3LU9iamVjdCBCeXRlW10oJFNpemVOZWVkZWQpDQoNCiAgICAgICAgICAgICAgICAgICAgJFJlc3VsdCA9ICRBZHZhcGkzMjo6UXVlcnlTZXJ2aWNlT2JqZWN0U2VjdXJpdHkoJFNlcnZpY2VIYW5kbGUsIFtTZWN1cml0eS5BY2Nlc3NDb250cm9sLlNlY3VyaXR5SW5mb3NdOjpEaXNjcmV0aW9uYXJ5QWNsLCAkQmluYXJ5U2VjdXJpdHlEZXNjcmlwdG9yLCAkQmluYXJ5U2VjdXJpdHlEZXNjcmlwdG9yLkNvdW50LCBbUmVmXSAkU2l6ZU5lZWRlZCk7JExhc3RFcnJvciA9IFtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0TGFzdFdpbjMyRXJyb3IoKQ0KDQogICAgICAgICAgICAgICAgICAgIGlmICgtbm90ICRSZXN1bHQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFdyaXRlLUVycm9yIChbQ29tcG9uZW50TW9kZWwuV2luMzJFeGNlcHRpb25dICRMYXN0RXJyb3IpDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkUmF3U2VjdXJpdHlEZXNjcmlwdG9yID0gTmV3LU9iamVjdCBTZWN1cml0eS5BY2Nlc3NDb250cm9sLlJhd1NlY3VyaXR5RGVzY3JpcHRvciAtQXJndW1lbnRMaXN0ICRCaW5hcnlTZWN1cml0eURlc2NyaXB0b3IsIDANCiAgICAgICAgICAgICAgICAgICAgICAgICREYWNsID0gJFJhd1NlY3VyaXR5RGVzY3JpcHRvci5EaXNjcmV0aW9uYXJ5QWNsIHwgRm9yRWFjaC1PYmplY3Qgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFkZC1NZW1iZXIgLUlucHV0T2JqZWN0ICRfIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBBY2Nlc3NSaWdodHMgLVZhbHVlICgkXy5BY2Nlc3NNYXNrIC1hcyAkU2VydmljZUFjY2Vzc1JpZ2h0cykgLVBhc3NUaHJ1DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBBZGQtTWVtYmVyIC1JbnB1dE9iamVjdCAkSW5kaXZpZHVhbFNlcnZpY2UgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIERhY2wgLVZhbHVlICREYWNsIC1QYXNzVGhydQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBXcml0ZS1FcnJvciAoW0NvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uXSAkTGFzdEVycm9yKQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAkTnVsbCA9ICRBZHZhcGkzMjo6Q2xvc2VTZXJ2aWNlSGFuZGxlKCRTZXJ2aWNlSGFuZGxlKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ0KDQoNCmZ1bmN0aW9uIFNldC1TZXJ2aWNlQmluYXJ5UGF0aCB7DQo8Iw0KLlNZTk9QU0lTDQoNClNldHMgdGhlIGJpbmFyeSBwYXRoIGZvciBhIHNlcnZpY2UgdG8gYSBzcGVjaWZpZWQgdmFsdWUuDQoNCkF1dGhvcjogV2lsbCBTY2hyb2VkZXIgKEBoYXJtajB5KSwgTWF0dGhldyBHcmFlYmVyIChAbWF0dGlmZXN0YXRpb24pICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IFBTUmVmbGVjdCAgDQoNCi5ERVNDUklQVElPTg0KDQpUYWtlcyBhIHNlcnZpY2UgTmFtZSBvciBhIFNlcnZpY2VQcm9jZXNzLlNlcnZpY2VDb250cm9sbGVyIG9uIHRoZSBwaXBlbGluZSBhbmQgZmlyc3Qgb3BlbnMgdXAgYQ0Kc2VydmljZSBoYW5kbGUgdG8gdGhlIHNlcnZpY2Ugd2l0aCBDb25maWdDb250cm9sIGFjY2VzcyB1c2luZyB0aGUgR2V0U2VydmljZUhhbmRsZQ0KV2luMzIgQVBJIGNhbGwuIENoYW5nZVNlcnZpY2VDb25maWcgaXMgdGhlbiB1c2VkIHRvIHNldCB0aGUgYmluYXJ5IHBhdGggKGxwQmluYXJ5UGF0aE5hbWUvYmluUGF0aCkNCnRvIHRoZSBzdHJpbmcgdmFsdWUgc3BlY2lmaWVkIGJ5IGJpblBhdGgsIGFuZCB0aGUgaGFuZGxlIGlzIGNsb3NlZCBvZmYuDQoNClRha2VzIG9uZSBvciBtb3JlIFNlcnZpY2VQcm9jZXNzLlNlcnZpY2VDb250cm9sbGVyIG9iamVjdHMgb24gdGhlIHBpcGVsaW5lIGFuZCBhZGRzIGENCkRhY2wgZmllbGQgdG8gZWFjaCBvYmplY3QuIEl0IGRvZXMgdGhpcyBieSBvcGVuaW5nIGEgaGFuZGxlIHdpdGggUmVhZENvbnRyb2wgZm9yIHRoZQ0Kc2VydmljZSB3aXRoIHVzaW5nIHRoZSBHZXRTZXJ2aWNlSGFuZGxlIFdpbjMyIEFQSSBjYWxsIGFuZCB0aGVuIHVzZXMNClF1ZXJ5U2VydmljZU9iamVjdFNlY3VyaXR5IHRvIHJldHJpZXZlIGEgY29weSBvZiB0aGUgc2VjdXJpdHkgZGVzY3JpcHRvciBmb3IgdGhlIHNlcnZpY2UuDQoNCi5QQVJBTUVURVIgTmFtZQ0KDQpBbiBhcnJheSBvZiBvbmUgb3IgbW9yZSBzZXJ2aWNlIG5hbWVzIHRvIHNldCB0aGUgYmluYXJ5IHBhdGggZm9yLiBSZXF1aXJlZC4NCg0KLlBBUkFNRVRFUiBQYXRoDQoNClRoZSBuZXcgYmluYXJ5IHBhdGggKGxwQmluYXJ5UGF0aE5hbWUpIHRvIHNldCBmb3IgdGhlIHNwZWNpZmllZCBzZXJ2aWNlLiBSZXF1aXJlZC4NCg0KLkVYQU1QTEUNCg0KU2V0LVNlcnZpY2VCaW5hcnlQYXRoIC1OYW1lIFZ1bG5TdmMgLVBhdGggJ25ldCB1c2VyIGpvaG4gUGFzc3dvcmQxMjMhIC9hZGQnDQoNClNldHMgdGhlIGJpbmFyeSBwYXRoIGZvciAnVnVsblN2YycgdG8gYmUgYSBjb21tYW5kIHRvIGFkZCBhIHVzZXIuDQoNCi5FWEFNUExFDQoNCkdldC1TZXJ2aWNlIFZ1bG5TdmMgfCBTZXQtU2VydmljZUJpbmFyeVBhdGggLVBhdGggJ25ldCB1c2VyIGpvaG4gUGFzc3dvcmQxMjMhIC9hZGQnDQoNClNldHMgdGhlIGJpbmFyeSBwYXRoIGZvciAnVnVsblN2YycgdG8gYmUgYSBjb21tYW5kIHRvIGFkZCBhIHVzZXIuDQoNCi5PVVRQVVRTDQoNClN5c3RlbS5Cb29sZWFuDQoNCiRUcnVlIGlmIGNvbmZpZ3VyYXRpb24gc3VjY2VlZHMsICRGYWxzZSBvdGhlcndpc2UuDQoNCi5MSU5LDQoNCmh0dHBzOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvd2luZG93cy9kZXNrdG9wL21zNjgxOTg3KHY9dnMuODUpLmFzcHgNCiM+DQoNCiAgICBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNVc2VTaG91bGRQcm9jZXNzRm9yU3RhdGVDaGFuZ2luZ0Z1bmN0aW9ucycsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnU3lzdGVtLkJvb2xlYW4nKV0NCiAgICBbQ21kbGV0QmluZGluZygpXQ0KICAgIFBhcmFtKA0KICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJFRydWUsIFZhbHVlRnJvbVBpcGVsaW5lID0gJFRydWUsIFZhbHVlRnJvbVBpcGVsaW5lQnlQcm9wZXJ0eU5hbWUgPSAkVHJ1ZSldDQogICAgICAgIFtBbGlhcygnU2VydmljZU5hbWUnKV0NCiAgICAgICAgW1N0cmluZ1tdXQ0KICAgICAgICBbVmFsaWRhdGVOb3ROdWxsT3JFbXB0eSgpXQ0KICAgICAgICAkTmFtZSwNCg0KICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uPTEsIE1hbmRhdG9yeSA9ICRUcnVlKV0NCiAgICAgICAgW0FsaWFzKCdCaW5hcnlQYXRoJywgJ2JpblBhdGgnKV0NCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0NCiAgICAgICAgJFBhdGgNCiAgICApDQoNCiAgICBCRUdJTiB7DQogICAgICAgIGZpbHRlciBMb2NhbDpHZXQtU2VydmljZUNvbmZpZ0NvbnRyb2xIYW5kbGUgew0KICAgICAgICAgICAgW091dHB1dFR5cGUoW0ludFB0cl0pXQ0KICAgICAgICAgICAgUGFyYW0oDQogICAgICAgICAgICAgICAgW1BhcmFtZXRlcihNYW5kYXRvcnkgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmUgPSAkVHJ1ZSldDQogICAgICAgICAgICAgICAgW1NlcnZpY2VQcm9jZXNzLlNlcnZpY2VDb250cm9sbGVyXQ0KICAgICAgICAgICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgICAgICAgICAgJFRhcmdldFNlcnZpY2UNCiAgICAgICAgICAgICkNCiAgICAgICAgICAgICRHZXRTZXJ2aWNlSGFuZGxlID0gW1NlcnZpY2VQcm9jZXNzLlNlcnZpY2VDb250cm9sbGVyXS5HZXRNZXRob2QoJ0dldFNlcnZpY2VIYW5kbGUnLCBbUmVmbGVjdGlvbi5CaW5kaW5nRmxhZ3NdICdJbnN0YW5jZSwgTm9uUHVibGljJykNCiAgICAgICAgICAgICRDb25maWdDb250cm9sID0gMHgwMDAwMDAwMg0KICAgICAgICAgICAgJFJhd0hhbmRsZSA9ICRHZXRTZXJ2aWNlSGFuZGxlLkludm9rZSgkVGFyZ2V0U2VydmljZSwgQCgkQ29uZmlnQ29udHJvbCkpDQogICAgICAgICAgICAkUmF3SGFuZGxlDQogICAgICAgIH0NCiAgICB9DQoNCiAgICBQUk9DRVNTIHsNCg0KICAgICAgICBGb3JFYWNoKCRJbmRpdmlkdWFsU2VydmljZSBpbiAkTmFtZSkgew0KDQogICAgICAgICAgICAkVGFyZ2V0U2VydmljZSA9IEdldC1TZXJ2aWNlIC1OYW1lICRJbmRpdmlkdWFsU2VydmljZSAtRXJyb3JBY3Rpb24gU3RvcA0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAkU2VydmljZUhhbmRsZSA9IEdldC1TZXJ2aWNlQ29uZmlnQ29udHJvbEhhbmRsZSAtVGFyZ2V0U2VydmljZSAkVGFyZ2V0U2VydmljZQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgY2F0Y2ggew0KICAgICAgICAgICAgICAgICRTZXJ2aWNlSGFuZGxlID0gJE51bGwNCiAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJFcnJvciBvcGVuaW5nIHVwIHRoZSBzZXJ2aWNlIGhhbmRsZSB3aXRoIHJlYWQgY29udHJvbCBmb3IgJEluZGl2aWR1YWxTZXJ2aWNlIDogJF8iDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmICgkU2VydmljZUhhbmRsZSAtYW5kICgkU2VydmljZUhhbmRsZSAtbmUgW0ludFB0cl06Olplcm8pKSB7DQoNCiAgICAgICAgICAgICAgICAkU0VSVklDRV9OT19DSEFOR0UgPSBbVUludDMyXTo6TWF4VmFsdWUNCiAgICAgICAgICAgICAgICAkUmVzdWx0ID0gJEFkdmFwaTMyOjpDaGFuZ2VTZXJ2aWNlQ29uZmlnKCRTZXJ2aWNlSGFuZGxlLCAkU0VSVklDRV9OT19DSEFOR0UsICRTRVJWSUNFX05PX0NIQU5HRSwgJFNFUlZJQ0VfTk9fQ0hBTkdFLCAiJFBhdGgiLCBbSW50UHRyXTo6WmVybywgW0ludFB0cl06Olplcm8sIFtJbnRQdHJdOjpaZXJvLCBbSW50UHRyXTo6WmVybywgW0ludFB0cl06Olplcm8sIFtJbnRQdHJdOjpaZXJvKTskTGFzdEVycm9yID0gW1J1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpDQoNCiAgICAgICAgICAgICAgICBpZiAoJFJlc3VsdCAtbmUgMCkgew0KICAgICAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJiaW5QYXRoIGZvciAkSW5kaXZpZHVhbFNlcnZpY2Ugc3VjY2Vzc2Z1bGx5IHNldCB0byAnJFBhdGgnIg0KICAgICAgICAgICAgICAgICAgICAkVHJ1ZQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgV3JpdGUtRXJyb3IgKFtDb21wb25lbnRNb2RlbC5XaW4zMkV4Y2VwdGlvbl0gJExhc3RFcnJvcikNCiAgICAgICAgICAgICAgICAgICAgJE51bGwNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAkTnVsbCA9ICRBZHZhcGkzMjo6Q2xvc2VTZXJ2aWNlSGFuZGxlKCRTZXJ2aWNlSGFuZGxlKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ0KDQoNCmZ1bmN0aW9uIFRlc3QtU2VydmljZURhY2xQZXJtaXNzaW9uIHsNCjwjDQouU1lOT1BTSVMNCg0KVGVzdHMgb25lIG9yIG1vcmUgcGFzc2VkIHNlcnZpY2VzIG9yIHNlcnZpY2UgbmFtZXMgYWdhaW5zdCBhIGdpdmVuIHBlcm1pc3Npb24gc2V0LA0KcmV0dXJuaW5nIHRoZSBzZXJ2aWNlIG9iamVjdHMgd2hlcmUgdGhlIGN1cnJlbnQgdXNlciBoYXZlIHRoZSBzcGVjaWZpZWQgcGVybWlzc2lvbnMuDQoNCkF1dGhvcjogV2lsbCBTY2hyb2VkZXIgKEBoYXJtajB5KSwgTWF0dGhldyBHcmFlYmVyIChAbWF0dGlmZXN0YXRpb24pICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IEFkZC1TZXJ2aWNlRGFjbCAgDQoNCi5ERVNDUklQVElPTg0KDQpUYWtlcyBhIHNlcnZpY2UgTmFtZSBvciBhIFNlcnZpY2VQcm9jZXNzLlNlcnZpY2VDb250cm9sbGVyIG9uIHRoZSBwaXBlbGluZSwgYW5kIGZpcnN0IGFkZHMNCmEgc2VydmljZSBEYWNsIHRvIHRoZSBzZXJ2aWNlIG9iamVjdCB3aXRoIEFkZC1TZXJ2aWNlRGFjbC4gQWxsIGdyb3VwIFNJRHMgZm9yIHRoZSBjdXJyZW50DQp1c2VyIGFyZSBlbnVtZXJhdGVkIHNlcnZpY2VzIHdoZXJlIHRoZSB1c2VyIGhhcyBzb21lIHR5cGUgb2YgcGVybWlzc2lvbiBhcmUgZmlsdGVyZWQuIFRoZQ0Kc2VydmljZXMgYXJlIHRoZW4gZmlsdGVyZWQgYWdhaW5zdCBhIHNwZWNpZmllZCBzZXQgb2YgcGVybWlzc2lvbnMsIGFuZCBzZXJ2aWNlcyB3aGVyZSB0aGUNCmN1cnJlbnQgdXNlciBoYXZlIHRoZSBzcGVjaWZpZWQgcGVybWlzc2lvbnMgYXJlIHJldHVybmVkLg0KDQouUEFSQU1FVEVSIE5hbWUNCg0KQW4gYXJyYXkgb2Ygb25lIG9yIG1vcmUgc2VydmljZSBuYW1lcyB0byB0ZXN0IGFnYWluc3QgdGhlIHNwZWNpZmllZCBwZXJtaXNzaW9uIHNldC4NCg0KLlBBUkFNRVRFUiBQZXJtaXNzaW9ucw0KDQpBIG1hbnVhbCBzZXQgb2YgcGVybWlzc2lvbiB0byB0ZXN0IGFnYWluLiBPbmUgb2Y6J1F1ZXJ5Q29uZmlnJywgJ0NoYW5nZUNvbmZpZycsICdRdWVyeVN0YXR1cycsDQonRW51bWVyYXRlRGVwZW5kZW50cycsICdTdGFydCcsICdTdG9wJywgJ1BhdXNlQ29udGludWUnLCAnSW50ZXJyb2dhdGUnLCBVc2VyRGVmaW5lZENvbnRyb2wnLA0KJ0RlbGV0ZScsICdSZWFkQ29udHJvbCcsICdXcml0ZURhYycsICdXcml0ZU93bmVyJywgJ1N5bmNocm9uaXplJywgJ0FjY2Vzc1N5c3RlbVNlY3VyaXR5JywNCidHZW5lcmljQWxsJywgJ0dlbmVyaWNFeGVjdXRlJywgJ0dlbmVyaWNXcml0ZScsICdHZW5lcmljUmVhZCcsICdBbGxBY2Nlc3MnDQoNCi5QQVJBTUVURVIgUGVybWlzc2lvblNldA0KDQpBIHByZS1kZWZpbmVkIHBlcm1pc3Npb24gc2V0IHRvIHRlc3QgYSBzcGVjaWZpZWQgc2VydmljZSBhZ2FpbnN0LiAnQ2hhbmdlQ29uZmlnJywgJ1Jlc3RhcnQnLCBvciAnQWxsQWNjZXNzJy4NCg0KLkVYQU1QTEUNCg0KR2V0LVNlcnZpY2UgfCBUZXN0LVNlcnZpY2VEYWNsUGVybWlzc2lvbg0KDQpSZXR1cm4gYWxsIHNlcnZpY2Ugb2JqZWN0cyB3aGVyZSB0aGUgY3VycmVudCB1c2VyIGNhbiBtb2RpZnkgdGhlIHNlcnZpY2UgY29uZmlndXJhdGlvbi4NCg0KLkVYQU1QTEUNCg0KR2V0LVNlcnZpY2UgfCBUZXN0LVNlcnZpY2VEYWNsUGVybWlzc2lvbiAtUGVybWlzc2lvblNldCAnUmVzdGFydCcNCg0KUmV0dXJuIGFsbCBzZXJ2aWNlIG9iamVjdHMgdGhhdCB0aGUgY3VycmVudCB1c2VyIGNhbiByZXN0YXJ0Lg0KDQouRVhBTVBMRQ0KDQpUZXN0LVNlcnZpY2VEYWNsUGVybWlzc2lvbiAtUGVybWlzc2lvbnMgJ1N0YXJ0JyAtTmFtZSAnVnVsblNWQycNCg0KUmV0dXJuIHRoZSBWdWxuU1ZDIG9iamVjdCBpZiB0aGUgY3VycmVudCB1c2VyIGhhcyBzdGFydCBwZXJtaXNzaW9ucy4NCg0KLk9VVFBVVFMNCg0KU2VydmljZVByb2Nlc3MuU2VydmljZUNvbnRyb2xsZXINCg0KLkxJTksNCg0KaHR0cHM6Ly9yb2huc3Bvd2Vyc2hlbGxibG9nLndvcmRwcmVzcy5jb20vMjAxMy8wMy8xOS92aWV3aW5nLXNlcnZpY2UtYWNscy8NCiM+DQoNCiAgICBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNTaG91bGRQcm9jZXNzJywgJycpXQ0KICAgIFtPdXRwdXRUeXBlKCdTZXJ2aWNlUHJvY2Vzcy5TZXJ2aWNlQ29udHJvbGxlcicpXQ0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAwLCBNYW5kYXRvcnkgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmUgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmVCeVByb3BlcnR5TmFtZSA9ICRUcnVlKV0NCiAgICAgICAgW0FsaWFzKCdTZXJ2aWNlTmFtZScsICdTZXJ2aWNlJyldDQogICAgICAgIFtTdHJpbmdbXV0NCiAgICAgICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0NCiAgICAgICAgJE5hbWUsDQoNCiAgICAgICAgW1N0cmluZ1tdXQ0KICAgICAgICBbVmFsaWRhdGVTZXQoJ1F1ZXJ5Q29uZmlnJywgJ0NoYW5nZUNvbmZpZycsICdRdWVyeVN0YXR1cycsICdFbnVtZXJhdGVEZXBlbmRlbnRzJywgJ1N0YXJ0JywgJ1N0b3AnLCAnUGF1c2VDb250aW51ZScsICdJbnRlcnJvZ2F0ZScsICdVc2VyRGVmaW5lZENvbnRyb2wnLCAnRGVsZXRlJywgJ1JlYWRDb250cm9sJywgJ1dyaXRlRGFjJywgJ1dyaXRlT3duZXInLCAnU3luY2hyb25pemUnLCAnQWNjZXNzU3lzdGVtU2VjdXJpdHknLCAnR2VuZXJpY0FsbCcsICdHZW5lcmljRXhlY3V0ZScsICdHZW5lcmljV3JpdGUnLCAnR2VuZXJpY1JlYWQnLCAnQWxsQWNjZXNzJyldDQogICAgICAgICRQZXJtaXNzaW9ucywNCg0KICAgICAgICBbU3RyaW5nXQ0KICAgICAgICBbVmFsaWRhdGVTZXQoJ0NoYW5nZUNvbmZpZycsICdSZXN0YXJ0JywgJ0FsbEFjY2VzcycpXQ0KICAgICAgICAkUGVybWlzc2lvblNldCA9ICdDaGFuZ2VDb25maWcnDQogICAgKQ0KDQogICAgQkVHSU4gew0KICAgICAgICAkQWNjZXNzTWFzayA9IEB7DQogICAgICAgICAgICAnUXVlcnlDb25maWcnICAgICAgICAgICA9IFt1aW50MzJdJzB4MDAwMDAwMDEnDQogICAgICAgICAgICAnQ2hhbmdlQ29uZmlnJyAgICAgICAgICA9IFt1aW50MzJdJzB4MDAwMDAwMDInDQogICAgICAgICAgICAnUXVlcnlTdGF0dXMnICAgICAgICAgICA9IFt1aW50MzJdJzB4MDAwMDAwMDQnDQogICAgICAgICAgICAnRW51bWVyYXRlRGVwZW5kZW50cycgICA9IFt1aW50MzJdJzB4MDAwMDAwMDgnDQogICAgICAgICAgICAnU3RhcnQnICAgICAgICAgICAgICAgICA9IFt1aW50MzJdJzB4MDAwMDAwMTAnDQogICAgICAgICAgICAnU3RvcCcgICAgICAgICAgICAgICAgICA9IFt1aW50MzJdJzB4MDAwMDAwMjAnDQogICAgICAgICAgICAnUGF1c2VDb250aW51ZScgICAgICAgICA9IFt1aW50MzJdJzB4MDAwMDAwNDAnDQogICAgICAgICAgICAnSW50ZXJyb2dhdGUnICAgICAgICAgICA9IFt1aW50MzJdJzB4MDAwMDAwODAnDQogICAgICAgICAgICAnVXNlckRlZmluZWRDb250cm9sJyAgICA9IFt1aW50MzJdJzB4MDAwMDAxMDAnDQogICAgICAgICAgICAnRGVsZXRlJyAgICAgICAgICAgICAgICA9IFt1aW50MzJdJzB4MDAwMTAwMDAnDQogICAgICAgICAgICAnUmVhZENvbnRyb2wnICAgICAgICAgICA9IFt1aW50MzJdJzB4MDAwMjAwMDAnDQogICAgICAgICAgICAnV3JpdGVEYWMnICAgICAgICAgICAgICA9IFt1aW50MzJdJzB4MDAwNDAwMDAnDQogICAgICAgICAgICAnV3JpdGVPd25lcicgICAgICAgICAgICA9IFt1aW50MzJdJzB4MDAwODAwMDAnDQogICAgICAgICAgICAnU3luY2hyb25pemUnICAgICAgICAgICA9IFt1aW50MzJdJzB4MDAxMDAwMDAnDQogICAgICAgICAgICAnQWNjZXNzU3lzdGVtU2VjdXJpdHknICA9IFt1aW50MzJdJzB4MDEwMDAwMDAnDQogICAgICAgICAgICAnR2VuZXJpY0FsbCcgICAgICAgICAgICA9IFt1aW50MzJdJzB4MTAwMDAwMDAnDQogICAgICAgICAgICAnR2VuZXJpY0V4ZWN1dGUnICAgICAgICA9IFt1aW50MzJdJzB4MjAwMDAwMDAnDQogICAgICAgICAgICAnR2VuZXJpY1dyaXRlJyAgICAgICAgICA9IFt1aW50MzJdJzB4NDAwMDAwMDAnDQogICAgICAgICAgICAnR2VuZXJpY1JlYWQnICAgICAgICAgICA9IFt1aW50MzJdJzB4ODAwMDAwMDAnDQogICAgICAgICAgICAnQWxsQWNjZXNzJyAgICAgICAgICAgICA9IFt1aW50MzJdJzB4MDAwRjAxRkYnDQogICAgICAgIH0NCg0KICAgICAgICAkQ2hlY2tBbGxQZXJtaXNzaW9uc0luU2V0ID0gJEZhbHNlDQoNCiAgICAgICAgaWYgKCRQU0JvdW5kUGFyYW1ldGVyc1snUGVybWlzc2lvbnMnXSkgew0KICAgICAgICAgICAgJFRhcmdldFBlcm1pc3Npb25zID0gJFBlcm1pc3Npb25zDQogICAgICAgIH0NCiAgICAgICAgZWxzZSB7DQogICAgICAgICAgICBpZiAoJFBlcm1pc3Npb25TZXQgLWVxICdDaGFuZ2VDb25maWcnKSB7DQogICAgICAgICAgICAgICAgJFRhcmdldFBlcm1pc3Npb25zID0gQCgnQ2hhbmdlQ29uZmlnJywgJ1dyaXRlRGFjJywgJ1dyaXRlT3duZXInLCAnR2VuZXJpY0FsbCcsICcgR2VuZXJpY1dyaXRlJywgJ0FsbEFjY2VzcycpDQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlaWYgKCRQZXJtaXNzaW9uU2V0IC1lcSAnUmVzdGFydCcpIHsNCiAgICAgICAgICAgICAgICAkVGFyZ2V0UGVybWlzc2lvbnMgPSBAKCdTdGFydCcsICdTdG9wJykNCiAgICAgICAgICAgICAgICAkQ2hlY2tBbGxQZXJtaXNzaW9uc0luU2V0ID0gJFRydWUgIyBzbyB3ZSBjaGVjayBhbGwgcGVybWlzc2lvbnMgJiYgc3R5bGUNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2VpZiAoJFBlcm1pc3Npb25TZXQgLWVxICdBbGxBY2Nlc3MnKSB7DQogICAgICAgICAgICAgICAgJFRhcmdldFBlcm1pc3Npb25zID0gQCgnR2VuZXJpY0FsbCcsICdBbGxBY2Nlc3MnKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgUFJPQ0VTUyB7DQoNCiAgICAgICAgRm9yRWFjaCgkSW5kaXZpZHVhbFNlcnZpY2UgaW4gJE5hbWUpIHsNCg0KICAgICAgICAgICAgJFRhcmdldFNlcnZpY2UgPSAkSW5kaXZpZHVhbFNlcnZpY2UgfCBBZGQtU2VydmljZURhY2wNCg0KICAgICAgICAgICAgaWYgKCRUYXJnZXRTZXJ2aWNlIC1hbmQgJFRhcmdldFNlcnZpY2UuRGFjbCkgew0KDQogICAgICAgICAgICAgICAgIyBlbnVtZXJhdGUgYWxsIGdyb3VwIFNJRHMgdGhlIGN1cnJlbnQgdXNlciBpcyBhIHBhcnQgb2YNCiAgICAgICAgICAgICAgICAkVXNlcklkZW50aXR5ID0gW1N5c3RlbS5TZWN1cml0eS5QcmluY2lwYWwuV2luZG93c0lkZW50aXR5XTo6R2V0Q3VycmVudCgpDQogICAgICAgICAgICAgICAgJEN1cnJlbnRVc2VyU2lkcyA9ICRVc2VySWRlbnRpdHkuR3JvdXBzIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kUHJvcGVydHkgVmFsdWUNCiAgICAgICAgICAgICAgICAkQ3VycmVudFVzZXJTaWRzICs9ICRVc2VySWRlbnRpdHkuVXNlci5WYWx1ZQ0KDQogICAgICAgICAgICAgICAgRm9yRWFjaCgkU2VydmljZURhY2wgaW4gJFRhcmdldFNlcnZpY2UuRGFjbCkgew0KICAgICAgICAgICAgICAgICAgICBpZiAoJEN1cnJlbnRVc2VyU2lkcyAtY29udGFpbnMgJFNlcnZpY2VEYWNsLlNlY3VyaXR5SWRlbnRpZmllcikgew0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJENoZWNrQWxsUGVybWlzc2lvbnNJblNldCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRBbGxNYXRjaGVkID0gJFRydWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBGb3JFYWNoKCRUYXJnZXRQZXJtaXNzaW9uIGluICRUYXJnZXRQZXJtaXNzaW9ucykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIGNoZWNrIHBlcm1pc3Npb25zICYmIHN0eWxlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoJFNlcnZpY2VEYWNsLkFjY2Vzc1JpZ2h0cyAtYmFuZCAkQWNjZXNzTWFza1skVGFyZ2V0UGVybWlzc2lvbl0pIC1uZSAkQWNjZXNzTWFza1skVGFyZ2V0UGVybWlzc2lvbl0pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgV3JpdGUtVmVyYm9zZSAiQ3VycmVudCB1c2VyIGRvZXNuJ3QgaGF2ZSAnJFRhcmdldFBlcm1pc3Npb24nIGZvciAkKCRUYXJnZXRTZXJ2aWNlLk5hbWUpIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJEFsbE1hdGNoZWQgPSAkRmFsc2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRBbGxNYXRjaGVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRUYXJnZXRTZXJ2aWNlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgRm9yRWFjaCgkVGFyZ2V0UGVybWlzc2lvbiBpbiAkVGFyZ2V0UGVybWlzc2lvbnMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBjaGVjayBwZXJtaXNzaW9ucyB8fCBzdHlsZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKCRTZXJ2aWNlRGFjbC5BY2VUeXBlIC1lcSAnQWNjZXNzQWxsb3dlZCcpIC1hbmQgKCRTZXJ2aWNlRGFjbC5BY2Nlc3NSaWdodHMgLWJhbmQgJEFjY2Vzc01hc2tbJFRhcmdldFBlcm1pc3Npb25dKSAtZXEgJEFjY2Vzc01hc2tbJFRhcmdldFBlcm1pc3Npb25dKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJDdXJyZW50IHVzZXIgaGFzICckVGFyZ2V0UGVybWlzc2lvbicgZm9yICRJbmRpdmlkdWFsU2VydmljZSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRUYXJnZXRTZXJ2aWNlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiRXJyb3IgZW51bWVyYXRpbmcgdGhlIERhY2wgZm9yIHNlcnZpY2UgJEluZGl2aWR1YWxTZXJ2aWNlIg0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ0KDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQojDQojIFNlcnZpY2UgZW51bWVyYXRpb24NCiMNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoNCmZ1bmN0aW9uIEdldC1VbnF1b3RlZFNlcnZpY2Ugew0KPCMNCi5TWU5PUFNJUw0KDQpSZXR1cm5zIHRoZSBuYW1lIGFuZCBiaW5hcnkgcGF0aCBmb3Igc2VydmljZXMgd2l0aCB1bnF1b3RlZCBwYXRocw0KdGhhdCBhbHNvIGhhdmUgYSBzcGFjZSBpbiB0aGUgbmFtZS4NCg0KQXV0aG9yOiBXaWxsIFNjaHJvZWRlciAoQGhhcm1qMHkpICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IEdldC1Nb2RpZmlhYmxlUGF0aCwgVGVzdC1TZXJ2aWNlRGFjbFBlcm1pc3Npb24gIA0KDQouREVTQ1JJUFRJT04NCg0KVXNlcyBHZXQtV21pT2JqZWN0IHRvIHF1ZXJ5IGFsbCB3aW4zMl9zZXJ2aWNlIG9iamVjdHMgYW5kIGV4dHJhY3Qgb3V0DQp0aGUgYmluYXJ5IHBhdGhuYW1lIGZvciBlYWNoLiBUaGVuIGNoZWNrcyBpZiBhbnkgYmluYXJ5IHBhdGhzIGhhdmUgYSBzcGFjZQ0KYW5kIGFyZW4ndCBxdW90ZWQuDQoNCi5FWEFNUExFDQoNCkdldC1VbnF1b3RlZFNlcnZpY2UNCg0KR2V0IGEgc2V0IG9mIHBvdGVudGlhbGx5IGV4cGxvaXRhYmxlIHNlcnZpY2VzLg0KDQouT1VUUFVUUw0KDQpQb3dlclVwLlVucXVvdGVkU2VydmljZQ0KDQouTElOSw0KDQpodHRwczovL2dpdGh1Yi5jb20vcmFwaWQ3L21ldGFzcGxvaXQtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL21vZHVsZXMvZXhwbG9pdHMvd2luZG93cy9sb2NhbC90cnVzdGVkX3NlcnZpY2VfcGF0aC5yYg0KIz4NCg0KICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU1Nob3VsZFByb2Nlc3MnLCAnJyldDQogICAgW091dHB1dFR5cGUoJ1Bvd2VyVXAuVW5xdW90ZWRTZXJ2aWNlJyldDQogICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICBQYXJhbSgpDQoNCiAgICAjIGZpbmQgYWxsIHBhdGhzIHRvIHNlcnZpY2UgLmV4ZSdzIHRoYXQgaGF2ZSBhIHNwYWNlIGluIHRoZSBwYXRoIGFuZCBhcmVuJ3QgcXVvdGVkDQogICAgJFZ1bG5TZXJ2aWNlcyA9IEdldC1XbWlPYmplY3QgLUNsYXNzIHdpbjMyX3NlcnZpY2UgfCBXaGVyZS1PYmplY3Qgew0KICAgICAgICAkXyAtYW5kICgkTnVsbCAtbmUgJF8ucGF0aG5hbWUpIC1hbmQgKCRfLnBhdGhuYW1lLlRyaW0oKSAtbmUgJycpIC1hbmQgKC1ub3QgJF8ucGF0aG5hbWUuU3RhcnRzV2l0aCgiYCIiKSkgLWFuZCAoLW5vdCAkXy5wYXRobmFtZS5TdGFydHNXaXRoKCInIikpIC1hbmQgKCRfLnBhdGhuYW1lLlN1YnN0cmluZygwLCAkXy5wYXRobmFtZS5Ub0xvd2VyKCkuSW5kZXhPZignLmV4ZScpICsgNCkpIC1tYXRjaCAnLiogLionDQogICAgfQ0KDQogICAgaWYgKCRWdWxuU2VydmljZXMpIHsNCiAgICAgICAgRm9yRWFjaCAoJFNlcnZpY2UgaW4gJFZ1bG5TZXJ2aWNlcykgew0KDQogICAgICAgICAgICAkU3BsaXRQYXRoQXJyYXkgPSAkU2VydmljZS5wYXRobmFtZS5TcGxpdCgnICcpDQogICAgICAgICAgICAkQ29uY2F0UGF0aEFycmF5ID0gQCgpDQogICAgICAgICAgICBmb3IgKCRpPTA7JGkgLWx0ICRTcGxpdFBhdGhBcnJheS5Db3VudDsgJGkrKykgew0KICAgICAgICAgICAgICAgICAgICAgICAgJENvbmNhdFBhdGhBcnJheSArPSAkU3BsaXRQYXRoQXJyYXlbMC4uJGldIC1qb2luICcgJw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAkTW9kaWZpYWJsZUZpbGVzID0gJENvbmNhdFBhdGhBcnJheSB8IEdldC1Nb2RpZmlhYmxlUGF0aA0KDQogICAgICAgICAgICAkTW9kaWZpYWJsZUZpbGVzIHwgV2hlcmUtT2JqZWN0IHskXyAtYW5kICRfLk1vZGlmaWFibGVQYXRoIC1hbmQgKCRfLk1vZGlmaWFibGVQYXRoIC1uZSAnJyl9IHwgRm9yZWFjaC1PYmplY3Qgew0KICAgICAgICAgICAgICAgICRDYW5SZXN0YXJ0ID0gVGVzdC1TZXJ2aWNlRGFjbFBlcm1pc3Npb24gLVBlcm1pc3Npb25TZXQgJ1Jlc3RhcnQnIC1OYW1lICRTZXJ2aWNlLm5hbWUNCiAgICAgICAgICAgICAgICAkT3V0ID0gTmV3LU9iamVjdCBQU09iamVjdA0KICAgICAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnU2VydmljZU5hbWUnICRTZXJ2aWNlLm5hbWUNCiAgICAgICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ1BhdGgnICRTZXJ2aWNlLnBhdGhuYW1lDQogICAgICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdNb2RpZmlhYmxlUGF0aCcgJF8NCiAgICAgICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ1N0YXJ0TmFtZScgJFNlcnZpY2Uuc3RhcnRuYW1lDQogICAgICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdBYnVzZUZ1bmN0aW9uJyAiV3JpdGUtU2VydmljZUJpbmFyeSAtTmFtZSAnJCgkU2VydmljZS5uYW1lKScgLVBhdGggPEhpamFja1BhdGg+Ig0KICAgICAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnQ2FuUmVzdGFydCcgKFtCb29sXSRDYW5SZXN0YXJ0KQ0KICAgICAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIEFsaWFzcHJvcGVydHkgTmFtZSBTZXJ2aWNlTmFtZQ0KICAgICAgICAgICAgICAgICRPdXQuUFNPYmplY3QuVHlwZU5hbWVzLkluc2VydCgwLCAnUG93ZXJVcC5VbnF1b3RlZFNlcnZpY2UnKQ0KICAgICAgICAgICAgICAgICRPdXQNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCn0NCg0KDQpmdW5jdGlvbiBHZXQtTW9kaWZpYWJsZVNlcnZpY2VGaWxlIHsNCjwjDQouU1lOT1BTSVMNCg0KRW51bWVyYXRlcyBhbGwgc2VydmljZXMgYW5kIHJldHVybnMgdnVsbmVyYWJsZSBzZXJ2aWNlIGZpbGVzLg0KDQpBdXRob3I6IFdpbGwgU2Nocm9lZGVyIChAaGFybWoweSkgIA0KTGljZW5zZTogQlNEIDMtQ2xhdXNlICANClJlcXVpcmVkIERlcGVuZGVuY2llczogVGVzdC1TZXJ2aWNlRGFjbFBlcm1pc3Npb24sIEdldC1Nb2RpZmlhYmxlUGF0aCAgDQoNCi5ERVNDUklQVElPTg0KDQpFbnVtZXJhdGVzIGFsbCBzZXJ2aWNlcyBieSBxdWVyeWluZyB0aGUgV01JIHdpbjMyX3NlcnZpY2UgY2xhc3MuIEZvciBlYWNoIHNlcnZpY2UsDQppdCB0YWtlcyB0aGUgcGF0aG5hbWUgKGFrYSBiaW5QYXRoKSBhbmQgcGFzc2VzIGl0IHRvIEdldC1Nb2RpZmlhYmxlUGF0aCB0byBkZXRlcm1pbmUNCmlmIHRoZSBjdXJyZW50IHVzZXIgaGFzIHJpZ2h0cyB0byBtb2RpZnkgdGhlIHNlcnZpY2UgYmluYXJ5IGl0c2VsZiBvciBhbnkgYXNzb2NpYXRlZA0KYXJndW1lbnRzLiBJZiB0aGUgYXNzb2NpYXRlZCBiaW5hcnkgKG9yIGFueSBjb25maWd1cmF0aW9uIGZpbGVzKSBjYW4gYmUgb3ZlcndyaXR0ZW4sDQpwcml2aWxlZ2VzIG1heSBiZSBhYmxlIHRvIGJlIGVzY2FsYXRlZC4NCg0KLkVYQU1QTEUNCg0KR2V0LU1vZGlmaWFibGVTZXJ2aWNlRmlsZQ0KDQpHZXQgYSBzZXQgb2YgcG90ZW50aWFsbHkgZXhwbG9pdGFibGUgc2VydmljZSBiaW5hcmVzL2NvbmZpZyBmaWxlcy4NCg0KLk9VVFBVVFMNCg0KUG93ZXJVcC5Nb2RpZmlhYmxlUGF0aA0KIz4NCg0KICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU1Nob3VsZFByb2Nlc3MnLCAnJyldDQogICAgW091dHB1dFR5cGUoJ1Bvd2VyVXAuTW9kaWZpYWJsZVNlcnZpY2VGaWxlJyldDQogICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICBQYXJhbSgpDQoNCiAgICBHZXQtV01JT2JqZWN0IC1DbGFzcyB3aW4zMl9zZXJ2aWNlIHwgV2hlcmUtT2JqZWN0IHskXyAtYW5kICRfLnBhdGhuYW1lfSB8IEZvckVhY2gtT2JqZWN0IHsNCg0KICAgICAgICAkU2VydmljZU5hbWUgPSAkXy5uYW1lDQogICAgICAgICRTZXJ2aWNlUGF0aCA9ICRfLnBhdGhuYW1lDQogICAgICAgICRTZXJ2aWNlU3RhcnROYW1lID0gJF8uc3RhcnRuYW1lDQoNCiAgICAgICAgJFNlcnZpY2VQYXRoIHwgR2V0LU1vZGlmaWFibGVQYXRoIHwgRm9yRWFjaC1PYmplY3Qgew0KICAgICAgICAgICAgJENhblJlc3RhcnQgPSBUZXN0LVNlcnZpY2VEYWNsUGVybWlzc2lvbiAtUGVybWlzc2lvblNldCAnUmVzdGFydCcgLU5hbWUgJFNlcnZpY2VOYW1lDQogICAgICAgICAgICAkT3V0ID0gTmV3LU9iamVjdCBQU09iamVjdA0KICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdTZXJ2aWNlTmFtZScgJFNlcnZpY2VOYW1lDQogICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ1BhdGgnICRTZXJ2aWNlUGF0aA0KICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdNb2RpZmlhYmxlRmlsZScgJF8uTW9kaWZpYWJsZVBhdGgNCiAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnTW9kaWZpYWJsZUZpbGVQZXJtaXNzaW9ucycgJF8uUGVybWlzc2lvbnMNCiAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnTW9kaWZpYWJsZUZpbGVJZGVudGl0eVJlZmVyZW5jZScgJF8uSWRlbnRpdHlSZWZlcmVuY2UNCiAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnU3RhcnROYW1lJyAkU2VydmljZVN0YXJ0TmFtZQ0KICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdBYnVzZUZ1bmN0aW9uJyAiSW5zdGFsbC1TZXJ2aWNlQmluYXJ5IC1OYW1lICckU2VydmljZU5hbWUnIg0KICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdDYW5SZXN0YXJ0JyAoW0Jvb2xdJENhblJlc3RhcnQpDQogICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBBbGlhc3Byb3BlcnR5IE5hbWUgU2VydmljZU5hbWUNCiAgICAgICAgICAgICRPdXQuUFNPYmplY3QuVHlwZU5hbWVzLkluc2VydCgwLCAnUG93ZXJVcC5Nb2RpZmlhYmxlU2VydmljZUZpbGUnKQ0KICAgICAgICAgICAgJE91dA0KICAgICAgICB9DQogICAgfQ0KfQ0KDQoNCmZ1bmN0aW9uIEdldC1Nb2RpZmlhYmxlU2VydmljZSB7DQo8Iw0KLlNZTk9QU0lTDQoNCkVudW1lcmF0ZXMgYWxsIHNlcnZpY2VzIGFuZCByZXR1cm5zIHNlcnZpY2VzIGZvciB3aGljaCB0aGUgY3VycmVudCB1c2VyIGNhbiBtb2RpZnkgdGhlIGJpblBhdGguDQoNCkF1dGhvcjogV2lsbCBTY2hyb2VkZXIgKEBoYXJtajB5KSAgDQpMaWNlbnNlOiBCU0QgMy1DbGF1c2UgIA0KUmVxdWlyZWQgRGVwZW5kZW5jaWVzOiBUZXN0LVNlcnZpY2VEYWNsUGVybWlzc2lvbiwgR2V0LVNlcnZpY2VEZXRhaWwgIA0KDQouREVTQ1JJUFRJT04NCg0KRW51bWVyYXRlcyBhbGwgc2VydmljZXMgdXNpbmcgR2V0LVNlcnZpY2UgYW5kIHVzZXMgVGVzdC1TZXJ2aWNlRGFjbFBlcm1pc3Npb24gdG8gdGVzdCBpZg0KdGhlIGN1cnJlbnQgdXNlciBoYXMgcmlnaHRzIHRvIGNoYW5nZSB0aGUgc2VydmljZSBjb25maWd1cmF0aW9uLg0KDQouRVhBTVBMRQ0KDQpHZXQtTW9kaWZpYWJsZVNlcnZpY2UNCg0KR2V0IGEgc2V0IG9mIHBvdGVudGlhbGx5IGV4cGxvaXRhYmxlIHNlcnZpY2VzLg0KDQouT1VUUFVUUw0KDQpQb3dlclVwLk1vZGlmaWFibGVQYXRoDQojPg0KDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnUG93ZXJVcC5Nb2RpZmlhYmxlU2VydmljZScpXQ0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oKQ0KDQogICAgR2V0LVNlcnZpY2UgfCBUZXN0LVNlcnZpY2VEYWNsUGVybWlzc2lvbiAtUGVybWlzc2lvblNldCAnQ2hhbmdlQ29uZmlnJyB8IEZvckVhY2gtT2JqZWN0IHsNCiAgICAgICAgJFNlcnZpY2VEZXRhaWxzID0gJF8gfCBHZXQtU2VydmljZURldGFpbA0KICAgICAgICAkQ2FuUmVzdGFydCA9ICRfIHwgVGVzdC1TZXJ2aWNlRGFjbFBlcm1pc3Npb24gLVBlcm1pc3Npb25TZXQgJ1Jlc3RhcnQnDQogICAgICAgICRPdXQgPSBOZXctT2JqZWN0IFBTT2JqZWN0DQogICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnU2VydmljZU5hbWUnICRTZXJ2aWNlRGV0YWlscy5uYW1lDQogICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnUGF0aCcgJFNlcnZpY2VEZXRhaWxzLnBhdGhuYW1lDQogICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnU3RhcnROYW1lJyAkU2VydmljZURldGFpbHMuc3RhcnRuYW1lDQogICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnQWJ1c2VGdW5jdGlvbicgIkludm9rZS1TZXJ2aWNlQWJ1c2UgLU5hbWUgJyQoJFNlcnZpY2VEZXRhaWxzLm5hbWUpJyINCiAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdDYW5SZXN0YXJ0JyAoW0Jvb2xdJENhblJlc3RhcnQpDQogICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIEFsaWFzcHJvcGVydHkgTmFtZSBTZXJ2aWNlTmFtZQ0KICAgICAgICAkT3V0LlBTT2JqZWN0LlR5cGVOYW1lcy5JbnNlcnQoMCwgJ1Bvd2VyVXAuTW9kaWZpYWJsZVNlcnZpY2UnKQ0KICAgICAgICAkT3V0DQogICAgfQ0KfQ0KDQoNCmZ1bmN0aW9uIEdldC1TZXJ2aWNlRGV0YWlsIHsNCjwjDQouU1lOT1BTSVMNCg0KUmV0dXJucyBkZXRhaWxlZCBpbmZvcm1hdGlvbiBhYm91dCBhIHNwZWNpZmllZCBzZXJ2aWNlIGJ5IHF1ZXJ5aW5nIHRoZQ0KV01JIHdpbjMyX3NlcnZpY2UgY2xhc3MgZm9yIHRoZSBzcGVjaWZpZWQgc2VydmljZSBuYW1lLg0KDQpBdXRob3I6IFdpbGwgU2Nocm9lZGVyIChAaGFybWoweSkgIA0KTGljZW5zZTogQlNEIDMtQ2xhdXNlICANClJlcXVpcmVkIERlcGVuZGVuY2llczogTm9uZSAgDQoNCi5ERVNDUklQVElPTg0KDQpUYWtlcyBhbiBhcnJheSBvZiBvbmUgb3IgbW9yZSBzZXJ2aWNlIE5hbWVzIG9yIFNlcnZpY2VQcm9jZXNzLlNlcnZpY2VDb250cm9sbGVyIG9iamVkdHMgb24NCnRoZSBwaXBlbGluZSBvYmplY3QgcmV0dXJuZWQgYnkgR2V0LVNlcnZpY2UsIGV4dHJhY3RzIG91dCB0aGUgc2VydmljZSBuYW1lLCBxdWVyaWVzIHRoZQ0KV01JIHdpbjMyX3NlcnZpY2UgY2xhc3MgZm9yIHRoZSBzcGVjaWZpZWQgc2VydmljZSBmb3IgZGV0YWlscyBsaWtlIGJpblBhdGgsIGFuZCBvdXRwdXRzDQpldmVyeXRoaW5nLg0KDQouUEFSQU1FVEVSIE5hbWUNCg0KQW4gYXJyYXkgb2Ygb25lIG9yIG1vcmUgc2VydmljZSBuYW1lcyB0byBxdWVyeSBpbmZvcm1hdGlvbiBmb3IuDQoNCi5FWEFNUExFDQoNCkdldC1TZXJ2aWNlRGV0YWlsIC1OYW1lIFZ1bG5TVkMNCg0KR2V0cyBkZXRhaWxlZCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgJ1Z1bG5TVkMnIHNlcnZpY2UuDQoNCi5FWEFNUExFDQoNCkdldC1TZXJ2aWNlIFZ1bG5TVkMgfCBHZXQtU2VydmljZURldGFpbA0KDQpHZXRzIGRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IHRoZSAnVnVsblNWQycgc2VydmljZS4NCg0KLk9VVFBVVFMNCg0KU3lzdGVtLk1hbmFnZW1lbnQuTWFuYWdlbWVudE9iamVjdA0KIz4NCg0KICAgIFtPdXRwdXRUeXBlKCdQb3dlclVwLk1vZGlmaWFibGVTZXJ2aWNlJyldDQogICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICBQYXJhbSgNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDAsIE1hbmRhdG9yeSA9ICRUcnVlLCBWYWx1ZUZyb21QaXBlbGluZSA9ICRUcnVlLCBWYWx1ZUZyb21QaXBlbGluZUJ5UHJvcGVydHlOYW1lID0gJFRydWUpXQ0KICAgICAgICBbQWxpYXMoJ1NlcnZpY2VOYW1lJyldDQogICAgICAgIFtTdHJpbmdbXV0NCiAgICAgICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0NCiAgICAgICAgJE5hbWUNCiAgICApDQoNCiAgICBQUk9DRVNTIHsNCiAgICAgICAgRm9yRWFjaCgkSW5kaXZpZHVhbFNlcnZpY2UgaW4gJE5hbWUpIHsNCiAgICAgICAgICAgICRUYXJnZXRTZXJ2aWNlID0gR2V0LVNlcnZpY2UgLU5hbWUgJEluZGl2aWR1YWxTZXJ2aWNlIC1FcnJvckFjdGlvbiBTdG9wDQogICAgICAgICAgICBpZiAoJFRhcmdldFNlcnZpY2UpIHsNCiAgICAgICAgICAgICAgICBHZXQtV21pT2JqZWN0IC1DbGFzcyB3aW4zMl9zZXJ2aWNlIC1GaWx0ZXIgIk5hbWU9JyQoJFRhcmdldFNlcnZpY2UuTmFtZSknIiB8IFdoZXJlLU9iamVjdCB7JF99IHwgRm9yRWFjaC1PYmplY3Qgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgJF8NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBjYXRjaCB7DQogICAgICAgICAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJFcnJvcjogJF8iDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9DQoNCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMNCiMgU2VydmljZSBhYnVzZQ0KIw0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KZnVuY3Rpb24gSW52b2tlLVNlcnZpY2VBYnVzZSB7DQo8Iw0KLlNZTk9QU0lTDQoNCkFidXNlcyBhIGZ1bmN0aW9uIHRoZSBjdXJyZW50IHVzZXIgaGFzIGNvbmZpZ3VyYXRpb24gcmlnaHRzIG9uIGluIG9yZGVyDQp0byBhZGQgYSBsb2NhbCBhZG1pbmlzdHJhdG9yIG9yIGV4ZWN1dGUgYSBjdXN0b20gY29tbWFuZC4NCg0KQXV0aG9yOiBXaWxsIFNjaHJvZWRlciAoQGhhcm1qMHkpICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IEdldC1TZXJ2aWNlRGV0YWlsLCBTZXQtU2VydmljZUJpbmFyeVBhdGggIA0KDQouREVTQ1JJUFRJT04NCg0KVGFrZXMgYSBzZXJ2aWNlIE5hbWUgb3IgYSBTZXJ2aWNlUHJvY2Vzcy5TZXJ2aWNlQ29udHJvbGxlciBvbiB0aGUgcGlwZWxpbmUgdGhhdCB0aGUgY3VycmVudA0KdXNlciBoYXMgY29uZmlndXJhdGlvbiBtb2RpZmljYXRpb24gcmlnaHRzIG9uIGFuZCBleGVjdXRlcyBhIHNlcmllcyBvZiBhdXRvbWF0ZWQgYWN0aW9ucyB0bw0KZXhlY3V0ZSBjb21tYW5kcyBhcyBTWVNURU0uIEZpcnN0LCB0aGUgc2VydmljZSBpcyBlbmFibGVkIGlmIGl0IHdhcyBzZXQgYXMgZGlzYWJsZWQgYW5kIHRoZQ0Kb3JpZ2luYWwgc2VydmljZSBiaW5hcnkgcGF0aCBhbmQgY29uZmlndXJhdGlvbiBzdGF0ZSBhcmUgcHJlc2VydmVkLiBUaGVuIHRoZSBzZXJ2aWNlIGlzIHN0b3BwZWQNCmFuZCB0aGUgU2V0LVNlcnZpY2VCaW5hcnlQYXRoIGZ1bmN0aW9uIGlzIHVzZWQgdG8gc2V0IHRoZSBiaW5hcnkgKGJpblBhdGgpIGZvciB0aGUgc2VydmljZSB0byBhDQpzZXJpZXMgb2YgY29tbWFuZHMsIHRoZSBzZXJ2aWNlIGlzIHN0YXJ0ZWQsIHN0b3BwZWQsIGFuZCB0aGUgbmV4dCBjb21tYW5kIGlzIGNvbmZpZ3VyZWQuIEFmdGVyDQpjb21wbGV0aW9uLCB0aGUgb3JpZ2luYWwgc2VydmljZSBjb25maWd1cmF0aW9uIGlzIHJlc3RvcmVkIGFuZCBhIGN1c3RvbSBvYmplY3QgaXMgcmV0dXJuZWQNCnRoYXQgY2FwdHVyZXMgdGhlIHNlcnZpY2UgYWJ1c2VkIGFuZCBjb21tYW5kcyBydW4uDQoNCi5QQVJBTUVURVIgTmFtZQ0KDQpBbiBhcnJheSBvZiBvbmUgb3IgbW9yZSBzZXJ2aWNlIG5hbWVzIHRvIGFidXNlLg0KDQouUEFSQU1FVEVSIFVzZXJOYW1lDQoNClRoZSBbZG9tYWluXF11c2VybmFtZSB0byBhZGQuIElmIG5vdCBnaXZlbiwgaXQgZGVmYXVsdHMgdG8gImpvaG4iLg0KRG9tYWluIHVzZXJzIGFyZSBub3QgY3JlYXRlZCwgb25seSBhZGRlZCB0byB0aGUgc3BlY2lmaWVkIGxvY2FsZ3JvdXAuDQoNCi5QQVJBTUVURVIgUGFzc3dvcmQNCg0KVGhlIHBhc3N3b3JkIHRvIHNldCBmb3IgdGhlIGFkZGVkIHVzZXIuIElmIG5vdCBnaXZlbiwgaXQgZGVmYXVsdHMgdG8gIlBhc3N3b3JkMTIzISINCg0KLlBBUkFNRVRFUiBMb2NhbEdyb3VwDQoNCkxvY2FsIGdyb3VwIG5hbWUgdG8gYWRkIHRoZSB1c2VyIHRvIChkZWZhdWx0IG9mICdBZG1pbmlzdHJhdG9ycycpLg0KDQouUEFSQU1FVEVSIENyZWRlbnRpYWwNCg0KQSBbTWFuYWdlbWVudC5BdXRvbWF0aW9uLlBTQ3JlZGVudGlhbF0gb2JqZWN0IHNwZWNpZnlpbmcgdGhlIHVzZXIvcGFzc3dvcmQgdG8gYWRkLg0KDQouUEFSQU1FVEVSIENvbW1hbmQNCg0KQ3VzdG9tIGNvbW1hbmQgdG8gZXhlY3V0ZSBpbnN0ZWFkIG9mIHVzZXIgY3JlYXRpb24uDQoNCi5QQVJBTUVURVIgRm9yY2UNCg0KU3dpdGNoLiBGb3JjZSBzZXJ2aWNlIHN0b3BwaW5nLCBldmVuIGlmIG90aGVyIHNlcnZpY2VzIGFyZSBkZXBlbmRlbnQuDQoNCi5FWEFNUExFDQoNCkludm9rZS1TZXJ2aWNlQWJ1c2UgLU5hbWUgVnVsblNWQw0KDQpBYnVzZXMgc2VydmljZSAnVnVsblNWQycgdG8gYWRkIGEgbG9jYWx1c2VyICJqb2huIiB3aXRoIHBhc3N3b3JkDQoiUGFzc3dvcmQxMjMhIHRvIHRoZSAgbWFjaGluZSBhbmQgbG9jYWwgYWRtaW5pc3RyYXRvciBncm91cA0KDQouRVhBTVBMRQ0KDQpHZXQtU2VydmljZSBWdWxuU1ZDIHwgSW52b2tlLVNlcnZpY2VBYnVzZQ0KDQpBYnVzZXMgc2VydmljZSAnVnVsblNWQycgdG8gYWRkIGEgbG9jYWx1c2VyICJqb2huIiB3aXRoIHBhc3N3b3JkDQoiUGFzc3dvcmQxMjMhIHRvIHRoZSAgbWFjaGluZSBhbmQgbG9jYWwgYWRtaW5pc3RyYXRvciBncm91cA0KDQouRVhBTVBMRQ0KDQpJbnZva2UtU2VydmljZUFidXNlIC1OYW1lIFZ1bG5TVkMgLVVzZXJOYW1lICJURVNUTEFCXGpvaG4iDQoNCkFidXNlcyBzZXJ2aWNlICdWdWxuU1ZDJyB0byBhZGQgYSB0aGUgZG9tYWluIHVzZXIgVEVTVExBQlxqb2huIHRvIHRoZQ0KbG9jYWwgYWRtaW5pc3J0YXRvcnMgZ3JvdXAuDQoNCi5FWEFNUExFDQoNCkludm9rZS1TZXJ2aWNlQWJ1c2UgLU5hbWUgVnVsblNWQyAtVXNlck5hbWUgYmFja2Rvb3IgLVBhc3N3b3JkIHBhc3N3b3JkIC1Mb2NhbEdyb3VwICJQb3dlciBVc2VycyINCg0KQWJ1c2VzIHNlcnZpY2UgJ1Z1bG5TVkMnIHRvIGFkZCBhIGxvY2FsdXNlciAiYmFja2Rvb3IiIHdpdGggcGFzc3dvcmQNCiJwYXNzd29yZCIgdG8gdGhlICBtYWNoaW5lIGFuZCBsb2NhbCAiUG93ZXIgVXNlcnMiIGdyb3VwDQoNCi5FWEFNUExFDQoNCkludm9rZS1TZXJ2aWNlQWJ1c2UgLU5hbWUgVnVsblNWQyAtQ29tbWFuZCAibmV0IC4uLiINCg0KQWJ1c2VzIHNlcnZpY2UgJ1Z1bG5TVkMnIHRvIGV4ZWN1dGUgYSBjdXN0b20gY29tbWFuZC4NCg0KLk9VVFBVVFMNCg0KUG93ZXJVcC5BYnVzZWRTZXJ2aWNlDQojPg0KDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNBdm9pZFVzaW5nVXNlck5hbWVBbmRQYXNzV29yZFBhcmFtcycsICcnKV0NCiAgICBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNBdm9pZFVzaW5nUGxhaW5UZXh0Rm9yUGFzc3dvcmQnLCAnJyldDQogICAgW091dHB1dFR5cGUoJ1Bvd2VyVXAuQWJ1c2VkU2VydmljZScpXQ0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAwLCBNYW5kYXRvcnkgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmUgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmVCeVByb3BlcnR5TmFtZSA9ICRUcnVlKV0NCiAgICAgICAgW0FsaWFzKCdTZXJ2aWNlTmFtZScpXQ0KICAgICAgICBbU3RyaW5nW11dDQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgICROYW1lLA0KDQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgIFtTdHJpbmddDQogICAgICAgICRVc2VyTmFtZSA9ICdqb2huJywNCg0KICAgICAgICBbVmFsaWRhdGVOb3ROdWxsT3JFbXB0eSgpXQ0KICAgICAgICBbU3RyaW5nXQ0KICAgICAgICAkUGFzc3dvcmQgPSAnUGFzc3dvcmQxMjMhJywNCg0KICAgICAgICBbVmFsaWRhdGVOb3ROdWxsT3JFbXB0eSgpXQ0KICAgICAgICBbU3RyaW5nXQ0KICAgICAgICAkTG9jYWxHcm91cCA9ICdBZG1pbmlzdHJhdG9ycycsDQoNCiAgICAgICAgW01hbmFnZW1lbnQuQXV0b21hdGlvbi5QU0NyZWRlbnRpYWxdDQogICAgICAgIFtNYW5hZ2VtZW50LkF1dG9tYXRpb24uQ3JlZGVudGlhbEF0dHJpYnV0ZSgpXQ0KICAgICAgICAkQ3JlZGVudGlhbCA9IFtNYW5hZ2VtZW50LkF1dG9tYXRpb24uUFNDcmVkZW50aWFsXTo6RW1wdHksDQoNCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0NCiAgICAgICAgJENvbW1hbmQsDQoNCiAgICAgICAgW1N3aXRjaF0NCiAgICAgICAgJEZvcmNlDQogICAgKQ0KDQogICAgQkVHSU4gew0KDQogICAgICAgIGlmICgkUFNCb3VuZFBhcmFtZXRlcnNbJ0NvbW1hbmQnXSkgew0KICAgICAgICAgICAgJFNlcnZpY2VDb21tYW5kcyA9IEAoJENvbW1hbmQpDQogICAgICAgIH0NCg0KICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgIGlmICgkUFNCb3VuZFBhcmFtZXRlcnNbJ0NyZWRlbnRpYWwnXSkgew0KICAgICAgICAgICAgICAgICRVc2VyTmFtZVRvQWRkID0gJENyZWRlbnRpYWwuVXNlck5hbWUNCiAgICAgICAgICAgICAgICAkUGFzc3dvcmRUb0FkZCA9ICRDcmVkZW50aWFsLkdldE5ldHdvcmtDcmVkZW50aWFsKCkuUGFzc3dvcmQNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgICAgICRVc2VyTmFtZVRvQWRkID0gJFVzZXJOYW1lDQogICAgICAgICAgICAgICAgJFBhc3N3b3JkVG9BZGQgPSAkUGFzc3dvcmQNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKCRVc2VyTmFtZVRvQWRkLkNvbnRhaW5zKCdcJykpIHsNCiAgICAgICAgICAgICAgICAjIG9ubHkgYWRkaW5nIGEgZG9tYWluIHVzZXIgdG8gdGhlIGxvY2FsIGdyb3VwLCBubyB1c2VyIGNyZWF0aW9uDQogICAgICAgICAgICAgICAgJFNlcnZpY2VDb21tYW5kcyA9IEAoIm5ldCBsb2NhbGdyb3VwICRMb2NhbEdyb3VwICRVc2VyTmFtZVRvQWRkIC9hZGQiKQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgIyBjcmVhdGUgYSBsb2NhbCB1c2VyIGFuZCBhZGQgaXQgdG8gdGhlIGxvY2FsIHNwZWNpZmllZCBncm91cA0KICAgICAgICAgICAgICAgICRTZXJ2aWNlQ29tbWFuZHMgPSBAKCJuZXQgdXNlciAkVXNlck5hbWVUb0FkZCAkUGFzc3dvcmRUb0FkZCAvYWRkIiwgIm5ldCBsb2NhbGdyb3VwICRMb2NhbEdyb3VwICRVc2VyTmFtZVRvQWRkIC9hZGQiKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgUFJPQ0VTUyB7DQoNCiAgICAgICAgRm9yRWFjaCgkSW5kaXZpZHVhbFNlcnZpY2UgaW4gJE5hbWUpIHsNCg0KICAgICAgICAgICAgJFRhcmdldFNlcnZpY2UgPSBHZXQtU2VydmljZSAtTmFtZSAkSW5kaXZpZHVhbFNlcnZpY2UgLUVycm9yQWN0aW9uIFN0b3ANCiAgICAgICAgICAgICRTZXJ2aWNlRGV0YWlscyA9ICRUYXJnZXRTZXJ2aWNlIHwgR2V0LVNlcnZpY2VEZXRhaWwNCg0KICAgICAgICAgICAgJFJlc3RvcmVEaXNhYmxlZCA9ICRGYWxzZQ0KICAgICAgICAgICAgaWYgKCRTZXJ2aWNlRGV0YWlscy5TdGFydE1vZGUgLW1hdGNoICdEaXNhYmxlZCcpIHsNCiAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJTZXJ2aWNlICckKFNlcnZpY2VEZXRhaWxzLk5hbWUpJyBkaXNhYmxlZCwgZW5hYmxpbmcuLi4iDQogICAgICAgICAgICAgICAgJFRhcmdldFNlcnZpY2UgfCBTZXQtU2VydmljZSAtU3RhcnR1cFR5cGUgTWFudWFsIC1FcnJvckFjdGlvbiBTdG9wDQogICAgICAgICAgICAgICAgJFJlc3RvcmVEaXNhYmxlZCA9ICRUcnVlDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICRPcmlnaW5hbFNlcnZpY2VQYXRoID0gJFNlcnZpY2VEZXRhaWxzLlBhdGhOYW1lDQogICAgICAgICAgICAkT3JpZ2luYWxTZXJ2aWNlU3RhdGUgPSAkU2VydmljZURldGFpbHMuU3RhdGUNCg0KICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiU2VydmljZSAnJCgkVGFyZ2V0U2VydmljZS5OYW1lKScgb3JpZ2luYWwgcGF0aDogJyRPcmlnaW5hbFNlcnZpY2VQYXRoJyINCiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIlNlcnZpY2UgJyQoJFRhcmdldFNlcnZpY2UuTmFtZSknIG9yaWdpbmFsIHN0YXRlOiAnJE9yaWdpbmFsU2VydmljZVN0YXRlJyINCg0KICAgICAgICAgICAgRm9yRWFjaCgkU2VydmljZUNvbW1hbmQgaW4gJFNlcnZpY2VDb21tYW5kcykgew0KDQogICAgICAgICAgICAgICAgaWYgKCRQU0JvdW5kUGFyYW1ldGVyc1snRm9yY2UnXSkgew0KICAgICAgICAgICAgICAgICAgICAkVGFyZ2V0U2VydmljZSB8IFN0b3AtU2VydmljZSAtRm9yY2UgLUVycm9yQWN0aW9uIFN0b3ANCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICRUYXJnZXRTZXJ2aWNlIHwgU3RvcC1TZXJ2aWNlIC1FcnJvckFjdGlvbiBTdG9wDQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiRXhlY3V0aW5nIGNvbW1hbmQgJyRTZXJ2aWNlQ29tbWFuZCciDQogICAgICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkVGFyZ2V0U2VydmljZSB8IFNldC1TZXJ2aWNlQmluYXJ5UGF0aCAtUGF0aCAiJFNlcnZpY2VDb21tYW5kIg0KDQogICAgICAgICAgICAgICAgaWYgKC1ub3QgJFN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhyb3cgIkVycm9yIHJlY29uZmlndXJpbmcgdGhlIGJpbmFyeSBwYXRoIGZvciAkKCRUYXJnZXRTZXJ2aWNlLk5hbWUpIg0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICRUYXJnZXRTZXJ2aWNlIHwgU3RhcnQtU2VydmljZSAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZQ0KICAgICAgICAgICAgICAgIFN0YXJ0LVNsZWVwIC1TZWNvbmRzIDINCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKCRQU0JvdW5kUGFyYW1ldGVyc1snRm9yY2UnXSkgew0KICAgICAgICAgICAgICAgICRUYXJnZXRTZXJ2aWNlIHwgU3RvcC1TZXJ2aWNlIC1Gb3JjZSAtRXJyb3JBY3Rpb24gU3RvcA0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgJFRhcmdldFNlcnZpY2UgfCBTdG9wLVNlcnZpY2UgLUVycm9yQWN0aW9uIFN0b3ANCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiUmVzdG9yaW5nIG9yaWdpbmFsIHBhdGggdG8gc2VydmljZSAnJCgkVGFyZ2V0U2VydmljZS5OYW1lKSciDQogICAgICAgICAgICBTdGFydC1TbGVlcCAtU2Vjb25kcyAxDQogICAgICAgICAgICAkU3VjY2VzcyA9ICRUYXJnZXRTZXJ2aWNlIHwgU2V0LVNlcnZpY2VCaW5hcnlQYXRoIC1QYXRoICIkT3JpZ2luYWxTZXJ2aWNlUGF0aCINCg0KICAgICAgICAgICAgaWYgKC1ub3QgJFN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICB0aHJvdyAiRXJyb3IgcmVzdG9yaW5nIHRoZSBvcmlnaW5hbCBiaW5QYXRoIGZvciAkKCRUYXJnZXRTZXJ2aWNlLk5hbWUpIg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjIHRyeSB0byByZXN0b3JlIHRoZSBzZXJ2aWNlIHRvIHdoYXRldmVyIHRoZSBzZXJ2aWNlJ3Mgb3JpZ2luYWwgc3RhdGUgd2FzDQogICAgICAgICAgICBpZiAoJFJlc3RvcmVEaXNhYmxlZCkgew0KICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIlJlLWRpc2FibGluZyBzZXJ2aWNlICckKCRUYXJnZXRTZXJ2aWNlLk5hbWUpJyINCiAgICAgICAgICAgICAgICAkVGFyZ2V0U2VydmljZSB8IFNldC1TZXJ2aWNlIC1TdGFydHVwVHlwZSBEaXNhYmxlZCAtRXJyb3JBY3Rpb24gU3RvcA0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZWlmICgkT3JpZ2luYWxTZXJ2aWNlU3RhdGUgLWVxICJQYXVzZWQiKSB7DQogICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiU3RhcnRpbmcgYW5kIHRoZW4gcGF1c2luZyBzZXJ2aWNlICckKCRUYXJnZXRTZXJ2aWNlLk5hbWUpJyINCiAgICAgICAgICAgICAgICAkVGFyZ2V0U2VydmljZSB8IFN0YXJ0LVNlcnZpY2UNCiAgICAgICAgICAgICAgICBTdGFydC1TbGVlcCAtU2Vjb25kcyAxDQogICAgICAgICAgICAgICAgJFRhcmdldFNlcnZpY2UgfCBTZXQtU2VydmljZSAtU3RhdHVzIFBhdXNlZCAtRXJyb3JBY3Rpb24gU3RvcA0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZWlmICgkT3JpZ2luYWxTZXJ2aWNlU3RhdGUgLWVxICJTdG9wcGVkIikgew0KICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkxlYXZpbmcgc2VydmljZSAnJCgkVGFyZ2V0U2VydmljZS5OYW1lKScgaW4gc3RvcHBlZCBzdGF0ZSINCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIlJlc3RhcnRpbmcgJyQoJFRhcmdldFNlcnZpY2UuTmFtZSknIg0KICAgICAgICAgICAgICAgICRUYXJnZXRTZXJ2aWNlIHwgU3RhcnQtU2VydmljZQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAkT3V0ID0gTmV3LU9iamVjdCBQU09iamVjdA0KICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdTZXJ2aWNlQWJ1c2VkJyAkVGFyZ2V0U2VydmljZS5OYW1lDQogICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ0NvbW1hbmQnICQoJFNlcnZpY2VDb21tYW5kcyAtam9pbiAnICYmICcpDQogICAgICAgICAgICAkT3V0LlBTT2JqZWN0LlR5cGVOYW1lcy5JbnNlcnQoMCwgJ1Bvd2VyVXAuQWJ1c2VkU2VydmljZScpDQogICAgICAgICAgICAkT3V0DQogICAgICAgIH0NCiAgICB9DQp9DQoNCg0KZnVuY3Rpb24gV3JpdGUtU2VydmljZUJpbmFyeSB7DQo8Iw0KLlNZTk9QU0lTDQoNClBhdGNoZXMgaW4gdGhlIHNwZWNpZmllZCBjb21tYW5kIHRvIGEgcHJlLWNvbXBpbGVkIEMjIHNlcnZpY2UgZXhlY3V0YWJsZSBhbmQNCndyaXRlcyB0aGUgYmluYXJ5IG91dCB0byB0aGUgc3BlY2lmaWVkIFNlcnZpY2VQYXRoIGxvY2F0aW9uLg0KDQpBdXRob3I6IFdpbGwgU2Nocm9lZGVyIChAaGFybWoweSkgIA0KTGljZW5zZTogQlNEIDMtQ2xhdXNlICANClJlcXVpcmVkIERlcGVuZGVuY2llczogTm9uZSAgDQoNCi5ERVNDUklQVElPTg0KDQpUYWtlcyBhIHByZS1jb21waWxlZCBDIyBzZXJ2aWNlIGJpbmFyeSBhbmQgcGF0Y2hlcyBpbiB0aGUgYXBwcm9wcmlhdGUgY29tbWFuZHMgbmVlZGVkDQpmb3Igc2VydmljZSBhYnVzZS4gSWYgYSAtVXNlck5hbWUvLVBhc3N3b3JkIG9yIC1DcmVkZW50aWFsIGlzIHNwZWNpZmllZCwgdGhlIGNvbW1hbmQNCnBhdGNoZWQgaW4gY3JlYXRlcyBhIGxvY2FsIHVzZXIgYW5kIGFkZHMgdGhlbSB0byB0aGUgc3BlY2lmaWVkIC1Mb2NhbEdyb3VwLCBvdGhlcndpc2UNCnRoZSBzcGVjaWZpZWQgLUNvbW1hbmQgaXMgcGF0Y2hlZCBpbi4gVGhlIGJpbmFyeSBpcyB0aGVuIHdyaXR0ZW4gb3V0IHRvIHRoZSBzcGVjaWZpZWQNCi1TZXJ2aWNlUGF0aC4gRWl0aGVyIC1OYW1lIG11c3QgYmUgc3BlY2lmaWVkIGZvciB0aGUgc2VydmljZSwgb3IgYSBwcm9wZXIgb2JqZWN0IGZyb20NCkdldC1TZXJ2aWNlIG11c3QgYmUgcGFzc2VkIG9uIHRoZSBwaXBlbGluZSBpbiBvcmRlciB0byBwYXRjaCBpbiB0aGUgYXBwcm9wcmlhdGUgc2VydmljZQ0KbmFtZSB0aGUgYmluYXJ5IHdpbGwgYmUgcnVubmluZyB1bmRlci4NCg0KLlBBUkFNRVRFUiBOYW1lDQoNClRoZSBzZXJ2aWNlIG5hbWUgdGhlIEVYRSB3aWxsIGJlIHJ1bm5pbmcgdW5kZXIuDQoNCi5QQVJBTUVURVIgVXNlck5hbWUNCg0KVGhlIFtkb21haW5cXXVzZXJuYW1lIHRvIGFkZC4gSWYgbm90IGdpdmVuLCBpdCBkZWZhdWx0cyB0byAiam9obiIuDQpEb21haW4gdXNlcnMgYXJlIG5vdCBjcmVhdGVkLCBvbmx5IGFkZGVkIHRvIHRoZSBzcGVjaWZpZWQgbG9jYWxncm91cC4NCg0KLlBBUkFNRVRFUiBQYXNzd29yZA0KDQpUaGUgcGFzc3dvcmQgdG8gc2V0IGZvciB0aGUgYWRkZWQgdXNlci4gSWYgbm90IGdpdmVuLCBpdCBkZWZhdWx0cyB0byAiUGFzc3dvcmQxMjMhIg0KDQouUEFSQU1FVEVSIExvY2FsR3JvdXANCg0KTG9jYWwgZ3JvdXAgbmFtZSB0byBhZGQgdGhlIHVzZXIgdG8gKGRlZmF1bHQgb2YgJ0FkbWluaXN0cmF0b3JzJykuDQoNCi5QQVJBTUVURVIgQ3JlZGVudGlhbA0KDQpBIFtNYW5hZ2VtZW50LkF1dG9tYXRpb24uUFNDcmVkZW50aWFsXSBvYmplY3Qgc3BlY2lmeWluZyB0aGUgdXNlci9wYXNzd29yZCB0byBhZGQuDQoNCi5QQVJBTUVURVIgQ29tbWFuZA0KDQpDdXN0b20gY29tbWFuZCB0byBleGVjdXRlIGluc3RlYWQgb2YgdXNlciBjcmVhdGlvbi4NCg0KLlBBUkFNRVRFUiBQYXRoDQoNClBhdGggdG8gd3JpdGUgdGhlIGJpbmFyeSBvdXQgdG8sIGRlZmF1bHRzIHRvICdzZXJ2aWNlLmV4ZScgaW4gdGhlIGxvY2FsIGRpcmVjdG9yeS4NCg0KLkVYQU1QTEUNCg0KV3JpdGUtU2VydmljZUJpbmFyeSAtTmFtZSBWdWxuU1ZDDQoNCldyaXRlcyBhIHNlcnZpY2UgYmluYXJ5IHRvIHNlcnZpY2UuZXhlIGluIHRoZSBsb2NhbCBkaXJlY3RvcnkgZm9yIFZ1bG5TVkMgdGhhdA0KYWRkcyBhIGxvY2FsIEFkbWluaXN0cmF0b3IgKGpvaG4vUGFzc3dvcmQxMjMhKS4NCg0KLkVYQU1QTEUNCg0KR2V0LVNlcnZpY2UgVnVsblNWQyB8IFdyaXRlLVNlcnZpY2VCaW5hcnkNCg0KV3JpdGVzIGEgc2VydmljZSBiaW5hcnkgdG8gc2VydmljZS5leGUgaW4gdGhlIGxvY2FsIGRpcmVjdG9yeSBmb3IgVnVsblNWQyB0aGF0DQphZGRzIGEgbG9jYWwgQWRtaW5pc3RyYXRvciAoam9obi9QYXNzd29yZDEyMyEpLg0KDQouRVhBTVBMRQ0KDQpXcml0ZS1TZXJ2aWNlQmluYXJ5IC1OYW1lIFZ1bG5TVkMgLVVzZXJOYW1lICdURVNUTEFCXGpvaG4nDQoNCldyaXRlcyBhIHNlcnZpY2UgYmluYXJ5IHRvIHNlcnZpY2UuZXhlIGluIHRoZSBsb2NhbCBkaXJlY3RvcnkgZm9yIFZ1bG5TVkMgdGhhdCBhZGRzDQpURVNUTEFCXGpvaG4gdG8gdGhlIEFkbWluaXN0cmF0b3JzIGxvY2FsIGdyb3VwLg0KDQouRVhBTVBMRQ0KDQpXcml0ZS1TZXJ2aWNlQmluYXJ5IC1OYW1lIFZ1bG5TVkMgLVVzZXJOYW1lIGJhY2tkb29yIC1QYXNzd29yZCBQYXNzd29yZDEyMyENCg0KV3JpdGVzIGEgc2VydmljZSBiaW5hcnkgdG8gc2VydmljZS5leGUgaW4gdGhlIGxvY2FsIGRpcmVjdG9yeSBmb3IgVnVsblNWQyB0aGF0DQphZGRzIGEgbG9jYWwgQWRtaW5pc3RyYXRvciAoYmFja2Rvb3IvUGFzc3dvcmQxMjMhKS4NCg0KLkVYQU1QTEUNCg0KV3JpdGUtU2VydmljZUJpbmFyeSAtTmFtZSBWdWxuU1ZDIC1Db21tYW5kICJuZXQgLi4uIg0KDQpXcml0ZXMgYSBzZXJ2aWNlIGJpbmFyeSB0byBzZXJ2aWNlLmV4ZSBpbiB0aGUgbG9jYWwgZGlyZWN0b3J5IGZvciBWdWxuU1ZDIHRoYXQNCmV4ZWN1dGVzIGEgY3VzdG9tIGNvbW1hbmQuDQoNCi5PVVRQVVRTDQoNClBvd2VyVXAuU2VydmljZUJpbmFyeQ0KIz4NCg0KICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU1Nob3VsZFByb2Nlc3MnLCAnJyldDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTQXZvaWRVc2luZ1VzZXJOYW1lQW5kUGFzc1dvcmRQYXJhbXMnLCAnJyldDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTQXZvaWRVc2luZ1BsYWluVGV4dEZvclBhc3N3b3JkJywgJycpXQ0KICAgIFtPdXRwdXRUeXBlKCdQb3dlclVwLlNlcnZpY2VCaW5hcnknKV0NCiAgICBbQ21kbGV0QmluZGluZygpXQ0KICAgIFBhcmFtKA0KICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJFRydWUsIFZhbHVlRnJvbVBpcGVsaW5lID0gJFRydWUsIFZhbHVlRnJvbVBpcGVsaW5lQnlQcm9wZXJ0eU5hbWUgPSAkVHJ1ZSldDQogICAgICAgIFtBbGlhcygnU2VydmljZU5hbWUnKV0NCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0NCiAgICAgICAgJE5hbWUsDQoNCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgJFVzZXJOYW1lID0gJ2pvaG4nLA0KDQogICAgICAgIFtTdHJpbmddDQogICAgICAgICRQYXNzd29yZCA9ICdQYXNzd29yZDEyMyEnLA0KDQogICAgICAgIFtTdHJpbmddDQogICAgICAgICRMb2NhbEdyb3VwID0gJ0FkbWluaXN0cmF0b3JzJywNCg0KICAgICAgICBbTWFuYWdlbWVudC5BdXRvbWF0aW9uLlBTQ3JlZGVudGlhbF0NCiAgICAgICAgW01hbmFnZW1lbnQuQXV0b21hdGlvbi5DcmVkZW50aWFsQXR0cmlidXRlKCldDQogICAgICAgICRDcmVkZW50aWFsID0gW01hbmFnZW1lbnQuQXV0b21hdGlvbi5QU0NyZWRlbnRpYWxdOjpFbXB0eSwNCg0KICAgICAgICBbU3RyaW5nXQ0KICAgICAgICBbVmFsaWRhdGVOb3ROdWxsT3JFbXB0eSgpXQ0KICAgICAgICAkQ29tbWFuZCwNCg0KICAgICAgICBbU3RyaW5nXQ0KICAgICAgICAkUGF0aCA9ICIkKENvbnZlcnQtUGF0aCAuKVxzZXJ2aWNlLmV4ZSINCiAgICApDQoNCiAgICBCRUdJTiB7DQogICAgICAgICMgdGhlIHJhdyB1bnBhdGNoZWQgc2VydmljZSBiaW5hcnkNCiAgICAgICAgJEI2NEJpbmFyeSA9ICJUVnFRQUFNQUFBQUVBQUFBLy84QUFMZ0FBQUFBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdBQUFBQTRmdWc0QXRBbk5JYmdCVE0waFZHaHBjeUJ3Y205bmNtRnRJR05oYm01dmRDQmlaU0J5ZFc0Z2FXNGdSRTlUSUcxdlpHVXVEUTBLSkFBQUFBQUFBQUJRUlFBQVRBRURBTk0xUDFVQUFBQUFBQUFBQU9BQUFnRUxBUXNBQUV3QUFBQUlBQUFBQUFBQUhtb0FBQUFnQUFBQWdBQUFBQUJBQUFBZ0FBQUFBZ0FBQkFBQUFBQUFBQUFFQUFBQUFBQUFBQURBQUFBQUFnQUFBQUFBQUFJQVFJVUFBQkFBQUJBQUFBQUFFQUFBRUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQU1ocEFBQlRBQUFBQUlBQUFEQUZBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBS0FBQUF3QUFBQlFhUUFBSEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUFBQUNBQUFBQUFBQUFBQUFBQUFDQ0FBQUVnQUFBQUFBQUFBQUFBQUFDNTBaWGgwQUFBQUpFb0FBQUFnQUFBQVRBQUFBQUlBQUFBQUFBQUFBQUFBQUFBQUFDQUFBR0F1Y25OeVl3QUFBREFGQUFBQWdBQUFBQVlBQUFCT0FBQUFBQUFBQUFBQUFBQUFBQUJBQUFCQUxuSmxiRzlqQUFBTUFBQUFBS0FBQUFBQ0FBQUFWQUFBQUFBQUFBQUFBQUFBQUFBQVFBQUFRZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFhZ0FBQUFBQUFFZ0FBQUFDQUFVQStDQUFBRmhJQUFBREFBQUFCZ0FBQmdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFIb0RMQk1DZXdFQUFBUXNDd0o3QVFBQUJHOFJBQUFLQWdNb0VnQUFDaXB5QW5NVEFBQUtmUUVBQUFRQ2NnRUFBSEJ2RkFBQUNpZ1ZBQUFLS2pZQ0tCWUFBQW9DS0FJQUFBWXFBQUFUTUFJQUtBQUFBQUVBQUJGeVJ3QUFjQXB5UUVBQWNBWnZGQUFBQ2lnWEFBQUtKaURRQndBQUtCZ0FBQW9XS0JrQUFBb3FCaW9BQUJNd0F3QVlBQUFBQWdBQUVSZU5BUUFBQVFzSEZuTURBQUFHb2djS0JpZ2FBQUFLS2tKVFNrSUJBQUVBQUFBQUFBd0FBQUIyTkM0d0xqTXdNekU1QUFBQUFBVUFiQUFBQU1RQ0FBQWpmZ0FBTUFNQUFIQURBQUFqVTNSeWFXNW5jd0FBQUFDZ0JnQUFVRUFBQUNOVlV3RHdSZ0FBRUFBQUFDTkhWVWxFQUFBQUFFY0FBRmdCQUFBalFteHZZZ0FBQUFBQUFBQUNBQUFCVnhVQ0FBa0FBQUFBK2lVekFCWUFBQUVBQUFBYUFBQUFBd0FBQUFFQUFBQUdBQUFBQWdBQUFCb0FBQUFPQUFBQUFnQUFBQUVBQUFBREFBQUFBQUFLQUFFQUFBQUFBQVlBUlFBdkFBb0FZUUJhQUE0QWZnQm9BQW9BNndEWkFBb0FBZ0haQUFvQUh3SFpBQW9BUGdIWkFBb0FWd0haQUFvQWNBSFpBQW9BaXdIWkFBb0FwZ0haQUFvQTNnRy9BUW9BOGdHL0FRb0FBQUxaQUFvQUdRTFpBQW9BVUFJMkFnb0FmQUpwQWtjQWtBSUFBQW9BdndLZkFnb0Ezd0tmQWdvQS9RSmFBQTRBQ1FOb0FBb0FFd05hQUE0QUx3TnBBZ29BVGdNOUF3b0FXd05hQUFBQUFBQUJBQUFBQUFBQkFBRUFBUUFRQUJZQUh3QUZBQUVBQVFDQUFSQUFKd0FmQUFrQUFnQUdBQUVBaVFBVEFGQWdBQUFBQU1RQWxBQVhBQUVBYnlBQUFBQUFnUUNjQUJ3QUFnQ01JQUFBQUFDR0dMQUFIQUFDQUp3Z0FBQUFBTVFBdGdBZ0FBSUEwQ0FBQUFBQXhBQytBQndBQXdEVUlBQUFBQUNSQU1VQUpnQURBQUFBQVFES0FBQUFBUURVQUNFQXNBQXFBQ2tBc0FBcUFERUFzQUFxQURrQXNBQXFBRUVBc0FBcUFFa0FzQUFxQUZFQXNBQXFBRmtBc0FBcUFHRUFzQUFYQUdrQXNBQXFBSEVBc0FBcUFIa0FzQUFxQUlFQXNBQXFBSWtBc0FBdkFKa0FzQUExQUtFQXNBQWNBS2tBbEFBY0FBa0FsQUFYQUxFQXNBQWNBTGtBR2dNNkFBa0FId01xQUFrQXNBQWNBTUVBTndNK0FNa0FWUU5GQU5FQVp3TkZBQWtBYkFOT0FDNEFDd0JlQUM0QUV3QnJBQzRBR3dCckFDNEFJd0JyQUM0QUt3QmVBQzRBTXdCeEFDNEFPd0JyQUM0QVN3QnJBQzRBVXdDSkFDNEFZd0N6QUM0QWF3REFBQzRBY3dBbUFTNEFld0F2QVM0QWd3QTRBVW9BVlFBRWdBQUFBUUFBQUFBQUFBQUFBQUFBQUFBZkFBQUFCQUFBQUFBQUFBQUFBQUFBQVFBdkFBQUFBQUFFQUFBQUFBQUFBQUFBQUFBS0FGRUFBQUFBQUFRQUFBQUFBQUFBQUFBQUFBb0FXZ0FBQUFBQUFBQUFBQUE4VFc5a2RXeGxQZ0JWY0dSaGRHVnlMbVY0WlFCVFpYSjJhV05sTVFCVmNHUmhkR1Z5QUZCeWIyZHlZVzBBVTNsemRHVnRMbE5sY25acFkyVlFjbTlqWlhOekFGTmxjblpwWTJWQ1lYTmxBRzF6WTI5eWJHbGlBRk41YzNSbGJRQlBZbXBsWTNRQVUzbHpkR1Z0TGtOdmJYQnZibVZ1ZEUxdlpHVnNBRWxEYjI1MFlXbHVaWElBWTI5dGNHOXVaVzUwY3dCRWFYTndiM05sQUVsdWFYUnBZV3hwZW1WRGIyMXdiMjVsYm5RQUxtTjBiM0lBVDI1VGRHRnlkQUJQYmxOMGIzQUFUV0ZwYmdCa2FYTndiM05wYm1jQVlYSm5jd0JUZVhOMFpXMHVVbVZtYkdWamRHbHZiZ0JCYzNObGJXSnNlVlJwZEd4bFFYUjBjbWxpZFhSbEFFRnpjMlZ0WW14NVJHVnpZM0pwY0hScGIyNUJkSFJ5YVdKMWRHVUFRWE56WlcxaWJIbERiMjVtYVdkMWNtRjBhVzl1UVhSMGNtbGlkWFJsQUVGemMyVnRZbXg1UTI5dGNHRnVlVUYwZEhKcFluVjBaUUJCYzNObGJXSnNlVkJ5YjJSMVkzUkJkSFJ5YVdKMWRHVUFRWE56WlcxaWJIbERiM0I1Y21sbmFIUkJkSFJ5YVdKMWRHVUFRWE56WlcxaWJIbFVjbUZrWlcxaGNtdEJkSFJ5YVdKMWRHVUFRWE56WlcxaWJIbERkV3gwZFhKbFFYUjBjbWxpZFhSbEFGTjVjM1JsYlM1U2RXNTBhVzFsTGtsdWRHVnliM0JUWlhKMmFXTmxjd0JEYjIxV2FYTnBZbXhsUVhSMGNtbGlkWFJsQUVkMWFXUkJkSFJ5YVdKMWRHVUFRWE56WlcxaWJIbFdaWEp6YVc5dVFYUjBjbWxpZFhSbEFFRnpjMlZ0WW14NVJtbHNaVlpsY25OcGIyNUJkSFJ5YVdKMWRHVUFVM2x6ZEdWdExsSjFiblJwYldVdVZtVnljMmx2Ym1sdVp3QlVZWEpuWlhSR2NtRnRaWGR2Y210QmRIUnlhV0oxZEdVQVUzbHpkR1Z0TGtScFlXZHViM04wYVdOekFFUmxZblZuWjJGaWJHVkJkSFJ5YVdKMWRHVUFSR1ZpZFdkbmFXNW5UVzlrWlhNQVUzbHpkR1Z0TGxKMWJuUnBiV1V1UTI5dGNHbHNaWEpUWlhKMmFXTmxjd0JEYjIxd2FXeGhkR2x2YmxKbGJHRjRZWFJwYjI1elFYUjBjbWxpZFhSbEFGSjFiblJwYldWRGIyMXdZWFJwWW1sc2FYUjVRWFIwY21saWRYUmxBRWxFYVhOd2IzTmhZbXhsQUVOdmJuUmhhVzVsY2dCVGRISnBibWNBVkhKcGJRQnpaWFJmVTJWeWRtbGpaVTVoYldVQVVISnZZMlZ6Y3dCVGRHRnlkQUJUZVhOMFpXMHVWR2h5WldGa2FXNW5BRlJvY21WaFpBQlRiR1ZsY0FCRmJuWnBjbTl1YldWdWRBQkZlR2wwQUZKMWJnQUFSVUVBUVFCQkFDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUFMLzNMd0JEQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBQUE5akFHMEFaQUF1QUdVQWVBQmxBQUJ3bFFFa2ZXNlRTNVMvZ3dtTEtaNU1BQWl3UDE5L0VkVUtPZ2kzZWx4V0dUVGdpUU1HRWcwRUlBRUJBZ01nQUFFRklBRUJIUTREQUFBQkJDQUJBUTRGSUFFQkVVa0VJQUVCQ0FNZ0FBNEdBQUlTWVE0T0JBQUJBUWdEQndFT0JnQUJBUjBTQlFnSEFoMFNCUjBTQlF3QkFBZFZjR1JoZEdWeUFBQUZBUUFBQUFBWEFRQVNRMjl3ZVhKcFoyaDBJTUtwSUNBeU1ERTFBQUFwQVFBa04yTmhNV0l6TW1FdE9XTXpOeTAwTVRWaUxXSmtPV1l0WkdSbU5ERTVPV1V4Tm1WakFBQU1BUUFITVM0d0xqQXVNQUFBWlFFQUtTNU9SVlJHY21GdFpYZHZjbXNzVm1WeWMybHZiajEyTkM0d0xGQnliMlpwYkdVOVEyeHBaVzUwQVFCVURoUkdjbUZ0WlhkdmNtdEVhWE53YkdGNVRtRnRaUjh1VGtWVUlFWnlZVzFsZDI5eWF5QTBJRU5zYVdWdWRDQlFjbTltYVd4bENBRUFBZ0FBQUFBQUNBRUFDQUFBQUFBQUhnRUFBUUJVQWhaWGNtRndUbTl1UlhoalpYQjBhVzl1VkdoeWIzZHpBUUFBQUFBQTB6VS9WUUFBQUFBQ0FBQUFXZ0FBQUd4cEFBQnNTd0FBVWxORVU5NkhvQVpKcWdOR2hhcGxGNDFYMjRJREFBQUFRenBjVlhObGNuTmNiR0ZpWEVSbGMydDBiM0JjVlhCa1lYUmxjakpjVlhCa1lYUmxjbHh2WW1wY2VEZzJYRkpsYkdWaGMyVmNWWEJrWVhSbGNpNXdaR0lBQUFEd2FRQUFBQUFBQUFBQUFBQU9hZ0FBQUNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBR29BQUFBQUFBQUFBQUFBQUFBQUFBQUFYME52Y2tWNFpVMWhhVzRBYlhOamIzSmxaUzVrYkd3QUFBQUFBUDhsQUNCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDQUJBQUFBQWdBQUNBR0FBQUFEZ0FBSUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBUUFBQUZBQUFJQUFBQUFBQUFBQUFBQUFBQUFBQUFFQUFRQUFBR2dBQUlBQUFBQUFBQUFBQUFBQUFBQUFBQUVBQUFBQUFJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQUFBQUpBQUFBQ2dnQUFBb0FJQUFBQUFBQUFBQUFBQVFJTUFBT29CQUFBQUFBQUFBQUFBQUtBQ05BQUFBRllBVXdCZkFGWUFSUUJTQUZNQVNRQlBBRTRBWHdCSkFFNEFSZ0JQQUFBQUFBQzlCTy8rQUFBQkFBQUFBUUFBQUFBQUFBQUJBQUFBQUFBL0FBQUFBQUFBQUFRQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBQVJBQUFBQUVBVmdCaEFISUFSZ0JwQUd3QVpRQkpBRzRBWmdCdkFBQUFBQUFrQUFRQUFBQlVBSElBWVFCdUFITUFiQUJoQUhRQWFRQnZBRzRBQUFBQUFBQUFzQVFBQWdBQUFRQlRBSFFBY2dCcEFHNEFad0JHQUdrQWJBQmxBRWtBYmdCbUFHOEFBQURjQVFBQUFRQXdBREFBTUFBd0FEQUFOQUJpQURBQUFBQTRBQWdBQVFCR0FHa0FiQUJsQUVRQVpRQnpBR01BY2dCcEFIQUFkQUJwQUc4QWJnQUFBQUFBVlFCd0FHUUFZUUIwQUdVQWNnQUFBREFBQ0FBQkFFWUFhUUJzQUdVQVZnQmxBSElBY3dCcEFHOEFiZ0FBQUFBQU1RQXVBREFBTGdBd0FDNEFNQUFBQURnQURBQUJBRWtBYmdCMEFHVUFjZ0J1QUdFQWJBQk9BR0VBYlFCbEFBQUFWUUJ3QUdRQVlRQjBBR1VBY2dBdUFHVUFlQUJsQUFBQVNBQVNBQUVBVEFCbEFHY0FZUUJzQUVNQWJ3QndBSGtBY2dCcEFHY0FhQUIwQUFBQVF3QnZBSEFBZVFCeUFHa0Fad0JvQUhRQUlBQ3BBQ0FBSUFBeUFEQUFNUUExQUFBQVFBQU1BQUVBVHdCeUFHa0Fad0JwQUc0QVlRQnNBRVlBYVFCc0FHVUFiZ0JoQUcwQVpRQUFBRlVBY0FCa0FHRUFkQUJsQUhJQUxnQmxBSGdBWlFBQUFEQUFDQUFCQUZBQWNnQnZBR1FBZFFCakFIUUFUZ0JoQUcwQVpRQUFBQUFBVlFCd0FHUUFZUUIwQUdVQWNnQUFBRFFBQ0FBQkFGQUFjZ0J2QUdRQWRRQmpBSFFBVmdCbEFISUFjd0JwQUc4QWJnQUFBREVBTGdBd0FDNEFNQUF1QURBQUFBQTRBQWdBQVFCQkFITUFjd0JsQUcwQVlnQnNBSGtBSUFCV0FHVUFjZ0J6QUdrQWJ3QnVBQUFBTVFBdUFEQUFMZ0F3QUM0QU1BQUFBTys3dnp3L2VHMXNJSFpsY25OcGIyNDlJakV1TUNJZ1pXNWpiMlJwYm1jOUlsVlVSaTA0SWlCemRHRnVaR0ZzYjI1bFBTSjVaWE1pUHo0TkNqeGhjM05sYldKc2VTQjRiV3h1Y3owaWRYSnVPbk5qYUdWdFlYTXRiV2xqY205emIyWjBMV052YlRwaGMyMHVkakVpSUcxaGJtbG1aWE4wVm1WeWMybHZiajBpTVM0d0lqNE5DaUFnUEdGemMyVnRZbXg1U1dSbGJuUnBkSGtnZG1WeWMybHZiajBpTVM0d0xqQXVNQ0lnYm1GdFpUMGlUWGxCY0hCc2FXTmhkR2x2Ymk1aGNIQWlMejROQ2lBZ1BIUnlkWE4wU1c1bWJ5QjRiV3h1Y3owaWRYSnVPbk5qYUdWdFlYTXRiV2xqY205emIyWjBMV052YlRwaGMyMHVkaklpUGcwS0lDQWdJRHh6WldOMWNtbDBlVDROQ2lBZ0lDQWdJRHh5WlhGMVpYTjBaV1JRY21sMmFXeGxaMlZ6SUhodGJHNXpQU0oxY200NmMyTm9aVzFoY3kxdGFXTnliM052Wm5RdFkyOXRPbUZ6YlM1Mk15SStEUW9nSUNBZ0lDQWdJRHh5WlhGMVpYTjBaV1JGZUdWamRYUnBiMjVNWlhabGJDQnNaWFpsYkQwaVlYTkpiblp2YTJWeUlpQjFhVUZqWTJWemN6MGlabUZzYzJVaUx6NE5DaUFnSUNBZ0lEd3ZjbVZ4ZFdWemRHVmtVSEpwZG1sc1pXZGxjejROQ2lBZ0lDQThMM05sWTNWeWFYUjVQZzBLSUNBOEwzUnlkWE4wU1c1bWJ6NE5Dand2WVhOelpXMWliSGsrRFFvQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUdBQUFBd0FBQUFnT2dg0KICAgICAgICBbQnl0ZVtdXSAkQmluYXJ5ID0gW0J5dGVbXV1bQ29udmVydF06OkZyb21CYXNlNjRTdHJpbmcoJEI2NEJpbmFyeSkNCg0KICAgICAgICBpZiAoJFBTQm91bmRQYXJhbWV0ZXJzWydDb21tYW5kJ10pIHsNCiAgICAgICAgICAgICRTZXJ2aWNlQ29tbWFuZCA9ICRDb21tYW5kDQogICAgICAgIH0NCiAgICAgICAgZWxzZSB7DQogICAgICAgICAgICBpZiAoJFBTQm91bmRQYXJhbWV0ZXJzWydDcmVkZW50aWFsJ10pIHsNCiAgICAgICAgICAgICAgICAkVXNlck5hbWVUb0FkZCA9ICRDcmVkZW50aWFsLlVzZXJOYW1lDQogICAgICAgICAgICAgICAgJFBhc3N3b3JkVG9BZGQgPSAkQ3JlZGVudGlhbC5HZXROZXR3b3JrQ3JlZGVudGlhbCgpLlBhc3N3b3JkDQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAkVXNlck5hbWVUb0FkZCA9ICRVc2VyTmFtZQ0KICAgICAgICAgICAgICAgICRQYXNzd29yZFRvQWRkID0gJFBhc3N3b3JkDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmICgkVXNlck5hbWVUb0FkZC5Db250YWlucygnXCcpKSB7DQogICAgICAgICAgICAgICAgIyBvbmx5IGFkZGluZyBhIGRvbWFpbiB1c2VyIHRvIHRoZSBsb2NhbCBncm91cCwgbm8gdXNlciBjcmVhdGlvbg0KICAgICAgICAgICAgICAgICRTZXJ2aWNlQ29tbWFuZCA9ICJuZXQgbG9jYWxncm91cCAkTG9jYWxHcm91cCAkVXNlck5hbWVUb0FkZCAvYWRkIg0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgIyBjcmVhdGUgYSBsb2NhbCB1c2VyIGFuZCBhZGQgaXQgdG8gdGhlIGxvY2FsIHNwZWNpZmllZCBncm91cA0KICAgICAgICAgICAgICAgICRTZXJ2aWNlQ29tbWFuZCA9ICJuZXQgdXNlciAkVXNlck5hbWVUb0FkZCAkUGFzc3dvcmRUb0FkZCAvYWRkICYmIHRpbWVvdXQgL3QgNSAmJiBuZXQgbG9jYWxncm91cCAkTG9jYWxHcm91cCAkVXNlck5hbWVUb0FkZCAvYWRkIg0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgUFJPQ0VTUyB7DQoNCiAgICAgICAgJFRhcmdldFNlcnZpY2UgPSBHZXQtU2VydmljZSAtTmFtZSAkTmFtZQ0KDQogICAgICAgICMgZ2V0IHRoZSB1bmljb2RlIGJ5dGUgY29udmVyc2lvbnMgb2YgYWxsIGFyZ3VtZW50cw0KICAgICAgICAkRW5jID0gW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6VW5pY29kZQ0KICAgICAgICAkU2VydmljZU5hbWVCeXRlcyA9ICRFbmMuR2V0Qnl0ZXMoJFRhcmdldFNlcnZpY2UuTmFtZSkNCiAgICAgICAgJENvbW1hbmRCeXRlcyA9ICRFbmMuR2V0Qnl0ZXMoJFNlcnZpY2VDb21tYW5kKQ0KDQogICAgICAgICMgcGF0Y2ggYWxsIHZhbHVlcyBpbiB0byB0aGVpciBhcHByb3ByaWF0ZSBsb2NhdGlvbnMNCiAgICAgICAgZm9yICgkaT0wOyAkaSAtbHQgKCRTZXJ2aWNlTmFtZUJ5dGVzLkxlbmd0aCk7ICRpKyspIHsNCiAgICAgICAgICAgICMgc2VydmljZSBuYW1lIG9mZnNldCA9IDI0NTgNCiAgICAgICAgICAgICRCaW5hcnlbJGkrMjQ1OF0gPSAkU2VydmljZU5hbWVCeXRlc1skaV0NCiAgICAgICAgfQ0KICAgICAgICBmb3IgKCRpPTA7ICRpIC1sdCAoJENvbW1hbmRCeXRlcy5MZW5ndGgpOyAkaSsrKSB7DQogICAgICAgICAgICAjIGNtZCBvZmZzZXQgPSAyNTM1DQogICAgICAgICAgICAkQmluYXJ5WyRpKzI1MzVdID0gJENvbW1hbmRCeXRlc1skaV0NCiAgICAgICAgfQ0KDQogICAgICAgIFNldC1Db250ZW50IC1WYWx1ZSAkQmluYXJ5IC1FbmNvZGluZyBCeXRlIC1QYXRoICRQYXRoIC1Gb3JjZSAtRXJyb3JBY3Rpb24gU3RvcA0KDQogICAgICAgICRPdXQgPSBOZXctT2JqZWN0IFBTT2JqZWN0DQogICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnU2VydmljZU5hbWUnICRUYXJnZXRTZXJ2aWNlLk5hbWUNCiAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdQYXRoJyAkUGF0aA0KICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ0NvbW1hbmQnICRTZXJ2aWNlQ29tbWFuZA0KICAgICAgICAkT3V0LlBTT2JqZWN0LlR5cGVOYW1lcy5JbnNlcnQoMCwgJ1Bvd2VyVXAuU2VydmljZUJpbmFyeScpDQogICAgICAgICRPdXQNCiAgICB9DQp9DQoNCg0KZnVuY3Rpb24gSW5zdGFsbC1TZXJ2aWNlQmluYXJ5IHsNCjwjDQouU1lOT1BTSVMNCg0KUmVwbGFjZXMgdGhlIHNlcnZpY2UgYmluYXJ5IGZvciB0aGUgc3BlY2lmaWVkIHNlcnZpY2Ugd2l0aCBvbmUgdGhhdCBleGVjdXRlcw0KYSBzcGVjaWZpZWQgY29tbWFuZCBhcyBTWVNURU0uDQoNCkF1dGhvcjogV2lsbCBTY2hyb2VkZXIgKEBoYXJtajB5KSAgDQpMaWNlbnNlOiBCU0QgMy1DbGF1c2UgIA0KUmVxdWlyZWQgRGVwZW5kZW5jaWVzOiBHZXQtU2VydmljZURldGFpbCwgR2V0LU1vZGlmaWFibGVQYXRoLCBXcml0ZS1TZXJ2aWNlQmluYXJ5ICANCg0KLkRFU0NSSVBUSU9ODQoNClRha2VzIGEgc2VydmljZSBOYW1lIG9yIGEgU2VydmljZVByb2Nlc3MuU2VydmljZUNvbnRyb2xsZXIgb24gdGhlIHBpcGVsaW5lIHdoZXJlIHRoZQ0KY3VycmVudCB1c2VyIGNhbiAgbW9kaWZ5IHRoZSBhc3NvY2lhdGVkIHNlcnZpY2UgYmluYXJ5IGxpc3RlZCBpbiB0aGUgYmluUGF0aC4gQmFja3MgdXANCnRoZSBvcmlnaW5hbCBzZXJ2aWNlIGJpbmFyeSB0byAiT3JpZ2luYWxTZXJ2aWNlLmV4ZS5iYWsiIGluIHNlcnZpY2UgYmluYXJ5IGxvY2F0aW9uLA0KYW5kIHRoZW4gdXNlcyBXcml0ZS1TZXJ2aWNlQmluYXJ5IHRvIGNyZWF0ZSBhIEMjIHNlcnZpY2UgYmluYXJ5IHRoYXQgZWl0aGVyIGFkZHMNCmEgbG9jYWwgYWRtaW5pc3RyYXRvciB1c2VyIG9yIGV4ZWN1dGVzIGEgY3VzdG9tIGNvbW1hbmQuIFRoZSBuZXcgc2VydmljZSBiaW5hcnkgaXMNCnJlcGxhY2VkIGluIHRoZSBvcmlnaW5hbCBzZXJ2aWNlIGJpbmFyeSBwYXRoLCBhbmQgYSBjdXN0b20gb2JqZWN0IGlzIHJldHVybmVkIHRoYXQNCmNhcHR1cmVzIHRoZSBvcmlnaW5hbCBhbmQgbmV3IHNlcnZpY2UgYmluYXJ5IGNvbmZpZ3VyYXRpb24uDQoNCi5QQVJBTUVURVIgTmFtZQ0KDQpUaGUgc2VydmljZSBuYW1lIHRoZSBFWEUgd2lsbCBiZSBydW5uaW5nIHVuZGVyLg0KDQouUEFSQU1FVEVSIFVzZXJOYW1lDQoNClRoZSBbZG9tYWluXF11c2VybmFtZSB0byBhZGQuIElmIG5vdCBnaXZlbiwgaXQgZGVmYXVsdHMgdG8gImpvaG4iLg0KRG9tYWluIHVzZXJzIGFyZSBub3QgY3JlYXRlZCwgb25seSBhZGRlZCB0byB0aGUgc3BlY2lmaWVkIGxvY2FsZ3JvdXAuDQoNCi5QQVJBTUVURVIgUGFzc3dvcmQNCg0KVGhlIHBhc3N3b3JkIHRvIHNldCBmb3IgdGhlIGFkZGVkIHVzZXIuIElmIG5vdCBnaXZlbiwgaXQgZGVmYXVsdHMgdG8gIlBhc3N3b3JkMTIzISINCg0KLlBBUkFNRVRFUiBMb2NhbEdyb3VwDQoNCkxvY2FsIGdyb3VwIG5hbWUgdG8gYWRkIHRoZSB1c2VyIHRvIChkZWZhdWx0IG9mICdBZG1pbmlzdHJhdG9ycycpLg0KDQouUEFSQU1FVEVSIENyZWRlbnRpYWwNCg0KQSBbTWFuYWdlbWVudC5BdXRvbWF0aW9uLlBTQ3JlZGVudGlhbF0gb2JqZWN0IHNwZWNpZnlpbmcgdGhlIHVzZXIvcGFzc3dvcmQgdG8gYWRkLg0KDQouUEFSQU1FVEVSIENvbW1hbmQNCg0KQ3VzdG9tIGNvbW1hbmQgdG8gZXhlY3V0ZSBpbnN0ZWFkIG9mIHVzZXIgY3JlYXRpb24uDQoNCi5FWEFNUExFDQoNCkluc3RhbGwtU2VydmljZUJpbmFyeSAtTmFtZSBWdWxuU1ZDDQoNCkJhY2tzIHVwIHRoZSBvcmlnaW5hbCBzZXJ2aWNlIGJpbmFyeSB0byBTRVJWSUNFX1BBVEguZXhlLmJhayBhbmQgcmVwbGFjZXMgdGhlIGJpbmFyeQ0KZm9yIFZ1bG5TVkMgd2l0aCBvbmUgdGhhdCBhZGRzIGEgbG9jYWwgQWRtaW5pc3RyYXRvciAoam9obi9QYXNzd29yZDEyMyEpLg0KDQouRVhBTVBMRQ0KDQpHZXQtU2VydmljZSBWdWxuU1ZDIHwgSW5zdGFsbC1TZXJ2aWNlQmluYXJ5DQoNCkJhY2tzIHVwIHRoZSBvcmlnaW5hbCBzZXJ2aWNlIGJpbmFyeSB0byBTRVJWSUNFX1BBVEguZXhlLmJhayBhbmQgcmVwbGFjZXMgdGhlIGJpbmFyeQ0KZm9yIFZ1bG5TVkMgd2l0aCBvbmUgdGhhdCBhZGRzIGEgbG9jYWwgQWRtaW5pc3RyYXRvciAoam9obi9QYXNzd29yZDEyMyEpLg0KDQouRVhBTVBMRQ0KDQpJbnN0YWxsLVNlcnZpY2VCaW5hcnkgLU5hbWUgVnVsblNWQyAtVXNlck5hbWUgJ1RFU1RMQUJcam9obicNCg0KQmFja3MgdXAgdGhlIG9yaWdpbmFsIHNlcnZpY2UgYmluYXJ5IHRvIFNFUlZJQ0VfUEFUSC5leGUuYmFrIGFuZCByZXBsYWNlcyB0aGUgYmluYXJ5DQpmb3IgVnVsblNWQyB3aXRoIG9uZSB0aGF0IGFkZHMgVEVTVExBQlxqb2huIHRvIHRoZSBBZG1pbmlzdHJhdG9ycyBsb2NhbCBncm91cC4NCg0KLkVYQU1QTEUNCg0KSW5zdGFsbC1TZXJ2aWNlQmluYXJ5IC1OYW1lIFZ1bG5TVkMgLVVzZXJOYW1lIGJhY2tkb29yIC1QYXNzd29yZCBQYXNzd29yZDEyMyENCg0KQmFja3MgdXAgdGhlIG9yaWdpbmFsIHNlcnZpY2UgYmluYXJ5IHRvIFNFUlZJQ0VfUEFUSC5leGUuYmFrIGFuZCByZXBsYWNlcyB0aGUgYmluYXJ5DQpmb3IgVnVsblNWQyB3aXRoIG9uZSB0aGF0IGFkZHMgYSBsb2NhbCBBZG1pbmlzdHJhdG9yIChiYWNrZG9vci9QYXNzd29yZDEyMyEpLg0KDQouRVhBTVBMRQ0KDQpJbnN0YWxsLVNlcnZpY2VCaW5hcnkgLU5hbWUgVnVsblNWQyAtQ29tbWFuZCAibmV0IC4uLiINCg0KQmFja3MgdXAgdGhlIG9yaWdpbmFsIHNlcnZpY2UgYmluYXJ5IHRvIFNFUlZJQ0VfUEFUSC5leGUuYmFrIGFuZCByZXBsYWNlcyB0aGUgYmluYXJ5DQpmb3IgVnVsblNWQyB3aXRoIG9uZSB0aGF0IGV4ZWN1dGVzIGEgY3VzdG9tIGNvbW1hbmQuDQoNCi5PVVRQVVRTDQoNClBvd2VyVXAuU2VydmljZUJpbmFyeS5JbnN0YWxsZWQNCiM+DQoNCiAgICBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNTaG91bGRQcm9jZXNzJywgJycpXQ0KICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU0F2b2lkVXNpbmdVc2VyTmFtZUFuZFBhc3NXb3JkUGFyYW1zJywgJycpXQ0KICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU0F2b2lkVXNpbmdQbGFpblRleHRGb3JQYXNzd29yZCcsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnUG93ZXJVcC5TZXJ2aWNlQmluYXJ5Lkluc3RhbGxlZCcpXQ0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oDQogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAwLCBNYW5kYXRvcnkgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmUgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmVCeVByb3BlcnR5TmFtZSA9ICRUcnVlKV0NCiAgICAgICAgW0FsaWFzKCdTZXJ2aWNlTmFtZScpXQ0KICAgICAgICBbU3RyaW5nXQ0KICAgICAgICBbVmFsaWRhdGVOb3ROdWxsT3JFbXB0eSgpXQ0KICAgICAgICAkTmFtZSwNCg0KICAgICAgICBbU3RyaW5nXQ0KICAgICAgICAkVXNlck5hbWUgPSAnam9obicsDQoNCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgJFBhc3N3b3JkID0gJ1Bhc3N3b3JkMTIzIScsDQoNCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgJExvY2FsR3JvdXAgPSAnQWRtaW5pc3RyYXRvcnMnLA0KDQogICAgICAgIFtNYW5hZ2VtZW50LkF1dG9tYXRpb24uUFNDcmVkZW50aWFsXQ0KICAgICAgICBbTWFuYWdlbWVudC5BdXRvbWF0aW9uLkNyZWRlbnRpYWxBdHRyaWJ1dGUoKV0NCiAgICAgICAgJENyZWRlbnRpYWwgPSBbTWFuYWdlbWVudC5BdXRvbWF0aW9uLlBTQ3JlZGVudGlhbF06OkVtcHR5LA0KDQogICAgICAgIFtTdHJpbmddDQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgICRDb21tYW5kDQogICAgKQ0KDQogICAgQkVHSU4gew0KICAgICAgICBpZiAoJFBTQm91bmRQYXJhbWV0ZXJzWydDb21tYW5kJ10pIHsNCiAgICAgICAgICAgICRTZXJ2aWNlQ29tbWFuZCA9ICRDb21tYW5kDQogICAgICAgIH0NCiAgICAgICAgZWxzZSB7DQogICAgICAgICAgICBpZiAoJFBTQm91bmRQYXJhbWV0ZXJzWydDcmVkZW50aWFsJ10pIHsNCiAgICAgICAgICAgICAgICAkVXNlck5hbWVUb0FkZCA9ICRDcmVkZW50aWFsLlVzZXJOYW1lDQogICAgICAgICAgICAgICAgJFBhc3N3b3JkVG9BZGQgPSAkQ3JlZGVudGlhbC5HZXROZXR3b3JrQ3JlZGVudGlhbCgpLlBhc3N3b3JkDQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAkVXNlck5hbWVUb0FkZCA9ICRVc2VyTmFtZQ0KICAgICAgICAgICAgICAgICRQYXNzd29yZFRvQWRkID0gJFBhc3N3b3JkDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmICgkVXNlck5hbWVUb0FkZC5Db250YWlucygnXCcpKSB7DQogICAgICAgICAgICAgICAgIyBvbmx5IGFkZGluZyBhIGRvbWFpbiB1c2VyIHRvIHRoZSBsb2NhbCBncm91cCwgbm8gdXNlciBjcmVhdGlvbg0KICAgICAgICAgICAgICAgICRTZXJ2aWNlQ29tbWFuZCA9ICJuZXQgbG9jYWxncm91cCAkTG9jYWxHcm91cCAkVXNlck5hbWVUb0FkZCAvYWRkIg0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgIyBjcmVhdGUgYSBsb2NhbCB1c2VyIGFuZCBhZGQgaXQgdG8gdGhlIGxvY2FsIHNwZWNpZmllZCBncm91cA0KICAgICAgICAgICAgICAgICRTZXJ2aWNlQ29tbWFuZCA9ICJuZXQgdXNlciAkVXNlck5hbWVUb0FkZCAkUGFzc3dvcmRUb0FkZCAvYWRkICYmIHRpbWVvdXQgL3QgNSAmJiBuZXQgbG9jYWxncm91cCAkTG9jYWxHcm91cCAkVXNlck5hbWVUb0FkZCAvYWRkIg0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgUFJPQ0VTUyB7DQogICAgICAgICRUYXJnZXRTZXJ2aWNlID0gR2V0LVNlcnZpY2UgLU5hbWUgJE5hbWUgLUVycm9yQWN0aW9uIFN0b3ANCiAgICAgICAgJFNlcnZpY2VEZXRhaWxzID0gJFRhcmdldFNlcnZpY2UgfCBHZXQtU2VydmljZURldGFpbA0KICAgICAgICAkTW9kaWZpYWJsZUZpbGVzID0gJFNlcnZpY2VEZXRhaWxzLlBhdGhOYW1lIHwgR2V0LU1vZGlmaWFibGVQYXRoIC1MaXRlcmFsDQoNCiAgICAgICAgaWYgKC1ub3QgJE1vZGlmaWFibGVGaWxlcykgew0KICAgICAgICAgICAgdGhyb3cgIlNlcnZpY2UgYmluYXJ5ICckKCRTZXJ2aWNlRGV0YWlscy5QYXRoTmFtZSknIGZvciBzZXJ2aWNlICQoJFNlcnZpY2VEZXRhaWxzLk5hbWUpIG5vdCBtb2RpZmlhYmxlIGJ5IHRoZSBjdXJyZW50IHVzZXIuIg0KICAgICAgICB9DQoNCiAgICAgICAgJFNlcnZpY2VQYXRoID0gJE1vZGlmaWFibGVGaWxlcyB8IFNlbGVjdC1PYmplY3QgLUZpcnN0IDEgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmRQcm9wZXJ0eSBNb2RpZmlhYmxlUGF0aA0KICAgICAgICAkQmFja3VwUGF0aCA9ICIkKCRTZXJ2aWNlUGF0aCkuYmFrIg0KDQogICAgICAgIFdyaXRlLVZlcmJvc2UgIkJhY2tpbmcgdXAgJyRTZXJ2aWNlUGF0aCcgdG8gJyRCYWNrdXBQYXRoJyINCg0KICAgICAgICB0cnkgew0KICAgICAgICAgICAgQ29weS1JdGVtIC1QYXRoICRTZXJ2aWNlUGF0aCAtRGVzdGluYXRpb24gJEJhY2t1cFBhdGggLUZvcmNlDQogICAgICAgIH0NCiAgICAgICAgY2F0Y2ggew0KICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiRXJyb3IgYmFja2luZyB1cCAnJFNlcnZpY2VQYXRoJyA6ICRfIg0KICAgICAgICB9DQoNCiAgICAgICAgJFJlc3VsdCA9IFdyaXRlLVNlcnZpY2VCaW5hcnkgLU5hbWUgJFNlcnZpY2VEZXRhaWxzLk5hbWUgLUNvbW1hbmQgJFNlcnZpY2VDb21tYW5kIC1QYXRoICRTZXJ2aWNlUGF0aA0KICAgICAgICAkUmVzdWx0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ0JhY2t1cFBhdGgnICRCYWNrdXBQYXRoDQogICAgICAgICRSZXN1bHQuUFNPYmplY3QuVHlwZU5hbWVzLkluc2VydCgwLCAnUG93ZXJVcC5TZXJ2aWNlQmluYXJ5Lkluc3RhbGxlZCcpDQogICAgICAgICRSZXN1bHQNCiAgICB9DQp9DQoNCg0KZnVuY3Rpb24gUmVzdG9yZS1TZXJ2aWNlQmluYXJ5IHsNCjwjDQouU1lOT1BTSVMNCg0KUmVzdG9yZXMgYSBzZXJ2aWNlIGJpbmFyeSBiYWNrZWQgdXAgYnkgSW5zdGFsbC1TZXJ2aWNlQmluYXJ5Lg0KDQpBdXRob3I6IFdpbGwgU2Nocm9lZGVyIChAaGFybWoweSkgIA0KTGljZW5zZTogQlNEIDMtQ2xhdXNlICANClJlcXVpcmVkIERlcGVuZGVuY2llczogR2V0LVNlcnZpY2VEZXRhaWwsIEdldC1Nb2RpZmlhYmxlUGF0aCAgDQoNCi5ERVNDUklQVElPTg0KDQpUYWtlcyBhIHNlcnZpY2UgTmFtZSBvciBhIFNlcnZpY2VQcm9jZXNzLlNlcnZpY2VDb250cm9sbGVyIG9uIHRoZSBwaXBlbGluZSBhbmQNCmNoZWNrcyBmb3IgdGhlIGV4aXN0ZW5jZSBvZiBhbiAiT3JpZ2luYWxTZXJ2aWNlQmluYXJ5LmV4ZS5iYWsiIGluIHRoZSBzZXJ2aWNlDQpiaW5hcnkgbG9jYXRpb24uIElmIGl0IGV4aXN0cywgdGhlIGJhY2t1cCBiaW5hcnkgaXMgcmVzdG9yZWQgdG8gdGhlIG9yaWdpbmFsDQpiaW5hcnkgcGF0aC4NCg0KLlBBUkFNRVRFUiBOYW1lDQoNClRoZSBzZXJ2aWNlIG5hbWUgdG8gcmVzdG9yZSBhIGJpbmFyeSBmb3IuDQoNCi5QQVJBTUVURVIgQmFja3VwUGF0aA0KDQpPcHRpb25hbCBtYW51YWwgcGF0aCB0byB0aGUgYmFja3VwIGJpbmFyeS4NCg0KLkVYQU1QTEUNCg0KUmVzdG9yZS1TZXJ2aWNlQmluYXJ5IC1OYW1lIFZ1bG5TVkMNCg0KUmVzdG9yZSB0aGUgb3JpZ2luYWwgYmluYXJ5IGZvciB0aGUgc2VydmljZSAnVnVsblNWQycuDQoNCi5FWEFNUExFDQoNCkdldC1TZXJ2aWNlIFZ1bG5TVkMgfCBSZXN0b3JlLVNlcnZpY2VCaW5hcnkNCg0KUmVzdG9yZSB0aGUgb3JpZ2luYWwgYmluYXJ5IGZvciB0aGUgc2VydmljZSAnVnVsblNWQycuDQoNCi5FWEFNUExFDQoNClJlc3RvcmUtU2VydmljZUJpbmFyeSAtTmFtZSBWdWxuU1ZDIC1CYWNrdXBQYXRoICdDOlx0ZW1wXGJhY2t1cC5leGUnDQoNClJlc3RvcmUgdGhlIG9yaWdpbmFsIGJpbmFyeSBmb3IgdGhlIHNlcnZpY2UgJ1Z1bG5TVkMnIGZyb20gYSBjdXN0b20gbG9jYXRpb24uDQoNCi5PVVRQVVRTDQoNClBvd2VyVXAuU2VydmljZUJpbmFyeS5JbnN0YWxsZWQNCiM+DQoNCiAgICBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNTaG91bGRQcm9jZXNzJywgJycpXQ0KICAgIFtPdXRwdXRUeXBlKCdQb3dlclVwLlNlcnZpY2VCaW5hcnkuUmVzdG9yZWQnKV0NCiAgICBbQ21kbGV0QmluZGluZygpXQ0KICAgIFBhcmFtKA0KICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJFRydWUsIFZhbHVlRnJvbVBpcGVsaW5lID0gJFRydWUsIFZhbHVlRnJvbVBpcGVsaW5lQnlQcm9wZXJ0eU5hbWUgPSAkVHJ1ZSldDQogICAgICAgIFtBbGlhcygnU2VydmljZU5hbWUnKV0NCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0NCiAgICAgICAgJE5hbWUsDQoNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDEpXQ0KICAgICAgICBbVmFsaWRhdGVTY3JpcHQoe1Rlc3QtUGF0aCAtUGF0aCAkXyB9KV0NCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgJEJhY2t1cFBhdGgNCiAgICApDQoNCiAgICBQUk9DRVNTIHsNCiAgICAgICAgJFRhcmdldFNlcnZpY2UgPSBHZXQtU2VydmljZSAtTmFtZSAkTmFtZSAtRXJyb3JBY3Rpb24gU3RvcA0KICAgICAgICAkU2VydmljZURldGFpbHMgPSAkVGFyZ2V0U2VydmljZSB8IEdldC1TZXJ2aWNlRGV0YWlsDQogICAgICAgICRNb2RpZmlhYmxlRmlsZXMgPSAkU2VydmljZURldGFpbHMuUGF0aE5hbWUgfCBHZXQtTW9kaWZpYWJsZVBhdGggLUxpdGVyYWwNCg0KICAgICAgICBpZiAoLW5vdCAkTW9kaWZpYWJsZUZpbGVzKSB7DQogICAgICAgICAgICB0aHJvdyAiU2VydmljZSBiaW5hcnkgJyQoJFNlcnZpY2VEZXRhaWxzLlBhdGhOYW1lKScgZm9yIHNlcnZpY2UgJCgkU2VydmljZURldGFpbHMuTmFtZSkgbm90IG1vZGlmaWFibGUgYnkgdGhlIGN1cnJlbnQgdXNlci4iDQogICAgICAgIH0NCg0KICAgICAgICAkU2VydmljZVBhdGggPSAkTW9kaWZpYWJsZUZpbGVzIHwgU2VsZWN0LU9iamVjdCAtRmlyc3QgMSB8IFNlbGVjdC1PYmplY3QgLUV4cGFuZFByb3BlcnR5IE1vZGlmaWFibGVQYXRoDQogICAgICAgICRCYWNrdXBQYXRoID0gIiQoJFNlcnZpY2VQYXRoKS5iYWsiDQoNCiAgICAgICAgQ29weS1JdGVtIC1QYXRoICRCYWNrdXBQYXRoIC1EZXN0aW5hdGlvbiAkU2VydmljZVBhdGggLUZvcmNlDQogICAgICAgIFJlbW92ZS1JdGVtIC1QYXRoICRCYWNrdXBQYXRoIC1Gb3JjZQ0KDQogICAgICAgICRPdXQgPSBOZXctT2JqZWN0IFBTT2JqZWN0DQogICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnU2VydmljZU5hbWUnICRTZXJ2aWNlRGV0YWlscy5OYW1lDQogICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnU2VydmljZVBhdGgnICRTZXJ2aWNlUGF0aA0KICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ0JhY2t1cFBhdGgnICRCYWNrdXBQYXRoDQogICAgICAgICRPdXQuUFNPYmplY3QuVHlwZU5hbWVzLkluc2VydCgwLCAnUG93ZXJVcC5TZXJ2aWNlQmluYXJ5LlJlc3RvcmVkJykNCiAgICAgICAgJE91dA0KICAgIH0NCn0NCg0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIw0KIyBETEwgSGlqYWNraW5nDQojDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQpmdW5jdGlvbiBGaW5kLVByb2Nlc3NETExIaWphY2sgew0KPCMNCi5TWU5PUFNJUw0KDQpGaW5kcyBhbGwgRExMIGhpamFjayBsb2NhdGlvbnMgZm9yIGN1cnJlbnRseSBydW5uaW5nIHByb2Nlc3Nlcy4NCg0KQXV0aG9yOiBXaWxsIFNjaHJvZWRlciAoQGhhcm1qMHkpICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IE5vbmUgIA0KDQouREVTQ1JJUFRJT04NCg0KRW51bWVyYXRlcyBhbGwgY3VycmVudGx5IHJ1bm5pbmcgcHJvY2Vzc2VzIHdpdGggR2V0LVByb2Nlc3MgKG9yIGFjY2VwdHMgYW4NCmlucHV0IHByb2Nlc3Mgb2JqZWN0IGZyb20gR2V0LVByb2Nlc3MpIGFuZCBlbnVtZXJhdGVzIHRoZSBsb2FkZWQgbW9kdWxlcyBmb3IgZWFjaC4NCkFsbCBsb2FkZWQgbW9kdWxlIG5hbWUgZXhpc3RzIG91dHNpZGUgb2YgdGhlIHByb2Nlc3MgYmluYXJ5IGJhc2UgcGF0aCwgYXMgdGhvc2UNCmFyZSBETEwgbG9hZC1vcmRlciBoaWphY2sgY2FuZGlkYXRlcy4NCg0KLlBBUkFNRVRFUiBOYW1lDQoNClRoZSBuYW1lIG9mIGEgcHJvY2VzcyB0byBlbnVtZXJhdGUgZm9yIHBvc3NpYmxlIERMTCBwYXRoIGhpamFjayBvcHBvcnR1bml0aWVzLg0KDQouUEFSQU1FVEVSIEV4Y2x1ZGVXaW5kb3dzDQoNCkV4Y2x1ZGUgcGF0aHMgZnJvbSBDOlxXaW5kb3dzXCogaW5zdGVhZCBvZiBqdXN0IEM6XFdpbmRvd3NcU3lzdGVtMzJcKg0KDQouUEFSQU1FVEVSIEV4Y2x1ZGVQcm9ncmFtRmlsZXMNCg0KRXhjbHVkZSBwYXRocyBmcm9tIEM6XFByb2dyYW0gRmlsZXNcKiBhbmQgQzpcUHJvZ3JhbSBGaWxlcyAoeDg2KVwqDQoNCi5QQVJBTUVURVIgRXhjbHVkZU93bmVkDQoNCkV4Y2x1ZGUgcHJvY2Vzc2VzIHRoZSBjdXJyZW50IHVzZXIgb3ducy4NCg0KLkVYQU1QTEUNCg0KRmluZC1Qcm9jZXNzRExMSGlqYWNrDQoNCkZpbmRzIHBvc3NpYmxlIGhpamFja2FibGUgRExMIGxvY2F0aW9ucyBmb3IgYWxsIHByb2Nlc3Nlcy4NCg0KLkVYQU1QTEUNCg0KR2V0LVByb2Nlc3MgVnVsblByb2Nlc3MgfCBGaW5kLVByb2Nlc3NETExIaWphY2sNCg0KRmluZHMgcG9zc2libGUgaGlqYWNrYWJsZSBETEwgbG9jYXRpb25zIGZvciB0aGUgJ1Z1bG5Qcm9jZXNzJyBwcm9jZXNzZXMuDQoNCi5FWEFNUExFDQoNCkZpbmQtUHJvY2Vzc0RMTEhpamFjayAtRXhjbHVkZVdpbmRvd3MgLUV4Y2x1ZGVQcm9ncmFtRmlsZXMNCg0KRmluZHMgcG9zc2libGUgaGlqYWNrYWJsZSBETEwgbG9jYXRpb25zIG5vdCBpbiBDOlxXaW5kb3dzXCogYW5kDQpub3QgaW4gQzpcUHJvZ3JhbSBGaWxlc1wqIG9yIEM6XFByb2dyYW0gRmlsZXMgKHg4NilcKg0KDQouRVhBTVBMRQ0KDQpGaW5kLVByb2Nlc3NETExIaWphY2sgLUV4Y2x1ZGVPd25lZA0KDQpGaW5kcyBwb3NzaWJsZSBoaWphY2thYmxlIERMTCBsb2NhdGlvbiBmb3IgcHJvY2Vzc2VzIG5vdCBvd25lZCBieSB0aGUNCmN1cnJlbnQgdXNlci4NCg0KLk9VVFBVVFMNCg0KUG93ZXJVcC5IaWphY2thYmxlRExMLlByb2Nlc3MNCg0KLkxJTksNCg0KaHR0cHM6Ly93d3cubWFuZGlhbnQuY29tL2Jsb2cvbWFsd2FyZS1wZXJzaXN0ZW5jZS13aW5kb3dzLXJlZ2lzdHJ5Lw0KIz4NCg0KICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU1Nob3VsZFByb2Nlc3MnLCAnJyldDQogICAgW091dHB1dFR5cGUoJ1Bvd2VyVXAuSGlqYWNrYWJsZURMTC5Qcm9jZXNzJyldDQogICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICBQYXJhbSgNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDAsIFZhbHVlRnJvbVBpcGVsaW5lID0gJFRydWUsIFZhbHVlRnJvbVBpcGVsaW5lQnlQcm9wZXJ0eU5hbWUgPSAkVHJ1ZSldDQogICAgICAgIFtBbGlhcygnUHJvY2Vzc05hbWUnKV0NCiAgICAgICAgW1N0cmluZ1tdXQ0KICAgICAgICAkTmFtZSA9ICQoR2V0LVByb2Nlc3MgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmQgTmFtZSksDQoNCiAgICAgICAgW1N3aXRjaF0NCiAgICAgICAgJEV4Y2x1ZGVXaW5kb3dzLA0KDQogICAgICAgIFtTd2l0Y2hdDQogICAgICAgICRFeGNsdWRlUHJvZ3JhbUZpbGVzLA0KDQogICAgICAgIFtTd2l0Y2hdDQogICAgICAgICRFeGNsdWRlT3duZWQNCiAgICApDQoNCiAgICBCRUdJTiB7DQogICAgICAgICMgdGhlIGtub3duIERMTCBjYWNoZSB0byBleGNsdWRlIGZyb20gb3VyIGZpbmRpbmdzDQogICAgICAgICMgICBodHRwOi8vYmxvZ3MubXNkbi5jb20vYi9sYXJyeW9zdGVybWFuL2FyY2hpdmUvMjAwNC8wNy8xOS8xODc3NTIuYXNweA0KICAgICAgICAkS2V5cyA9IChHZXQtSXRlbSAiSEtMTTpcU3lzdGVtXEN1cnJlbnRDb250cm9sU2V0XENvbnRyb2xcU2Vzc2lvbiBNYW5hZ2VyXEtub3duRExMcyIpDQogICAgICAgICRLbm93bkRMTHMgPSAkKEZvckVhY2ggKCRLZXlOYW1lIGluICRLZXlzLkdldFZhbHVlTmFtZXMoKSkgeyAkS2V5cy5HZXRWYWx1ZSgkS2V5TmFtZSkudG9sb3dlcigpIH0pIHwgV2hlcmUtT2JqZWN0IHsgJF8uRW5kc1dpdGgoIi5kbGwiKSB9DQogICAgICAgICRLbm93bkRMTFBhdGhzID0gJChGb3JFYWNoICgkbmFtZSBpbiAkS2V5cy5HZXRWYWx1ZU5hbWVzKCkpIHsgJEtleXMuR2V0VmFsdWUoJG5hbWUpLnRvbG93ZXIoKSB9KSB8IFdoZXJlLU9iamVjdCB7IC1ub3QgJF8uRW5kc1dpdGgoIi5kbGwiKSB9DQogICAgICAgICRLbm93bkRMTHMgKz0gRm9yRWFjaCAoJHBhdGggaW4gJEtub3duRExMUGF0aHMpIHsgbHMgLWZvcmNlICRwYXRoXCouZGxsIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kUHJvcGVydHkgTmFtZSB8IEZvckVhY2gtT2JqZWN0IHsgJF8udG9sb3dlcigpIH19DQogICAgICAgICRDdXJyZW50VXNlciA9IFtTeXN0ZW0uU2VjdXJpdHkuUHJpbmNpcGFsLldpbmRvd3NJZGVudGl0eV06OkdldEN1cnJlbnQoKS5OYW1lDQoNCiAgICAgICAgIyBnZXQgdGhlIG93bmVycyBmb3IgYWxsIHByb2Nlc3Nlcw0KICAgICAgICAkT3duZXJzID0gQHt9DQogICAgICAgIEdldC1XbWlPYmplY3QgLUNsYXNzIHdpbjMyX3Byb2Nlc3MgfCBXaGVyZS1PYmplY3QgeyRffSB8IEZvckVhY2gtT2JqZWN0IHsgJE93bmVyc1skXy5oYW5kbGVdID0gJF8uZ2V0b3duZXIoKS51c2VyIH0NCiAgICB9DQoNCiAgICBQUk9DRVNTIHsNCg0KICAgICAgICBGb3JFYWNoICgkUHJvY2Vzc05hbWUgaW4gJE5hbWUpIHsNCg0KICAgICAgICAgICAgJFRhcmdldFByb2Nlc3MgPSBHZXQtUHJvY2VzcyAtTmFtZSAkUHJvY2Vzc05hbWUNCg0KICAgICAgICAgICAgaWYgKCRUYXJnZXRQcm9jZXNzIC1hbmQgJFRhcmdldFByb2Nlc3MuUGF0aCAtYW5kICgkVGFyZ2V0UHJvY2Vzcy5QYXRoIC1uZSAnJykgLWFuZCAoJE51bGwgLW5lICRUYXJnZXRQcm9jZXNzLlBhdGgpKSB7DQoNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAkQmFzZVBhdGggPSAkVGFyZ2V0UHJvY2Vzcy5QYXRoIHwgU3BsaXQtUGF0aCAtUGFyZW50DQogICAgICAgICAgICAgICAgICAgICRMb2FkZWRNb2R1bGVzID0gJFRhcmdldFByb2Nlc3MuTW9kdWxlcw0KICAgICAgICAgICAgICAgICAgICAkUHJvY2Vzc093bmVyID0gJE93bmVyc1skVGFyZ2V0UHJvY2Vzcy5JZC5Ub1N0cmluZygpXQ0KDQogICAgICAgICAgICAgICAgICAgIEZvckVhY2ggKCRNb2R1bGUgaW4gJExvYWRlZE1vZHVsZXMpew0KDQogICAgICAgICAgICAgICAgICAgICAgICAkTW9kdWxlUGF0aCA9ICIkQmFzZVBhdGhcJCgkTW9kdWxlLk1vZHVsZU5hbWUpIg0KDQogICAgICAgICAgICAgICAgICAgICAgICAjIGlmIHRoZSBtb2R1bGUgcGF0aCBkb2Vzbid0IGV4aXN0IGluIHRoZSBwcm9jZXNzIGJhc2UgcGF0aCBmb2xkZXINCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoLW5vdCAkTW9kdWxlUGF0aC5Db250YWlucygnQzpcV2luZG93c1xTeXN0ZW0zMicpKSAtYW5kICgtbm90IChUZXN0LVBhdGggLVBhdGggJE1vZHVsZVBhdGgpKSAtYW5kICgkS25vd25ETExzIC1Ob3RDb250YWlucyAkTW9kdWxlLk1vZHVsZU5hbWUpKSB7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkRXhjbHVkZSA9ICRGYWxzZQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRQU0JvdW5kUGFyYW1ldGVyc1snRXhjbHVkZVdpbmRvd3MnXSAtYW5kICRNb2R1bGVQYXRoLkNvbnRhaW5zKCdDOlxXaW5kb3dzJykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJEV4Y2x1ZGUgPSAkVHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkUFNCb3VuZFBhcmFtZXRlcnNbJ0V4Y2x1ZGVQcm9ncmFtRmlsZXMnXSAtYW5kICRNb2R1bGVQYXRoLkNvbnRhaW5zKCdDOlxQcm9ncmFtIEZpbGVzJykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJEV4Y2x1ZGUgPSAkVHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkUFNCb3VuZFBhcmFtZXRlcnNbJ0V4Y2x1ZGVPd25lZCddIC1hbmQgJEN1cnJlbnRVc2VyLkNvbnRhaW5zKCRQcm9jZXNzT3duZXIpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRFeGNsdWRlID0gJFRydWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIG91dHB1dCB0aGUgcHJvY2VzcyBuYW1lIGFuZCBoaWphY2thYmxlIHBhdGggaWYgZXhjbHVzaW9uIHdhc24ndCBtYXJrZWQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoLW5vdCAkRXhjbHVkZSl7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRPdXQgPSBOZXctT2JqZWN0IFBTT2JqZWN0DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnUHJvY2Vzc05hbWUnICRUYXJnZXRQcm9jZXNzLlByb2Nlc3NOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnUHJvY2Vzc1BhdGgnICRUYXJnZXRQcm9jZXNzLlBhdGgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdQcm9jZXNzT3duZXInICRQcm9jZXNzT3duZXINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdQcm9jZXNzSGlqYWNrYWJsZURMTCcgJE1vZHVsZVBhdGgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJE91dC5QU09iamVjdC5UeXBlTmFtZXMuSW5zZXJ0KDAsICdQb3dlclVwLkhpamFja2FibGVETEwuUHJvY2VzcycpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRPdXQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgY2F0Y2ggew0KICAgICAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJFcnJvcjogJF8iDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ0KDQoNCmZ1bmN0aW9uIEZpbmQtUGF0aERMTEhpamFjayB7DQo8Iw0KLlNZTk9QU0lTDQoNCkZpbmRzIGFsbCBkaXJlY3RvcmllcyBpbiB0aGUgc3lzdGVtICVQQVRIJSB0aGF0IGFyZSBtb2RpZmlhYmxlIGJ5IHRoZSBjdXJyZW50IHVzZXIuDQoNCkF1dGhvcjogV2lsbCBTY2hyb2VkZXIgKEBoYXJtajB5KSAgDQpMaWNlbnNlOiBCU0QgMy1DbGF1c2UgIA0KUmVxdWlyZWQgRGVwZW5kZW5jaWVzOiBHZXQtTW9kaWZpYWJsZVBhdGggIA0KDQouREVTQ1JJUFRJT04NCg0KRW51bWVyYXRlcyB0aGUgcGF0aHMgc3RvcmVkIGluIEVudjpQYXRoICglUEFUSCkgYW5kIGZpbHRlcnMgZWFjaCB0aHJvdWdoIEdldC1Nb2RpZmlhYmxlUGF0aA0KdG8gcmV0dXJuIHRoZSBmb2xkZXIgcGF0aHMgdGhlIGN1cnJlbnQgdXNlciBjYW4gd3JpdGUgdG8uIE9uIFdpbmRvd3MgNywgaWYgd2xic2N0cmwuZGxsIGlzDQp3cml0dGVuIHRvIG9uZSBvZiB0aGVzZSBwYXRocywgZXhlY3V0aW9uIGZvciB0aGUgSUtFRVhUIGNhbiBiZSBoaWphY2tlZCBkdWUgdG8gRExMIHNlYXJjaA0Kb3JkZXIgbG9hZGluZy4NCg0KLkVYQU1QTEUNCg0KRmluZC1QYXRoRExMSGlqYWNrDQoNCkZpbmRzIGFsbCAlUEFUSCUgLkRMTCBoaWphY2tpbmcgb3Bwb3J0dW5pdGllcy4NCg0KLk9VVFBVVFMNCg0KUG93ZXJVcC5IaWphY2thYmxlRExMLlBhdGgNCg0KLkxJTksNCg0KaHR0cDovL3d3dy5ncmV5aGF0aGFja2VyLm5ldC8/cD03MzgNCiM+DQoNCiAgICBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNTaG91bGRQcm9jZXNzJywgJycpXQ0KICAgIFtPdXRwdXRUeXBlKCdQb3dlclVwLkhpamFja2FibGVETEwuUGF0aCcpXQ0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oKQ0KDQogICAgIyB1c2UgLUxpdGVyYWwgc28gdGhlIHNwYWNlcyBpbiAlUEFUSCUgZm9sZGVycyBhcmUgbm90IHRva2VuaXplZA0KICAgIEdldC1JdGVtIEVudjpQYXRoIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kUHJvcGVydHkgVmFsdWUgfCBGb3JFYWNoLU9iamVjdCB7ICRfLnNwbGl0KCc7JykgfSB8IFdoZXJlLU9iamVjdCB7JF8gLWFuZCAoJF8gLW5lICcnKX0gfCBGb3JFYWNoLU9iamVjdCB7DQogICAgICAgICRUYXJnZXRQYXRoID0gJF8NCiAgICAgICAgJE1vZGlmaWRhYmxlUGF0aHMgPSAkVGFyZ2V0UGF0aCB8IEdldC1Nb2RpZmlhYmxlUGF0aCAtTGl0ZXJhbCB8IFdoZXJlLU9iamVjdCB7JF8gLWFuZCAoJE51bGwgLW5lICRfKSAtYW5kICgkTnVsbCAtbmUgJF8uTW9kaWZpYWJsZVBhdGgpIC1hbmQgKCRfLk1vZGlmaWFibGVQYXRoLlRyaW0oKSAtbmUgJycpfQ0KICAgICAgICBGb3JFYWNoICgkTW9kaWZpZGFibGVQYXRoIGluICRNb2RpZmlkYWJsZVBhdGhzKSB7DQogICAgICAgICAgICBpZiAoJE51bGwgLW5lICRNb2RpZmlkYWJsZVBhdGguTW9kaWZpYWJsZVBhdGgpIHsNCiAgICAgICAgICAgICAgICAkTW9kaWZpZGFibGVQYXRoIHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJyVQQVRIJScgJF8NCiAgICAgICAgICAgICAgICAkTW9kaWZpZGFibGVQYXRoIHwgQWRkLU1lbWJlciBBbGlhc3Byb3BlcnR5IE5hbWUgJyVQQVRIJScNCiAgICAgICAgICAgICAgICAkTW9kaWZpZGFibGVQYXRoLlBTT2JqZWN0LlR5cGVOYW1lcy5JbnNlcnQoMCwgJ1Bvd2VyVXAuSGlqYWNrYWJsZURMTC5QYXRoJykNCiAgICAgICAgICAgICAgICAkTW9kaWZpZGFibGVQYXRoDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9DQoNCg0KZnVuY3Rpb24gV3JpdGUtSGlqYWNrRGxsIHsNCjwjDQouU1lOT1BTSVMNCg0KUGF0Y2hlcyBpbiB0aGUgcGF0aCB0byBhIHNwZWNpZmllZCAuYmF0IChjb250YWluaW5nIHRoZSBzcGVjaWZpZWQgY29tbWFuZCkgaW50byBhDQpwcmUtY29tcGlsZWQgaGlqYWNrYWJsZSBDKysgRExMIHdyaXRlcyB0aGUgRExMIG91dCB0byB0aGUgc3BlY2lmaWVkIFNlcnZpY2VQYXRoIGxvY2F0aW9uLg0KDQpBdXRob3I6IFdpbGwgU2Nocm9lZGVyIChAaGFybWoweSkgIA0KTGljZW5zZTogQlNEIDMtQ2xhdXNlICANClJlcXVpcmVkIERlcGVuZGVuY2llczogTm9uZSAgDQoNCi5ERVNDUklQVElPTg0KDQpGaXJzdCBidWlsZHMgYSBzZWxmLWRlbGV0aW5nIC5iYXQgZmlsZSB0aGF0IGV4ZWN1dGVzIHRoZSBzcGVjaWZpZWQgLUNvbW1hbmQgb3IgbG9jYWwgdXNlciwNCnRvIGFkZCBhbmQgd3JpdGVzIHRoZS5iYXQgb3V0IHRvIC1CYXRQYXRoLiBUaGUgQmF0UGF0aCBpcyB0aGVuIHBhdGNoZWQgaW50byBhIHByZS1jb21waWxlZA0KQysrIERMTCB0aGF0IGlzIGJ1aWx0IHRvIGJlIGhpamFja2FibGUgYnkgdGhlIElLRUVYVCBzZXJ2aWNlLiBUaGVyZSBhcmUgdHdvIERMTHMsIG9uZSBmb3INCng4NiBhbmQgb25lIGZvciB4NjQsIGFuZCBib3RoIGFyZSBjb250YWluZWQgYXMgYmFzZTY0LWVuY29kZWQgc3RyaW5ncy4gVGhlIERMTCBpcyB0aGVuDQp3cml0dGVuIG91dCB0byB0aGUgc3BlY2lmaWVkIE91dHB1dEZpbGUuDQoNCi5QQVJBTUVURVIgRGxsUGF0aA0KDQpGaWxlIG5hbWUgdG8gd3JpdGUgdGhlIGdlbmVyYXRlZCBETEwgb3V0IHRvLg0KDQouUEFSQU1FVEVSIEFyY2hpdGVjdHVyZQ0KDQpUaGUgQXJjaGl0ZWN0dXJlIHRvIGdlbmVyYXRlIGZvciB0aGUgRExMLCB4ODYgb3IgeDY0LiBJZiBub3Qgc3BlY2lmaWVkLCBQb3dlclVwDQp3aWxsIHRyeSB0byBhdXRvbWF0aWNhbGx5IGRldGVybWluZSB0aGUgY29ycmVjdCBhcmNoaXRlY3R1cmUuDQoNCi5QQVJBTUVURVIgQmF0UGF0aA0KDQpQYXRoIHRvIHRoZSAuYmF0IGZvciB0aGUgRExMIHRvIGxhdW5jaC4NCg0KLlBBUkFNRVRFUiBVc2VyTmFtZQ0KDQpUaGUgW2RvbWFpblxddXNlcm5hbWUgdG8gYWRkLiBJZiBub3QgZ2l2ZW4sIGl0IGRlZmF1bHRzIHRvICJqb2huIi4NCkRvbWFpbiB1c2VycyBhcmUgbm90IGNyZWF0ZWQsIG9ubHkgYWRkZWQgdG8gdGhlIHNwZWNpZmllZCBsb2NhbGdyb3VwLg0KDQouUEFSQU1FVEVSIFBhc3N3b3JkDQoNClRoZSBwYXNzd29yZCB0byBzZXQgZm9yIHRoZSBhZGRlZCB1c2VyLiBJZiBub3QgZ2l2ZW4sIGl0IGRlZmF1bHRzIHRvICJQYXNzd29yZDEyMyEiDQoNCi5QQVJBTUVURVIgTG9jYWxHcm91cA0KDQpMb2NhbCBncm91cCBuYW1lIHRvIGFkZCB0aGUgdXNlciB0byAoZGVmYXVsdCBvZiAnQWRtaW5pc3RyYXRvcnMnKS4NCg0KLlBBUkFNRVRFUiBDcmVkZW50aWFsDQoNCkEgW01hbmFnZW1lbnQuQXV0b21hdGlvbi5QU0NyZWRlbnRpYWxdIG9iamVjdCBzcGVjaWZ5aW5nIHRoZSB1c2VyL3Bhc3N3b3JkIHRvIGFkZC4NCg0KLlBBUkFNRVRFUiBDb21tYW5kDQoNCkN1c3RvbSBjb21tYW5kIHRvIGV4ZWN1dGUgaW5zdGVhZCBvZiB1c2VyIGNyZWF0aW9uLg0KDQouT1VUUFVUUw0KDQpQb3dlclVwLkhpamFja2FibGVETEwNCiM+DQoNCiAgICBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNTaG91bGRQcm9jZXNzJywgJycpXQ0KICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU0F2b2lkVXNpbmdVc2VyTmFtZUFuZFBhc3NXb3JkUGFyYW1zJywgJycpXQ0KICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU0F2b2lkVXNpbmdQbGFpblRleHRGb3JQYXNzd29yZCcsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnUG93ZXJVcC5IaWphY2thYmxlRExMJyldDQogICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICBQYXJhbSgNCiAgICAgICAgW1BhcmFtZXRlcihNYW5kYXRvcnkgPSAkVHJ1ZSldDQogICAgICAgIFtTdHJpbmddDQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgICREbGxQYXRoLA0KDQogICAgICAgIFtTdHJpbmddDQogICAgICAgIFtWYWxpZGF0ZVNldCgneDg2JywgJ3g2NCcpXQ0KICAgICAgICAkQXJjaGl0ZWN0dXJlLA0KDQogICAgICAgIFtTdHJpbmddDQogICAgICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldDQogICAgICAgICRCYXRQYXRoLA0KDQogICAgICAgIFtTdHJpbmddDQogICAgICAgICRVc2VyTmFtZSA9ICdqb2huJywNCg0KICAgICAgICBbU3RyaW5nXQ0KICAgICAgICAkUGFzc3dvcmQgPSAnUGFzc3dvcmQxMjMhJywNCg0KICAgICAgICBbU3RyaW5nXQ0KICAgICAgICAkTG9jYWxHcm91cCA9ICdBZG1pbmlzdHJhdG9ycycsDQoNCiAgICAgICAgW01hbmFnZW1lbnQuQXV0b21hdGlvbi5QU0NyZWRlbnRpYWxdDQogICAgICAgIFtNYW5hZ2VtZW50LkF1dG9tYXRpb24uQ3JlZGVudGlhbEF0dHJpYnV0ZSgpXQ0KICAgICAgICAkQ3JlZGVudGlhbCA9IFtNYW5hZ2VtZW50LkF1dG9tYXRpb24uUFNDcmVkZW50aWFsXTo6RW1wdHksDQoNCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0NCiAgICAgICAgJENvbW1hbmQNCiAgICApDQoNCiAgICBmdW5jdGlvbiBsb2NhbDpJbnZva2UtUGF0Y2hEbGwgew0KICAgIDwjDQogICAgLlNZTk9QU0lTDQoNCiAgICBIZWxwZXJzIHRoYXQgcGF0Y2hlcyBhIHN0cmluZyBpbiBhIGJpbmFyeSBieXRlIGFycmF5Lg0KDQogICAgLlBBUkFNRVRFUiBEbGxCeXRlcw0KDQogICAgVGhlIGJpbmFyeSBibG9iIHRvIHBhdGNoLg0KDQogICAgLlBBUkFNRVRFUiBTZWFyY2hTdHJpbmcNCg0KICAgIFRoZSBzdHJpbmcgdG8gcmVwbGFjZSBpbiB0aGUgYmxvYi4NCg0KICAgIC5QQVJBTUVURVIgUmVwbGFjZVN0cmluZw0KDQogICAgVGhlIHN0cmluZyB0byByZXBsYWNlIFNlYXJjaFN0cmluZyB3aXRoLg0KICAgICM+DQoNCiAgICAgICAgW091dHB1dFR5cGUoJ1N5c3RlbS5CeXRlW10nKV0NCiAgICAgICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICAgICAgUGFyYW0oDQogICAgICAgICAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeSA9ICRUcnVlKV0NCiAgICAgICAgICAgIFtCeXRlW11dDQogICAgICAgICAgICAkRGxsQnl0ZXMsDQoNCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoTWFuZGF0b3J5ID0gJFRydWUpXQ0KICAgICAgICAgICAgW1N0cmluZ10NCiAgICAgICAgICAgICRTZWFyY2hTdHJpbmcsDQoNCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoTWFuZGF0b3J5ID0gJFRydWUpXQ0KICAgICAgICAgICAgW1N0cmluZ10NCiAgICAgICAgICAgICRSZXBsYWNlU3RyaW5nDQogICAgICAgICkNCg0KICAgICAgICAkUmVwbGFjZVN0cmluZ0J5dGVzID0gKFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjgpLkdldEJ5dGVzKCRSZXBsYWNlU3RyaW5nKQ0KDQogICAgICAgICRJbmRleCA9IDANCiAgICAgICAgJFMgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpBU0NJSS5HZXRTdHJpbmcoJERsbEJ5dGVzKQ0KICAgICAgICAkSW5kZXggPSAkUy5JbmRleE9mKCRTZWFyY2hTdHJpbmcpDQoNCiAgICAgICAgaWYgKCRJbmRleCAtZXEgMCkgew0KICAgICAgICAgICAgdGhyb3coIkNvdWxkIG5vdCBmaW5kIHN0cmluZyAkU2VhcmNoU3RyaW5nICEiKQ0KICAgICAgICB9DQoNCiAgICAgICAgZm9yICgkaT0wOyAkaSAtbHQgJFJlcGxhY2VTdHJpbmdCeXRlcy5MZW5ndGg7ICRpKyspIHsNCiAgICAgICAgICAgICREbGxCeXRlc1skSW5kZXgrJGldPSRSZXBsYWNlU3RyaW5nQnl0ZXNbJGldDQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gJERsbEJ5dGVzDQogICAgfQ0KDQogICAgaWYgKCRQU0JvdW5kUGFyYW1ldGVyc1snQ29tbWFuZCddKSB7DQogICAgICAgICRCYXRDb21tYW5kID0gJENvbW1hbmQNCiAgICB9DQogICAgZWxzZSB7DQogICAgICAgIGlmICgkUFNCb3VuZFBhcmFtZXRlcnNbJ0NyZWRlbnRpYWwnXSkgew0KICAgICAgICAgICAgJFVzZXJOYW1lVG9BZGQgPSAkQ3JlZGVudGlhbC5Vc2VyTmFtZQ0KICAgICAgICAgICAgJFBhc3N3b3JkVG9BZGQgPSAkQ3JlZGVudGlhbC5HZXROZXR3b3JrQ3JlZGVudGlhbCgpLlBhc3N3b3JkDQogICAgICAgIH0NCiAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAkVXNlck5hbWVUb0FkZCA9ICRVc2VyTmFtZQ0KICAgICAgICAgICAgJFBhc3N3b3JkVG9BZGQgPSAkUGFzc3dvcmQNCiAgICAgICAgfQ0KDQogICAgICAgIGlmICgkVXNlck5hbWVUb0FkZC5Db250YWlucygnXCcpKSB7DQogICAgICAgICAgICAjIG9ubHkgYWRkaW5nIGEgZG9tYWluIHVzZXIgdG8gdGhlIGxvY2FsIGdyb3VwLCBubyB1c2VyIGNyZWF0aW9uDQogICAgICAgICAgICAkQmF0Q29tbWFuZCA9ICJuZXQgbG9jYWxncm91cCAkTG9jYWxHcm91cCAkVXNlck5hbWVUb0FkZCAvYWRkIg0KICAgICAgICB9DQogICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgIyBjcmVhdGUgYSBsb2NhbCB1c2VyIGFuZCBhZGQgaXQgdG8gdGhlIGxvY2FsIHNwZWNpZmllZCBncm91cA0KICAgICAgICAgICAgJEJhdENvbW1hbmQgPSAibmV0IHVzZXIgJFVzZXJOYW1lVG9BZGQgJFBhc3N3b3JkVG9BZGQgL2FkZCAmJiB0aW1lb3V0IC90IDUgJiYgbmV0IGxvY2FsZ3JvdXAgJExvY2FsR3JvdXAgJFVzZXJOYW1lVG9BZGQgL2FkZCINCiAgICAgICAgfQ0KICAgIH0NCg0KICAgICMgZ2VuZXJhdGUgd2l0aCBiYXNlNjQgLXcgMCBoaWphY2szMi5kbGwgPiBoaWphY2szMi5iNjQNCiAgICAkRGxsQnl0ZXMzMiA9ICJUVnFRQUFNQUFBQUVBQUFBLy84QUFMZ0FBQUFBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQTZBQUFBQTRmdWc0QXRBbk5JYmdCVE0waFZHaHBjeUJ3Y205bmNtRnRJR05oYm01dmRDQmlaU0J5ZFc0Z2FXNGdSRTlUSUcxdlpHVXVEUTBLSkFBQUFBQUFBQUE0aGx2cWZPYzF1WHpuTmJsODV6VzVaM3FldVdYbk5ibG5lcXU1Y3VjMXVXZDZuN2srNXpXNWRaK211WHZuTmJsODV6UzVPK2MxdVdkNm1ybC81elc1WjNxb3VYM25OYmxTYVdOb2ZPYzF1UUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFGQkZBQUJNQVFVQU5nQkNWZ0FBQUFBQUFBQUE0QUFDSVFzQkNnQUFUQUFBQUVvQUFBQUFBQUJjRXdBQUFCQUFBQUJnQUFBQUFBQVFBQkFBQUFBQ0FBQUZBQUVBQUFBQUFBVUFBUUFBQUFBQUFOQUFBQUFFQUFDSDd3QUFBZ0JBQVFBQUVBQUFFQUFBQUFBUUFBQVFBQUFBQUFBQUVBQUFBQUFBQUFBQUFBQUFISVFBQUZBQUFBQUFzQUFBdEFFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXdBQUFNQWNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFzSUFBQUVBQUFBQUFBQUFBQUFBQUFBQmdBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBTG5SbGVIUUFBQUJNU3dBQUFCQUFBQUJNQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBSUFBQVlDNXlaR0YwWVFBQUJDb0FBQUJnQUFBQUxBQUFBRkFBQUFBQUFBQUFBQUFBQUFBQUFFQUFBRUF1WkdGMFlRQUFBSHdaQUFBQWtBQUFBQXdBQUFCOEFBQUFBQUFBQUFBQUFBQUFBQUJBQUFEQUxuSnpjbU1BQUFDMEFRQUFBTEFBQUFBQ0FBQUFpQUFBQUFBQUFBQUFBQUFBQUFBQVFBQUFRQzV5Wld4dll3QUFyZzhBQUFEQUFBQUFFQUFBQUlvw3SVBzSUtFQWtBQVFNOFdKUmZ5TlJlaFFhUDhCRHdEL0ZSaGdBQkJRL3hVSVlBQVFoY0IxQlRQQVFPdFRqVVhnVUdnZ2dBQVFhZ0QvRlFSZ0FCQ0Z3SFRtaTBYZ2FnQ0pSZkNMUmVScUFHb1FpVVgwalVYc1VHb0EvM1hveDBYc0FRQUFBTWRGK0FJQUFBRC9GUUJnQUJDRndIU3ovM1hvL3hVUVlBQVFNOENMVGZ3enplaGNBQUFBeWNOV2l6VVVZQUFRYVBvQUFBRC8xdWhmLy8vL2hjQjFIMUJRYURpQUFCQm9qSUFBRUdpb2dBQVFVUDhWK0dBQUVHam9Bd0FBLzlZendGN0RWWXZzYUFRQkFBRG9JZ0FBQUl0RkRFaFpkUVhvcmYvLy96UEFRRjNDREFBN0RRQ1FBQkIxQXZQRDZZZ0NBQUNMLzFXTDdGM3AwZ01BQUdvSWFBQ0NBQkRvOGhNQUFJdEZESVA0QVhWNjZLWVRBQUNGd0hVSE04RHBPQUVBQU9pUUJ3QUFoY0IxQitpckV3QUE2K25vT2hNQUFQOFZKR0FBRUtONHFRQVE2Sk1TQUFDamhKc0FFT2pBREFBQWhjQjVCK2c4QkFBQTY4L292aEVBQUlYQWVDRG9QdzhBQUlYQWVCZHFBT2lDQ2dBQVdZWEFkUXYvQllDYkFCRHAwZ0FBQU9qTURnQUE2OGt6L3p2SGRWczVQWUNiQUJCK2dmOE5nSnNBRUlsOS9EazlESjhBRUhVRjZEUU1BQUE1ZlJCMUQraWNEZ0FBNk5jREFBRG9GeE1BQU1kRi9QNy8vLy9vQndBQUFPbUNBQUFBTS84NWZSQjFEb005UUpBQUVQOTBCZWlzQXdBQXcrdHFnL2dDZFZub2F3TUFBR2dVQWdBQWFnSG9yZ2dBQUZsWmkvQTc5dytFRFAvLy8xYi9OVUNRQUJEL05kU2VBQkQvRlNCZ0FCRC8wSVhBZEJkWFZ1aWtBd0FBV1ZuL0ZSeGdBQkNKQm9OT0JQL3JHRmJvN1FjQUFGbnAwUDcvLzRQNEEzVUhWK2p6QlFBQVdUUEFRT2ppRWdBQXdnd0FhZ3hvSUlJQUVPaU9FZ0FBaS9tTDhvdGRDRFBBUUlsRjVJWDJkUXc1RllDYkFCQVBoTVVBQUFDRFpmd0FPL0IwQllQK0FuVXVvVEJoQUJDRndIUUlWMVpULzlDSlJlU0RmZVFBRDRTV0FBQUFWMVpUNkVQKy8vK0pSZVNGd0ErRWd3QUFBRmRXVStqMi9mLy9pVVhrZy80QmRTU0Z3SFVnVjFCVDZPTDkvLzlYYWdCVDZCUCsvLytoTUdFQUVJWEFkQVpYYWdCVC85Q0Y5blFGZy80RGRTWlhWbFBvOC8zLy80WEFkUU1oUmVTRGZlUUFkQkdoTUdFQUVJWEFkQWhYVmxQLzBJbEY1TWRGL1A3Ly8vK0xSZVRySFl0RjdJc0lpd2xRVWVqeUZBQUFXVm5EaTJYb3gwWDgvdi8vL3pQQTZPb1JBQUREaS85VmkreURmUXdCZFFYbzdSUUFBUDkxQ0l0TkVJdFZET2pzL3YvL1dWM0NEQUNMLzFXTDdJSHNLQU1BQUtPZ25BQVFpUTJjbkFBUWlSV1luQUFRaVIyVW5BQVFpVFdRbkFBUWlUMk1uQUFRWm93VnVKd0FFR2FNRGF5Y0FCQm1qQjJJbkFBUVpvd0ZoSndBRUdhTUpZQ2NBQkJtakMxOG5BQVFuSThGc0p3QUVJdEZBS09rbkFBUWkwVUVvNmljQUJDTlJRaWp0SndBRUl1RjRQei8vOGNGOEpzQUVBRUFBUUNocUp3QUVLT2ttd0FReHdXWW13QVFDUVFBd01jRm5Kc0FFQUVBQUFDaEFKQUFFSW1GMlB6Ly82RUVrQUFRaVlYYy9QLy8veFUwWUFBUW8raWJBQkJxQWVpb0ZBQUFXV29BL3hVd1lBQVFhRFJoQUJEL0ZTeGdBQkNEUGVpYkFCQUFkUWhxQWVpRUZBQUFXV2dKQkFEQS94VVlZQUFRVVA4VktHQUFFTW5EeHdGQVlRQVE2U2tWQUFDTC8xV0w3RmFMOGNjR1FHRUFFT2dXRlFBQTlrVUlBWFFIVnVpU0ZRQUFXWXZHWGwzQ0JBQ0wvMVdMN0ZiL2RRaUw4ZWdrRlFBQXh3WkFZUUFRaThaZVhjSUVBSXYvVll2c2crd1E2dzMvZFFqb1F4Y0FBRm1Gd0hRUC8zVUk2Sk1XQUFCWmhjQjA1c25EOWdYSW5nQVFBYis4bmdBUXZrQmhBQkIxTElNTnlKNEFFQUZxQVkxRi9GQ0x6OGRGL0VoaEFCRG8xQk1BQUdnNFd3QVFpVFc4bmdBUTZEY1dBQUJaVjQxTjhPaXBGQUFBYUR5Q0FCQ05SZkJRaVhYdzZQNFdBQURNYWdEL0ZUaGdBQkREL3hVOFlBQVF3Z1FBaS85Vy96VkVrQUFRL3hWQVlBQVFpL0NGOW5VYi96WFFuZ0FRL3hVZ1lBQVFpL0JXL3pWRWtBQVEveFZFWUFBUWk4WmV3NkZBa0FBUWcvai9kQlpRL3pYWW5nQVEveFVnWUFBUS85Q0REVUNRQUJEL29VU1FBQkNEK1A5MERsRC9GVWhnQUJDRERVU1FBQkQvNlJBWEFBQnFDR2lRZ2dBUTZCMFBBQUJvV0dFQUVQOFZVR0FBRUl0MUNNZEdYTWhoQUJDRFpnZ0FNLzlIaVg0VWlYNXd4b2JJQUFBQVE4YUdTd0VBQUVQSFJtZ1lsQUFRYWczbzloY0FBRm1EWmZ3QS8zWm8veFZNWUFBUXgwWDgvdi8vLytnK0FBQUFhZ3pvMVJjQUFGbUpmZnlMUlF5SlJteUZ3SFVJb1JDVUFCQ0pSbXovZG16bzZoY0FBRm5IUmZ6Ky8vLy82QlVBQUFEbzB3NEFBTU16LzBlTGRRaHFEZWkrRmdBQVdjTnFET2kxRmdBQVdjT0wvMVpYL3hWWVlBQVEvelZBa0FBUWkvam94UDcvLy8vUWkvQ0Y5blZPYUJRQ0FBQnFBZWovQXdBQWkvQlpXWVgyZERwVy96VkFrQUFRL3pYVW5nQVEveFVnWUFBUS85Q0Z3SFFZYWdCVzZQaisvLzlaV2Y4VkhHQUFFSU5PQlArSkJ1c0pWdWhCQXdBQVdUUDJWLzhWVkdBQUVGK0x4bDdEaS85VzZILy8vLytMOElYMmRRaHFFT2plQmdBQVdZdkdYc05xQ0dpNGdnQVE2TllOQUFDTGRRaUY5ZytFK0FBQUFJdEdKSVhBZEFkUTZQUUNBQUJaaTBZc2hjQjBCMURvNWdJQUFGbUxSalNGd0hRSFVPallBZ0FBV1l0R1BJWEFkQWRRNk1vQ0FBQlppMFpBaGNCMEIxRG92QUlBQUZtTFJrU0Z3SFFIVU9pdUFnQUFXWXRHU0lYQWRBZFE2S0FDQUFCWmkwWmNQY2hoQUJCMEIxRG9qd0lBQUZscURlaG9GZ0FBV1lObC9BQ0xmbWlGLzNRYVYvOFZYR0FBRUlYQWRRK0IveGlVQUJCMEIxZm9ZZ0lBQUZuSFJmeisvLy8vNkZjQUFBQnFET2d2RmdBQVdjZEYvQUVBQUFDTGZteUYvM1FqVitqY0ZnQUFXVHM5RUpRQUVIUVVnZjg0a3dBUWRBeURQd0IxQjFmb1dSY0FBRm5IUmZ6Ky8vLy82QjRBQUFCVzZBb0NBQUJaNkJNTkFBRENCQUNMZFFocURlai9GQUFBV2NPTGRRaHFET2p6RkFBQVdjT0wvMVdMN0lNOVFKQUFFUDkwUzROOUNBQjFKMWIvTlVTUUFCQ0xOVUJnQUJELzFvWEFkQlAvTlVDUUFCRC9OVVNRQUJELzF2L1FpVVVJWG1vQS96VkFrQUFRL3pYVW5nQVEveFVnWUFBUS85RC9kUWpvZVA3Ly82RkVrQUFRZy9qL2RBbHFBRkQvRlVSZ0FCQmR3NHYvVjJoWVlRQVEveFZRWUFBUWkvaUYvM1VKNk1iOC8vOHp3Ri9EVm9zMVlHQUFFR2lVWVFBUVYvL1dhSWhoQUJCWG84eWVBQkQvMW1oOFlRQVFWNlBRbmdBUS85Wm9kR0VBRUZlajFKNEFFUC9XZ3ozTW5nQVFBSXMxUkdBQUVLUFluZ0FRZEJhRFBkQ2VBQkFBZEEyRFBkU2VBQkFBZEFTRndIVWtvVUJnQUJDajBKNEFFS0ZJWUFBUXh3WE1uZ0FRWFJVQUVJazExSjRBRUtQWW5nQVEveFU4WUFBUW8wU1FBQkNEK1A4UGhNRUFBQUQvTmRDZUFCQlEvOWFGd0ErRXNBQUFBT2dlQWdBQS96WE1uZ0FRaXpVNFlBQVEvOWIvTmRDZUFCQ2p6SjRBRVAvVy96WFVuZ0FRbzlDZUFCRC8xdjgxMko0QUVLUFVuZ0FRLzlhajJKNEFFT2pZRWdBQWhjQjBZNHM5SUdBQUVHZ2VGd0FRL3pYTW5nQVEvOWYvMEtOQWtBQVFnL2ovZEVSb0ZBSUFBR29CNk1FQUFBQ0w4RmxaaGZaME1GYi9OVUNRQUJEL05kU2VBQkQvMS8vUWhjQjBHMm9BVnVpKysvLy9XVm4vRlJ4Z0FCQ0RUZ1QvaVFZendFRHJCK2hwKy8vL004QmVYOE9MLzFXTDdJTjlDQUIwTGY5MUNHb0EvelVnb0FBUS94VmtZQUFRaGNCMUdGYm8xQjRBQUl2dy94VllZQUFRVU9pRUhnQUFXWWtHWGwzRGkvOVZpK3hXVnpQMi8zVUk2QVVSQUFDTCtGbUYvM1VuT1FYY25nQVFkaDlXL3hVVVlBQVFqWWJvQXdBQU93WGNuZ0FRZGdPRHlQK0w4SVA0LzNYS2k4ZGZYbDNEaS85VmkreFdWelAyYWdEL2RRei9kUWpvZUI0QUFJdjRnOFFNaGY5MUp6a0YzSjRBRUhZZlZ2OFZGR0FBRUkyRzZBTUFBRHNGM0o0QUVIWURnOGovaS9DRCtQOTF3NHZIWDE1ZHc0di9WWXZzVmxjejl2OTFEUDkxQ09pd0hnQUFpL2haV1lYL2RTdzVSUXgwSnprRjNKNEFFSFlmVnY4VkZHQUFFSTJHNkFNQUFEc0YzSjRBRUhZRGc4ai9pL0NEK1A5MXdZdkhYMTVkdzR2L1ZZdnNhTEJoQUJEL0ZWQmdBQkNGd0hRVmFLQmhBQkJRL3hWZ1lBQVFoY0IwQmY5MUNQL1FYY09MLzFXTDdQOTFDT2pJLy8vL1dmOTFDUDhWYUdBQUVNeHFDT2grRWdBQVdjTnFDT2ljRVFBQVdjT0wvMWJvcVBuLy80dndWdWhtRUFBQVZ1Z2xJUUFBVnVnUUlRQUFWdWo3SUFBQVZ1andIZ0FBVnVqWkhnQUFnOFFZWHNPTC8xV0w3RmFMZFFnendPc1BoY0IxRUlzT2hjbDBBdi9SZzhZRU8zVU1jdXhlWGNPTC8xV0w3SU05Y0trQUVBQjBHV2h3cVFBUTZCMGpBQUJaaGNCMEN2OTFDUDhWY0trQUVGbm9VaUlBQUdnWVlRQVFhQWhoQUJEb29mLy8vMWxaaGNCMVZGWlhhSnNrQUJEb0p3OEFBTGdBWVFBUXZnUmhBQkJaaS9nN3huTVBpd2VGd0hRQy85Q0R4d1E3L25MeGd6MTBxUUFRQUY5ZWRCdG9kS2tBRU9peklnQUFXWVhBZEF4cUFHb0NhZ0QvRlhTcEFCQXp3RjNEYWlCbzRJSUFFT2hpQ0FBQWFnam9jaEVBQUZtRFpmd0FNOEJBT1FVUW53QVFENFRZQUFBQW93eWZBQkNLUlJDaUNKOEFFSU45REFBUGhhQUFBQUQvTldpcEFCQ0xOU0JnQUJELzFvdllpVjNRaGR0MGFQODFaS2tBRVAvV2kvaUpmZFNKWGR5SmZkaUQ3d1NKZmRRNyszSkw2RXY0Ly84NUIzVHRPL3R5UHY4My85YUwyT2c0K1AvL2lRZi8wLzgxYUtrQUVQL1dpOWovTldTcEFCRC8xamxkM0hVRk9VWFlkQTZKWGR5SlhkQ0pSZGlMK0lsOTFJdGQwT3VyeDBYa0hHRUFFSUY5NUNCaEFCQnpFWXRGNUlzQWhjQjBBdi9RZzBYa0JPdm14MFhnSkdFQUVJRjk0Q2hoQUJCekVZdEY0SXNBaGNCMEF2L1FnMFhnQk92bXgwWDgvdi8vLytnZ0FBQUFnMzBRQUhVcHh3VVFud0FRQVFBQUFHb0k2SW9QQUFCWi8zVUk2TDM5Ly8rRGZSQUFkQWhxQ09oMER3QUFXY1BvZEFjQUFNT0wvMVdMN0dvQWFnSC9kUWpvci83Ly80UEVERjNEYWdGcUFHb0E2Si8rLy8rRHhBekRpLzlWaSt6b3dDTUFBUDkxQ09nSklnQUFXV2ovQUFBQTZMNy8vLy9NaS85VmkreUQ3RXhXalVXMFVQOFZmR0FBRUdwQWFpQmVWdWlDL1AvL1dWa3p5VHZCZFFpRHlQL3BEd0lBQUkyUUFBZ0FBS05ncUFBUWlUVllxQUFRTzhKek5vUEFCWU5JKy85bXgwRC9BQXFKU0FObXgwQWZBQXJHUUNFS2lVZ3ppRWd2aXpWZ3FBQVFnOEJBalZEN2djWUFDQUFBTzlaeXpWTlhaamxONWcrRURnRUFBSXRGNkR2QkQ0UURBUUFBaXhpRHdBU0pSZndEdzc0QUNBQUFpVVg0Tzk1OEFvdmVPUjFZcUFBUWZXdS9aS2dBRUdwQWFpRG80dnYvLzFsWmhjQjBVWU1GV0tnQUVDQ05pQUFJQUFDSkJ6dkJjekdEd0FXRFNQdi9nMkFEQUlCZ0g0Q0RZRE1BWnNkQS93QUtac2RBSUFvS3hrQXZBSXNQZzhCQUE4Nk5VUHM3MFhMU2c4Y0VPUjFZcUFBUWZLTHJCb3NkV0tnQUVEUC9oZHQrY290RitJc0FnL2ovZEZ5RCtQNTBWNHROL0lvSjlzRUJkRTMyd1FoMUMxRC9GWGhnQUJDRndIUTlpL2VENWgrTHg4SDRCY0htQmdNMGhXQ29BQkNMUmZpTEFJa0dpMFg4aWdDSVJnUm9vQThBQUkxR0RGRC9GWFJnQUJDRndBK0V2QUFBQVA5R0NJTkYrQVJILzBYOE8vdDhqalBiaS9QQjVnWUROV0NvQUJDTEJvUDQvM1FMZy9qK2RBYUFUZ1NBNjNIR1JnU0JoZHQxQldyMldPc0tqVVAvOTlnYndJUEE5VkQvRlhCZ0FCQ0wrSVAvLzNSQ2hmOTBQbGYvRlhoZ0FCQ0Z3SFF6SmY4QUFBQ0pQb1A0QW5VR2dFNEVRT3NKZy9nRGRRU0FUZ1FJYUtBUEFBQ05SZ3hRL3hWMFlBQVFoY0IwTFA5R0NPc0tnRTRFUU1jRy92Ly8vME9EK3dNUGpHai8vLy8vTlZpb0FCRC9GV3hnQUJBendGOWJYc25EZzhqLzYvYUwvMVpYdjJDb0FCQ0xCNFhBZERhTmlBQUlBQUE3d1hNaGpYQU1nMzc4QUhRSFZ2OFZnR0FBRUlzSGc4WkFCUUFJQUFDTlR2UTd5SExpL3pmb20vbi8vNE1uQUZtRHh3U0IvMkNwQUJCOHVWOWV3NE05YktrQUVBQjFCZWdWR0FBQVZvczFoSnNBRUZjei80WDJkUmlEeVAvcGtRQUFBRHc5ZEFGSFZ1aUVJUUFBV1kxMEJnR0tCb1RBZGVwcUJFZFg2TVg1Ly8rTCtGbFppVDN3bmdBUWhmOTB5NHMxaEpzQUVGUHJNMWJvVXlFQUFJQStQVm1OV0FGMEltb0JVK2lYK2YvL1dWbUpCNFhBZEQ5V1UxRG96Q0FBQUlQRURJWEFkVWVEeHdRRDg0QStBSFhJL3pXRW13QVE2T3o0Ly8rREpZU2JBQkFBZ3ljQXh3VmdxUUFRQVFBQUFEUEFXVnRmWHNQL05mQ2VBQkRveHZqLy80TWw4SjRBRUFDRHlQL3I1RFBBVUZCUVVGRG9qeHdBQU15TC8xV0w3RkdMVFJCVE04QldpUWVMOG90VkRNY0JBUUFBQURsRkNIUUppMTBJZzBVSUJJa1RpVVg4Z0Q0aWRSQXp3RGxGL0xNaUQ1VEFSb2xGL09zOC93ZUYwblFJaWdhSUFrS0pWUXlLSGcrMncxQkc2RnNoQUFCWmhjQjBFLzhIZzMwTUFIUUtpMDBNaWdiL1JReUlBVWFMVlF5TFRSQ0UyM1F5ZzMzOEFIV3BnUHNnZEFXQSt3bDFuNFhTZEFUR1F2OEFnMlg4QUlBK0FBK0U2UUFBQUlvR1BDQjBCRHdKZFFaRzYvTk82K09BUGdBUGhOQUFBQUNEZlFnQWRBbUxSUWlEUlFnRWlSRC9BVFBiUXpQSjZ3SkdRWUErWEhUNWdENGlkU2Iyd1FGMUg0TjkvQUIwREkxR0FZQTRJblVFaS9EckRUUEFNOXM1UmZ3UGxNQ0pSZnpSNllYSmRCSkpoZEowQk1ZQ1hFTC9CNFhKZGZHSlZReUtCb1RBZEZXRGZmd0FkUWc4SUhSTFBBbDBSNFhiZEQwUHZzQlFoZEowSStoMklBQUFXWVhBZEEyS0JvdE5EUDlGRElnQlJ2OEhpMDBNaWdiL1JReUlBZXNONkZNZ0FBQlpoY0IwQTBiL0IvOEhpMVVNUnVsVy8vLy9oZEowQjhZQ0FFS0pWUXovQjR0TkVPa08vLy8vaTBVSVhsdUZ3SFFEZ3lBQS93SEp3NHYvVll2c2crd01VelBiVmxjNUhXeXBBQkIxQmVpVEZRQUFhQVFCQUFDK0dKOEFFRlpUaUIwY29BQVEveFdFWUFBUW9YaXBBQkNKTlFDZkFCQTd3M1FIaVVYOE9CaDFBNGwxL0l0Vi9JMUYrRkJUVTQxOTlPZ0svdi8vaTBYNGc4UU1QZi8vL3o5elNvdE45SVA1LzNOQ2kvakI1d0tOQkE4N3dYSTJVT2pLOXYvL2kvQlpPL04wS1l0Vi9JMUYrRkFEL2xkV2pYMzA2TW45Ly8rTFJmaUR4QXhJbytTZUFCQ0pOZWllQUJBendPc0RnOGovWDE1YnljT0wvMVdMN0lQc0RGTlcveFdRWUFBUWk5Z3o5anZlZFFRendPdDNaamt6ZEJDRHdBSm1PVEIxK0lQQUFtWTVNSFh3VjRzOWpHQUFFRlpXVml2RFZ0SDRRRkJUVmxhSlJmVC8xNGxGK0R2R2REaFE2RHYyLy85WmlVWDhPOFowS2xaVy8zWDRVUDkxOUZOV1Z2L1hoY0IxRFA5MS9PamY5Zi8vV1lsMS9GUC9GWWhnQUJDTFJmenJDVlAvRlloZ0FCQXp3RjllVzhuRGkvOVd1UENCQUJDKzhJRUFFRmVMK0R2R2N3K0xCNFhBZEFMLzBJUEhCRHYrY3ZGZlhzT0wvMWE0K0lFQUVMNzRnUUFRVjR2NE84WnpENHNIaGNCMEF2L1FnOGNFTy81eThWOWV3Mm9BYUFBUUFBQnFBUDhWbEdBQUVEUEpoY0FQbGNHaklLQUFFSXZCdy84MUlLQUFFUDhWbUdBQUVJTWxJS0FBRUFERHpNek16TXpNek16TXpNek16R2hnSlFBUVpQODFBQUFBQUl0RUpCQ0piQ1FRald3a0VDdmdVMVpYb1FDUUFCQXhSZnd6eFZDSlplai9kZmlMUmZ6SFJmeisvLy8vaVVYNGpVWHdaS01BQUFBQXc0dE44R1NKRFFBQUFBQlpYMTllVzR2bFhWSER6TXpNek16TXpJdi9WWXZzZyt3WVU0dGRERmFMY3dnek5RQ1FBQkJYaXdiR1JmOEF4MFgwQVFBQUFJMTdFSVA0L25RTmkwNEVBODh6RERqb1Qrdi8vNHRPREl0R0NBUFBNd3c0NkQvci8vK0xSUWoyUUFSbUQ0VVpBUUFBaTAwUWpWWG9pVlA4aTFzTWlVWG9pVTNzZy92K2RGK05TUUNOQkZ1TFRJWVVqVVNHRUlsRjhJc0FpVVg0aGNsMEZJdlg2R1FlQUFER1JmOEJoY0I0UUg5SGkwWDRpOWlEK1A1MXpvQjkvd0IwSklzR2cvaitkQTJMVGdRRHp6TU1PT2pNNnYvL2kwNE1pMVlJQTg4ekREcm92T3IvLzR0RjlGOWVXNHZsWGNQSFJmUUFBQUFBNjhtTFRRaUJPV056YmVCMUtZTTlWS2dBRUFCMElHaFVxQUFRNk5NWUFBQ0R4QVNGd0hRUGkxVUlhZ0ZTL3hWVXFBQVFnOFFJaTAwTWkxVUk2QVFlQUFDTFJRdzVXQXgwRW1nQWtBQVFWNHZUaThqb0JoNEFBSXRGREl0TitJbElESXNHZy9qK2RBMkxUZ1FEenpNTU9PZzI2di8vaTA0TWkxWUlBODh6RERyb0p1ci8vNHRGOEl0SUNJdlg2Sm9kQUFDNi92Ly8vemxUREErRVQvLy8vMmdBa0FBUVY0dkw2TEVkQUFEcEdmLy8vNHYvVll2c1Z1aVI3Ly8vaS9DRjlnK0VNZ0VBQUl0T1hJdFZDSXZCVnprUWRBMkR3QXlOdVpBQUFBQTd4M0x2Z2NHUUFBQUFPOEZ6QkRrUWRBSXp3SVhBZEFlTFVBaUYwblVITThEcDlRQUFBSVA2QlhVTWcyQUlBRFBBUU9ua0FBQUFnL29CRDRUWUFBQUFpMDBNVTR0ZVlJbE9ZSXRJQklQNUNBK0Z0Z0FBQUdva1dZdCtYSU5rT1FnQWc4RU1nZm1RQUFBQWZPMkxBSXQrWkQyT0FBREFkUW5IUm1TREFBQUE2MzQ5a0FBQXdIVUp4MFprZ1FBQUFPdHVQWkVBQU1CMUNjZEdaSVFBQUFEclhqMlRBQURBZFFuSFJtU0ZBQUFBNjA0OWpRQUF3SFVKeDBaa2dnQUFBT3MrUFk4QUFNQjFDY2RHWklZQUFBRHJMajJTQUFEQWRRbkhSbVNLQUFBQTZ4NDl0UUlBd0hVSngwWmtqUUFBQU9zT1BiUUNBTUIxQjhkR1pJNEFBQUQvZG1ScUNQL1NXWWwrWk9zSGcyQUlBRkgvMGxtSlhtQmJnOGovWDE1ZHc0di9WWXZzdUdOemJlQTVSUWgxRGY5MURGRG9udjcvLzFsWlhjTXp3RjNEaS85VmkreUQ3QkNoQUpBQUVJTmwrQUNEWmZ3QVUxZS9UdVpBdTdzQUFQLy9POGQwRFlYRGRBbjMwS01Fa0FBUTYyVldqVVg0VVA4VnFHQUFFSXQxL0ROMStQOFZwR0FBRURQdy94VWNZQUFRTS9EL0ZhQmdBQkF6OEkxRjhGRC9GWnhnQUJDTFJmUXpSZkF6OER2M2RRZStUK1pBdStzUWhmTjFESXZHRFJGSEFBREI0QkFMOElrMUFKQUFFUGZXaVRVRWtBQVFYbDlieWNPREpWQ29BQkFBdzR2L1ZZdnNpOEdMVFFqSEFHeGlBQkNMQ1lsSUJNWkFDQUJkd2dnQWkwRUVoY0IxQmJoMFlnQVF3NHYvVll2c2czMElBRmVMK1hRdFZ2OTFDT2dqR1FBQWpYQUJWdWhBQWdBQVdWbUpSd1NGd0hRUi8zVUlWbERvb1JnQUFJUEVETVpIQ0FGZVgxM0NCQUNMLzFhTDhZQitDQUIwQ2Y5MkJPaTk4UC8vV1lObUJBREdSZ2dBWHNPTC8xV0w3RmFMZFFoWGkvazcvblFkNk0zLy8vK0FmZ2dBZEF6L2RnU0x6K2g5Ly8vLzZ3YUxSZ1NKUndTTHgxOWVYY0lFQU1jQmJHSUFFT21pLy8vL2kvOVZpK3hXaS9ISEJteGlBQkRvai8vLy8vWkZDQUYwQjFib1hnQUFBRm1MeGw1ZHdnUUFpLzlWaSt4Vy8zVUlpL0dEWmdRQXh3WnNZZ0FReGtZSUFPaDcvLy8vaThaZVhjSUVBSXYvVWNjQmpHSUFFT2lVR2dBQVdjT0wvMVdMN0ZhTDhlamovLy8vOWtVSUFYUUhWdWdJQUFBQVdZdkdYbDNDQkFDTC8xV0w3RjNwNnUvLy80di9WWXZzVVZOV2l6VWdZQUFRVi84MWFLa0FFUC9XL3pWa3FRQVFpOWlKWGZ6LzFvdndPL01QZ29FQUFBQ0wvaXY3alVjRWcvZ0VjblZUNkN3YkFBQ0wySTFIQkZrNzJITkl1QUFJQUFBNzJITUNpOE1Ed3p2RGNnOVEvM1g4NkZIdy8vOVpXWVhBZFJhTlF4QTd3M0krVVA5MS9PZzc4UC8vV1ZtRndIUXZ3ZjhDVUkwMHVQOFZPR0FBRUtOb3FRQVEvM1VJaXowNFlBQVEvOWVKQm9QR0JGYi8xNk5rcVFBUWkwVUk2d0l6d0Y5ZVc4bkRpLzlXYWdScUlPaW43Ly8vV1ZtTDhGYi9GVGhnQUJDamFLa0FFS05rcVFBUWhmWjFCV29ZV0Y3RGd5WUFNOEJldzJvTWFBQ0RBQkRvd2ZuLy8raE84UC8vZzJYOEFQOTFDT2o4L3YvL1dZbEY1TWRGL1A3Ly8vL29DUUFBQUl0RjVPamQrZi8vdytndDhQLy93NHYvVll2cy8zVUk2TGYvLy8vMzJCdkE5OWhaU0YzRGkvOVZpK3hUaTEwSWcvdmdkMjlXVjRNOUlLQUFFQUIxR09nZEZnQUFhaDdvWnhRQUFHai9BQUFBNk1Ydi8vOVpXWVhiZEFTTHcrc0RNOEJBVUdvQS96VWdvQUFRL3hXc1lBQVFpL2lGLzNVbWFneGVPUVhvcHdBUWRBMVQ2RUVBQUFCWmhjQjFxZXNINkR3TkFBQ0pNT2cxRFFBQWlUQ0x4MTllNnhSVDZDQUFBQUJaNkNFTkFBREhBQXdBQUFBendGdGR3NHYvVll2c2kwVUlveVNnQUJCZHc0di9WWXZzL3pVa29BQVEveFVnWUFBUWhjQjBELzkxQ1AvUVdZWEFkQVV6d0VCZHd6UEFYY09MLzFXTDdJUHNJSXRGQ0ZaWGFnaFp2cEJpQUJDTmZlRHpwWWxGK0l0RkRGK0pSZnhlaGNCMERQWUFDSFFIeDBYMEFFQ1pBWTFGOUZEL2RmRC9kZVQvZGVEL0ZiQmdBQkRKd2dnQWkvOVdWelAydnlpZ0FCQ0RQUFdza0FBUUFYVWRqUVQxcUpBQUVJazRhS0FQQUFEL01JUEhHUDhWZEdBQUVJWEFkQXhHZy80a2ZOTXp3RUJmWHNPREpQV29rQUFRQURQQTYvR0wvMU9MSFlCZ0FCQld2cWlRQUJCWGl6NkYvM1FUZzM0RUFYUU5WLy9UVitncTdmLy9neVlBV1lQR0NJSCt5SkVBRUh6Y3ZxaVFBQkJmaXdhRndIUUpnMzRFQVhVRFVQL1RnOFlJZ2Y3SWtRQVFmT1plVzhPTC8xV0w3SXRGQ1A4MHhhaVFBQkQvRmJSZ0FCQmR3Mm9NYUNDREFCRG9uL2YvL3pQL1I0bDk1RFBiT1IwZ29BQVFkUmpvU3hRQUFHb2U2SlVTQUFCby93QUFBT2p6N2YvL1dWbUxkUWlOTlBXb2tBQVFPUjUwQkl2SDYyMXFHT2pPN1AvL1dZdjRPL3QxRCtpQ0N3QUF4d0FNQUFBQU04RHJVR29LNkZnQUFBQlppVjM4T1I1MUsyaWdEd0FBVi84VmRHQUFFSVhBZFJkWDZGbnMvLzlaNkUwTEFBREhBQXdBQUFDSlhlVHJDNGsrNndkWDZEN3MvLzlaeDBYOC92Ly8vK2dKQUFBQWkwWGs2RGozLy8vRGFncm9LZi8vLzFuRGkvOVZpK3lMUlFoV2pUVEZxSkFBRUlNK0FIVVRVT2dqLy8vL1dZWEFkUWhxRWVpNTcvLy9XZjgyL3hXNFlBQVFYbDNEaS85VmkreFRWb3MxVEdBQUVGZUxmUWhYLzlhTGg3QUFBQUNGd0hRRFVQL1dpNGU0QUFBQWhjQjBBMUQvMW91SHRBQUFBSVhBZEFOUS85YUxoOEFBQUFDRndIUURVUC9XalY5UXgwVUlCZ0FBQUlGNytNaVJBQkIwQ1lzRGhjQjBBMUQvMW9ONy9BQjBDb3REQklYQWRBTlEvOWFEd3hEL1RRaDExb3VIMUFBQUFBVzBBQUFBVVAvV1gxNWJYY09MLzFXTDdGZUxmUWlGL3crRWd3QUFBRk5XaXpWY1lBQVFWLy9XaTRld0FBQUFoY0IwQTFELzFvdUh1QUFBQUlYQWRBTlEvOWFMaDdRQUFBQ0Z3SFFEVVAvV2k0ZkFBQUFBaGNCMEExRC8xbzFmVU1kRkNBWUFBQUNCZS9qSWtRQVFkQW1MQTRYQWRBTlEvOWFEZS93QWRBcUxRd1NGd0hRRFVQL1dnOE1RLzAwSWRkYUxoOVFBQUFBRnRBQUFBRkQvMWw1Ymk4ZGZYY09MLzFXTDdGTldpM1VJaTRhOEFBQUFNOXRYTzhOMGJ6M1ltZ0FRZEdpTGhyQUFBQUE3dzNSZU9SaDFXb3VHdUFBQUFEdkRkQmM1R0hVVFVPaUU2di8vLzdhOEFBQUE2QTRhQUFCWldZdUd0QUFBQUR2RGRCYzVHSFVUVU9oajZ2Ly8vN2E4QUFBQTZJUVpBQUJaV2YrMnNBQUFBT2hMNnYvLy83YThBQUFBNkVEcS8vOVpXWXVHd0FBQUFEdkRkRVE1R0hWQWk0YkVBQUFBTGY0QUFBQlE2Qi9xLy8rTGhzd0FBQUMvZ0FBQUFDdkhVT2dNNnYvL2k0YlFBQUFBSzhkUTZQN3AvLy8vdHNBQUFBRG84K24vLzRQRUVJdUcxQUFBQUQzUWtRQVFkQnM1bUxRQUFBQjFFMURvaWhVQUFQKzIxQUFBQU9qSzZmLy9XVm1OZmxESFJRZ0dBQUFBZ1gvNHlKRUFFSFFSaXdjN3czUUxPUmgxQjFEb3Blbi8vMWs1WC94MEVvdEhCRHZEZEFzNUdIVUhVT2lPNmYvL1dZUEhFUDlOQ0hYSFZ1aC82Zi8vV1Y5ZVcxM0RpLzlWaSt4WGkzME1oZjkwTzR0RkNJWEFkRFJXaXpBNzkzUW9WNGs0NkdyOS8vOVpoZlowRzFibzd2My8vNE0rQUZsMUQ0SCtPSk1BRUhRSFZ1aHovdi8vV1l2SFh1c0NNOEJmWGNOcURHaEFnd0FRNk9yei8vL282ZVgvLzR2d29TeWJBQkNGUm5CMElvTitiQUIwSE9qUzVmLy9pM0JzaGZaMUNHb2c2TGZzLy85Wmk4Ym8vZlAvLzhOcURPakgvUC8vV1lObC9BRC9OUkNVQUJDRHhteFc2Rm4vLy85WldZbEY1TWRGL1A3Ly8vL29BZ0FBQU91K2Fnem93UHYvLzFtTGRlVERMYVFEQUFCMElvUG9CSFFYZytnTmRBeElkQU16d01PNEJBUUFBTU80RWdRQUFNTzRCQWdBQU1PNEVRUUFBTU9MLzFaWGkvQm9BUUVBQURQL2pVWWNWMURvQnhrQUFEUEFEN2ZJaThHSmZnU0pmZ2lKZmd6QjRSQUx3WTErRUt1cnE3a1lsQUFRZzhRTWpVWWNLODYvQVFFQUFJb1VBWWdRUUU5MTk0MkdIUUVBQUw0QUFRQUFpaFFJaUJCQVRuWDNYMTdEaS85VmkreUI3QndGQUFDaEFKQUFFRFBGaVVYOFUxZU5oZWo2Ly85US8zWUUveFc4WUFBUXZ3QUJBQUNGd0ErRS9BQUFBRFBBaUlRRi9QNy8vMEE3eDNMMGlvWHUrdi8veG9YOC92Ly9JSVRBZERDTm5lLzYvLzhQdHNnUHRnTTd5SGNXSzhGQVVJMlVEZnorLy85cUlGTG9SQmdBQUlQRURJcERBWVBEQW9UQWRkWnFBUDkyREkyRi9Qci8vLzkyQkZCWGpZWDgvdi8vVUdvQmFnRG94UnNBQURQYlUvOTJCSTJGL1AzLy8xZFFWNDJGL1A3Ly8xQlgvM1lNVStoNEdnQUFnOFJFVS85MkJJMkYvUHovLzFkUVY0MkYvUDcvLzFCb0FBSUFBUDkyREZQb1V4b0FBSVBFSkRQQUQ3ZU1SZno2Ly8vMndRRjBEb0JNQmgwUWlvd0YvUDMvLytzUjlzRUNkQldBVEFZZElJcU1CZno4Ly8rSWpBWWRBUUFBNndlSW5BWWRBUUFBUUR2SGNyL3JVbzJHSFFFQUFNZUY1UHIvLzUvLy8vOHp5U21GNVByLy80dVY1UHIvLzQyRURoMEJBQUFEMEkxYUlJUDdHWGNLZ0V3T0hSQ05VU0RyRFlQNkdYY01nRXdPSFNDTlVlQ0lFT3NEeGdBQVFUdlBjc2FMVGZ4Zk04MWI2RVRkLy8vSncyb01hR0NEQUJEb1R2SC8vK2hONC8vL2kvaWhMSnNBRUlWSGNIUWRnMzlzQUhRWGkzZG9oZloxQ0dvZzZDRHEvLzlaaThib1p2SC8vOE5xRGVndyt2Ly9XWU5sL0FDTGQyaUpkZVE3TlVDWUFCQjBOb1gyZEJwVy94VmNZQUFRaGNCMUQ0SCtHSlFBRUhRSFZ1Z2Y1di8vV2FGQW1BQVFpVWRvaXpWQW1BQVFpWFhrVnY4VlRHQUFFTWRGL1A3Ly8vL29CUUFBQU91T2kzWGthZzNvOXZqLy8xbkRpLzlWaSt5TFJRaFdpL0hHUmd3QWhjQjFZK2lpNHYvL2lVWUlpMGhzaVE2TFNHaUpUZ1NMRGpzTkVKUUFFSFFTaXcwc213QVFoVWh3ZFFmb2dQei8vNGtHaTBZRU93VkFtQUFRZEJhTFJnaUxEU3liQUJDRlNIQjFDT2o4L3YvL2lVWUVpMFlJOWtCd0FuVVVnMGh3QXNaR0RBSHJDb3NJaVE2TFFBU0pSZ1NMeGw1ZHdnUUFpLzlWaSt5RDdCQlRNOXRUalUzdzZHWC8vLytKSFhpaEFCQ0QvdjUxSHNjRmVLRUFFQUVBQUFEL0ZjUmdBQkE0WGZ4MFJZdE4rSU5oY1AzclBJUCsvWFVTeHdWNG9RQVFBUUFBQVA4VndHQUFFT3ZiZy83OGRSS0xSZkNMUUFUSEJYaWhBQkFCQUFBQTY4UTRYZngwQjR0RitJTmdjUDJMeGx2Snc0di9WWXZzZyt3Z29RQ1FBQkF6eFlsRi9GT0xYUXhXaTNVSVYraGsvLy8vaS9nejlvbDlDRHYrZFE2THcrZ3ovUC8vTThEcG9RRUFBSWwxNURQQU9iaEltQUFRRDRTUkFBQUEvMFhrZzhBd1BmQUFBQUJ5NTRILzZQMEFBQStFZEFFQUFJSC82ZjBBQUErRWFBRUFBQSszeDFEL0ZjaGdBQkNGd0ErRVZnRUFBSTFGNkZCWC94VzhZQUFRaGNBUGhEY0JBQUJvQVFFQUFJMURIRlpRNk9BVUFBQXowa0tEeEF5SmV3U0pjd3c1VmVnUGh2d0FBQUNBZmU0QUQ0VFRBQUFBalhYdmlnNkV5UStFeGdBQUFBKzJSdjhQdHNucHFRQUFBR2dCQVFBQWpVTWNWbERvbVJRQUFJdE41SVBFREd2Sk1JbDE0STJ4V0pnQUVJbDE1T3NyaWtZQmhNQjBLUSsyUGcrMndPc1NpMFhnaW9CRW1BQVFDRVE3SFErMlJnRkhPL2gyNm90OUNJUEdBb0ErQUhYUWkzWGsvMFhnZzhZSWczM2dCSWwxNUhMcGk4ZUpld1RIUXdnQkFBQUE2T0w2Ly85cUJvbERESTFERUkySlRKZ0FFRnBtaXpGbWlUQ0R3UUtEd0FKS2RmR0w4K2hRKy8vLzZiVCsvLytBVEFNZEJFQTd3WGIyZzhZQ2dINy9BQStGTVAvLy80MURIcm4rQUFBQWdBZ0lRRWwxK1l0REJPaUsrdi8vaVVNTWlWTUk2d09KY3dnendBKzN5SXZCd2VFUUM4R05leENycTZ2cnB6azFlS0VBRUErRlZQNy8vNFBJLzR0Ti9GOWVNODFiNkxUWi8vL0p3Mm9VYUlDREFCRG92dTMvLzROTjRQL291ZC8vLzR2NGlYM2M2Rkg4Ly8rTFgyaUxkUWpvY2YzLy80bEZDRHREQkErRVZ3RUFBR2dnQWdBQTZQcmkvLzlaaTlpRjJ3K0VSZ0VBQUxtSUFBQUFpM2RvaS92enBZTWpBRlAvZFFqb3RQMy8vMWxaaVVYZ2hjQVBoZndBQUFDTGRkei9kbWovRlZ4Z0FCQ0Z3SFVSaTBab1BSaVVBQkIwQjFEb2NPTC8vMW1KWG1oVGl6MU1ZQUFRLzlmMlJuQUNENFhxQUFBQTlnVXNtd0FRQVErRjNRQUFBR29ONkNiMi8vOVpnMlg4QUl0REJLT0lvUUFRaTBNSW80eWhBQkNMUXd5amtLRUFFRFBBaVVYa2cvZ0ZmUkJtaTB4REVHYUpERVY4b1FBUVFPdm9NOENKUmVROUFRRUFBSDBOaWt3WUhJaUlPSllBRUVEcjZUUEFpVVhrUFFBQkFBQjlFSXFNR0IwQkFBQ0lpRUNYQUJCQTYrYi9OVUNZQUJEL0ZWeGdBQkNGd0hVVG9VQ1lBQkE5R0pRQUVIUUhVT2kzNGYvL1dZa2RRSmdBRUZQLzE4ZEYvUDcvLy8vb0FnQUFBT3N3YWczb29QVC8vMW5ENnlXRCtQOTFJSUg3R0pRQUVIUUhVK2lCNGYvL1dlaDFBQUFBeHdBV0FBQUE2d1NEWmVBQWkwWGc2SGJzLy8vRGd6MXNxUUFRQUhVU2F2M29WdjcvLzFuSEJXeXBBQkFCQUFBQU04RERpLzlWaSt5TFJRZ3p5VHNFelRpWkFCQjBFMEdEK1MxeThZMUk3WVA1RVhjT2FnMVlYY09MQk0wOG1RQVFYY01GUlAvLy8yb09XVHZJRzhBandZUEFDRjNENkZiZC8vK0Z3SFVHdUtDYUFCRERnOEFJdzR2L1ZZdnNpMDBJaGNsMEcycmdNOUpZOS9FN1JReHpEK2pRLy8vL3h3QU1BQUFBTThCZHd3K3ZUUXhXaS9HRjluVUJSalBBZy83Z2R4TldhZ2ovTlNDZ0FCRC9GYXhnQUJDRndIVXlnejNvcHdBUUFIUWNWdWlLOHYvL1dZWEFkZEtMUlJDRndIUUd4d0FNQUFBQU04RHJEWXRORUlYSmRBYkhBUXdBQUFCZVhjT0wvMVdMN0lOOUNBQjFDLzkxRE9pdThmLy9XVjNEVm90MURJWDJkUTMvZFFqb1MrRC8vMWt6d090TlYrc3doZloxQVVaVy8zVUlhZ0QvTlNDZ0FCRC9GY3hnQUJDTCtJWC9kVjQ1QmVpbkFCQjBRRmJvQy9MLy8xbUZ3SFFkZy83Z2RzdFc2UHZ4Ly85WjZQeisvLy9IQUF3QUFBQXp3RjllWGNQbzYvNy8vNHZ3L3hWWVlBQVFVT2liL3YvL1dZa0c2K0xvMC83Ly80dncveFZZWUFBUVVPaUQvdi8vV1lrR2k4ZnJ5bW9JYUtDREFCRG9ndXIvLytpQjNQLy9pMEI0aGNCMEZvTmwvQUQvME9zSE04QkF3NHRsNk1kRi9QNy8vLy9vR1JRQUFPaWI2di8vdzJoeU9nQVEveFU0WUFBUW81U2hBQkREaS85VmkreUxSUWlqbUtFQUVLT2NvUUFRbzZDaEFCQ2pwS0VBRUYzRGkvOVZpK3lMUlFpTERXUmlBQkJXT1ZBRWRBK0w4V3YyREFOMUNJUEFERHZHY3V4cnlRd0RUUWhlTzhGekJUbFFCSFFDTThCZHcvODFvS0VBRVA4VklHQUFFTU5xSUdqQWd3QVE2TmJwLy84ei80bDk1SWw5Mkl0ZENJUDdDMzlMZEJXTHcyb0NXU3ZCZENJcndYUUlLOEYwV1N2QmRVUG9OZHYvLzR2NGlYM1loZjkxRklQSS8rbFVBUUFBdnBpaEFCQ2htS0VBRU90Vi8zZGNpOVBvWGYvLy8xbU5jQWlMQnV0Umk4T0Q2QTkwTW9Qb0JuUWhTSFFTNkpmOS8vL0hBQllBQUFEb3hRSUFBT3U1dnFDaEFCQ2hvS0VBRU9zV3ZweWhBQkNobktFQUVPc0t2cVNoQUJDaHBLRUFFTWRGNUFFQUFBQlEveFVnWUFBUWlVWGdNOENEZmVBQkQ0VFdBQUFBT1VYZ2RRZHFBK2poNGYvL09VWGtkQWRRNkJ2eS8vOVpNOENKUmZ5RCt3aDBDb1A3QzNRRmcvc0VkUnVMVDJDSlRkU0pSMkNEK3doMVBvdFBaSWxOME1kSFpJd0FBQUNEK3doMUxJc05XR0lBRUlsTjNJc05YR0lBRUFNTldHSUFFRGxOM0gwWmkwM2NhOGtNaTFkY2lVUVJDUDlGM092ZDZQTFkvLytKQnNkRi9QNy8vLy9vRlFBQUFJUDdDSFVmLzNka1UvOVY0Rm5yR1l0ZENJdDkySU45NUFCMENHb0E2S3p3Ly85WncxUC9WZUJaZy9zSWRBcUQrd3QwQllQN0JIVVJpMFhVaVVkZ2cvc0lkUWFMUmRDSlIyUXp3T2lGNlAvL3c0di9WWXZzaTBVSW82eWhBQkJkdzR2L1ZZdnNpMFVJbzdDaEFCQmR3NHYvVll2c2kwVUlvN1NoQUJCZHc0di9WWXZzZ2V3b0F3QUFvUUNRQUJBenhZbEYvRk9MWFFoWGcvdi9kQWRUNk9Ici8vOVpnNlhnL1AvL0FHcE1qWVhrL1AvL2FnQlE2S1VOQUFDTmhlRDgvLytKaGRqOC8vK05oVEQ5Ly8rRHhBeUpoZHo4Ly8rSmhlRDkvLytKamR6OS8vK0psZGo5Ly8rSm5kVDkvLytKdGREOS8vK0p2Y3o5Ly85bWpKWDQvZi8vWm95TjdQMy8vMmFNbmNqOS8vOW1qSVhFL2YvL1pveWx3UDMvLzJhTXJiejkvLytjajRYdy9mLy9pMFVFalUwRWlZMzAvZi8veDRVdy9mLy9BUUFCQUltRjZQMy8vNHRKL0ltTjVQMy8vNHROREltTjRQei8vNHRORUltTjVQei8vNG1GN1B6Ly8vOFZOR0FBRUdvQWkvai9GVEJnQUJDTmhkajgvLzlRL3hVc1lBQVFoY0IxRUlYL2RReUQrLzkwQjFQbzdPci8vMW1MVGZ4Zk04MWI2TlBTLy8vSnc0di9WbW9CdmhjRUFNQldhZ0xveGY3Ly80UEVERmIvRlJoZ0FCQlEveFVvWUFBUVhzT0wvMVdMN1A4MXRLRUFFUDhWSUdBQUVJWEFkQU5kLytEL2RSai9kUlQvZFJEL2RRei9kUWpvci8vLy84d3p3RkJRVUZCUTZNZi8vLytEeEJURGkvOVdWelAvLzdlb21nQVEveFU0WUFBUWlZZW9tZ0FRZzhjRWcvOG9jdVpmWHNQTXpNek1pLzlWaSt5TFRRaTRUVm9BQUdZNUFYUUVNOEJkdzR0QlBBUEJnVGhRUlFBQWRlOHowcmtMQVFBQVpqbElHQStVd292Q1hjUE16TXpNek16TXpNek16SXYvVll2c2kwVUlpMGc4QThnUHQwRVVVMVlQdDNFR005SlhqVVFJR0lYMmRCdUxmUXlMU0F3NytYSUppMWdJQTlrNyszSUtRb1BBS0R2V2N1Z3p3RjllVzEzRHpNek16TXpNek16TXpNek1pLzlWaSt4cS9tamdnd0FRYUdBbEFCQmtvUUFBQUFCUWcrd0lVMVpYb1FDUUFCQXhSZmd6eFZDTlJmQmtvd0FBQUFDSlplakhSZndBQUFBQWFBQUFBQkRvS3YvLy80UEVCSVhBZEZTTFJRZ3RBQUFBRUZCb0FBQUFFT2hRLy8vL2c4UUloY0IwT290QUpNSG9IL2ZRZytBQngwWDgvdi8vLzR0TjhHU0pEUUFBQUFCWlgxNWJpK1ZkdzR0RjdJc0lNOUtCT1FVQUFNQVBsTUtMd3NPTFplakhSZnorLy8vL004Q0xUZkJraVEwQUFBQUFXVjllVzR2bFhjT0wvMVdMN0RQQWkwMElPd3pGZ0c0QUVIUUtRSVA0Rm5MdU04QmR3NHNFeFlSdUFCQmR3NHYvVll2c2dlejhBUUFBb1FDUUFCQXp4WWxGL0ZOV2kzVUlWMWJvdWYvLy80djRNOXRaaWIwRS92Ly9PL3NQaEd3QkFBQnFBK2haRlFBQVdZUDRBUStFQndFQUFHb0Q2RWdWQUFCWmhjQjFEWU05a0pzQUVBRVBoTzRBQUFDQi92d0FBQUFQaERZQkFBQm92RzhBRUdnVUF3QUF2N2loQUJCWDZMSVVBQUNEeEF5RndBK0Z1QUFBQUdnRUFRQUF2dXFoQUJCV1UyYWo4cU1BRVA4VjJHQUFFTHY3QWdBQWhjQjFIMmlNYndBUVUxYm9laFFBQUlQRURJWEFkQXd6d0ZCUVVGQlE2RHY5Ly85VzZFWVVBQUJBV1lQNFBIWXFWdWc1RkFBQWpRUkZkS0VBRUl2SUs4NXFBOUg1YUlSdkFCQXIyVk5RNkU4VEFBQ0R4QlNGd0hXOWFIeHZBQkMrRkFNQUFGWlg2TUlTQUFDRHhBeUZ3SFdsLzdVRS92Ly9WbGZvcmhJQUFJUEVESVhBZFpGb0VDQUJBR2d3YndBUVYrZ3JFUUFBZzhRTTYxNVRVMU5UVStsNS8vLy9hdlQvRlhCZ0FCQ0w4RHZ6ZEVhRC92OTBRVFBBaWd4SGlJd0ZDUDcvLzJZNUhFZDBDRUE5OUFFQUFITG9VNDJGQlA3Ly8xQ05oUWorLy85UWlGMzc2TDRBQUFCWlVJMkZDUDcvLzFCVy94WFVZQUFRaTAzOFgxNHp6VnZvS2MvLy84bkRhZ1BvM2hNQUFGbUQrQUYwRldvRDZORVRBQUJaaGNCMUg0TTlrSnNBRUFGMUZtajhBQUFBNkNYKy8vOW8vd0FBQU9nYi92Ly9XVm5EaS85VmkreUxWUWhXVjRYU2RBZUxmUXlGLzNVVDZCejMvLzlxRmw2Sk1PaEwvUC8vaThick00dEZFSVhBZFFTSUF1dmlpL0lyOElvSWlBd0dRSVRKZEFOUGRmT0YvM1VSeGdJQTZPYjIvLzlxSWxtSkNJdng2OFl6d0Y5ZVhjUE16TXpNek16TWkwd2tCUGZCQXdBQUFIUWtpZ0dEd1FHRXdIUk85OEVEQUFBQWRlOEZBQUFBQUkya0pBQUFBQUNOcENRQUFBQUFpd0c2Ly83K2ZnUFFnL0QvTThLRHdRU3BBQUVCZ1hUb2kwSDhoTUIwTW9Ua2RDU3BBQUQvQUhRVHFRQUFBUDkwQXV2TmpVSC9pMHdrQkN2Qnc0MUIvb3RNSkFRcndjT05RZjJMVENRRUs4SERqVUg4aTB3a0JDdkJ3NHYvVll2c2crd1EvM1VJalUzdzZFengvLzhQdGtVTWkwMzBpbFVVaEZRQkhYVWVnMzBRQUhRU2kwM3dpNG5JQUFBQUQ3Y0VRU05GRU9zQ004Q0Z3SFFETThCQWdIMzhBSFFIaTAzNGcyRncvY25EaS85VmkreHFCR29BLzNVSWFnRG9tdi8vLzRQRUVGM0R6TXpNek16TXpNek16Rk5XVjR0VUpCQ0xSQ1FVaTB3a0dGVlNVRkZSYVBCREFCQmsvelVBQUFBQW9RQ1FBQkF6eElsRUpBaGtpU1VBQUFBQWkwUWtNSXRZQ0l0TUpDd3pHWXR3RElQKy9uUTdpMVFrTklQNi9uUUVPL0oyTG8wMGRvMWNzeENMQzRsSURJTjdCQUIxekdnQkFRQUFpME1JNkRJVEFBQzVBUUFBQUl0RENPaEVFd0FBNjdCa2p3VUFBQUFBZzhRWVgxNWJ3NHRNSkFUM1FRUUdBQUFBdUFFQUFBQjBNNHRFSkFpTFNBZ3p5T2pZelAvL1ZZdG9HUDl3RFA5d0VQOXdGT2crLy8vL2c4UU1YWXRFSkFpTFZDUVFpUUs0QXdBQUFNTlZpMHdrQ0lzcC8zRWMvM0VZLzNFbzZCWC8vLytEeEF4ZHdnUUFWVlpYVTR2cU04QXoyelBTTS9Zei8vL1JXMTllWGNPTDZvdnhpOEZxQWVpUEVnQUFNOEF6MnpQSk05SXovLy9tVll2c1UxWlhhZ0JTYUpaRUFCQlI2SndXQUFCZlhsdGR3MVdMYkNRSVVsSC9kQ1FVNkxYKy8vK0R4QXhkd2dnQWFneG9BSVFBRU9oQzRQLy9hZzdvVXVuLy8xbURaZndBaTNVSWkwNEVoY2wwTDZIa3B3QVF1dUNuQUJDSlJlU0Z3SFFST1FoMUxJdElCSWxLQkZEb1FkWC8vMW4vZGdUb09OWC8vMW1EWmdRQXgwWDgvdi8vLytnS0FBQUE2REhnLy8vRGk5RHJ4V29PNkI3by8vOVp3OHpNek16TXpNek16TXpNek16TWkxUWtCSXRNSkFqM3dnTUFBQUIxUElzQ09nRjFMZ3JBZENZNllRRjFKUXJrZEIzQjZCQTZRUUoxR1FyQWRCRTZZUU4xRUlQQkJJUENCQXJrZGRLTC96UEF3NUFid05IZ2c4QUJ3L2ZDQVFBQUFIUVlpZ0tEd2dFNkFYWG5nOEVCQ3NCMDNQZkNBZ0FBQUhTa1pvc0NnOElDT2dGMXpnckFkTVk2WVFGMXhRcmtkTDJEd1FMcmlJdi9WWXZzZzMwSUFIVVY2R2p6Ly8vSEFCWUFBQURvbHZqLy80UEkvMTNELzNVSWFnRC9OU0NnQUJEL0ZlQmdBQkJkdzR2L1ZZdnNWb3QxQ0lYMkQ0UmpBd0FBLzNZRTZETFUvLy8vZGdqb0t0VC8vLzkyRE9naTFQLy8vM1lRNkJyVS8vLy9kaFRvRXRULy8vOTJHT2dLMVAvLy96Ym9BOVQvLy85MklPajcwLy8vLzNZazZQUFQvLy8vZGlqbzY5UC8vLzkyTE9qajAvLy8vM1l3Nk52VC8vLy9kalRvMDlQLy8vOTJIT2pMMC8vLy8zWTQ2TVBULy8vL2Rqem91OVAvLzRQRVFQOTJRT2l3MC8vLy8zWkU2S2pULy8vL2Rram9vTlAvLy85MlRPaVkwLy8vLzNaUTZKRFQvLy8vZGxUb2lOUC8vLzkyV09pQTAvLy8vM1pjNkhqVC8vLy9kbURvY05QLy8vOTJaT2hvMC8vLy8zWm82R0RULy8vL2Rtem9XTlAvLy85MmNPaFEwLy8vLzNaMDZFalQvLy8vZG5qb1FOUC8vLzkyZk9nNDAvLy9nOFJBLzdhQUFBQUE2Q3JULy8vL3RvUUFBQURvSDlQLy8vKzJpQUFBQU9nVTAvLy8vN2FNQUFBQTZBblQvLy8vdHBBQUFBRG8vdEwvLy8rMmxBQUFBT2p6MHYvLy83YVlBQUFBNk9qUy8vLy90cHdBQUFEbzNkTC8vLysyb0FBQUFPalMwdi8vLzdha0FBQUE2TWZTLy8vL3RxZ0FBQURvdk5MLy8vKzJ2QUFBQU9peDB2Ly8vN2JBQUFBQTZLYlMvLy8vdHNRQUFBRG9tOUwvLy8rMnlBQUFBT2lRMHYvLy83Yk1BQUFBNklYUy8vK0R4RUQvdHRBQUFBRG9kOUwvLy8rMnVBQUFBT2hzMHYvLy83YllBQUFBNkdIUy8vLy90dHdBQUFEb1Z0TC8vLysyNEFBQUFPaEwwdi8vLzdia0FBQUE2RURTLy8vL3R1Z0FBQURvTmRMLy8vKzI3QUFBQU9ncTB2Ly8vN2JVQUFBQTZCL1MvLy8vdHZBQUFBRG9GTkwvLy8rMjlBQUFBT2dKMHYvLy83YjRBQUFBNlA3Ui8vLy90dndBQUFEbzg5SC8vLysyQUFFQUFPam8wZi8vLzdZRUFRQUE2TjNSLy8vL3RnZ0JBQURvMHRILy80UEVRUCsyREFFQUFPakUwZi8vLzdZUUFRQUE2TG5SLy8vL3RoUUJBQURvcnRILy8vKzJHQUVBQU9pajBmLy8vN1ljQVFBQTZKalIvLy8vdGlBQkFBRG9qZEgvLy8rMkpBRUFBT2lDMGYvLy83WW9BUUFBNkhmUi8vLy90aXdCQUFEb2JOSC8vLysyTUFFQUFPaGgwZi8vLzdZMEFRQUE2RmJSLy8vL3RqZ0JBQURvUzlILy8vKzJQQUVBQU9oQTBmLy8vN1pBQVFBQTZEWFIvLy8vdGtRQkFBRG9LdEgvLy8rMlNBRUFBT2dmMGYvL2c4UkEvN1pNQVFBQTZCSFIvLy8vdGxBQkFBRG9CdEgvLy8rMlZBRUFBT2o3MFAvLy83WllBUUFBNlBEUS8vLy90bHdCQUFEbzVkRC8vLysyWUFFQUFPamEwUC8vZzhRWVhsM0RpLzlWaSt4V2kzVUloZlowV1lzR093WFltZ0FRZEFkUTZMZlEvLzlaaTBZRU93WGNtZ0FRZEFkUTZLWFEvLzlaaTBZSU93WGdtZ0FRZEFkUTZKUFEvLzlaaTBZd093VUltd0FRZEFkUTZJSFEvLzlaaTNZME96VU1td0FRZEFkVzZHL1EvLzlaWGwzRGkvOVZpK3hXaTNVSWhmWVBoT29BQUFDTFJndzdCZVNhQUJCMEIxRG9TZEQvLzFtTFJoQTdCZWlhQUJCMEIxRG9OOUQvLzFtTFJoUTdCZXlhQUJCMEIxRG9KZEQvLzFtTFJoZzdCZkNhQUJCMEIxRG9FOUQvLzFtTFJodzdCZlNhQUJCMEIxRG9BZEQvLzFtTFJpQTdCZmlhQUJCMEIxRG83OC8vLzFtTFJpUTdCZnlhQUJCMEIxRG8zYy8vLzFtTFJqZzdCUkNiQUJCMEIxRG95OC8vLzFtTFJqdzdCUlNiQUJCMEIxRG91Yy8vLzFtTFJrQTdCUmliQUJCMEIxRG9wOC8vLzFtTFJrUTdCUnliQUJCMEIxRG9sYy8vLzFtTFJrZzdCU0NiQUJCMEIxRG9nOC8vLzFtTGRrdzdOU1NiQUJCMEIxYm9jYy8vLzFsZVhjUE16TXpNek16TWkxUWtESXRNSkFTRjBuUnBNOENLUkNRSWhNQjFGb0g2Z0FBQUFISU9nejFNcUFBUUFIUUY2U3NNQUFCWGkvbUQrZ1J5TWZmWmcrRURkQXdyMFlnSGc4Y0JnK2tCZGZhTHlNSGdDQVBCaThqQjRCQUR3WXZLZytJRHdla0NkQWJ6cTRYU2RBcUlCNFBIQVlQcUFYWDJpMFFrQ0YvRGkwUWtCTU9MLzFXTDdJdEZDSVhBZEJLRDZBaUJPTjNkQUFCMUIxRG96ODcvLzFsZHc0di9WWXZzZyt3UW9RQ1FBQkF6eFlsRi9JdFZHRk16MjFaWE85TitINHRGRkl2S1NUZ1lkQWhBTzh0MTlvUEovNHZDSzhGSU84SjlBVUNKUlJpSlhmZzVYU1IxQzR0RkNJc0FpMEFFaVVVa2l6WG9ZQUFRTThBNVhTaFRVLzkxR0ErVndQOTFGSTBFeFFFQUFBQlEvM1VrLzlhTCtJbDk4RHY3ZFFjendPbFNBUUFBZmtOcTREUFNXUGYzZy9nQ2NqZU5SRDhJUFFBRUFBQjNFK2oxQ3dBQWk4UTd3M1FjeHdETXpBQUE2eEZRNkdmZi8vOVpPOE4wQ2NjQTNkMEFBSVBBQ0lsRjlPc0RpVjMwT1YzMGRLeFgvM1gwLzNVWS8zVVVhZ0gvZFNULzFvWEFENFRnQUFBQWl6WGtZQUFRVTFOWC8zWDAvM1VRLzNVTS85YUpSZmc3d3crRXdRQUFBTGtBQkFBQWhVMFFkQ21MUlNBN3d3K0VyQUFBQURsRitBK1Bvd0FBQUZEL2RSeFgvM1gwLzNVUS8zVU0vOWJwamdBQUFJdDkrRHY3ZmtKcTREUFNXUGYzZy9nQ2NqYU5SRDhJTzhGM0Z1ZzdDd0FBaS93NyszUm94d2ZNekFBQWc4Y0k2eHBRNktyZS8vOVpPOE4wQ2NjQTNkMEFBSVBBQ0l2NDZ3SXovenY3ZEQvL2RmaFgvM1h3LzNYMC8zVVEvM1VNLzlhRndIUWlVMU01WFNCMUJGTlQ2d2IvZFNEL2RSei9kZmhYVS85MUpQOFZqR0FBRUlsRitGZm9HUDcvLzFuL2RmVG9ELzcvLzR0RitGbU5aZVJmWGx1TFRmd3p6ZWlady8vL3ljT0wvMVdMN0lQc0VQOTFDSTFOOE9qbTV2Ly8vM1VvalVYdy8zVWsvM1VnLzNVYy8zVVkvM1VVLzNVUS8zVU1VT2psL2YvL2c4UWtnSDM4QUhRSGkwMzRnMkZ3L2NuRGkvOVZpK3hSVWFFQWtBQVFNOFdKUmZ4VE05dFdWNGxkK0RsZEhIVUxpMFVJaXdDTFFBU0pSUnlMTmVoZ0FCQXp3RGxkSUZOVC8zVVVENVhBLzNVUWpRVEZBUUFBQUZEL2RSei8xb3Y0Ty90MUJEUEE2MzkrUElILzhQLy9mM2MwalVRL0NEMEFCQUFBZHhQbytRa0FBSXZFTzhOMEhNY0F6TXdBQU9zUlVPaHIzZi8vV1R2RGRBbkhBTjNkQUFDRHdBaUwySVhiZExxTkJEOVFhZ0JUNkpYOC8vK0R4QXhYVS85MUZQOTFFR29CLzNVYy85YUZ3SFFSLzNVWVVGUC9kUXovRmV4Z0FCQ0pSZmhUNk9MOC8vK0xSZmhaaldYc1gxNWJpMDM4TTgzb2JNTC8vOG5EaS85VmkreUQ3QkQvZFFpTlRmRG91ZVgvLy85MUpJMUY4UDkxSFA5MUdQOTFGUDkxRVA5MURGRG82LzcvLzRQRUhJQjkvQUIwQjR0TitJTmhjUDNKdytoTzdQLy9oY0IwQ0dvVzZGRHMvLzlaOWdWQW13QVFBblFSYWdGb0ZRQUFRR29ENkFqdS8vK0R4QXhxQStqaXp2Ly96TXpNek16TXpNek16TXpNek16TXpNek16TXpNek16TXpNek16TXpNek14VmkreFhWb3QxREl0TkVJdDlDSXZCaTlFRHhqditkZ2c3K0ErQ29BRUFBSUg1Z0FBQUFISWNnejFNcUFBUUFIUVRWMWFENXcrRDVnODcvbDVmZFFYcDJBZ0FBUGZIQXdBQUFIVVV3ZWtDZytJRGcva0ljaW56cGY4a2xZQlFBQkNMeDdvREFBQUFnK2tFY2d5RDRBTUR5UDhraFpSUEFCRC9KSTJRVUFBUWtQOGtqUlJRQUJDUXBFOEFFTkJQQUJEMFR3QVFJOUdLQm9nSGlrWUJpRWNCaWtZQ3dla0NpRWNDZzhZRGc4Y0RnL2tJY3N6enBmOGtsWUJRQUJDTlNRQWowWW9HaUFlS1JnSEI2UUtJUndHRHhnS0R4d0tEK1FoeXB2T2wveVNWZ0ZBQUVKQWowWW9HaUFlRHhnSEI2UUtEeHdHRCtRaHlpUE9sL3lTVmdGQUFFSTFKQUhkUUFCQmtVQUFRWEZBQUVGUlFBQkJNVUFBUVJGQUFFRHhRQUJBMFVBQVFpMFNPNUlsRWorU0xSSTdvaVVTUDZJdEVqdXlKUkkvc2kwU084SWxFai9DTFJJNzBpVVNQOUl0RWp2aUpSSS80aTBTTy9JbEVqL3lOQkkwQUFBQUFBL0FEK1A4a2xZQlFBQkNMLzVCUUFCQ1lVQUFRcEZBQUVMaFFBQkNMUlFoZVg4bkRrSW9HaUFlTFJRaGVYOG5Ea0lvR2lBZUtSZ0dJUndHTFJRaGVYOG5EalVrQWlnYUlCNHBHQVloSEFZcEdBb2hIQW90RkNGNWZ5Y09RalhReC9JMThPZnozeHdNQUFBQjFKTUhwQW9QaUE0UDVDSElOL2ZPbC9QOGtsUnhTQUJDTC8vZloveVNOekZFQUVJMUpBSXZIdWdNQUFBQ0QrUVJ5RElQZ0F5dkkveVNGSUZFQUVQOGtqUnhTQUJDUU1GRUFFRlJSQUJCOFVRQVFpa1lESTlHSVJ3T0Q3Z0hCNlFLRDd3R0QrUWh5c3YzenBmei9KSlVjVWdBUWpVa0Fpa1lESTlHSVJ3T0tSZ0xCNlFLSVJ3S0Q3Z0tEN3dLRCtRaHlpUDN6cGZ6L0pKVWNVZ0FRa0lwR0F5UFJpRWNEaWtZQ2lFY0Npa1lCd2VrQ2lFY0JnKzREZys4RGcva0lENEpXLy8vLy9mT2wvUDhrbFJ4U0FCQ05TUURRVVFBUTJGRUFFT0JSQUJEb1VRQVE4RkVBRVBoUkFCQUFVZ0FRRTFJQUVJdEVqaHlKUkk4Y2kwU09HSWxFanhpTFJJNFVpVVNQRkl0RWpoQ0pSSThRaTBTT0RJbEVqd3lMUkk0SWlVU1BDSXRFamdTSlJJOEVqUVNOQUFBQUFBUHdBL2ovSkpVY1VnQVFpLzhzVWdBUU5GSUFFRVJTQUJCWVVnQVFpMFVJWGwvSnc1Q0tSZ09JUndPTFJRaGVYOG5EalVrQWlrWURpRWNEaWtZQ2lFY0NpMFVJWGwvSnc1Q0tSZ09JUndPS1JnS0lSd0tLUmdHSVJ3R0xSUWhlWDhuRGFnTG9mOHYvLzFuRGkvOVZpK3lEN0NTaEFKQUFFRFBGaVVYOGkwVUlVNGxGNEl0RkRGWlhpVVhrNkxUQy8vK0RaZXdBZ3ozMHB3QVFBSWxGNkhWOWFGeDRBQkQvRmRCZ0FCQ0wySVhiRDRRUUFRQUFpejFnWUFBUWFGQjRBQkJULzllRndBK0UrZ0FBQUlzMU9HQUFFRkQvMW1oQWVBQVFVNlAwcHdBUS85ZFEvOVpvTEhnQUVGT2orS2NBRVAvWFVQL1dhQkI0QUJCVG8veW5BQkQvMTFELzFxTUVxQUFRaGNCMEVHajRkd0FRVS8vWFVQL1dvd0NvQUJDaEFLZ0FFSXRONklzMUlHQUFFRHZCZEVjNURRU29BQkIwUDFELzF2ODFCS2dBRUl2NC85YUwySVgvZEN5RjIzUW8vOWVGd0hRWmpVM2NVV29NalUzd1VXb0JVUC9UaGNCMEJ2WkYrQUYxQ1lGTkVBQUFJQURyTTZINHB3QVFPMFhvZENsUS85YUZ3SFFpLzlDSlJleUZ3SFFab2Z5bkFCQTdSZWgwRDFELzFvWEFkQWovZGV6LzBJbEY3UDgxOUtjQUVQL1doY0IwRVA5MUVQOTE1UDkxNFA5MTdQL1E2d0l6d0l0Ti9GOWVNODFiNkFTOS8vL0p3NHYvVll2c1ZvdDFDRmVGOW5RSGkzME1oZjkxRmVndzVmLy9haFplaVREb1grci8vNHZHWDE1ZHc0dE5FSVhKZFFjendHYUpCdXZkaTlabWd6b0FkQWFEd2dKUGRmU0YvM1RuSzlFUHR3Rm1pUVFLZzhFQ1pvWEFkQU5QZGU0endJWC9kY0ptaVFibzN1VC8vMm9pV1lrSWkvSHJxb3YvVll2c2kxVUlVNHRkRkZaWGhkdDFFSVhTZFJBNVZReDFFalBBWDE1YlhjT0YwblFIaTMwTWhmOTFFK2lqNVAvL2FoWmVpVERvMHVuLy80dkc2OTJGMjNVSE04Qm1pUUxyMEl0TkVJWEpkUWN6d0dhSkF1dlVpOEtEKy85MUdJdnlLL0VQdHdGbWlRUU9nOEVDWm9YQWRDZFBkZTdySW92eEsvSVB0d3dHWm9rSWc4QUNab1hKZEFaUGRBTkxkZXVGMjNVRk04bG1pUWlGL3crRmVmLy8velBBZy92L2RSQ0xUUXhxVUdhSlJFcitXT2xrLy8vL1pva0M2QlRrLy85cUlsbUpDSXZ4NldyLy8vK0wvMVdMN0l0RkNHYUxDSVBBQW1hRnlYWDFLMFVJMGZoSVhjT0wvMVdMN0ZhTGRRaFhoZlowQjR0OURJWC9kUlhvMCtQLy8yb1dYb2t3NkFMcC8vK0x4bDllWGNPTFJSQ0Z3SFVGWm9rRzY5K0wxaXZRRDdjSVpva01Bb1BBQW1hRnlYUURUM1h1TThDRi8zWFVab2tHNkpQai8vOXFJbG1KQ0l2eDY3eUwvMVdMN0l0TkNJWEplQjZEK1FKK0RJUDVBM1VVb1l5YkFCQmR3NkdNbXdBUWlRMk1td0FRWGNQb1crUC8vOGNBRmdBQUFPaUo2UC8vZzhqL1hjUE16TXpNek16TXpNek16RldMN0ZOV1YxVnFBR29BYUFoV0FCRC9kUWpvS2dVQUFGMWZYbHVMNVYzRGkwd2tCUGRCQkFZQUFBQzRBUUFBQUhReWkwUWtGSXRJL0RQSTZMaTYvLzlWaTJnUWkxQW9Vb3RRSkZMb0ZBQUFBSVBFQ0YyTFJDUUlpMVFrRUlrQ3VBTUFBQUREVTFaWGkwUWtFRlZRYXY1b0VGWUFFR1QvTlFBQUFBQ2hBSkFBRURQRVVJMUVKQVJrb3dBQUFBQ0xSQ1FvaTFnSWkzQU1nLzcvZERxRGZDUXMvM1FHTzNRa0xIWXRqVFIyaXd5emlVd2tESWxJRElOOHN3UUFkUmRvQVFFQUFJdEVzd2pvU1FBQUFJdEVzd2pvWHdBQUFPdTNpMHdrQkdTSkRRQUFBQUNEeEJoZlhsdkRNOEJraXcwQUFBQUFnWGtFRUZZQUVIVVFpMUVNaTFJTU9WRUlkUVc0QVFBQUFNTlRVYnRRbXdBUTZ3dFRVYnRRbXdBUWkwd2tESWxMQ0lsREJJbHJERlZSVUZoWlhWbGJ3Z1FBLzlERFpnL3Z3RkZUaThHRDRBK0Z3SFYvaThLRDRuL0I2QWQwTjQya0pBQUFBQUJtRDM4QlpnOS9RUkJtRDM5QklHWVBmMEV3Wmc5L1FVQm1EMzlCVUdZUGYwRmdaZzkvUVhDTmlZQUFBQUJJZGRDRjBuUTNpOExCNkFSMEQrc0RqVWtBWmc5L0FZMUpFRWgxOW9QaUQzUWNpOEl6MjhIcUFuUUlpUm1OU1FSS2RmaUQ0QU4wQm9nWlFVaDErbHRZdzR2WTk5dUR3eEFyMHpQQVVvdlRnK0lEZEFhSUFVRktkZnJCNndKMENJa0JqVWtFUzNYNFd1bFYvLy8vYWdyL0ZmQmdBQkNqVEtnQUVEUEF3OHpNek16TXpNek16TXpNek16TXpGR05UQ1FJSzhpRDRROER3UnZKQzhGWjZib0JBQUJSalV3a0NDdklnK0VIQThFYnlRdkJXZW1rQVFBQVY0dkdnK0FQaGNBUGhjRUFBQUNMMFlQaGY4SHFCM1JsNndhTm13QUFBQUJtRDI4R1pnOXZUaEJtRDI5V0lHWVBiMTR3Wmc5L0IyWVBmMDhRWmc5L1Z5Qm1EMzlmTUdZUGIyWkFaZzl2YmxCbUQyOTJZR1lQYjM1d1pnOS9aMEJtRDM5dlVHWVBmM2RnWmc5L2YzQ050b0FBQUFDTnY0QUFBQUJLZGFPRnlYUkppOUhCNmdTRjBuUVhqWnNBQUFBQVpnOXZCbVlQZndlTmRoQ05meEJLZGUrRDRROTBKSXZCd2VrQ2RBMkxGb2tYalhZRWpYOEVTWFh6aThpRDRRTjBDWW9HaUFkR1IwbDE5MWhlWDEzRHVoQUFBQUFyMEN2S1VZdkNpOGlENFFOMENZb1dpQmRHUjBsMTk4SG9BblFOaXhhSkY0MTJCSTEvQkVoMTgxbnBDLy8vLzh4V2kwUWtGQXZBZFNpTFRDUVFpMFFrRERQUzkvR0wySXRFSkFqMzhZdndpOFAzWkNRUWk4aUx4dmRrSkJBRDBldEhpOGlMWENRUWkxUWtESXRFSkFqUjZkSGIwZXJSMkF2SmRmVDM4NHZ3OTJRa0ZJdklpMFFrRVBmbUE5RnlEanRVSkF4M0NISVBPMFFrQ0hZSlRpdEVKQkFiVkNRVU05c3JSQ1FJRzFRa0RQZmE5OWlEMmdDTHlvdlRpOW1MeUl2R1hzSVFBTXpNek16TXpNek16TXpNVVkxTUpBUXJ5QnZBOTlBanlJdkVKUUR3Ly84N3lISUtpOEZabElzQWlRUWt3eTBBRUFBQWhRRHI2Y3pNek16TWkwUWtDSXRNSkJBTHlJdE1KQXgxQ1l0RUpBVDM0Y0lRQUZQMzRZdllpMFFrQ1Bka0pCUUQySXRFSkFqMzRRUFRXOElRQU16TXpNek16TXpNek16TXpGV0w3Rll6d0ZCUVVGQlFVRkJRaTFVTWpVa0FpZ0lLd0hRSmc4SUJENnNFSk92eGkzVUlnOG4valVrQWc4RUJpZ1lLd0hRSmc4WUJENk1FSkhQdWk4R0R4Q0JleWNQTXpNek16TXpNek16TVZZdnNWalBBVUZCUVVGQlFVRkNMVlF5TlNRQ0tBZ3JBZEFtRHdnRVBxd1FrNi9HTGRRaUwvNG9HQ3NCMERJUEdBUStqQkNSejhZMUcvNFBFSUY3SncxV0w3RmRXVTR0TkVBdkpkRTJMZFFpTGZReTNRYk5hdGlDTlNRQ0tKZ3JraWdkMEp3ckFkQ09EeGdHRHh3RTY1M0lHT3VOM0FnTG1Pc2R5QmpyRGR3SUN4anJnZFF1RDZRRjEwVFBKT3VCMENibi8vLy8vY2dMMzJZdkJXMTVmeWNQTS95WGNZQUFReHdXOG5nQVFRR0VBRUxtOG5nQVE2VzNPLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEUWhRQUF1SVVBQUtTRkFBQUFBQUFBaUlVQUFJQ0ZBQUJzaFFBQUVvWUFBQ2lHQUFBNGhnQUFTb1lBQUY2R0FBQjZoZ0FBbUlZQUFLeUdBQUM4aGdBQXlJWUFBTmFHQUFEa2hnQUE3b1lBQUFhSEFBQWFod0FBS29jQUFEcUhBQUJTaHdBQVpJY0FBSENIQUFCK2h3QUFrSWNBQUtDSEFBRElod0FBMW9jQUFPaUhBQUFBaUFBQUZvZ0FBRENJQUFCR2lBQUFZSWdBQUc2SUFBQjhpQUFBbG9nQUFLYUlBQUM4aUFBQTFvZ0FBT0tJQUFEMGlBQUFESWtBQUNTSkFBQXdpUUFBT29rQUFFYUpBQUJZaVFBQVpva0FBSGFKQUFDQ2lRQUFtSWtBQUtTSkFBQ3dpUUFBd0lrQUFOYUpBQURvaVFBQUFBQUFBUGFGQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWlzQUVOQTRBQkRoVndBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFKaWJBQkR3bXdBUStJQUFFSkFVQUJBWktRQVFZbUZrSUdGc2JHOWpZWFJwYjI0QUFFc0FSUUJTQUU0QVJRQk1BRE1BTWdBdUFFUUFUQUJNQUFBQUFBQkdiSE5HY21WbEFFWnNjMU5sZEZaaGJIVmxBRVpzYzBkbGRGWmhiSFZsQUVac2MwRnNiRzlqQUFBQUFFTnZja1Y0YVhSUWNtOWpaWE56QUFCdEFITUFZd0J2QUhJQVpRQmxBQzRBWkFCc0FHd0FBQUFGQUFEQUN3QUFBQUFBQUFBZEFBREFCQUFBQUFBQUFBQ1dBQURBQkFBQUFBQUFBQUNOQUFEQUNBQUFBQUFBQUFDT0FBREFDQUFBQUFBQUFBQ1BBQURBQ0FBQUFBQUFBQUNRQUFEQUNBQUFBQUFBQUFDUkFBREFDQUFBQUFBQUFBQ1NBQURBQ0FBQUFBQUFBQUNUQUFEQUNBQUFBQUFBQUFDMEFnREFDQUFBQUFBQUFBQzFBZ0RBQ0FBQUFBQUFBQUFEQUFBQUNRQUFBSkFBQUFBTUFBQUFlSUVBRU1RcEFCQVpLUUFRVlc1cmJtOTNiaUJsZUdObGNIUnBiMjRBQUFDTWdRQVFJQ29BRUdOemJlQUJBQUFBQUFBQUFBQUFBQUFEQUFBQUlBV1RHUUFBQUFBQUFBQUFTQUJJQURvQWJRQnRBRG9BY3dCekFBQUFBQUJrQUdRQVpBQmtBQ3dBSUFCTkFFMEFUUUJOQUNBQVpBQmtBQ3dBSUFCNUFIa0FlUUI1QUFBQVRRQk5BQzhBWkFCa0FDOEFlUUI1QUFBQUFBQlFBRTBBQUFBQUFFRUFUUUFBQUFBQVJBQmxBR01BWlFCdEFHSUFaUUJ5QUFBQUFBQk9BRzhBZGdCbEFHMEFZZ0JsQUhJQUFBQUFBRThBWXdCMEFHOEFZZ0JsQUhJQUFBQlRBR1VBY0FCMEFHVUFiUUJpQUdVQWNnQUFBRUVBZFFCbkFIVUFjd0IwQUFBQUFBQktBSFVBYkFCNUFBQUFBQUJLQUhVQWJnQmxBQUFBQUFCQkFIQUFjZ0JwQUd3QUFBQk5BR0VBY2dCakFHZ0FBQUJHQUdVQVlnQnlBSFVBWVFCeUFIa0FBQUFBQUVvQVlRQnVBSFVBWVFCeUFIa0FBQUJFQUdVQVl3QUFBRTRBYndCMkFBQUFUd0JqQUhRQUFBQlRBR1VBY0FBQUFFRUFkUUJuQUFBQVNnQjFBR3dBQUFCS0FIVUFiZ0FBQUUwQVlRQjVBQUFBUVFCd0FISUFBQUJOQUdFQWNnQUFBRVlBWlFCaUFBQUFTZ0JoQUc0QUFBQlRBR0VBZEFCMUFISUFaQUJoQUhrQUFBQUFBRVlBY2dCcEFHUUFZUUI1QUFBQUFBQlVBR2dBZFFCeUFITUFaQUJoQUhrQUFBQUFBRmNBWlFCa0FHNEFaUUJ6QUdRQVlRQjVBQUFBVkFCMUFHVUFjd0JrQUdFQWVRQUFBRTBBYndCdUFHUUFZUUI1QUFBQUFBQlRBSFVBYmdCa0FHRUFlUUFBQUFBQVV3QmhBSFFBQUFCR0FISUFhUUFBQUZRQWFBQjFBQUFBVndCbEFHUUFBQUJVQUhVQVpRQUFBRTBBYndCdUFBQUFVd0IxQUc0QUFBQklTRHB0YlRwemN3QUFBQUJrWkdSa0xDQk5UVTFOSUdSa0xDQjVlWGw1QUUxTkwyUmtMM2w1QUFBQUFGQk5BQUJCVFFBQVJHVmpaVzFpWlhJQUFBQUFUbTkyWlcxaVpYSUFBQUFBVDJOMGIySmxjZ0JUWlhCMFpXMWlaWElBQUFCQmRXZDFjM1FBQUVwMWJIa0FBQUFBU25WdVpRQUFBQUJCY0hKcGJBQUFBRTFoY21Ob0FBQUFSbVZpY25WaGNua0FBQUFBU21GdWRXRnllUUJFWldNQVRtOTJBRTlqZEFCVFpYQUFRWFZuQUVwMWJBQktkVzRBVFdGNUFFRndjZ0JOWVhJQVJtVmlBRXBoYmdCVFlYUjFjbVJoZVFBQUFBQkdjbWxrWVhrQUFGUm9kWEp6WkdGNUFBQUFBRmRsWkc1bGMyUmhlUUFBQUZSMVpYTmtZWGtBVFc5dVpHRjVBQUJUZFc1a1lYa0FBRk5oZEFCR2Nta0FWR2gxQUZkbFpBQlVkV1VBVFc5dUFGTjFiZ0J5QUhVQWJnQjBBR2tBYlFCbEFDQUFaUUJ5QUhJQWJ3QnlBQ0FBQUFBQUFBMEFDZ0FBQUFBQVZBQk1BRThBVXdCVEFDQUFaUUJ5QUhJQWJ3QnlBQTBBQ2dBQUFGTUFTUUJPQUVjQUlBQmxBSElBY2dCdkFISUFEUUFLQUFBQUFBQkVBRThBVFFCQkFFa0FUZ0FnQUdVQWNnQnlBRzhBY2dBTkFBb0FBQUFBQUZJQU5nQXdBRE1BTXdBTkFBb0FMUUFnQUVFQWRBQjBBR1VBYlFCd0FIUUFJQUIwQUc4QUlBQjFBSE1BWlFBZ0FFMEFVd0JKQUV3QUlBQmpBRzhBWkFCbEFDQUFaZ0J5QUc4QWJRQWdBSFFBYUFCcEFITUFJQUJoQUhNQWN3QmxBRzBBWWdCc0FIa0FJQUJrQUhVQWNnQnBBRzRBWndBZ0FHNEFZUUIwQUdrQWRnQmxBQ0FBWXdCdkFHUUFaUUFnQUdrQWJnQnBBSFFBYVFCaEFHd0FhUUI2QUdFQWRBQnBBRzhBYmdBS0FGUUFhQUJwQUhNQUlBQnBBRzRBWkFCcEFHTUFZUUIwQUdVQWN3QWdBR0VBSUFCaUFIVUFad0FnQUdrQWJnQWdBSGtBYndCMUFISUFJQUJoQUhBQWNBQnNBR2tBWXdCaEFIUUFhUUJ2QUc0QUxnQWdBRWtBZEFBZ0FHa0Fjd0FnQUcwQWJ3QnpBSFFBSUFCc0FHa0Fhd0JsQUd3QWVRQWdBSFFBYUFCbEFDQUFjZ0JsQUhNQWRRQnNBSFFBSUFCdkFHWUFJQUJqQUdFQWJBQnNBR2tBYmdCbkFDQUFZUUJ1QUNBQVRRQlRBRWtBVEFBdEFHTUFid0J0QUhBQWFRQnNBR1VBWkFBZ0FDZ0FMd0JqQUd3QWNnQXBBQ0FBWmdCMUFHNEFZd0IwQUdrQWJ3QnVBQ0FBWmdCeUFHOEFiUUFnQUdFQUlBQnVBR0VBZEFCcEFIWUFaUUFnQUdNQWJ3QnVBSE1BZEFCeUFIVUFZd0IwQUc4QWNnQWdBRzhBY2dBZ0FHWUFjZ0J2QUcwQUlBQkVBR3dBYkFCTkFHRUFhUUJ1QUM0QURRQUtBQUFBQUFCU0FEWUFNQUF6QURJQURRQUtBQzBBSUFCdUFHOEFkQUFnQUdVQWJnQnZBSFVBWndCb0FDQUFjd0J3QUdFQVl3QmxBQ0FBWmdCdkFISUFJQUJzQUc4QVl3QmhBR3dBWlFBZ0FHa0FiZ0JtQUc4QWNnQnRBR0VBZEFCcEFHOEFiZ0FOQUFvQUFBQUFBRklBTmdBd0FETUFNUUFOQUFvQUxRQWdBRUVBZEFCMEFHVUFiUUJ3QUhRQUlBQjBBRzhBSUFCcEFHNEFhUUIwQUdrQVlRQnNBR2tBZWdCbEFDQUFkQUJvQUdVQUlBQkRBRklBVkFBZ0FHMEFid0J5QUdVQUlBQjBBR2dBWVFCdUFDQUFid0J1QUdNQVpRQXVBQW9BVkFCb0FHa0Fjd0FnQUdrQWJnQmtBR2tBWXdCaEFIUUFaUUJ6QUNBQVlRQWdBR0lBZFFCbkFDQUFhUUJ1QUNBQWVRQnZBSFVBY2dBZ0FHRUFjQUJ3QUd3QWFRQmpBR0VBZEFCcEFHOEFiZ0F1QUEwQUNnQUFBQUFBVWdBMkFEQUFNd0F3QUEwQUNnQXRBQ0FBUXdCU0FGUUFJQUJ1QUc4QWRBQWdBR2tBYmdCcEFIUUFhUUJoQUd3QWFRQjZBR1VBWkFBTkFBb0FBQUFBQUZJQU5nQXdBRElBT0FBTkFBb0FMUUFnQUhVQWJnQmhBR0lBYkFCbEFDQUFkQUJ2QUNBQWFRQnVBR2tBZEFCcEFHRUFiQUJwQUhvQVpRQWdBR2dBWlFCaEFIQUFEUUFLQUFBQUFBQUFBQUFBVWdBMkFEQUFNZ0EzQUEwQUNnQXRBQ0FBYmdCdkFIUUFJQUJsQUc0QWJ3QjFBR2NBYUFBZ0FITUFjQUJoQUdNQVpRQWdBR1lBYndCeUFDQUFiQUJ2QUhjQWFRQnZBQ0FBYVFCdUFHa0FkQUJwQUdFQWJBQnBBSG9BWVFCMEFHa0Fid0J1QUEwQUNnQUFBQUFBQUFBQUFGSUFOZ0F3QURJQU5nQU5BQW9BTFFBZ0FHNEFid0IwQUNBQVpRQnVBRzhBZFFCbkFHZ0FJQUJ6QUhBQVlRQmpBR1VBSUFCbUFHOEFjZ0FnQUhNQWRBQmtBR2tBYndBZ0FHa0FiZ0JwQUhRQWFRQmhBR3dBYVFCNkFHRUFkQUJwQUc4QWJnQU5BQW9BQUFBQUFBQUFBQUJTQURZQU1BQXlBRFVBRFFBS0FDMEFJQUJ3QUhVQWNnQmxBQ0FBZGdCcEFISUFkQUIxQUdFQWJBQWdBR1lBZFFCdUFHTUFkQUJwQUc4QWJnQWdBR01BWVFCc0FHd0FEUUFLQUFBQUFBQUFBRklBTmdBd0FESUFOQUFOQUFvQUxRQWdBRzRBYndCMEFDQUFaUUJ1QUc4QWRRQm5BR2dBSUFCekFIQUFZUUJqQUdVQUlBQm1BRzhBY2dBZ0FGOEFid0J1QUdVQWVBQnBBSFFBTHdCaEFIUUFaUUI0QUdrQWRBQWdBSFFBWVFCaUFHd0FaUUFOQUFvQUFBQUFBQUFBQUFCU0FEWUFNQUF4QURrQURRQUtBQzBBSUFCMUFHNEFZUUJpQUd3QVpRQWdBSFFBYndBZ0FHOEFjQUJsQUc0QUlBQmpBRzhBYmdCekFHOEFiQUJsQUNBQVpBQmxBSFlBYVFCakFHVUFEUUFLQUFBQUFBQUFBQUFBVWdBMkFEQUFNUUE0QUEwQUNnQXRBQ0FBZFFCdUFHVUFlQUJ3QUdVQVl3QjBBR1VBWkFBZ0FHZ0FaUUJoQUhBQUlBQmxBSElBY2dCdkFISUFEUUFLQUFBQUFBQUFBQUFBVWdBMkFEQUFNUUEzQUEwQUNnQXRBQ0FBZFFCdUFHVUFlQUJ3QUdVQVl3QjBBR1VBWkFBZ0FHMEFkUUJzQUhRQWFRQjBBR2dBY2dCbEFHRUFaQUFnQUd3QWJ3QmpBR3NBSUFCbEFISUFjZ0J2QUhJQURRQUtBQUFBQUFBQUFBQUFVZ0EyQURBQU1RQTJBQTBBQ2dBdEFDQUFiZ0J2QUhRQUlBQmxBRzRBYndCMUFHY0FhQUFnQUhNQWNBQmhBR01BWlFBZ0FHWUFid0J5QUNBQWRBQm9BSElBWlFCaEFHUUFJQUJrQUdFQWRBQmhBQTBBQ2dBQUFGSUFOZ0F3QURFQU1BQU5BQW9BTFFBZ0FHRUFZZ0J2QUhJQWRBQW9BQ2tBSUFCb0FHRUFjd0FnQUdJQVpRQmxBRzRBSUFCakFHRUFiQUJzQUdVQVpBQU5BQW9BQUFBQUFGSUFOZ0F3QURBQU9RQU5BQW9BTFFBZ0FHNEFid0IwQUNBQVpRQnVBRzhBZFFCbkFHZ0FJQUJ6QUhBQVlRQmpBR1VBSUFCbUFHOEFjZ0FnQUdVQWJnQjJBR2tBY2dCdkFHNEFiUUJsQUc0QWRBQU5BQW9BQUFCU0FEWUFNQUF3QURnQURRQUtBQzBBSUFCdUFHOEFkQUFnQUdVQWJnQnZBSFVBWndCb0FDQUFjd0J3QUdFQVl3QmxBQ0FBWmdCdkFISUFJQUJoQUhJQVp3QjFBRzBBWlFCdUFIUUFjd0FOQUFvQUFBQUFBQUFBVWdBMkFEQUFNQUF5QUEwQUNnQXRBQ0FBWmdCc0FHOEFZUUIwQUdrQWJnQm5BQ0FBY0FCdkFHa0FiZ0IwQUNBQWN3QjFBSEFBY0FCdkFISUFkQUFnQUc0QWJ3QjBBQ0FBYkFCdkFHRUFaQUJsQUdRQURRQUtBQUFBQUFBQUFBQUFBZ0FBQUNCdUFCQUlBQUFBeUcwQUVBa0FBQUJ3YlFBUUNnQUFBQ2h0QUJBUUFBQUEwR3dBRUJFQUFBQndiQUFRRWdBQUFDaHNBQkFUQUFBQTBHc0FFQmdBQUFCZ2F3QVFHUUFBQUJCckFCQWFBQUFBb0dvQUVCc0FBQUF3YWdBUUhBQUFBT0JwQUJBZUFBQUFvR2tBRUI4QUFBRFlhQUFRSUFBQUFIQm9BQkFoQUFBQWdHWUFFSGdBQUFCZ1pnQVFlUUFBQUVSbUFCQjZBQUFBS0dZQUVQd0FBQUFnWmdBUS93QUFBQUJtQUJCTkFHa0FZd0J5QUc4QWN3QnZBR1lBZEFBZ0FGWUFhUUJ6QUhVQVlRQnNBQ0FBUXdBckFDc0FJQUJTQUhVQWJnQjBBR2tBYlFCbEFDQUFUQUJwQUdJQWNnQmhBSElBZVFBQUFBQUFDZ0FLQUFBQUFBQXVBQzRBTGdBQUFEd0FjQUJ5QUc4QVp3QnlBR0VBYlFBZ0FHNEFZUUJ0QUdVQUlBQjFBRzRBYXdCdUFHOEFkd0J1QUQ0QUFBQUFBRklBZFFCdUFIUUFhUUJ0QUdVQUlBQkZBSElBY2dCdkFISUFJUUFLQUFvQVVBQnlBRzhBWndCeUFHRUFiUUE2QUNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBS0FBb0FDZ0FLQUFvQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUVnQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFoQUNFQUlRQWhBQ0VBSVFBaEFDRUFJUUFoQUFRQUJBQUVBQVFBQkFBRUFBUUFJRUFnUUNCQUlFQWdRQ0JBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBUUFCQUFFQUFRQUJBQUVBQ0NBSUlBZ2dDQ0FJSUFnZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUVBQVFBQkFBRUFBZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUdnQUtBQW9BQ2dBS0FBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFCSUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBSVFBaEFDRUFJUUFoQUNFQUlRQWhBQ0VBSVFBRUFBUUFCQUFFQUFRQUJBQUVBQ0JBWUVCZ1FHQkFZRUJnUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkVBQVFBQkFBRUFBUUFCQUFnZ0dDQVlJQmdnR0NBWUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FSQUFFQUFRQUJBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFTQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFGQUFVQUJBQUVBQVFBQkFBRUFBVUFCQUFFQUFRQUJBQUVBQVFBQUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVRQUFFQkFRRUJBUUVCQVFFQkFRRUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCRUFBQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQVFFQUFBQUFnSUdDZzRTRmhvZUlpWXFMakkyT2o1Q1JrcE9VbFphWG1KbWFtNXlkbnArZ29hS2pwS1dtcDZpcHFxdXNyYTZ2c0xHeXM3UzF0cmU0dWJxN3ZMMit2OERCd3NQRXhjYkh5TW5LeTh6TnpzL1EwZExUMU5YVzE5aloydHZjM2Q3ZjRPSGk0K1RsNXVmbzZlcnI3TzN1Ny9EeDh2UDA5ZmIzK1BuNisvejkvdjhBQVFJREJBVUdCd2dKQ2dzTURRNFBFQkVTRXhRVkZoY1lHUm9iSEIwZUh5QWhJaU1rSlNZbktDa3FLeXd0TGk4d01USXpORFUyTnpnNU9qczhQVDQvUUdGaVkyUmxabWRvYVdwcmJHMXViM0J4Y25OMGRYWjNlSGw2VzF4ZFhsOWdZV0pqWkdWbVoyaHBhbXRzYlc1dmNIRnljM1IxZG5kNGVYcDdmSDErZjRDQmdvT0VoWWFIaUltS2k0eU5qbytRa1pLVGxKV1dsNWlabXB1Y25aNmZvS0dpbzZTbHBxZW9xYXFycksydXI3Q3hzck8wdGJhM3VMbTZ1N3k5dnIvQXdjTER4TVhHeDhqSnlzdk16YzdQME5IUzA5VFYxdGZZMmRyYjNOM2UzK0RoNHVQazVlYm42T25xNit6dDd1L3c4Zkx6OVBYMjkvajUrdnY4L2Y3L2dJR0NnNFNGaG9lSWlZcUxqSTJPajVDUmtwT1VsWmFYbUptYW01eWRucCtnb2FLanBLV21wNmlwcXF1c3JhNnZzTEd5czdTMXRyZTR1YnE3dkwyK3Y4REJ3c1BFeGNiSHlNbkt5OHpOenMvUTBkTFQxTlhXMTlqWjJ0dmMzZDdmNE9IaTQrVGw1dWZvNmVycjdPM3U3L0R4OHZQMDlmYjMrUG42Ky96OS92OEFBUUlEQkFVR0J3Z0pDZ3NNRFE0UEVCRVNFeFFWRmhjWUdSb2JIQjBlSHlBaElpTWtKU1luS0NrcUt5d3RMaTh3TVRJek5EVTJOemc1T2pzOFBUNC9RRUZDUTBSRlJrZElTVXBMVEUxT1QxQlJVbE5VVlZaWFdGbGFXMXhkWGw5Z1FVSkRSRVZHUjBoSlNrdE1UVTVQVUZGU1UxUlZWbGRZV1ZwN2ZIMStmNENCZ29PRWhZYUhpSW1LaTR5TmpvK1FrWktUbEpXV2w1aVptcHVjblo2Zm9LR2lvNlNscHFlb3FhcXJySzJ1cjdDeHNyTzB0YmEzdUxtNnU3eTl2ci9Bd2NMRHhNWEd4OGpKeXN2TXpjN1AwTkhTMDlUVjF0ZlkyZHJiM04zZTMrRGg0dVBrNWVibjZPbnE2K3p0N3UvdzhmTHo5UFgyOS9qNSt2djgvZjcvUjJWMFVISnZZMlZ6YzFkcGJtUnZkMU4wWVhScGIyNEFSMlYwVlhObGNrOWlhbVZqZEVsdVptOXliV0YwYVc5dVZ3QUFBRWRsZEV4aGMzUkJZM1JwZG1WUWIzQjFjQUFBUjJWMFFXTjBhWFpsVjJsdVpHOTNBRTFsYzNOaFoyVkNiM2hYQUZVQVV3QkZBRklBTXdBeUFDNEFSQUJNQUV3QUFBQUFBQ0JEYjIxd2JHVjBaU0JQWW1wbFkzUWdURzlqWVhSdmNpY0FBQUFnUTJ4aGMzTWdTR2xsY21GeVkyaDVJRVJsYzJOeWFYQjBiM0luQUFBQUFDQkNZWE5sSUVOc1lYTnpJRUZ5Y21GNUp3QUFJRUpoYzJVZ1EyeGhjM01nUkdWelkzSnBjSFJ2Y2lCaGRDQW9BQ0JVZVhCbElFUmxjMk55YVhCMGIzSW5BQUFBWUd4dlkyRnNJSE4wWVhScFl5QjBhSEpsWVdRZ1ozVmhjbVFuQUdCdFlXNWhaMlZrSUhabFkzUnZjaUJqYjNCNUlHTnZibk4wY25WamRHOXlJR2wwWlhKaGRHOXlKd0FBWUhabFkzUnZjaUIyWW1GelpTQmpiM0I1SUdOdmJuTjBjblZqZEc5eUlHbDBaWEpoZEc5eUp3QUFBQUJnZG1WamRHOXlJR052Y0hrZ1kyOXVjM1J5ZFdOMGIzSWdhWFJsY21GMGIzSW5BQUJnWkhsdVlXMXBZeUJoZEdWNGFYUWdaR1Z6ZEhKMVkzUnZjaUJtYjNJZ0p3QUFBQUJnWkhsdVlXMXBZeUJwYm1sMGFXRnNhWHBsY2lCbWIzSWdKd0FBWUdWb0lIWmxZM1J2Y2lCMlltRnpaU0JqYjNCNUlHTnZibk4wY25WamRHOXlJR2wwWlhKaGRHOXlKd0JnWldnZ2RtVmpkRzl5SUdOdmNIa2dZMjl1YzNSeWRXTjBiM0lnYVhSbGNtRjBiM0luQUFBQVlHMWhibUZuWldRZ2RtVmpkRzl5SUdSbGMzUnlkV04wYjNJZ2FYUmxjbUYwYjNJbkFBQUFBR0J0WVc1aFoyVmtJSFpsWTNSdmNpQmpiMjV6ZEhKMVkzUnZjaUJwZEdWeVlYUnZjaWNBQUFCZ2NHeGhZMlZ0Wlc1MElHUmxiR1YwWlZ0ZElHTnNiM04xY21VbkFBQUFBR0J3YkdGalpXMWxiblFnWkdWc1pYUmxJR05zYjNOMWNtVW5BQUJnYjIxdWFTQmpZV3hzYzJsbkp3QUFJR1JsYkdWMFpWdGRBQUFBSUc1bGQxdGRBQUJnYkc5allXd2dkbVowWVdKc1pTQmpiMjV6ZEhKMVkzUnZjaUJqYkc5emRYSmxKd0JnYkc5allXd2dkbVowWVdKc1pTY0FZRkpVVkVrQUFBQmdSVWdBWUhWa2RDQnlaWFIxY201cGJtY25BR0JqYjNCNUlHTnZibk4wY25WamRHOXlJR05zYjNOMWNtVW5BQUJnWldnZ2RtVmpkRzl5SUhaaVlYTmxJR052Ym5OMGNuVmpkRzl5SUdsMFpYSmhkRzl5SndBQVlHVm9JSFpsWTNSdmNpQmtaWE4wY25WamRHOXlJR2wwWlhKaGRHOXlKd0JnWldnZ2RtVmpkRzl5SUdOdmJuTjBjblZqZEc5eUlHbDBaWEpoZEc5eUp3QUFBQUJnZG1seWRIVmhiQ0JrYVhOd2JHRmpaVzFsYm5RZ2JXRndKd0FBWUhabFkzUnZjaUIyWW1GelpTQmpiMjV6ZEhKMVkzUnZjaUJwZEdWeVlYUnZjaWNBWUhabFkzUnZjaUJrWlhOMGNuVmpkRzl5SUdsMFpYSmhkRzl5SndBQUFBQmdkbVZqZEc5eUlHTnZibk4wY25WamRHOXlJR2wwWlhKaGRHOXlKd0FBQUdCelkyRnNZWElnWkdWc1pYUnBibWNnWkdWemRISjFZM1J2Y2ljQUFBQUFZR1JsWm1GMWJIUWdZMjl1YzNSeWRXTjBiM0lnWTJ4dmMzVnlaU2NBQUFCZ2RtVmpkRzl5SUdSbGJHVjBhVzVuSUdSbGMzUnlkV04wYjNJbkFBQUFBR0IyWW1GelpTQmtaWE4wY25WamRHOXlKd0FBWUhOMGNtbHVaeWNBQUFBQVlHeHZZMkZzSUhOMFlYUnBZeUJuZFdGeVpDY0FBQUFBWUhSNWNHVnZaaWNBQUFBQVlIWmpZV3hzSndCZ2RtSjBZV0pzWlNjQUFBQmdkbVowWVdKc1pTY0FBQUJlUFFBQWZEMEFBQ1k5QUFBOFBEMEFQajQ5QUNVOUFBQXZQUUFBTFQwQUFDczlBQUFxUFFBQWZId0FBQ1ltQUFCOEFBQUFYZ0FBQUg0QUFBQW9LUUFBTEFBQUFENDlBQUErQUFBQVBEMEFBRHdBQUFBbEFBQUFMd0FBQUMwK0tnQW1BQUFBS3dBQUFDMEFBQUF0TFFBQUt5c0FBQ29BQUFBdFBnQUFiM0JsY21GMGIzSUFBQUFBVzEwQUFDRTlBQUE5UFFBQUlRQUFBRHc4QUFBK1BnQUFQUUFBQUNCa1pXeGxkR1VBSUc1bGR3QUFBQUJmWDNWdVlXeHBaMjVsWkFCZlgzSmxjM1J5YVdOMEFBQmZYM0IwY2pZMEFGOWZaV0ZpYVFBQVgxOWpiSEpqWVd4c0FBQUFYMTltWVhOMFkyRnNiQUFBWDE5MGFHbHpZMkZzYkFBQVgxOXpkR1JqWVd4c0FBQUFYMTl3WVhOallXd0FBQUFBWDE5alpHVmpiQUJmWDJKaGMyVmtLQUFBQUFBTWZnQVFCSDRBRVBoOUFCRHNmUUFRNEgwQUVOUjlBQkRJZlFBUXdIMEFFTGg5QUJDc2ZRQVFvSDBBRUoxOUFCQ1lmUUFRa0gwQUVJeDlBQkNJZlFBUWhIMEFFSUI5QUJCOGZRQVFlSDBBRUhSOUFCQm9mUUFRWkgwQUVHQjlBQkJjZlFBUVdIMEFFRlI5QUJCUWZRQVFUSDBBRUVoOUFCQkVmUUFRUUgwQUVEeDlBQkE0ZlFBUU5IMEFFREI5QUJBc2ZRQVFLSDBBRUNSOUFCQWdmUUFRSEgwQUVCaDlBQkFVZlFBUUVIMEFFQXg5QUJBSWZRQVFCSDBBRUFCOUFCRDhmQUFRK0h3QUVQUjhBQkR3ZkFBUTdId0FFT0I4QUJEVWZBQVF6SHdBRU1COEFCQ29mQUFRbkh3QUVJaDhBQkJvZkFBUVNId0FFQ2g4QUJBSWZBQVE2SHNBRU1SN0FCQ29ld0FRaEhzQUVHUjdBQkE4ZXdBUUlIc0FFQkI3QUJBTWV3QVFCSHNBRVBSNkFCRFFlZ0FReUhvQUVMeDZBQkNzZWdBUWtIb0FFSEI2QUJCSWVnQVFJSG9BRVBoNUFCRE1lUUFRc0hrQUVJeDVBQkJvZVFBUVBIa0FFQkI1QUJEMGVBQVFuWDBBRU9CNEFCREVlQUFRc0hnQUVKQjRBQkIwZUFBUUFBQUFBQUVDQXdRRkJnY0lDUW9MREEwT0R4QVJFaE1VRlJZWEdCa2FHeHdkSGg4Z0lTSWpKQ1VtSnlncEtpc3NMUzR2TURFeU16UTFOamM0T1RvN1BEMCtQMEJCUWtORVJVWkhTRWxLUzB4TlRrOVFVVkpUVkZWV1YxaFpXbHRjWFY1ZllHRmlZMlJsWm1kb2FXcHJiRzF1YjNCeGNuTjBkWFozZUhsNmUzeDlmbjhBVTJWRVpXSjFaMUJ5YVhacGJHVm5aUUFBQUFBQUFBQUFMMk1nWkdWaWRXY3VZbUYwSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUFBQUFBWXpwY2QybHVaRzkzYzF4emVYTjBaVzB6TWx4amJXUXVaWGhsQUc5d1pXNEFBQUFBU0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSkFBRU9DQkFCQURBQUFBQUFBQUFBQUFBQUFBQUFBQUNKQUFFQXlCQUJBQUFBQUFBQUFBQUFJQUFBQWNnUUFRS0lFQUVFU0JBQkFBQUFBQUNKQUFFQUVBQUFBQUFBQUEvLy8vL3dBQUFBQkFBQUFBRElFQUVDU1FBQkFBQUFBQUFBQUFBUC8vLy84QUFBQUFRQUFBQUdDQkFCQUFBQUFBQUFBQUFBRUFBQUJ3Z1FBUVJJRUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWtrQUFRWUlFQUVBQUFBQUFBQUFBQUFBQUFBSkNRQUJDZ2dRQVFBQUFBQUFBQUFBQUJBQUFBc0lFQUVMaUJBQkFBQUFBQWtKQUFFQUFBQUFBQUFBQUEvLy8vL3dBQUFBQkFBQUFBb0lFQUVBQUFBQUFBQUFBQUFBQUFBR0FsQUFEd1F3QUFFRllBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQS92Ly8vd0FBQUFEWS8vLy9BQUFBQVA3Ly8vOEFBQUFBMlJFQUVBQUFBQUQrLy8vL0FBQUFBTlQvLy84QUFBQUEvdi8vL3prVEFCQktFd0FRQUFBQUFJVVVBQkFBQUFBQVRJSUFFQUlBQUFCWWdnQVFkSUlBRUFBQUFBQUlrQUFRQUFBQUFQLy8vLzhBQUFBQURBQUFBTGNVQUJBQUFBQUFKSkFBRUFBQUFBRC8vLy8vQUFBQUFBd0FBQURyS1FBUS92Ly8vd0FBQUFEWS8vLy9BQUFBQVA3Ly8vOEFBQUFBY3hZQUVQNy8vLzhBQUFBQWdoWUFFUDcvLy84QUFBQUEyUC8vL3dBQUFBRCsvLy8vQUFBQUFEVVlBQkQrLy8vL0FBQUFBRUVZQUJEKy8vLy9BQUFBQU1ELy8vOEFBQUFBL3YvLy93QUFBQUM5SFFBUUFBQUFBUDcvLy84QUFBQUExUC8vL3dBQUFBRCsvLy8vQUFBQUFHa3JBQkFBQUFBQS92Ly8vd0FBQUFEVS8vLy9BQUFBQVA3Ly8vOEFBQUFBRGk0QUVBQUFBQUQrLy8vL0FBQUFBTlQvLy84QUFBQUEvdi8vL3dBQUFBQjNNUUFRQUFBQUFQNy8vLzhBQUFBQTFQLy8vd0FBQUFEKy8vLy9BQUFBQUQ0MEFCQUFBQUFBL3YvLy93QUFBQURNLy8vL0FBQUFBUDcvLy84QUFBQUFsemdBRUFBQUFBRCsvLy8vQUFBQUFOai8vLzhBQUFBQS92Ly8vNUk2QUJDV09nQVFBQUFBQVA3Ly8vOEFBQUFBd1AvLy93QUFBQUQrLy8vL0FBQUFBSDg4QUJBQUFBQUEvdi8vL3dBQUFBRFkvLy8vQUFBQUFQNy8vLys3UHdBUXpqOEFFQUFBQUFEKy8vLy9BQUFBQU5ULy8vOEFBQUFBL3YvLy93QUFBQUFaUlFBUWZJUUFBQUFBQUFBQUFBQUFsb1VBQUJCZ0FBQnNoQUFBQUFBQUFBQUFBQURvaFFBQUFHQUFBR1NGQUFBQUFBQUFBQUFBQUFhR0FBRDRZQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEUWhRQUF1SVVBQUtTRkFBQUFBQUFBaUlVQUFJQ0ZBQUJzaFFBQUVvWUFBQ2lHQUFBNGhnQUFTb1lBQUY2R0FBQjZoZ0FBbUlZQUFLeUdBQUM4aGdBQXlJWUFBTmFHQUFEa2hnQUE3b1lBQUFhSEFBQWFod0FBS29jQUFEcUhBQUJTaHdBQVpJY0FBSENIQUFCK2h3QUFrSWNBQUtDSEFBRElod0FBMW9jQUFPaUhBQUFBaUFBQUZvZ0FBRENJQUFCR2lBQUFZSWdBQUc2SUFBQjhpQUFBbG9nQUFLYUlBQUM4aUFBQTFvZ0FBT0tJQUFEMGlBQUFESWtBQUNTSkFBQXdpUUFBT29rQUFFYUpBQUJZaVFBQVpva0FBSGFKQUFDQ2lRQUFtSWtBQUtTSkFBQ3dpUUFBd0lrQUFOYUpBQURvaVFBQUFBQUFBUGFGQUFBQUFBQUF3QUZIWlhSRGRYSnlaVzUwVUhKdlkyVnpjd0N5QkZOc1pXVndBRklBUTJ4dmMyVklZVzVrYkdVQVMwVlNUa1ZNTXpJdVpHeHNBQUQzQVU5d1pXNVFjbTlqWlhOelZHOXJaVzRBQUpZQlRHOXZhM1Z3VUhKcGRtbHNaV2RsVm1Gc2RXVkJBQjhBUVdScWRYTjBWRzlyWlc1UWNtbDJhV3hsWjJWekFFRkVWa0ZRU1RNeUxtUnNiQUFBSGdGVGFHVnNiRVY0WldOMWRHVkJBRk5JUlV4TU16SXVaR3hzQU1VQlIyVjBRM1Z5Y21WdWRGUm9jbVZoWkVsa0FBREtBRVJsWTI5a1pWQnZhVzUwWlhJQWhnRkhaWFJEYjIxdFlXNWtUR2x1WlVFQXdBUlVaWEp0YVc1aGRHVlFjbTlqWlhOekFBRFRCRlZ1YUdGdVpHeGxaRVY0WTJWd2RHbHZia1pwYkhSbGNnQUFwUVJUWlhSVmJtaGhibVJzWldSRmVHTmxjSFJwYjI1R2FXeDBaWElBQUFOSmMwUmxZblZuWjJWeVVISmxjMlZ1ZEFEcUFFVnVZMjlrWlZCdmFXNTBaWElBeFFSVWJITkJiR3h2WXdBQXh3UlViSE5IWlhSV1lXeDFaUURJQkZSc2MxTmxkRlpoYkhWbEFNWUVWR3h6Um5KbFpRRHZBa2x1ZEdWeWJHOWphMlZrU1c1amNtVnRaVzUwQUFBWUFrZGxkRTF2WkhWc1pVaGhibVJzWlZjQUFITUVVMlYwVEdGemRFVnljbTl5QUFBQ0FrZGxkRXhoYzNSRmNuSnZjZ0FBNndKSmJuUmxjbXh2WTJ0bFpFUmxZM0psYldWdWRBQUFSUUpIWlhSUWNtOWpRV1JrY21WemN3QUF6d0pJWldGd1JuSmxaUUFBR1FGRmVHbDBVSEp2WTJWemN3QnZCRk5sZEVoaGJtUnNaVU52ZFc1MEFBQmtBa2RsZEZOMFpFaGhibVJzWlFBQTR3SkpibWwwYVdGc2FYcGxRM0pwZEdsallXeFRaV04wYVc5dVFXNWtVM0JwYmtOdmRXNTBBUE1CUjJWMFJtbHNaVlI1Y0dVQVl3SkhaWFJUZEdGeWRIVndTVzVtYjFjQTBRQkVaV3hsZEdWRGNtbDBhV05oYkZObFkzUnBiMjRBRXdKSFpYUk5iMlIxYkdWR2FXeGxUbUZ0WlVFQUFHRUJSbkpsWlVWdWRtbHliMjV0Wlc1MFUzUnlhVzVuYzFjQUVRVlhhV1JsUTJoaGNsUnZUWFZzZEdsQ2VYUmxBTm9CUjJWMFJXNTJhWEp2Ym0xbGJuUlRkSEpwYm1kelZ3QUF6UUpJWldGd1EzSmxZWFJsQUFET0FraGxZWEJFWlhOMGNtOTVBS2NEVVhWbGNubFFaWEptYjNKdFlXNWpaVU52ZFc1MFpYSUFrd0pIWlhSVWFXTnJRMjkxYm5RQUFNRUJSMlYwUTNWeWNtVnVkRkJ5YjJObGMzTkpaQUI1QWtkbGRGTjVjM1JsYlZScGJXVkJjMFpwYkdWVWFXMWxBTXNDU0dWaGNFRnNiRzlqQUxFRFVtRnBjMlZGZUdObGNIUnBiMjRBQURrRFRHVmhkbVZEY21sMGFXTmhiRk5sWTNScGIyNEFBTzRBUlc1MFpYSkRjbWwwYVdOaGJGTmxZM1JwYjI0QUFISUJSMlYwUTFCSmJtWnZBR2dCUjJWMFFVTlFBQUEzQWtkbGRFOUZUVU5RQUFBS0EwbHpWbUZzYVdSRGIyUmxVR0ZuWlFEU0FraGxZWEJTWlVGc2JHOWpBRDhEVEc5aFpFeHBZbkpoY25sWEFBQWxCVmR5YVhSbFJtbHNaUUFVQWtkbGRFMXZaSFZzWlVacGJHVk9ZVzFsVndBQUdBUlNkR3hWYm5kcGJtUUExQUpJWldGd1UybDZaUUFBTFFOTVEwMWhjRk4wY21sdVoxY0FBR2NEVFhWc2RHbENlWFJsVkc5WGFXUmxRMmhoY2dCcEFrZGxkRk4wY21sdVoxUjVjR1ZYQUFBRUEwbHpVSEp2WTJWemMyOXlSbVZoZEhWeVpWQnlaWE5sYmdtUUx1eEdiOUVqR0lBRUFBQUFBQXVQMEZXWW1Ga1gyRnNiRzlqUUhOMFpFQkFBSXhpQUJBQUFBQUFMajlCVm1WNFkyVndkR2x2YmtCemRHUkFRQUQvLy8vLy8vLy8vLy8vLy8rQUNnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSXhpQUJBQUFBQUFMajlCVm5SNWNHVmZhVzVtYjBCQUFBQUFBQUFCQUFBQUFBQUFBQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBQUFBQUFBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQkFBQUFBQUFBQUFFQUFBQUFBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBQUFBQUFBRUFBQUFBQUFBQUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFFQUFBQUFBQUFBQVFBQUFBQUFBQUFCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFTUFBQUFBQUFBQS9HVUFFUGhsQUJEMFpRQVE4R1VBRU94bEFCRG9aUUFRNUdVQUVOeGxBQkRVWlFBUXpHVUFFTUJsQUJDMFpRQVFyR1VBRUtCbEFCQ2NaUUFRbUdVQUVKUmxBQkNRWlFBUWpHVUFFSWhsQUJDRVpRQVFnR1VBRUh4bEFCQjRaUUFRZEdVQUVIQmxBQkJvWlFBUVhHVUFFRlJsQUJCTVpRQVFqR1VBRUVSbEFCQThaUUFRTkdVQUVDaGxBQkFnWlFBUUZHVUFFQWhsQUJBRVpRQVFBR1VBRVBSa0FCRGdaQUFRMUdRQUVBa0VBQUFCQUFBQUFBQUFBTXhrQUJERVpBQVF2R1FBRUxSa0FCQ3NaQUFRcEdRQUVKeGtBQkNNWkFBUWZHUUFFR3hrQUJCWVpBQVFSR1FBRURSa0FCQWdaQUFRR0dRQUVCQmtBQkFJWkFBUUFHUUFFUGhqQUJEd1l3QVE2R01BRU9CakFCRFlZd0FRMEdNQUVNaGpBQkRBWXdBUXNHTUFFSnhqQUJDUVl3QVFoR01BRVBoakFCQjRZd0FRYkdNQUVGeGpBQkJJWXdBUU9HTUFFQ1JqQUJBUVl3QVFDR01BRUFCakFCRHNZZ0FReEdJQUVMQmlBQkFBQUFBQUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU1pUkFCQUFBQUFBQUFBQUFBQUFBQURJa1FBUUFBQUFBQUFBQUFBQUFBQUF5SkVBRUFBQUFBQUFBQUFBQUFBQUFNaVJBQkFBQUFBQUFBQUFBQUFBQUFESWtRQVFBQUFBQUFBQUFBQUFBQUFBQVFBQUFBRUFBQUFBQUFBQUFBQUFBQUFBQUFEWW1nQVFBQUFBQUFBQUFBRHdjQUFRZUhVQUVQaDJBQkRRa1FBUU9KTUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQUFBQUFBQUFBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUdGaVkyUmxabWRvYVdwcmJHMXViM0J4Y25OMGRYWjNlSGw2QUFBQUFBQUFRVUpEUkVWR1IwaEpTa3RNVFU1UFVGRlNVMVJWVmxkWVdWb0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFBQUFBQUFBQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCaFltTmtaV1puYUdscWEyeHRibTl3Y1hKemRIVjJkM2g1ZWdBQUFBQUFBRUZDUTBSRlJrZElTVXBMVEUxT1QxQlJVbE5VVlZaWFdGbGFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCaVVBQkFCQWdRSXBBTUFBR0NDZVlJaEFBQUFBQUFBQUtiZkFBQUFBQUFBb2FVQUFBQUFBQUNCbitEOEFBQUFBRUIrZ1B3QUFBQUFxQU1BQU1HajJxTWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDQi9nQUFBQUFBQUVEK0FBQUFBQUFBdFFNQUFNR2oycU1nQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ0IvZ0FBQUFBQUFFSCtBQUFBQUFBQXRnTUFBTStpNUtJYUFPV2k2S0piQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNCL2dBQUFBQUFBRUIrb2Y0QUFBQUFVUVVBQUZIYVh0b2dBRi9hYXRveUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDQjA5amU0UGtBQURGK2dmNEFBQUFBQVFBQUFCWUFBQUFDQUFBQUFnQUFBQU1BQUFBQ0FBQUFCQUFBQUJnQUFBQUZBQUFBRFFBQUFBWUFBQUFKQUFBQUJ3QUFBQXdBQUFBSUFBQUFEQUFBQUFrQUFBQU1BQUFBQ2dBQUFBY0FBQUFMQUFBQUNBQUFBQXdBQUFBV0FBQUFEUUFBQUJZQUFBQVBBQUFBQWdBQUFCQUFBQUFOQUFBQUVRQUFBQklBQUFBU0FBQUFBZ0FBQUNFQUFBQU5BQUFBTlFBQUFBSUFBQUJCQUFBQURRQUFBRU1BQUFBQ0FBQUFVQUFBQUJFQUFBQlNBQUFBRFFBQUFGTUFBQUFOQUFBQVZ3QUFBQllBQUFCWkFBQUFDd0FBQUd3QUFBQU5BQUFBYlFBQUFDQUFBQUJ3QUFBQUhBQUFBSElBQUFBSkFBQUFCZ0FBQUJZQUFBQ0FBQUFBQ2dBQUFJRUFBQUFLQUFBQWdnQUFBQWtBQUFDREFBQUFGZ0FBQUlRQUFBQU5BQUFBa1FBQUFDa0FBQUNlQUFBQURRQUFBS0VBQUFBQ0FBQUFwQUFBQUFzQUFBQ25BQUFBRFFBQUFMY0FBQUFSQUFBQXpnQUFBQUlBQUFEWEFBQUFDd0FBQUJnSEFBQU1BQUFBREFBQUFBZ0FBQUJ4VWdBUWNWSUFFSEZTQUJCeFVnQVFjVklBRUhGU0FCQnhVZ0FRY1ZJQUVIRlNBQkJ4VWdBUUxnQUFBQzRBQUFEUW1nQVE3S2NBRU95bkFCRHNwd0FRN0tjQUVPeW5BQkRzcHdBUTdLY0FFT3luQUJEc3B3QVFmMzkvZjM5L2YzL1VtZ0FROEtjQUVQQ25BQkR3cHdBUThLY0FFUENuQUJEd3B3QVE4S2NBRU5pYUFCRCsvLy8vOEhBQUVQSnlBQkFBQUFBQUFBQUFBQUlBQUFBQUFBQUFBQUFBQUFBQUFBQWdCWk1aQUFBQUFBQUFBQUFBQUFBQTlISUFFQUFBQUFBQUFBQUFBQUFBQUFFQUFBQXVBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkFBQUFBQUFBUUFZQUFBQUdBQUFnQUFBQUFBQUFBQUFCQUFBQUFBQUFRQUNBQUFBTUFBQWdBQUFBQUFBQUFBQUJBQUFBQUFBQVFBSkJBQUFTQUFBQUZpd0FBQmFBUUFBNUFRQUFBQUFBQUE4WVhOelpXMWliSGtnZUcxc2JuTTlJblZ5YmpwelkyaGxiV0Z6TFcxcFkzSnZjMjltZEMxamIyMDZZWE50TG5ZeElpQnRZVzVwWm1WemRGWmxjbk5wYjI0OUlqRXVNQ0krRFFvZ0lEeDBjblZ6ZEVsdVptOGdlRzFzYm5NOUluVnlianB6WTJobGJXRnpMVzFwWTNKdmMyOW1kQzFqYjIwNllYTnRMbll6SWo0TkNpQWdJQ0E4YzJWamRYSnBkSGsrRFFvZ0lDQWdJQ0E4Y21WeGRXVnpkR1ZrVUhKcGRtbHNaV2RsY3o0TkNpQWdJQ0FnSUNBZ1BISmxjWFZsYzNSbFpFVjRaV04xZEdsdmJreGxkbVZzSUd4bGRtVnNQU0poYzBsdWRtOXJaWElpSUhWcFFXTmpaWE56UFNKbVlXeHpaU0krUEM5eVpYRjFaWE4wWldSRmVHVmpkWFJwYjI1TVpYWmxiRDROQ2lBZ0lDQWdJRHd2Y21WeGRXVnpkR1ZrVUhKcGRtbHNaV2RsY3o0TkNpQWdJQ0E4TDNObFkzVnlhWFI1UGcwS0lDQThMM1J5ZFhOMFNXNW1iejROQ2p3dllYTnpaVzFpYkhrK1VFRlFRVVJFU1U1SFdGaFFRVVJFU1U1SFVFRkVSRWxPUjFoWVVFRkVSRWxPUjFCQlJFUkpUa2RZV0ZCQlJFUkpUa2RRUVVSRVNVNUhXRmhRUVVSRVNVNUhVRUZFUkVsT1IxaFlVRUZFQUJBQUFMZ0JBQUFITUJzd0lqQTBNRHd3YnpCOE1KRXdxREN0TUxJd3VURHFNQVV4UFRGQ01Vd3hnREdZTWFBeHFUSGlNUll5SERJaU1qY3lhVEtGTXAweThESWRNNHN6a1RPWE01MHpvek9wTTdBenR6TytNOFV6ekRQVE05b3o0alBxTS9Jei9qTUhOQXcwRWpRY05DVTBNRFE4TkVFMFVUUldORncwWWpSNE5IODBoelNhTk1rMC9EUUNOUWMxRHpVZk5TazFMelZETlZnMVh6VnJOWEUxZlRXRE5ZdzFraldiTmFjMXJUVzFOYnMxeHpYTk5kbzE1RFhxTmZRMUZqWXJObEUya1RhWE5zRTJ4emJOTnVNMit6WWhONXMzdmpmSU53QTRDRGhVT0dRNGFqaDJPSHc0akRpU09KZzRwemkxT0w4NHhUamJPT0E0NkRqdU9QVTQremdDT1FnNUVEa1hPUnc1SkRrdE9UazVQamxET1VrNVRUbFRPVmc1WGpsak9YSTVpRG1PT1pZNW16bWpPYWc1c0RtMU9idzV5em5RT2RZNTN6bi9PUVU2SFRwSU9rNDZZRHFLT3BNNm56cldPdDg2Nnpva095MDdPVHRWTzFzN1pEdHJPNDA3QWp3S1BCMDhLRHd0UEQ4OFNUeE9QR284ZER5S1BKVThyenk2UE1JODBqellQT2s4SWowc1BWSTlXVDF6UFhvOXBUMGtQa28rVUQ1NlByOCt4ajdiUGlJL0xEOVhQMjgvalQreFArRS84ejhBSUFBQTJBQUFBQ0V3UkRCS01GOHdmekNrTUs4d3ZqRDJNQUF4UVRGTU1WWXhaekZ5TVRJelF6TkxNMUV6VmpOY004Z3p6alBxTXhJMFhqUnFOSGswZmpTZk5LUTB6RFRZTk9FMDV6VHROQUUxSGpWeU5VdzJWRFpzTm9jMjNqWmlPSVU0a2ppZU9LWTRyamk2T09NNDZ6ajJPQWc1SVRtN09jNDUvRGtWT2xZNlhUcGxPdFU2Mmpyak92STZGVHNhT3g4N05qdVlPOGM3elR2Y095TThNRHcyUEdJOGxUeWtQS3M4dFR6SFBONDg3RHp5UEJVOUhEMDFQVWs5VHoxWVBXczlqejNQUFNNK1F6NVRQcDgrN2o0MlA0by9BQUFBTUFBQTVBQUFBRTB3ZXpEek1BMHhIakZYTWVVeElqSTVNcWt6dWpQME13RTBDelFaTkNJMExEUjBOSHcwa1RTY05PYzA4alQ4TkJVMUh6VXlOVlkxalRYQ05kVTFSVFppTnFzMkdqYzVONjQzdWpmTk45ODMramNDT0FvNElUZzZPRlk0WHpobE9HNDRjemlDT0trNDBqampPUHM0RnprNk9ZSTVpRG1TT1FBNkJqb1NPa2s2WVRwMU9xdzZzanEzT3NVNnlqclBPdFE2NURvVE94azdJVHRvTzIwN3B6dXNPN003dUR1L084UTcwanN6UER3OFFqektQTms4NkR6NlBObzk1RDN4UFM4K05qNURQa2srZ1Q2SFBvMCtPRDg5UDA4L2JUK0JQNGMvK1Q4QVFBQUFoQUFBQUF3d0hqQmxNSDB3aHpDaU1Lb3dzREMrTVBJdy96QVVNVVV4WWpHdU1kd3hkVE9CTTR3MHRUVFZOTm8wM3pYbE5YTTVoVG1YT2FrNXV6bmhPZk01QlRvWE9pazZPenBOT2w4NmNUcURPcFU2cHpxNU92QTZjenU4TzFVOEpUMmZQY0k5V3o3UlBqby9iRCtFUDRzL2t6K1lQNXcvb0QvSlArOC9BQUFBVUFBQW9BQUFBQTB3RkRBWU1Cd3dJREFrTUNnd0xEQXdNSG93Z0RDRU1JZ3dqRER5TVAwd0dERWZNU1F4S0RFc01VMHhkekdwTWJBeHRERzRNYnd4d0RIRU1jZ3h6REVXTWh3eUlESWtNaWd5Z3pLbU1yRXl0ekxITXN3eTNUTGxNdXN5OVRMN01nVXpDek1WTXg0ektUTXVNemN6UVROTU00Y3pvVE83TTcwMXhEWEtOZncxWVRadE51VTIvellJTitVMzZqYzBPem83UGp0RE93QUFBR0FBQUZBQUFBQU1NUkF4RkRFME1UZ3hQREZBTVVReGFESnNNbkF5aURLTU1vUStqRDZVUHB3K3BENnNQclErdkQ3RVBzdysxRDdjUHVRKzdENzBQdncrQkQ4TVB4US9IRDhrUHl3L0FBQUFjQUFBekFBQUFCZytIRDRnUGlRK0tENHNQakErTkQ0NFBqdytRRDVFUGtnK1RENVFQbFErV0Q1Y1BtQStaRDVvUG13K2NENTBQbmcrZkQ2QVBvUStpRDZNUHBBK2xENllQcHcrb0Q2a1BxZytyRDZ3UHJRK3VENjhQc0EreEQ3SVBzdyswRDdVUHRnKzNEN2dQdVErNkQ3c1B2QSs5RDc0UHZ3K0FEOEVQd2cvREQ4UVB4US9HRDhjUHlBL0pEOG9QeXcvTUQ4MFB6Zy9QRDlBUDBRL1NEOU1QMUEvVkQ5WVAxdy9ZRDlrUDJnL2JEOXdQM1EvZUQ5OFA0QS9oRCtJUDR3L2tEK1VQNWcvQUFBQWdBQUFhQUFBQU93dzhEQUVNUWd4R0RFY01TQXhLREZBTVVReFhERnNNWEF4aERHSU1aZ3huREdzTWJBeHVESFFNUmd5TkRJNE1rQXlTREpRTWxReVhESndNbmd5akRLb01yUXkwRExjTXZneUdETTRNMWd6ZURPWU03UXp1RFBZTS9ReitETVlOQUNRQUFBVUFRQUFDREFrTUpBdzBESFVNZGd4M0RIZ01lUXg2REhzTWZBeDlESDRNZnd4QURJRU1nZ3lERElRTWhReUdESWNNaUF5SkRJb01pd3lNREkwTWpneVBESkFNa1F5U0RKTU1sQXlWREpZTWx3eVlESmtNbWd5YkRKd01uUXllREtJTW93eWtES1VNcGd5bkRLZ01xUXlxREtzTXJBeXRESzRNcnd5d0RMRU1zZ3l6RExRTXRReTJETGNNdUF5NURMb011d3k4REwwTXZneS9ESUFNd1F6Q0RNTU14QXpGRE1ZTXh3eklETWtNeWd6TERNd001QXpvRE93TThBejBEUDBNd0EwQkRRSU5BdzBFRFJBT0tnNnJEcXdPclE2dURxOE9zQTZ4RHJJT3N3NjJEcmNPdUE2NURyb091dzY4RHIwT3ZnNi9Eb0lPd3c3RURzVU94ZzdIRHNnT3lRN0tEc3dPelE3WURziAgICAkRGxsQnl0ZXM2NCA9ICJUVnFRQUFNQUFBQUVBQUFBLy84QUFMZ0FBQUFBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQTJBQUFBQTRmdWc0QXRBbk5JYmdCVE0waFZHaHBjeUJ3Y205bmNtRnRJR05oYm01dmRDQmlaU0J5ZFc0Z2FXNGdSRTlUSUcxdlpHVXVEUTBLSkFBQUFBQUFBQUIwOFVkZE1KQXBEakNRS1E0d2tDa09LdzJDRGltUUtRNHJEWU1PRHBBcERpc050dzQ1a0NrT09laTZEamVRS1E0d2tDZ09lWkFwRGlzTmhnNHprQ2tPS3cyMERqR1FLUTVTYVdOb01KQXBEZ0FBQUFBQUFBQUFVRVVBQUdTR0JnQTlBRUpXQUFBQUFBQUFBQUR3QUNJZ0N3SUtBQUJZQUFBQVVnQUFBQUFBQU1nVEFBQUFFQUFBQUFBQWdBRUFBQUFBRUFBQUFBSUFBQVVBQWdBQUFBQUFCUUFDQUFBQUFBQUFFQUVBQUFRQUFDVWZBUUFDQUVBQkFBQVFBQUFBQUFBQUVBQUFBQUFBQUFBQUVBQUFBQUFBQUJBQUFBQUFBQUFBQUFBQUVBQUFBQUFBQUFBQUFBQUFESjBBQUZBQUFBQUE4QUFBdEFFQUFBRGdBQURjQlFBQUFBQUFBQUFBQUFBQUFBRUFOQUlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQndBQUFZQWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBTG5SbGVIUUFBQUE2VmdBQUFCQUFBQUJZQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBSUFBQVlDNXlaR0YwWVFBQVFEUUFBQUJ3QUFBQU5nQUFBRndBQUFBQUFBQUFBQUFBQUFBQUFFQUFBRUF1WkdGMFlRQUFBRUFpQUFBQXNBQUFBQkFBQUFDU0FBQUFBQUFBQUFBQUFBQUFBQUJBQUFEQUxuQmtZWFJoQUFEY0JRQUFBT0FBQUFBR0FBQUFvZ0FBQUFBQUFBQUFBQUFBQUFBQVFBQUFRQzV5YzNKakFBQUF0QUVBQUFEd0FBQUFBZ0FBQUtnQUFBQUFBQUFBQUFBQUFBQUFBRUFBQUVBdWNtVnNiMk1BQUs0REFBQUFBQUVBQUFRQUFBQ3FBQUFBQUFBQUFBQUFBQUFBQUFCQUFBQkaUQ3R2hJaXdYMW53QUFTRFBFU0lsRUpGQzUrZ0FBQVA4VkNtQUFBUDhWREdBQUFFeU5SQ1F3U0l2SXV2OEJEd0QvRmRsZkFBQ0Z3QStFbkFBQUFFeU5SQ1E0U0kwVjVZUUFBRFBKL3hXMVh3QUFoY0FQaElBQUFBQklpMFFrT0VpTFRDUXdTSU5rSkNnQVNJTmtKQ0FBVEkxRUpFQkJ1UkFBQUFBejBraUpSQ1JFeDBRa1FBRUFBQURIUkNSTUFnQUFBUDhWWjE4QUFJWEFkRDVJaTB3a01QOFZlRjhBQUlOa0pDZ0FTSU5rSkNBQVRJME5sb1FBQUV5TkJlZUVBQUJJalJYOGhBQUFNOG4vRlRoaEFBQzU2QU1BQVA4VlRWOEFBRFBBU0l0TUpGQklNOHpvUmdBQUFFaUR4R2pEekVCVFNJUHNJTGtFQVFBQWk5cm9UZ0FBQVAvTGRRWG85ZjcvLzdnQkFBQUFTSVBFSUZ2RHpNek16TXpNek16TXpNek16TXpNekdabUR4K0VBQUFBQUFCSU93M0puZ0FBZFJGSXdjRVFadmZCLy85MUF2UERTTUhKRU9tNUFnQUF6T2x2QkFBQXpNek1USWxFSkJoVFNJUHNJRW1MMklQNkFYVjk2SjBZQUFDRndIVUhNOERwS2dFQUFPajFDUUFBaGNCMUIramNHQUFBNitub0RSZ0FBUDhWczE0QUFFaUpCWnpBQUFEb0J4Y0FBRWlKQmFDdEFBRG91dzhBQUlYQWVRZm93Z1lBQU92TDZQTVZBQUNGd0hnZjZPb1NBQUNGd0hnV004bm9FdzBBQUlYQWRRdi9CV1d0QUFEcHZ3QUFBT2hYRWdBQTY4cUYwblZOaXdWUHJRQUFoY0FQam5yLy8vLy95SWtGUDYwQUFEa1ZOYk1BQUhVRjZDSVBBQUJJaGR0MUVPZ2tFZ0FBNkZzR0FBRG9RaGdBQUpCSWhkdDFkNE05TFo0QUFQOTBidWhDQmdBQTYyZUQrZ0oxVnVneUJnQUF1c2dDQUFDNUFRQUFBT2huQ2dBQVNJdllTSVhBRDRRVy8vLy9TSXZRaXczMm5RQUEveFhVWFFBQVNJdkxoY0IwRmpQUzZDWUdBQUQvRmJoZEFBQ0pBMGlEU3dqLzZ4Ym9hZ2tBQU9uZy92Ly9nL29EZFFjenllaVZDQUFBdUFFQUFBQklnOFFnVzhQTXpFaUpYQ1FJU0lsMEpCQklpWHdrR0VGVVNJUHNNRW1MOEl2YVRJdmh1QUVBQUFDRjBuVVBPUlZvckFBQWRRY3p3T25RQUFBQWcvb0JkQVdEK2dKMU0weUxEWDVmQUFCTmhjbDBCMEgvMFlsRUpDQ0Z3SFFWVEl2R2k5TkppOHpvU2Y3Ly80bEVKQ0NGd0hVSE04RHBrd0FBQUV5THhvdlRTWXZNNk1YOS8vK0wrSWxFSkNDRCt3RjFOWVhBZFRGTWk4WXowa21Mek9pcC9mLy9USXZHTTlKSmk4em9CUDcvLzB5TEhSVmZBQUJOaGR0MEMweUx4alBTU1l2TVFmL1RoZHQwQllQN0EzVTNUSXZHaTlOSmk4em8xLzMvLy9mWUc4a2p6NHY1aVV3a0lIUWNTSXNGMmw0QUFFaUZ3SFFRVEl2R2k5TkppOHovMEl2NGlVUWtJSXZINndJendFaUxYQ1JBU0l0MEpFaElpM3drVUVpRHhEQkJYTVBNU0lsY0pBaElpWFFrRUZkSWcrd2dTWXY0aTlwSWkvR0QrZ0YxQmVoL0dBQUFUSXZIaTlOSWk4NUlpMXdrTUVpTGRDUTRTSVBFSUYvcHAvNy8vOHpNekVpSlRDUUlTSUhzaUFBQUFFaU5EZVdyQUFEL0ZWOWNBQUJJaXdYUXJBQUFTSWxFSkZoRk04QklqVlFrWUVpTFRDUlk2RjFRQUFCSWlVUWtVRWlEZkNSUUFIUkJTTWRFSkRnQUFBQUFTSTFFSkVoSWlVUWtNRWlOUkNSQVNJbEVKQ2hJalFXUXF3QUFTSWxFSkNCTWkwd2tVRXlMUkNSWVNJdFVKR0F6eWVnTFVBQUE2eUpJaTRRa2lBQUFBRWlKQlZ5c0FBQklqWVFraUFBQUFFaUR3QWhJaVFYcHF3QUFTSXNGUXF3QUFFaUpCYk9xQUFCSWk0UWtrQUFBQUVpSkJiU3JBQURIQllxcUFBQUpCQURBeHdXRXFnQUFBUUFBQUVpTEJSbWJBQUJJaVVRa2FFaUxCUldiQUFCSWlVUWtjUDhWYWxzQUFJa0Y5S29BQUxrQkFBQUE2QTRZQUFBenlmOFZTbHNBQUVpTkRWdGRBQUQvRlRWYkFBQ0RQYzZxQUFBQWRRcTVBUUFBQU9qbUZ3QUEveFgwV2dBQXVna0VBTUJJaThqL0ZRWmJBQUJJZ2NTSUFBQUF3OHpNU0kwRk5WMEFBRWlKQWVtNUdBQUF6RWlKWENRSVYwaUQ3Q0JJalFVYlhRQUFpOXBJaS9sSWlRSG9taGdBQVBiREFYUUlTSXZQNkVFWkFBQklpOGRJaTF3a01FaUR4Q0Jmdzh6TXpFQlRTSVBzSUVpTDJlaTZHQUFBVEkwZDIxd0FBRXlKRzBpTHcwaUR4Q0Jidzh6TXpFQlRTSVBzUUVpTDJlc1BTSXZMNkNrYkFBQ0Z3SFFUU0l2TDZGMGFBQUJJaGNCMDUwaUR4RUJidzRzRjlLNEFBRUc0QVFBQUFFaU5IWTljQUFCQmhNQjFPVUVMd0VpTlZDUllTSTBOdTY0QUFJa0Z6YTRBQUVpTkJYNWNBQUJJaVVRa1dPajRGZ0FBU0kwTjdVOEFBRWlKSFphdUFBRG82UmtBQUVpTkZZcXVBQUJJalV3a0lPZ1lHQUFBU0kwVk1ZWUFBRWlOVENRZ1NJbGNKQ0RvemhvQUFNek1USXZjU1lsYkNFbUpheGhKaVhNZ1NZbFRFRmRCVkVGVlFWWkJWMGlEN0VCTmkza0lUWXN4aTBFRVNZdDVPRTByOTAyTDRVeUw2a2lMNmFobUQ0WHRBQUFBU1dOeFNFbUpTOGhOaVVQUVNJdkdPemNQZzRFQkFBQklBOEJJalZ6SERJdEQrRXc3OEErQ3FBQUFBSXREL0V3NzhBK0RuQUFBQUlON0JBQVBoSklBQUFDRE93RjBHWXNEU0kxTUpEQkppOVZKQThmLzBJWEFENGlKQUFBQWZuU0JmUUJqYzIzZ2RTaElnejBXdXdBQUFIUWVTSTBORGJzQUFPaW9Hd0FBaGNCMERyb0JBQUFBU0l2Ti94WDJ1Z0FBaTBzRVFiZ0JBQUFBU1l2VlNRUFA2TUlhQUFCSmkwUWtRSXRUQkV4alRRQklpVVFrS0VtTFJDUW9TUVBYVEl2RlNZdk5TSWxFSkNEL0ZSQlpBQURvd3hvQUFQL0dTSVBERURzM0Q0TzNBQUFBNlRuLy8vOHp3T213QUFBQVRZdEJJRFB0UlRQdFRTdkhxQ0IwT3pQU09SZDJOVWlOVHdpTFFmeE1POEJ5QjRzQlREdkFkZ3ovd2tpRHdSQTdGM01ZNitXTHdrZ0R3SXRNeHhDRnlYVUdpMnpIRE9zRFJJdnBTV054U0VpTDNqczNjMVZJLzhOSXdlTUVTQVBmaTBQMFREdndjam1MUS9oTU8vQnpNVVdGN1hRRlJEc3JkREdGN1hRRk8ydjhkQ2lET3dCMUdVaUxWQ1I0alVZQnNRRkJpVVFrU0VTTFEveE5BOGRCLzlEL3hraUR3eEE3TjNLMXVBRUFBQUJNalZ3a1FFbUxXekJKaTJ0QVNZdHpTRW1MNDBGZlFWNUJYVUZjWDhQTXpNd3p5VWovSlI5WUFBRE16TXd6d01QTVNJUHNLSXNOMnBjQUFJUDUvM1FOL3hVVFdBQUFndzNJbHdBQS8waUR4Q2pwK3hvQUFNek16RWlKWENRSVYwaUQ3Q0JJaS9wSWk5bElqUVVwV2dBQVNJbUJvQUFBQUlOaEVBREhRUndCQUFBQXg0SElBQUFBQVFBQUFNYUJkQUVBQUVQR2dmY0JBQUJEU0kwRmVKNEFBRWlKZ2JnQUFBQzVEUUFBQU9nbkhBQUFrRWlMZzdnQUFBRHcvd0M1RFFBQUFPZ1NHd0FBdVF3QUFBRG9DQndBQUpCSWlidkFBQUFBU0lYL2RRNUlpd1VrbmdBQVNJbUR3QUFBQUVpTGk4QUFBQURvSlJ3QUFKQzVEQUFBQU9qV0dnQUFTSXRjSkRCSWc4UWdYOFBNek14SWlWd2tDRmRJZyt3Zy94VklWd0FBaXczdWxnQUFpL2ovRlNKWEFBQklpOWhJaGNCMVNJMUlBYnJJQWdBQTZDMERBQUJJaTloSWhjQjBNNHNOdzVZQUFFaUwwUDhWbmxZQUFFaUx5NFhBZEJZejB1ancvdi8vL3hXQ1ZnQUFTSU5MQ1ArSkErc0g2RFFDQUFBejI0dlAveFhhVmdBQVNJdkRTSXRjSkRCSWc4UWdYOE5BVTBpRDdDRG9jZi8vLzBpTDJFaUZ3SFVJalVnUTZFa0hBQUJJaThOSWc4UWdXOE5JaGNrUGhDa0JBQUJJaVZ3a0VGZElnK3dnU0l2WlNJdEpPRWlGeVhRRjZOUUJBQUJJaTB0SVNJWEpkQVhveGdFQUFFaUxTMWhJaGNsMEJlaTRBUUFBU0l0TGFFaUZ5WFFGNktvQkFBQklpMHR3U0lYSmRBWG9uQUVBQUVpTFMzaEloY2wwQmVpT0FRQUFTSXVMZ0FBQUFFaUZ5WFFGNkgwQkFBQklpNHVnQUFBQVNJMEZWMWdBQUVnN3lIUUY2R1VCQUFDL0RRQUFBSXZQNklFYUFBQ1FTSXVMdUFBQUFFaUpUQ1F3U0lYSmRCencvd2wxRjBpTkJhT2NBQUJJaTB3a01FZzd5SFFHNkN3QkFBQ1FpOC9vVEJrQUFMa01BQUFBNkVJYUFBQ1FTSXU3d0FBQUFFaUYvM1FyU0l2UDZQMGFBQUJJT3oxV25BQUFkQnBJalFYdG1nQUFTRHY0ZEE2RFB3QjFDVWlMeitoL0d3QUFrTGtNQUFBQTZBQVpBQUJJaTh2bzBBQUFBRWlMWENRNFNJUEVJRi9EekVCVFNJUHNJRWlMMllzTkdaVUFBSVA1LzNRa1NJWGJkUS8vRlVWVkFBQ0xEUU9WQUFCSWk5Z3owdjhWM0ZRQUFFaUx5K2lVL3YvL1NJUEVJRnZEek14QVUwaUQ3Q0Rvc1FJQUFPaVFGd0FBaGNCMFlFaU5EWEgrLy8vL0ZTTlZBQUNKQmNHVUFBQ0QrUDkwU0xySUFnQUF1UUVBQUFEb0NRRUFBRWlMMkVpRndIUXhpdzJmbEFBQVNJdlEveFY2VkFBQWhjQjBIalBTU0l2TDZNejgvLy8vRlY1VUFBQklnMHNJLzRrRHVBRUFBQURyQitpTC9QLy9NOEJJZzhRZ1c4UE16TXhJaGNsME4xTklnK3dnVEl2QlNJc05US29BQURQUy94V3NWQUFBaGNCMUYrajNKUUFBU0l2WS94V0tWQUFBaThqb255VUFBSWtEU0lQRUlGdkR6TXpNU0l2RVNJbFlDRWlKYUJCSWlYQVlTSWw0SUVGVVNJUHNJSXM5bGFnQUFEUHRTSXZ4UVlQTS8waUx6dWpZRXdBQVNJdllTSVhBZFNpRi8zUWtpODMvRmF4VEFBQ0xQV3FvQUFCRWpaM29Bd0FBUkR2ZlFZdnJRUTlIN0VFNzdIWElTSXRzSkRoSWkzUWtRRWlMZkNSSVNJdkRTSXRjSkRCSWc4UWdRVnpEek14SWk4UklpVmdJU0lsb0VFaUpjQmhJaVhnZ1FWUklnK3dnTS85SWkvSklpK2xCZzh6L1JUUEFTSXZXU0l2TjZFa2xBQUJJaTloSWhjQjFLamtGODZjQUFIWWlpOC8vRlNWVEFBQkVqWi9vQXdBQVJEc2QyNmNBQUVHTCswRVBSL3hCTy94MXdFaUxiQ1E0U0l0MEpFQklpM3drU0VpTHcwaUxYQ1F3U0lQRUlFRmN3OHhJaThSSWlWZ0lTSWxvRUVpSmNCaElpWGdnUVZSSWcrd2dNL1pJaS9wSWkrbEJnOHovU0l2WFNJdk42R1FsQUFCSWk5aEloY0IxTDBpRi8zUXFPUVZ0cHdBQWRpS0x6djhWbjFJQUFFU05udWdEQUFCRU94MVZwd0FBUVl2elFROUg5RUU3OUhXK1NJdHNKRGhJaTNRa1FFaUxmQ1JJU0l2RFNJdGNKREJJZzhRZ1FWekR6TXpNUUZOSWcrd2dpOWxJalEzdFZBQUEveFgzVWdBQVNJWEFkQmxJalJYTFZBQUFTSXZJL3hYYVVnQUFTSVhBZEFTTHkvL1FTSVBFSUZ2RHpNek1RRk5JZyt3Z2k5bm90Ly8vLzR2TC94WERVZ0FBek16TXVRZ0FBQURwL2hZQUFNek11UWdBQUFEcDhoVUFBTXpNUUZOSWcrd2c2QzM2Ly85SWk4aElpOWpvc2hJQUFFaUx5K2dPS0FBQVNJdkw2UDRuQUFCSWk4dm83aWNBQUVpTHkraUNKUUFBU0l2TFNJUEVJRnZwVlNVQUFNeElPOHB6TFVpSlhDUUlWMGlEN0NCSWkvcElpOWxJaXdOSWhjQjBBdi9RU0lQRENFZzczM0x0U0l0Y0pEQklnOFFnWDhQTVNJbGNKQWhYU0lQc0lEUEFTSXY2U0l2WlNEdktjeGVGd0hVVFNJc0xTSVhKZEFMLzBVaUR3d2hJTzk5eTZVaUxYQ1F3U0lQRUlGL0R6TXpNU0lsY0pBaFhTSVBzSUVpRFBTcXpBQUFBaTlsMEdFaU5EUit6QUFEb3loTUFBSVhBZEFpTHkvOFZEck1BQU9oZEtRQUFTSTBWSWxNQUFFaU5EUU5UQUFEb2Z2Ly8vNFhBZFZwSWpRMmZDZ0FBNk80UUFBQklqUjNYVWdBQVNJMDkyRklBQU9zT1NJc0RTSVhBZEFMLzBFaUR3d2hJTzk5eTdVaURQY095QUFBQWRCOUlqUTI2c2dBQTZGMFRBQUNGd0hRUFJUUEFNOGxCalZBQy94V2lzZ0FBTThCSWkxd2tNRWlEeENCZnc4eElpVndrQ0VpSmRDUVFSSWxFSkJoWFFWUkJWVUZXUVZkSWcreEFSWXZnaTlwRWkvbTVDQUFBQU9oZUZRQUFrSU05ZHFVQUFBRVBoQUVCQUFESEJXS2xBQUFCQUFBQVJJZ2xWNlVBQUlYYkQ0WFVBQUFBU0lzTklMSUFBUDhWNmxBQUFFaUw4RWlKUkNRd1NJWEFENFNqQUFBQVNJc04rckVBQVA4VnpGQUFBRWlMK0VpSlJDUWdUSXYyU0lsMEpDaE1pK2hJaVVRa09FaUQ3d2hJaVh3a0lFZzcvbkp3NkNuNC8vOUlPUWQxQXV2bVNEditjbDlJaXcvL0ZZeFFBQUJJaTlqb0RQai8vMGlKQi8vVFNJc05xTEVBQVA4VmNsQUFBRWlMMkVpTERaQ3hBQUQvRldKUUFBQk1PL04xQlV3NzZIUzhUSXZ6U0lsY0pDaElpL05JaVZ3a01FeUw2RWlKUkNRNFNJdjRTSWxFSkNEcm1raU5GWjlSQUFCSWpRMlFVUUFBNkxmOS8vOUlqUldjVVFBQVNJME5qVkVBQU9pay9mLy9rRVdGNUhRUHVRZ0FBQURvUUJNQUFFV0Y1SFVteHdWUnBBQUFBUUFBQUxrSUFBQUE2Q2NUQUFCQmk4L293L3ovLzBHTHovOFZ6azhBQU14SWkxd2tjRWlMZENSNFNJUEVRRUZmUVY1QlhVRmNYOFBNUlRQQVFZMVFBZWxrL3YvL005SXp5VVNOUWdIcFYvNy8vOHpNekVCVFNJUHNJSXZaNk9zcEFBQ0x5K2lFSndBQVJUUEF1ZjhBQUFCQmpWQUI2Qy8rLy8vTXpNeElpVndrQ0VpSmJDUVFTSWw4SkJoQlZFRlZRVlpJZ2V5UUFBQUFTSTFNSkNEL0ZYbFBBQUM2V0FBQUFJMXF5SXZONkJyNy8vOUZNL1pJaTlCSWhjQjFDSVBJLytsckFnQUFTSWtGU0s0QUFFZ0ZBQXNBQUl2TmlRMHlyZ0FBU0R2UWMwVklnOElKU0lOSzkvOW14MEwvQUFwRWlYSURac2RDTHdBS3hrSXhDa1NKY2tkRWlISkRTSXNGQ2E0QUFFaUR3bGhJalVyM1NBVUFDd0FBU0R2SWNzV0xEZWl0QUFCbVJEbDBKR0lQaERRQkFBQklpMFFrYUVpRndBK0VKZ0VBQUV4aklMc0FDQUFBVEkxb0JFMEQ1VGtZRDB3WU84c1BqWWNBQUFCSWpUMjdyUUFBdWxnQUFBQklpODNvWHZyLy8waUZ3SFJvaXhXVHJRQUFTSTJJQUFzQUFFaUpCd1BWaVJXQnJRQUFTRHZCYzBGSWpWQUpTSU5LOS8rQVlpK0Fac2RDL3dBS1JJbHlBMmJIUWpBS0NrU0pja2RFaUhKRFNJc0hTSVBDV0VpTlN2ZElCUUFMQUFCSU84aHl5WXNWTzYwQUFFaUR4d2c3MDN5STZ3YUxIU3V0QUFCQmkvNkYyMzU4U1lNOEpQOTBhRW1EUENUK2RHRkI5a1VBQVhSYVFmWkZBQWgxRGttTERDVC9GUVpPQUFDRndIUkZTR1B2U0kwTitLd0FBTHFnRHdBQVNJdkZnK1VmU01INEJVaHI3VmhJQXl6QlNZc0VKRWlKUlFCQmlrVUFTSTFORUloRkNQOFZ3RTBBQUlYQUQ0UnAvdi8vLzBVTS84ZEovOFZKZzhRSU8vdDhoRVdMNWttTDNraUxQYU9zQUFCSWd6dzcvM1FSU0lNOE8vNTBDb0JNT3dpQTZZVUFBQUJCalVRay84WkVPd2lCOTlpNDl2Ly8veHZKZzhIMVJZWGtEMFRJL3hWWlRRQUFTSXZvU0lQNC8zUk5TSVhBZEVoSWk4ai9GVkpOQUFDRndIUTdEN2JBU0lrc080UDRBblVIZ0V3N0NFRHJDb1A0QTNVRmdFdzdDQWhJalV3N0VMcWdEd0FBL3hVWlRRQUFoY0FQaE1MOS8vLy9SRHNNNncyQVREc0lRRWpIQkR2Ky8vLy9TSVBEV0VIL3hFaUIrd2dCQUFBUGpFai8vLytMRGVTckFBRC9GYzVNQUFBendFeU5uQ1NRQUFBQVNZdGJJRW1MYXloSmkzc3dTWXZqUVY1QlhVRmN3OHpNU0lsY0pBaElpWFFrRUZkSWcrd2dTSTBkcnFzQUFMNUFBQUFBU0lzN1NJWC9kRGRJalljQUN3QUE2eDJEZnd3QWRBcElqVThRL3hXWVRBQUFTSXNEU0lQSFdFZ0ZBQXNBQUVnNytITGVTSXNMNkdiMy8vOUlneU1BU0lQRENFai96blc0U0l0Y0pEQklpM1FrT0VpRHhDQmZ3OHhJaVZ3a0NFaUpiQ1FRU0lsMEpCaFhTSVBzTUlNOVRhMEFBQUIxQmVqU0hBQUFTSXNkYjVvQUFEUC9TSVhiZFJ1RHlQL3B0QUFBQUR3OWRBTC94MGlMeStqNkpnQUFTSTFjQXdHS0E0VEFkZWVOUndHNkNBQUFBRWhqeU9pbjkvLy9TSXY0U0lrRjdaOEFBRWlGd0hUQVNJc2RJWm9BQUlBN0FIUlFTSXZMNkx3bUFBQ0FPejJOY0FGMExraGo3cm9CQUFBQVNJdk42R3ozLy85SWlRZEloY0IwYzB5THcwaUwxVWlMeU9nYUpnQUFoY0IxUzBpRHh3aElZOFpJQTlpQU93QjF0MGlMSGN5WkFBQklpOHZvZFBiLy8waURKYnlaQUFBQVNJTW5BTWNGWnF3QUFBRUFBQUF6d0VpTFhDUkFTSXRzSkVoSWkzUWtVRWlEeERCZncwaURaQ1FnQUVVenlVVXp3RFBTTThubzZpRUFBTXhJaXcwNm53QUE2Q1gyLy85SWd5VXRud0FBQU9rQS8vLy9TSXZFU0lsWUNFaUphQkJJaVhBWVNJbDRJRUZVUVZWQlZraUQ3Q0JNaTJ3a1lFMkw4VW1MK0VHRFpRQUFUSXZpU0l2WlFjY0JBUUFBQUVpRjBuUUhUSWtDU1lQRUNEUHRnRHNpZFJFendJWHRRTFlpRDVUQVNQL0RpK2pyT1VIL1JRQkloZjkwQjRvRGlBZEkvOGNQdGpOSS84T0x6dWk1SmdBQWhjQjBFMEgvUlFCSWhmOTBCNG9EaUFkSS84ZEkvOE5BaFBaMEc0WHRkYTFBZ1A0Z2RBWkFnUDRKZGFGSWhmOTBDY1pIL3dEckEwai95elAyZ0RzQUQ0VGpBQUFBZ0RzZ2RBV0FPd2wxQlVqL3crdnhnRHNBRDRUTEFBQUFUWVhrZEFoSmlUd2tTWVBFQ0VIL0Jyb0JBQUFBTThuckJVai93Ly9CZ0R0Y2RQYUFPeUoxTm9US2RSMkY5blFPU0kxREFZQTRJblVGU0l2WTZ3c3p3RFBTaGZZUGxNQ0w4TkhwNnhIL3lVaUYvM1FHeGdkY1NQL0hRZjlGQUlYSmRldUtBNFRBZEUrRjluVUlQQ0IwUnp3SmRFT0YwblEzRDc3STZOd2xBQUJJaGY5MEc0WEFkQTZLQTBqL3c0Z0hTUC9IUWY5RkFJb0RpQWRJLzhmckM0WEFkQWRJLzhOQi8wVUFRZjlGQUVqL3crbFovLy8vU0lYL2RBYkdCd0JJLzhkQi8wVUE2UlQvLy85TmhlUjBCVW1ESkNRQVFmOEdTSXRjSkVCSWkyd2tTRWlMZENSUVNJdDhKRmhJZzhRZ1FWNUJYVUZjdzh4SWlWd2tHRWlKZENRZ1YwaUQ3RENEUFZLcUFBQUFkUVhvMXhrQUFFaU5QWHlkQUFCQnVBUUJBQUF6eVVpTDE4WUZicDRBQUFEL0ZTeEpBQUJJaXgxRnFnQUFTSWs5THAwQUFFaUYyM1FGZ0RzQWRRTklpOTlJalVRa1NFeU5UQ1JBUlRQQU05SklpOHRJaVVRa0lPaTkvZi8vU0dOMEpFQkl1Zi8vLy8vLy8vOGZTRHZ4YzF4SVkwd2tTRWlEK2Y5elVVaU5GUEZJTzlGeVNFaUx5dWpsOC8vL1NJdjRTSVhBZERoTWpRVHdTSTFFSkVoTWpVd2tRRWlMMTBpTHkwaUpSQ1FnNkdmOS8vOUVpMXdrUUVpSlBYT2NBQUJCLzhzendFU0pIV09jQUFEckE0UEkvMGlMWENSUVNJdDBKRmhJZzhRd1g4UE16RWlMeEVpSldBaElpV2dRU0lsd0dFaUplQ0JCVkVpRDdFRC9GV2xJQUFCRk0rUklpL2hJaGNBUGhLa0FBQUJJaTlobVJEa2dkQlJJZzhNQ1prUTVJM1gyU0lQREFtWkVPU04xN0V5SlpDUTRTQ3ZZVElsa0pEQkkwZnRNaThBejBrU05Td0V6eVVTSlpDUW9USWxrSkNEL0ZRcElBQUJJWStpRndIUlJTSXZONkF2ei8vOUlpL0JJaGNCMFFVeUpaQ1E0VElsa0pEQkVqVXNCVEl2SE05SXp5WWxzSkNoSWlVUWtJUDhWejBjQUFJWEFkUXRJaTg3b2svTC8vMG1MOUVpTHovOFZyMGNBQUVpTHh1c0xTSXZQL3hXaFJ3QUFNOEJJaTF3a1VFaUxiQ1JZU0l0MEpHQklpM3drYUVpRHhFQkJYTU5JaVZ3a0NGZElnK3dnU0kwZG0yMEFBRWlOUFpSdEFBRHJEa2lMQTBpRndIUUMvOUJJZzhNSVNEdmZjdTFJaTF3a01FaUR4Q0JmdzBpSlhDUUlWMGlEN0NCSWpSMXpiUUFBU0kwOWJHMEFBT3NPU0lzRFNJWEFkQUwvMEVpRHd3aElPOTl5N1VpTFhDUXdTSVBFSUYvRFNJUHNLRVV6d0xvQUVBQUFNOG5IUkNRd0FnQUFBUDhWSUVjQUFFaUpCU21jQUFCSWhjQjBLZjhWQmtjQUFEd0djeHBJaXcwVG5BQUFUSTFFSkRCQnVRUUFBQUF6MHY4VjRFWUFBTGdCQUFBQVNJUEVLTVBNekVpRDdDaElpdzNwbXdBQS94WGJSZ0FBU0lNbDI1c0FBQUJJZzhRb3c4ek1TSWxjSkFoSWlXd2tFRWlKZENRWVYwaUQ3Q0JJaS9LTCtlaTI3di8vUlRQSlNJdllTSVhBRDRTTUFRQUFTSXVRb0FBQUFFaUx5ams1ZEJCSWpZTEFBQUFBU0lQQkVFZzd5SExzU0kyQ3dBQUFBRWc3eUhNRU9UbDBBMG1MeVVpRnlRK0VVZ0VBQUV5TFFRaE5oY0FQaEVVQkFBQkpnL2dGZFExTWlVa0lRWTFBL09rMEFRQUFTWVA0QVhVSWc4ai82U1lCQUFCSWk2dW9BQUFBU0ltenFBQUFBSU41QkFnUGhmWUFBQUM2TUFBQUFFaUxnNkFBQUFCSWc4SVFUSWxNQXZoSWdmckFBQUFBZk9lQk9ZNEFBTUNMdTdBQUFBQjFEOGVEc0FBQUFJTUFBQURwcFFBQUFJRTVrQUFBd0hVUHg0T3dBQUFBZ1FBQUFPbU9BQUFBZ1RtUkFBREFkUXpIZzdBQUFBQ0VBQUFBNjNxQk9aTUFBTUIxRE1lRHNBQUFBSVVBQUFEclpvRTVqUUFBd0hVTXg0T3dBQUFBZ2dBQUFPdFNnVG1QQUFEQWRRekhnN0FBQUFDR0FBQUE2ejZCT1pJQUFNQjFETWVEc0FBQUFJb0FBQURyS29FNXRRSUF3SFVNeDRPd0FBQUFqUUFBQU9zV2dUbTBBZ0RBaThlNmpnQUFBQTlFd29tRHNBQUFBSXVUc0FBQUFMa0lBQUFBUWYvUWlidXdBQUFBNndwTWlVa0lpMGtFUWYvUVNJbXJxQUFBQU9uVS92Ly9NOEJJaTF3a01FaUxiQ1E0U0l0MEpFQklnOFFnWDhPNFkzTnQ0RHZJZFFlTHlPa2cvdi8vTThERHpFaUpYQ1FZVjBpRDdDQklpd1dIZ3dBQVNJTmtKREFBU0w4eW90OHRtU3NBQUVnN3gzUU1TUGZRU0lrRmNJTUFBT3QyU0kxTUpERC9GY3RFQUFCSWkxd2tNUDhWdUVRQUFFU0wyRWt6Mi84VmZFTUFBRVNMMkVrejIvOFZtRVFBQUVpTlRDUTRSSXZZU1RQYi94Vi9SQUFBVEl0Y0pEaE1NOXRJdVAvLy8vLy8vd0FBVENQWVNMZ3pvdDh0bVNzQUFFdzczMHdQUk5oTWlSMzZnZ0FBU2ZmVFRJa2QrSUlBQUVpTFhDUkFTSVBFSUYvRHpJTWwwYUlBQUFERFNJMEZqVVlBQUVpSkFVaUxBc1pCRUFCSWlVRUlTSXZCdzh6TXpFaURlUWdBU0kwRmZFWUFBRWdQUlVFSXc4ek1TSVhTZEZSSWlWd2tDRWlKZENRUVYwaUQ3Q0JJaS9sSWk4cElpOXJvZWg0QUFFaUw4RWlOU0FIb3ZnSUFBRWlKUndoSWhjQjBFMGlOVmdGTWk4TklpOGpvNGgwQUFNWkhFQUZJaTF3a01FaUxkQ1E0U0lQRUlGL0R6TXhBVTBpRDdDQ0FlUkFBU0l2WmRBbElpMGtJNkREdS8vOUlnMk1JQU1aREVBQklnOFFnVzhQTVNJbGNKQWhYU0lQc0lFaUwra2lMMlVnN3luUWg2TDcvLy8rQWZ4QUFkQTVJaTFjSVNJdkw2RkQvLy8vckNFaUxSd2hJaVVNSVNJdkRTSXRjSkRCSWc4UWdYOE5JalFXVlJRQUFTSWtCNllYLy8vL01TSWxjSkFoWFNJUHNJRWlOQlh0RkFBQ0wya2lMK1VpSkFlaG0vLy8vOXNNQmRBaElpOC9vZVFBQUFFaUx4MGlMWENRd1NJUEVJRi9Eek16TVFGTklnK3dnU0lOaENBQklqUVUrUlFBQVNJdlpTSWtCeGtFUUFPaFAvLy8vU0l2RFNJUEVJRnZEek14SWlWd2tDRmRJZyt3Z1NJMEZRMFVBQUl2YVNJdjVTSWtCNkhZZUFBRDJ3d0YwQ0VpTHorZ1JBQUFBU0l2SFNJdGNKREJJZzhRZ1g4UE16TXpwSSszLy84ek16RUJUU0lQc0lMb0lBQUFBalVvWTZNM3QvLzlJaThoSWk5ai9GWmxCQUFCSWlRVVNvd0FBU0lrRkE2TUFBRWlGMjNVRmpVTVk2d1pJZ3lNQU04QklnOFFnVzhQTVNJbGNKQWhJaVhRa0VFaUpmQ1FZUVZSQlZVRldTSVBzSUV5TDhlamI3di8va0VpTERjdWlBQUQvRlpWQkFBQk1pK0JJaXcyem9nQUEveFdGUVFBQVNJdllTVHZFRDRLYkFBQUFTSXY0U1N2OFRJMXZDRW1EL1FnUGdvY0FBQUJKaTh6bzNSNEFBRWlMOEVrN3hYTlZ1Z0FRQUFCSU84SklEMExRU0FQUVNEdlFjaEZKaTh6b2xlMy8velBiU0lYQWRScnJBalBiU0kxV0lFZzcxbkpKU1l2TTZIbnQvLzlJaGNCMFBFakIvd05JalJ6NFNJdkkveFczUUFBQVNJa0ZNS0lBQUVtTHp2OFZwMEFBQUVpSkEwaU5Td2ovRlpwQUFBQklpUVVMb2dBQVNZdmU2d0l6MitnYjd2Ly9TSXZEU0l0Y0pFQklpM1FrU0VpTGZDUlFTSVBFSUVGZVFWMUJYTVBNekVpRDdDam82LzcvLzBqMzJCdkE5OWoveUVpRHhDakR6RWlKWENRSVNJbDBKQkJYU0lQc0lFaUwyVWlEK2VCM2ZMOEJBQUFBU0lYSlNBOUYrVWlMRGUyVkFBQkloY2wxSU9qREdnQUF1UjRBQUFEb1dSZ0FBTG4vQUFBQTZIZnQvLzlJaXczSWxRQUFUSXZITTlML0ZkMUFBQUJJaS9CSWhjQjFMRGtGbjU0QUFIUU9TSXZMNkUwQUFBQ0Z3SFFONjZ2b1ZoRUFBTWNBREFBQUFPaExFUUFBeHdBTUFBQUFTSXZHNnhMb0p3QUFBT2cyRVFBQXh3QU1BQUFBTThCSWkxd2tNRWlMZENRNFNJUEVJRi9Eek14SWlRMWhsUUFBdzBCVFNJUHNJRWlMMlVpTERWQ1ZBQUQvRmNvL0FBQkloY0IwRUVpTHkvL1FoY0IwQjdnQkFBQUE2d0l6d0VpRHhDQmJ3OHhJaVZ3a0VFaUpmQ1FZVlVpTDdFaUQ3R0JJaS9wSWk5bElqVTNBU0kwVm1VSUFBRUc0UUFBQUFPaE9IUUFBU0kxVkVFaUx6MGlKWGVoSWlYM3c2REl6QUFCTWk5aElpVVVRU0lsRitFaUYvM1FiOWdjSXVRQkFtUUYwQllsTjRPc01pMFhnVFlYYkQwVEJpVVhnUkl0RjJJdFZ4SXROd0V5TlRlRC9GY3MvQUFCTWpWd2tZRW1MV3hoSmkzc2dTWXZqWGNQTXpNek16TXpNek16TXpNek16TXhtWmc4ZmhBQUFBQUFBU0lIczJBUUFBRTB6d0UwenlVaUpaQ1FnVElsRUpDam9waklBQUVpQnhOZ0VBQUREek16TXpNek1aZzhmUkFBQVNJbE1KQWhJaVZRa0dFU0pSQ1FRU2NmQklBV1RHZXNJek16TXpNek1acEREek16TXpNek1aZzhmaEFBQUFBQUF3OHpNek16TXpNek16TXpNek16TXpFaUx3YmxOV2dBQVpqa0lkQU16d01OSVkwZzhTQVBJTThDQk9WQkZBQUIxRExvTEFnQUFaamxSR0ErVXdQUER6RXhqUVR4Rk04bE1pOUpNQThGQkQ3ZEFGRVVQdDFnR1NvMU1BQmhGaGR0MEhvdFJERXc3MG5JS2kwRUlBOEpNTzlCeUQwSC93VWlEd1NoRk84dHk0alBBdzBpTHdjUE16TXpNek16TXpNek1TSVBzS0V5THdVeU5EU0xOLy85Smk4bm9hdi8vLzRYQWRDSk5LOEZKaTlCSmk4bm9pUC8vLzBpRndIUVBpMEFrd2VnZjk5Q0Q0QUhyQWpQQVNJUEVLTVBNek14SWlWd2tDRWlKZENRUVNJbDhKQmhCVkVpRDdDQk1qU1d3ZlFBQU0vWXoyMG1ML0lOL0NBRjFKa2hqeHJxZ0R3QUEvOFpJalF5QVNJMEZIcE1BQUVpTkRNaElpUS8vRlprOUFBQ0Z3SFFtLzhOSWc4Y1FnL3NrZk1tNEFRQUFBRWlMWENRd1NJdDBKRGhJaTN3a1FFaUR4Q0JCWE1OSVk4TklBOEJKZ3lURUFEUEE2OXRJaVZ3a0NFaUpiQ1FRU0lsMEpCaFhTSVBzSUw4a0FBQUFTSTBkS0gwQUFJdjNTSXNyU0lYdGRCdURld2dCZEJWSWk4My9GVDg5QUFCSWk4M29IK2ovLzBpREl3QklnOE1RU1AvT2RkUklqUjM3ZkFBQVNJdEwrRWlGeVhRTGd6c0JkUWIvRlE4OUFBQklnOE1RU1AvUGRlTklpMXdrTUVpTGJDUTRTSXQwSkVCSWc4UWdYOFBNU0dQSlNJMEZ0bndBQUVnRHlVaUxETWhJL3lWWVBRQUFTSWxjSkFoSWlYUWtFRWlKZkNRWVFWVklnK3dnU0dQWnZnRUFBQUJJZ3ozN2tRQUFBSFVYNk5RV0FBQ05UaDNvYkJRQUFMbi9BQUFBNklycC8vOUlpL3RJQS85TWpTMWRmQUFBU1lOOC9RQUFkQVNMeHV0NXVTZ0FBQURvbitmLy8waUwyRWlGd0hVUDZHNE5BQURIQUF3QUFBQXp3T3RZdVFvQUFBRG9aZ0FBQUpCSWk4dEpnM3o5QUFCMUxicWdEd0FBL3hVblBBQUFoY0IxRjBpTHkrZ2I1Ly8vNkRJTkFBREhBQXdBQUFBejl1c05TWWxjL1FEckJ1Z0E1Ly8va0VpTERZQjhBQUQvRllvOEFBRHJnMGlMWENRd1NJdDBKRGhJaTN3a1FFaUR4Q0JCWGNQTXpFaUpYQ1FJVjBpRDdDQklZOWxJalQyc2V3QUFTQVBiU0lNODN3QjFFZWoxL3YvL2hjQjFDSTFJRWVqeDYvLy9TSXNNMzBpTFhDUXdTSVBFSUY5SS95VTBQQUFBOFA4QlNJdUJFQUVBQUVpRndIUUQ4UDhBU0l1QklBRUFBRWlGd0hRRDhQOEFTSXVCR0FFQUFFaUZ3SFFEOFA4QVNJdUJNQUVBQUVpRndIUUQ4UDhBU0kxQldFRzRCZ0FBQUVpTkZXeDlBQUJJT1ZEd2RBdElpeEJJaGRKMEEvRC9Ba2lEZVBnQWRBeElpMUFJU0lYU2RBUHcvd0pJZzhBZ1NmL0lkY3hJaTRGWUFRQUE4UCtBWUFFQUFNTkloY2tQaEpjQUFBQkJnOG4vOEVRQkNVaUxnUkFCQUFCSWhjQjBCUEJFQVFoSWk0RWdBUUFBU0lYQWRBVHdSQUVJU0l1QkdBRUFBRWlGd0hRRThFUUJDRWlMZ1RBQkFBQkloY0IwQlBCRUFRaElqVUZZUWJnR0FBQUFTSTBWem53QUFFZzVVUEIwREVpTEVFaUYwblFFOEVRQkNraURlUGdBZEExSWkxQUlTSVhTZEFUd1JBRUtTSVBBSUVuL3lIWEtTSXVCV0FFQUFQQkVBWWhnQVFBQVNJdkJ3MGlKWENRSVNJbDBKQkJYU0lQc0lFaUxnU2dCQUFCSWk5bEloY0IwZVVpTkRhZUhBQUJJTzhGMGJVaUxneEFCQUFCSWhjQjBZWU00QUhWY1NJdUxJQUVBQUVpRnlYUVdnemtBZFJIb0UrWC8vMGlMaXlnQkFBRG9UeDhBQUVpTGl4Z0JBQUJJaGNsMEZvTTVBSFVSNlBIay8vOUlpNHNvQVFBQTZNRWVBQUJJaTRzUUFRQUE2Tm5rLy85SWk0c29BUUFBNk0zay8vOUlpNE13QVFBQVNJWEFkRWVET0FCMVFraUxpemdCQUFCSWdlbitBQUFBNktuay8vOUlpNHRJQVFBQXY0QUFBQUJJSzgvb2xlVC8vMGlMaTFBQkFBQklLOC9vaHVULy8waUxpekFCQUFEb2V1VC8vMGlMaTFnQkFBQklqUVdrZXdBQVNEdklkQnFEdVdBQkFBQUFkUkhvUlJvQUFFaUxpMWdCQUFEb1RlVC8vMGlOZTFpK0JnQUFBRWlOQldWN0FBQklPVWZ3ZEJKSWl3OUloY2wwQ29NNUFIVUY2Q1hrLy85SWczLzRBSFFUU0l0UENFaUZ5WFFLZ3prQWRRWG9DK1QvLzBpRHh5QkkvODUxdmtpTHkwaUxYQ1F3U0l0MEpEaElnOFFnWCtucjQvLy96TXpNUUZOSWcrd2dTSXZhU0lYU2RFRkloY2wwUEV5TEVVdzcwblF2U0lrUlNJdks2Qzc5Ly85TmhkSjBIMG1MeXVpdC9mLy9RWU02QUhVUlNJMEZvSDBBQUV3NzBIUUY2RHIrLy85SWk4UHJBalBBU0lQRUlGdkR6RUJUU0lQc0lPaHA0Zi8vU0l2WWk0aklBQUFBaFExMmhnQUFkQmhJZzdqQUFBQUFBSFFPNkVuaC8vOUlpNWpBQUFBQTZ5dTVEQUFBQU9oNi9QLy9rRWlOaThBQUFBQklpeFdiZmdBQTZGYi8vLzlJaTlpNURBQUFBT2haKy8vL1NJWGJkUWlOU3lEb2JPai8vMGlMdzBpRHhDQmJ3OHpNekVpSlhDUUlTSWxzSkJCSWlYUWtHRmRJZyt3Z1NJMVpIRWlMNmI0QkFRQUFTSXZMUkl2R005TG9VeDRBQUVVejIwaU5mUkJCalVzR1FRKzN3MFNKWFF4TWlWMEVadk9yU0kwOU1uNEFBRWdyL1lvRUg0Z0RTUC9EU1AvT2RmTklqWTBkQVFBQXVnQUJBQUNLQkRtSUFVai93VWoveW5YelNJdGNKREJJaTJ3a09FaUxkQ1JBU0lQRUlGL0RTSXZFU0lsWUVFaUpjQmhJaVhnZ1ZVaU5xSGo3Ly85SWdleUFCUUFBU0lzRmIzWUFBRWd6eEVpSmhYQUVBQUJJaS9HTFNRUklqVlFrVVA4VjlEY0FBTHNBQVFBQWhjQVBoRHdCQUFBendFaU5UQ1J3aUFIL3dFai93VHZEY3ZXS1JDUld4a1FrY0NCSWpYd2tWdXNwRDdaWEFVUVB0c0JFTzhKM0ZrRXIwRUdMd0VxTlRBUndSSTFDQWJJZzZHSWRBQUJJZzhjQ2lnZUV3SFhUaTBZTWcyUWtPQUJNalVRa2NJbEVKRENMUmdSRWk4dUpSQ1FvU0kyRmNBSUFBTG9CQUFBQU04bElpVVFrSU9oWkl3QUFnMlFrUUFDTFJnU0xWZ3lKUkNRNFNJMUZjSWxjSkRCSWlVUWtLRXlOVENSd1JJdkRNOG1KWENRZzZESWhBQUNEWkNSQUFJdEdCSXRXRElsRUpEaElqWVZ3QVFBQWlWd2tNRWlKUkNRb1RJMU1KSEJCdUFBQ0FBQXp5WWxjSkNEby9TQUFBRWlOVlhCTWpZVndBUUFBU0N2V1RJMmRjQUlBQUVpTlRoMU1LOFpCOWdNQmRBbUFDUkNLUkFyajZ3NUI5Z01DZEJDQUNTQkJpa1FJNDRpQkFBRUFBT3NIeG9FQUFRQUFBRWovd1VtRHd3SkkvOHQxeU9zL005SklqVTRkUkkxQ24wR05RQ0NEK0JsM0NJQUpFSTFDSU9zTVFZUDRHWGNPZ0FrZ2pVTGdpSUVBQVFBQTZ3ZkdnUUFCQUFBQS84SkkvOEU3MDNMSFNJdU5jQVFBQUVnenpPanQxZi8vVEkyY0pJQUZBQUJKaTFzWVNZdHpJRW1MZXloSmkrTmR3MGlKWENRUVYwaUQ3Q0RvY2Q3Ly8waUwrSXVJeUFBQUFJVU5mb01BQUhRVFNJTzR3QUFBQUFCMENVaUxtTGdBQUFEcmJMa05BQUFBNklmNS8vK1FTSXVmdUFBQUFFaUpYQ1F3U0RzZDQzOEFBSFJDU0lYYmRCdncvd3QxRmtpTkJhQjdBQUJJaTB3a01FZzd5SFFGNkNuZy8vOUlpd1c2ZndBQVNJbUh1QUFBQUVpTEJheC9BQUJJaVVRa01QRC9BRWlMWENRd3VRMEFBQURvSmZqLy8waUYyM1VJalVzZzZEamwvLzlJaThOSWkxd2tPRWlEeENCZnc4ek1RRk5JZyt3Z1NJdlp4a0VZQUVpRjBuVi82SzNkLy85SWlVTVFTSXVRd0FBQUFFaUpFMGlMaUxnQUFBQklpVXNJU0RzVkFYc0FBSFFXaTRESUFBQUFoUVdiZ2dBQWRRam9CUHovLzBpSkEwaUxCU0ovQUFCSU9VTUlkQnRJaTBNUWk0aklBQUFBaFExMGdnQUFkUW5vMGY3Ly8waUpRd2hJaTBNUTlvRElBQUFBQW5VVWc0aklBQUFBQXNaREdBSHJCdzhRQXZNUGZ3RklpOE5JZzhRZ1c4UE16TXhBVTBpRDdFQ0wyVWlOVENRZ005TG9TUC8vLzRNbHlZc0FBQUNEKy81MUpjY0Z1b3NBQUFFQUFBRC9GY1EwQUFDQWZDUTRBSFJUU0l0TUpEQ0RvY2dBQUFEOTYwV0QrLzExRXNjRmtJc0FBQUVBQUFEL0ZaSTBBQURyMUlQNy9IVVVTSXRFSkNESEJYU0xBQUFCQUFBQWkwQUU2N3VBZkNRNEFIUU1TSXRFSkRDRG9NZ0FBQUQ5aThOSWc4UkFXOE5JaVZ3a0dGVldWMEZVUVZWSWcreEFTSXNGblhJQUFFZ3p4RWlKUkNRNFNJdnk2RW4vLy84ejI0djRoY0IxRFVpTHp1aGQrLy8vNlJZQ0FBQk1qUzBSZmdBQWk4dElpK3RKaThWQnZBRUFBQUE1T0ErRUpnRUFBRUVEekVrRDdFaUR3RENEK1FWeTZZSC82UDBBQUErRUF3RUFBSUgvNmYwQUFBK0U5d0FBQUErM3ovOFY0ek1BQUlYQUQ0VG1BQUFBU0kxVUpDQ0x6LzhWdGpNQUFJWEFENFRGQUFBQVNJMU9IRFBTUWJnQkFRQUE2RjBaQUFDSmZnU0pYZ3hFT1dRa0lBK0dqQUFBQUVpTlJDUW1PRndrSm5RdE9GZ0JkQ2dQdGpnUHRrZ0JPL2wzRlN2UFNJMVVOeDFCQTh5QUNnUkpBOVJKSzh4MTlVaUR3QUk0R0hYVFNJMUdIcm4rQUFBQWdBZ0lTUVBFU1N2TWRmV0xUZ1NCNmFRREFBQjBKNFBwQkhRYmcra05kQS8veVhRRWk4UHJHcmdFQkFBQTZ4TzRFZ1FBQU9zTXVBUUlBQURyQmJnUkJBQUFpVVlNUklsbUNPc0RpVjRJU0kxK0VBKzN3N2tHQUFBQVp2T3I2ZDhBQUFBNUhlT0pBQUFQaGJqKy8vK0R5UC9wMVFBQUFFaU5UaHd6MGtHNEFRRUFBT2lFR0FBQVRJMVViUUJNalIyd2ZBQUFTY0hpQkwwRUFBQUFUNDFFS2hCSmk4aEJPQmgwTVRoWkFYUXNEN1lSRDdaQkFUdlFkeGxNalV3eUhVR0tBMEVEMUVFSUFRKzJRUUZOQTh3NzBIYnNTSVBCQWpnWmRjOUpnOEFJVFFQY1NTdnNkYnVKZmdTQjc2UURBQUJFaVdZSWRDT0Q3d1IwRjRQdkRYUUwvODkxR3JzRUJBQUE2eE83RWdRQUFPc011d1FJQUFEckJic1JCQUFBVEN2V2lWNE1TSTFPRUV1TmZDcjB1Z1lBQUFBUHR3UVBab2tCU0lQQkFra3IxSFh3U0l2TzZNNzUvLzh6d0VpTFRDUTRTRFBNNklQUi8vOUlpNXdrZ0FBQUFFaUR4RUJCWFVGY1gxNWR3OHpNekVpTHhFaUpXQWhJaVhBUVNJbDRHRXlKWUNCQlZVaUQ3RENMK1VHRHpmL285Tm4vLzBpTDhPaHMrLy8vU0l1ZXVBQUFBSXZQNkw3OC8vOUVpK0E3UXdRUGhIVUJBQUM1SUFJQUFPZ2szUC8vU0l2WU0vOUloY0FQaEdJQkFBQklpNWE0QUFBQVNJdklRYmdnQWdBQTZIa09BQUNKTzBpTDAwR0x6T2dJL2YvL1JJdm9oY0FQaFFvQkFBQklpNDY0QUFBQVRJMGxBM2NBQVBEL0NYVVJTSXVPdUFBQUFFazd6SFFGNklYYi8vOUlpWjY0QUFBQThQOEQ5b2JJQUFBQUFnK0YrZ0FBQVBZRlozNEFBQUVQaGUwQUFBQytEUUFBQUl2TzZIMzAvLytRaTBNRWlRVUhpQUFBaTBNSWlRVUNpQUFBaTBNTWlRWDlod0FBaTlkTWpRVTR2Ly8vaVZRa0lJUDZCWDBWU0dQS0Q3ZEVTeEJtUVltRVNLaklBQUQvd3V2aWk5ZUpWQ1FnZ2ZvQkFRQUFmUk5JWThxS1JCa2NRb2lFQVlDNUFBRC93dXZoaVh3a0lJSC9BQUVBQUgwV1NHUFBpb1FaSFFFQUFFS0loQUdRdWdBQS84ZnIza2lMQldCNkFBRHcvd2gxRVVpTERWUjZBQUJKTzh4MEJlaXkydi8vU0lrZFEzb0FBUEQvQTR2TzZNbnkvLy9ySzRQNC8zVW1USTBsKzNVQUFFazczSFFJU0l2TDZJYmEvLy9vblFBQUFNY0FGZ0FBQU9zRk0vOUVpKzlCaThWSWkxd2tRRWlMZENSSVNJdDhKRkJNaTJRa1dFaUR4REJCWGNQTXpFaUQ3Q2lEUFdtUUFBQUFkUlM1L2YvLy8rZ0ovdi8veHdWVGtBQUFBUUFBQURQQVNJUEVLTU5NalEyOWVnQUFNOEJKaTlGRWpVQUlPd3AwSy8vQVNRUFFnL2d0Y3ZLTlFlMkQrQkYzQnJnTkFBQUF3NEhCUlAvLy83Z1dBQUFBZy9rT1FROUd3TU5JbUVHTFJNRUV3OHhJZyt3bzZEdlgvLzlJaGNCMUNVaU5CYzk3QUFEckJFaUR3QkJJZzhRb3cwaUpYQ1FJVjBpRDdDQkppOWhJaS9wSWhjbDBIVFBTU0kxQzRFajM4VWc3eDNNUDZMai8vLy9IQUF3QUFBQXp3T3RkU0ErditiZ0JBQUFBU0lYL1NBOUUrRFBBU0lQLzRIY1lTSXNOMDRNQUFJMVFDRXlMeC84VjV5NEFBRWlGd0hVdGd6MnJqQUFBQUhRWlNJdlA2Rm51Ly8rRndIWExTSVhiZExMSEF3d0FBQURycWtpRjIzUUd4d01NQUFBQVNJdGNKREJJZzhRZ1g4UE16RWlKWENRSVNJbDBKQkJYU0lQc0lFaUwya2lMK1VpRnlYVUtTSXZLNkU3dC8vL3Jha2lGMG5VSDZQclkvLy9yWEVpRCt1QjNRMGlMRFV1REFBQzRBUUFBQUVpRjIwZ1BSTmhNaThjejBreUx5LzhWbVM0QUFFaUw4RWlGd0hWdk9RVVRqQUFBZEZCSWk4dm93ZTMvLzRYQWRDdElnL3ZnZHIxSWk4dm9yKzMvLytpKy92Ly94d0FNQUFBQU04QklpMXdrTUVpTGRDUTRTSVBFSUYvRDZLSCsvLzlJaTlqL0ZUUXRBQUNMeU9oSi92Ly9pUVByMWVpSS92Ly9TSXZZL3hVYkxRQUFpOGpvTVA3Ly80a0RTSXZHNjd2TVNJUHNLT2d2MXYvL1NJdUkwQUFBQUVpRnlYUUUvOUhyQU9oU0dnQUFTSVBFS01QTVNJUHNLRWlORGRILy8vLy9GYmNzQUFCSWlRWGdoQUFBU0lQRUtNUE16TXhJaVEzWmhBQUFTSWtOMm9RQUFFaUpEZHVFQUFCSWlRM2NoQUFBdzh6TXpFaUxEY21FQUFCSS95WEtMQUFBek14SWlWd2tFRWlKZENRWVYwRlVRVlZCVmtGWFNJUHNNSXZaTS8rSmZDUmdNL2FMMFlQcUFnK0V4UUFBQUlQcUFuUmlnK29DZEUyRDZnSjBXSVBxQTNSVGcrb0VkQzZENmdaMEZ2L0tkRFhvcWYzLy84Y0FGZ0FBQU9qZUF3QUE2MEJNalNWUmhBQUFTSXNOU29RQUFPbU1BQUFBVEkwbFRvUUFBRWlMRFVlRUFBRHJmRXlOSlRhRUFBQklpdzB2aEFBQTYyem9xTlQvLzBpTDhFaUZ3SFVJZzhqLzZYSUJBQUJJaTVDZ0FBQUFTSXZLVEdNRjJ5NEFBRGxaQkhRVFNJUEJFRW1Md0VqQjRBUklBOEpJTzhoeTZFbUx3RWpCNEFSSUE4SklPOGh6QlRsWkJIUUNNOGxNaldFSVRZc3NKT3NnVEkwbHVJTUFBRWlMRGJHREFBQy9BUUFBQUlsOEpHRC9GYm9yQUFCTWkraEpnLzBCZFFjendPbjhBQUFBVFlYdGRRcEJqVTBENk9EYi8vL01oZjkwQ0RQSjZORHYvLytRZy9zSWRCR0Qrd3QwRElQN0JIUUhUSXQ4SkNqckxFeUx2cWdBQUFCTWlYd2tLRWlEcHFnQUFBQUFnL3NJZFJORWk3YXdBQUFBeDRhd0FBQUFqQUFBQU9zRlJJdDBKR0NEK3doMU9Zc04vUzBBQUl2UmlVd2tJSXNGOVMwQUFBUElPOUY5S2toanlrZ0R5VWlMaHFBQUFBQklnMlRJQ0FEL3dvbFVKQ0NMRGN3dEFBRHIwK2lOMHYvL1NZa0VKSVgvZEFjenllZzI3di8vdndnQUFBQTczM1VOaTVhd0FBQUFpODlCLzlYckJZdkxRZi9WTzk5MERvUDdDM1FKZy9zRUQ0VVkvLy8vVEltK3FBQUFBRHZmRDRVSi8vLy9SSW0yc0FBQUFPbjkvdi8vU0l0Y0pHaElpM1FrY0VpRHhEQkJYMEZlUVYxQlhGL0R6TXhJaVEyZGdnQUF3MGlKRFoyQ0FBRERTSWtObllJQUFNTklpVndrRUVpSmRDUVlWVmRCVkVpTnJDUVErLy8vU0lIczhBVUFBRWlMQlhocEFBQklNOFJJaVlYZ0JBQUFRWXY0aS9LTDJZUDUvM1FGNkhubS8vK0RaQ1J3QUVpTlRDUjBNOUpCdUpRQUFBRG9waEFBQUV5TlhDUndTSTFGRUVpTlRSQk1pVndrU0VpSlJDUlEveFdwS1FBQVRJdWxDQUVBQUVpTlZDUkFTWXZNUlRQQTZLNGRBQUJJaGNCME4waURaQ1E0QUVpTFZDUkFTSTFNSkdCSWlVd2tNRWlOVENSWVRJdklTSWxNSkNoSWpVMFFUWXZFU0lsTUpDQXp5ZWh1SFFBQTZ4eElpNFVJQlFBQVNJbUZDQUVBQUVpTmhRZ0ZBQUJJaVlXb0FBQUFTSXVGQ0FVQUFJbDBKSENKZkNSMFNJbEZnUDhWQ1NrQUFEUEppL2ovRmZjb0FBQklqVXdrU1A4VjVDZ0FBSVhBZFJDRi8zVU1nL3YvZEFlTHkraVU1Zi8vU0l1TjRBUUFBRWd6ek9pWnlmLy9USTJjSlBBRkFBQkppMXNvU1l0ek1FbUw0MEZjWDEzRHpFaUQ3Q2hCdUFFQUFBQzZGd1FBd0VHTlNBSG9uUDcvLy84VllpZ0FBTG9YQkFEQVNJdklTSVBFS0VqL0pXOG9BQURNek14SWlWd2tDRWlKYkNRUVNJbDBKQmhYU0lQc01FaUw2VWlMRGY2QUFBQkJpOWxKaS9oSWkvTC9GYzhvQUFCRWk4dE1pOGRJaTlaSWk4MUloY0IwSVV5TFZDUmdUSWxVSkNELzBFaUxYQ1JBU0l0c0pFaElpM1FrVUVpRHhEQmZ3MGlMUkNSZ1NJbEVKQ0RvWHYvLy84ek1TSVBzT0VpRFpDUWdBRVV6eVVVendEUFNNOG5vZC8vLy8waUR4RGpEek14SWlWd2tDRmRJZyt3Z1NJMGRlM1VBQUw4S0FBQUFTSXNML3hYOUp3QUFTSWtEU0lQRENFai96M1hyU0l0Y0pEQklnOFFnWDhQTXpFeU5CZjAzQUFBendFbUwwRHNLZEE3L3dFaUR3aENEK0JaeThUUEF3MGlZU0FQQVNZdEV3QWpEek16TVNJbGNKQkJJaVd3a0dFaUpkQ1FnVjBGVVFWVklnZXhRQWdBQVNJc0ZCbWNBQUVnenhFaUpoQ1JBQWdBQWkvbm9vUC8vL3pQMlNJdllTSVhBRDRUdUFRQUFqVTRENkNZWkFBQ0QrQUVQaEhVQkFBQ05UZ1BvRlJrQUFJWEFkUTJEUFJwMkFBQUJENFJjQVFBQWdmLzhBQUFBRDRTNEFRQUFTSTB0dVg4QUFFRzhGQU1BQUV5TkJUdzVBQUJJaTgxQmk5VG9iUmdBQURQSmhjQVBoUlFCQUFCTWpTM0Nmd0FBUWJnRUFRQUFab2sxdllFQUFFbUwxZjhWUWlnQUFFR05mQ1RuaGNCMUtreU5CY280QUFDTDEwbUx6ZWdzR0FBQWhjQjBGVVV6eVVVendEUFNNOGxJaVhRa0lPam8vZi8vekVtTHplanZGd0FBU1AvQVNJUDRQSFpIU1l2TjZONFhBQUJNalFWL09BQUFRYmtEQUFBQVNJMU1SYnhJaThGSks4VkkwZmhJSy9oSWk5Zm82QllBQUlYQWRCVkZNOGxGTThBejBqUEpTSWwwSkNEb2tQMy8vOHhNalFVME9BQUFTWXZVU0l2TjZEVVdBQUNGd0hWQlRJdkRTWXZVU0l2TjZDTVdBQUNGd0hVYVNJMFZ3RGNBQUVHNEVDQUJBRWlMemVnQ0ZBQUE2YVVBQUFCRk04bEZNOEF6MGpQSlNJbDBKQ0RvT2YzLy84eEZNOGxGTThBejBqUEpTSWwwSkNEb0pQMy8vOHhGTThsRk04QXowa2lKZENRZzZCSDkvLy9NdWZULy8vLy9GVVVtQUFCSWkvaEloY0IwVlVpRCtQOTBUNHZXVEkxRUpFQ0tDMEdJQ0dZNU0zUVIvOEpKLzhCSWc4TUNnZnIwQVFBQWN1VklqVXdrUUVDSXRDUXpBZ0FBNkFNQkFBQk1qVXdrTUVpTlZDUkFTSXZQVEl2QVNJbDBKQ0QvRmNnbUFBQklpNHdrUUFJQUFFZ3p6T2dZeHYvL1RJMmNKRkFDQUFCSmkxc29TWXRyTUVtTGN6aEppK05CWFVGY1g4UE16TXhJZyt3b3VRTUFBQURvQWhjQUFJUDRBWFFYdVFNQUFBRG84eFlBQUlYQWRSMkRQZmh6QUFBQmRSUzUvQUFBQU9ocy9mLy91ZjhBQUFEb1l2My8vMGlEeENqRHpFQlRTSVBzSUVpRnlYUU5TSVhTZEFoTmhjQjFIRVNJQWVoNzl2Ly91eFlBQUFDSkdPaXYvUC8vaThOSWc4UWdXOE5NaThsTks4aEJpZ0JEaUFRQlNmL0FoTUIwQlVqL3luWHRTSVhTZFE2SUVlaEM5di8vdXlJQUFBRHJ4VFBBNjhyTXpNek16TXpNek14bVpnOGZoQUFBQUFBQVNJdkJTUGZaU0trSEFBQUFkQTlta0lvUVNQL0FoTkowWDZnSGRmTkp1UC8rL3Y3Ky92NStTYnNBQVFFQkFRRUJnVWlMRUUyTHlFaUR3QWhNQThwSTk5SkpNOUZKSTlOMDZFaUxVUGlFMG5SUmhQWjBSMGpCNmhDRTBuUTVoUFowTDBqQjZoQ0UwblFoaFBaMEY4SHFFSVRTZEFxRTluVzVTSTFFQWYvRFNJMUVBZjdEU0kxRUFmM0RTSTFFQWZ6RFNJMUVBZnZEU0kxRUFmckRTSTFFQWZuRFNJMUVBZmpEU0lsY0pBaElpWFFrRUZkSWcreEFpOXBJaTlGSWpVd2tJRUdMK1VHTDhPaGM3Ly8vU0l0RUpDaEVEN2JiUVlSOEF4MTFINFgyZEJWSWkwUWtJRWlMaUVBQkFBQkNEN2NFV1NQRzZ3SXp3SVhBZEFXNEFRQUFBSUI4SkRnQWRBeElpMHdrTUlPaHlBQUFBUDFJaTF3a1VFaUxkQ1JZU0lQRVFGL0R6SXZSUWJrRUFBQUFSVFBBTThucGN2Ly8vOHpNUUZOSWcrd3dTSXZadVE0QUFBRG81ZWYvLzVCSWkwTUlTSVhBZEQ5SWl3MzBnUUFBU0kwVjVZRUFBRWlKVENRZ1NJWEpkQmxJT1FGMUQwaUxRUWhJaVVJSTZJbk8vLy9yQlVpTDBldmRTSXRMQ09oNXp2Ly9TSU5qQ0FDNURnQUFBT2lTNXYvL1NJUEVNRnZEek16TXpNek16TXpNek16TXpNek16TXpNWm1ZUEg0UUFBQUFBQUVncjBVeUx5dmJCQjNRYmlnRkNpaFFKT3NKMVZrai93WVRBZEZkSTk4RUhBQUFBZGVhUVNic0FBUUVCQVFFQmdVcU5GQWxtZ2VML0QyYUIrdmdQZDh0SWl3RktpeFFKU0R2Q2RiOUp1di8rL3Y3Ky92NStUQVBTU0lQdy8waUR3UWhKTThKSmhjTjB4K3NQU0J2QVNJUFkvOE16d01ObVptYVFoTkowSjRUMmRDTkl3ZW9RaE5KMEc0VDJkQmRJd2VvUWhOSjBENFQyZEF2QjZoQ0UwblFFaFBaMWl6UEF3MGdid0VpRDJQL0RTSVBzS0VpRnlYVVo2S2J6Ly8vSEFCWUFBQURvMi9uLy8waUR5UDlJZzhRb3cweUx3VWlMRGN4M0FBQXowa2lEeENoSS95VkhJd0FBek16TXpNek16TXpNek16TXpHWm1EeCtFQUFBQUFBQk1pOWxJSzlFUGdwNEJBQUJKZy9nSWNtSDJ3UWQwTnZiQkFYUUxpZ1FLU2YvSWlBRkkvOEgyd1FKMEQyYUxCQXBKZytnQ1pva0JTSVBCQXZiQkJIUU5pd1FLU1lQb0JJa0JTSVBCQkUyTHlFbkI2UVYxVVUyTHlFbkI2UU4wRkVpTEJBcElpUUZJZzhFSVNmL0pkZkJKZytBSFRZWEFkUWhKaThQRER4OUFBSW9FQ29nQlNQL0JTZi9JZGZOSmk4UERabVptWm1abVpnOGZoQUFBQUFBQVptWm1rR1pta0VtQitRQWdBQUJ6UWtpTEJBcE1pMVFLQ0VpRHdTQklpVUhnVElsUjZFaUxSQXJ3VEl0VUN2aEovOGxJaVVId1RJbFIrSFhVU1lQZ0grbHgvLy8vWm1abUR4K0VBQUFBQUFCbWtFaUIrZ0FRQUFCeXRiZ2dBQUFBRHhnRUNnOFlSQXBBU0lIQmdBQUFBUC9JZGV4SWdla0FFQUFBdUVBQUFBQk1pd3dLVEl0VUNnaE1EOE1KVEEvRFVRaE1pMHdLRUV5TFZBb1lUQS9EU1JCTUQ4TlJHRXlMVEFvZ1RJdFVDaWhJZzhGQVRBL0RTZUJNRDhOUjZFeUxUQXJ3VEl0VUN2ai95RXdQdzBud1RBL0RVZmgxcWttQjZBQVFBQUJKZ2ZnQUVBQUFENE54Ly8vLzhJQU1KQURwdWY3Ly8yWm1abVlQSDRRQUFBQUFBR1ptWnBCbVptYVFacEJKQThoSmcvZ0ljbUgyd1FkME52YkJBWFFMU1AvSmlnUUtTZi9JaUFIMndRSjBEMGlENlFKbWl3UUtTWVBvQW1hSkFmYkJCSFFOU0lQcEJJc0VDa21ENkFTSkFVMkx5RW5CNlFWMVVFMkx5RW5CNlFOMEZFaUQ2UWhJaXdRS1NmL0pTSWtCZGZCSmcrQUhUWVhBZFFkSmk4UEREeDhBU1AvSmlnUUtTZi9JaUFGMTgwbUx3OE5tWm1abVptWm1EeCtFQUFBQUFBQm1abWFRWm1hUVNZSDVBQ0FBQUhOQ1NJdEVDdmhNaTFRSzhFaUQ2U0JJaVVFWVRJbFJFRWlMUkFvSVRJc1VDa24veVVpSlFRaE1pUkYxMVVtRDRCL3BjLy8vLzJabVptWVBINFFBQUFBQUFHYVFTSUg2QVBELy8zZTF1Q0FBQUFCSWdlbUFBQUFBRHhnRUNnOFlSQXBBLzhoMTdFaUJ3UUFRQUFDNFFBQUFBRXlMVEFyNFRJdFVDdkJNRDhOSitFd1B3MUh3VEl0TUN1aE1pMVFLNEV3UHcwbm9UQS9EVWVCTWkwd0syRXlMVkFyUVNJUHBRRXdQdzBrWVRBL0RVUkJNaTB3S0NFeUxGQXIveUV3UHcwa0lUQS9ERVhXcVNZSG9BQkFBQUVtQitBQVFBQUFQZzNILy8vL3dnQXdrQU9tNi92Ly9TSVhKRDRUa0F3QUFVMGlEN0NCSWk5bElpMGtJNlBySi8vOUlpMHNRNlBISi8vOUlpMHNZNk9qSi8vOUlpMHNnNk4vSi8vOUlpMHNvNk5iSi8vOUlpMHN3Nk0zSi8vOUlpd3ZveGNuLy8waUxTMERvdk1uLy8waUxTMGpvczhuLy8waUxTMURvcXNuLy8waUxTMWpvb2NuLy8waUxTMkRvbU1uLy8waUxTMmpvajhuLy8waUxTempvaHNuLy8waUxTM0RvZmNuLy8waUxTM2pvZE1uLy8waUxpNEFBQUFEb2FNbi8vMGlMaTRnQUFBRG9YTW4vLzBpTGk1QUFBQURvVU1uLy8waUxpNWdBQUFEb1JNbi8vMGlMaTZBQUFBRG9PTW4vLzBpTGk2Z0FBQURvTE1uLy8waUxpN0FBQUFEb0lNbi8vMGlMaTdnQUFBRG9GTW4vLzBpTGk4QUFBQURvQ01uLy8waUxpOGdBQUFEby9Nai8vMGlMaTlBQUFBRG84TWovLzBpTGk5Z0FBQURvNU1qLy8waUxpK0FBQUFEbzJNai8vMGlMaStnQUFBRG96TWovLzBpTGkvQUFBQURvd01qLy8waUxpL2dBQUFEb3RNai8vMGlMaXdBQkFBRG9xTWovLzBpTGl3Z0JBQURvbk1qLy8waUxpeEFCQUFEb2tNai8vMGlMaXhnQkFBRG9oTWovLzBpTGl5QUJBQURvZU1qLy8waUxpeWdCQUFEb2JNai8vMGlMaXpBQkFBRG9ZTWovLzBpTGl6Z0JBQURvVk1qLy8waUxpMEFCQUFEb1NNai8vMGlMaTBnQkFBRG9QTWovLzBpTGkxQUJBQURvTU1qLy8waUxpM0FCQUFEb0pNai8vMGlMaTNnQkFBRG9HTWovLzBpTGk0QUJBQURvRE1qLy8waUxpNGdCQUFEb0FNai8vMGlMaTVBQkFBRG85TWYvLzBpTGk1Z0JBQURvNk1mLy8waUxpMmdCQUFEbzNNZi8vMGlMaTZnQkFBRG8wTWYvLzBpTGk3QUJBQURveE1mLy8waUxpN2dCQUFEb3VNZi8vMGlMaThBQkFBRG9yTWYvLzBpTGk4Z0JBQURvb01mLy8waUxpOUFCQUFEb2xNZi8vMGlMaTZBQkFBRG9pTWYvLzBpTGk5Z0JBQURvZk1mLy8waUxpK0FCQUFEb2NNZi8vMGlMaStnQkFBRG9aTWYvLzBpTGkvQUJBQURvV01mLy8waUxpL2dCQUFEb1RNZi8vMGlMaXdBQ0FBRG9RTWYvLzBpTGl3Z0NBQURvTk1mLy8waUxpeEFDQUFEb0tNZi8vMGlMaXhnQ0FBRG9ITWYvLzBpTGl5QUNBQURvRU1mLy8waUxpeWdDQUFEb0JNZi8vMGlMaXpBQ0FBRG8rTWIvLzBpTGl6Z0NBQURvN01iLy8waUxpMEFDQUFEbzRNYi8vMGlMaTBnQ0FBRG8xTWIvLzBpTGkxQUNBQURveU1iLy8waUxpMWdDQUFEb3ZNYi8vMGlMaTJBQ0FBRG9zTWIvLzBpTGkyZ0NBQURvcE1iLy8waUxpM0FDQUFEb21NYi8vMGlMaTNnQ0FBRG9qTWIvLzBpTGk0QUNBQURvZ01iLy8waUxpNGdDQUFEb2RNYi8vMGlMaTVBQ0FBRG9hTWIvLzBpTGk1Z0NBQURvWE1iLy8waUxpNkFDQUFEb1VNYi8vMGlMaTZnQ0FBRG9STWIvLzBpTGk3QUNBQURvT01iLy8waUxpN2dDQUFEb0xNYi8vMGlEeENCYnc4ek1TSVhKZEdaVFNJUHNJRWlMMlVpTENVZzdEWFZvQUFCMEJlZ0d4di8vU0l0TENFZzdEV3RvQUFCMEJlajB4Zi8vU0l0TEVFZzdEV0ZvQUFCMEJlaml4Zi8vU0l0TFdFZzdEWmRvQUFCMEJlalF4Zi8vU0l0TFlFZzdEWTFvQUFCMEJlaSt4Zi8vU0lQRUlGdkRTSVhKRDRRQUFRQUFVMGlEN0NCSWk5bElpMGtZU0RzTkhHZ0FBSFFGNkpYRi8vOUlpMHNnU0RzTkVtZ0FBSFFGNklQRi8vOUlpMHNvU0RzTkNHZ0FBSFFGNkhIRi8vOUlpMHN3U0RzTi9tY0FBSFFGNkYvRi8vOUlpMHM0U0RzTjlHY0FBSFFGNkUzRi8vOUlpMHRBU0RzTjZtY0FBSFFGNkR2Ri8vOUlpMHRJU0RzTjRHY0FBSFFGNkNuRi8vOUlpMHRvU0RzTjdtY0FBSFFGNkJmRi8vOUlpMHR3U0RzTjVHY0FBSFFGNkFYRi8vOUlpMHQ0U0RzTjJtY0FBSFFGNlBQRS8vOUlpNHVBQUFBQVNEc056V2NBQUhRRjZON0UvLzlJaTR1SUFBQUFTRHNOd0djQUFIUUY2TW5FLy85SWk0dVFBQUFBU0RzTnMyY0FBSFFGNkxURS8vOUlnOFFnVzhQTXpNek16TXpNek16TXpNeG1aZzhmaEFBQUFBQUFTSXZCU1lQNENISlREN2JTU2JrQkFRRUJBUUVCQVVrUHI5RkpnL2hBY2g1STk5bUQ0UWQwQmt3cndVaUpFRWdEeUUyTHlFbUQ0RDlKd2VrR2RUbE5pOGhKZytBSFNjSHBBM1FSWm1abWtKQklpUkZJZzhFSVNmL0pkZlJOaGNCMENvZ1JTUC9CU2YvSWRmYkREeDlBQUdabVpwQm1acEJKZ2ZrQUhBQUFjekJJaVJGSWlWRUlTSWxSRUVpRHdVQklpVkhZU0lsUjRFbi95VWlKVWVoSWlWSHdTSWxSK0hYWTY1Um1EeDlFQUFCSUQ4TVJTQS9EVVFoSUQ4TlJFRWlEd1VCSUQ4TlIyRWdQdzFIZ1NmL0pTQS9EVWVoSUQ4TlI4RWdQdzFINGRkRHdnQXdrQU9sVS8vLy96TXhBVTBpRDdDQkZpeGhJaTlwTWk4bEJnK1A0UWZZQUJFeUwwWFFUUVl0QUNFMWpVQVQzMkV3RDBVaGp5RXdqMFVsancwcUxGQkJJaTBNUWkwZ0lTQU5MQ1BaQkF3OTBEQSsyUVFPRDRQQkltRXdEeUV3enlrbUx5VWlEeENCYjZZRzQvLy9NU0lQc0tFMkxRVGhJaThwSmk5SG9pZi8vLzdnQkFBQUFTSVBFS01QTXpNeEFWVUZVUVZWQlZrRlhTSVBzVUVpTmJDUkFTSWxkUUVpSmRVaElpWDFRU0lzRkNsY0FBRWd6eFVpSlJRaUxYV0F6LzAyTDhVV0wrSWxWQUlYYmZpcEVpOU5KaThGQi84cEFPRGgwREVqL3dFV0Ywblh3UVlQSy80dkRRU3ZDLzhnN3c0MVlBWHdDaTloRWkyVjRpL2RGaGVSMUIwaUxBVVNMWUFUM25ZQUFBQUJFaTh0Tmk4WWIwa0dMeklsOEpDaUQ0Z2hJaVh3a0lQL0MveFdBR0FBQVRHUG9oY0IxQnpQQTZmWUJBQUJKdVBELy8vLy8vLzhQaGNCK1hqUFNTSTFDNEVuMzlVaUQrQUp5VDB1TlRDMFFTSUg1QUFRQUFIY3FTSTFCRDBnN3dYY0RTWXZBU0lQZzhPamlDQUFBU0N2Z1NJMThKRUJJaGY5MHJNY0h6TXdBQU9zVDZHalcvLzlJaS9oSWhjQjBDc2NBM2QwQUFFaUR4eEJJaGY5MGlFU0x5MDJMeHJvQkFBQUFRWXZNUklsc0pDaElpWHdrSVA4VjR4Y0FBSVhBRDRSTUFRQUFSSXQxQUNGMEpDaElJWFFrSUVHTHprV0x6VXlMeDBHTDEvOFZ0QmNBQUVoajhJWEFENFFpQVFBQVFiZ0FCQUFBUllYNGREZUxUWENGeVErRURBRUFBRHZ4RDQ4RUFRQUFTSXRGYUlsTUpDaEZpODFNaThkQmk5ZEJpODVJaVVRa0lQOFZiQmNBQU9uZ0FBQUFoY0IrWnpQU1NJMUM0RWozOWtpRCtBSnlXRWlOVERZUVNUdklkelZJalVFUFNEdkJkd3BJdVBELy8vLy8vLzhQU0lQZzhPam1Cd0FBU0N2Z1NJMWNKRUJJaGRzUGhKWUFBQURIQTh6TUFBRHJFK2hvMWYvL1NJdllTSVhBZEE3SEFOM2RBQUJJZzhNUTZ3SXoyMGlGMjNSdVJZdk5USXZIUVl2WFFZdk9pWFFrS0VpSlhDUWcveFhhRmdBQU04bUZ3SFE4aTBWd005SklpVXdrT0VTTHpreUx3MGlKVENRd2hjQjFDNGxNSkNoSWlVd2tJT3NOaVVRa0tFaUxSV2hJaVVRa0lFR0x6UDhWMmhVQUFJdndTSTFMOElFNTNkMEFBSFVGNkpmQS8vOUlqVS93Z1RuZDNRQUFkUVhvaHNELy80dkdTSXROQ0VnenplaXd0Zi8vU0l0ZFFFaUxkVWhJaTMxUVNJMWxFRUZmUVY1QlhVRmNYY1BNekVpSlhDUUlTSWwwSkJCWFNJUHNjSXZ5U0l2UlNJMU1KRkJKaTlsQmkvam9XT0QvLzR1RUpMZ0FBQUJFaTV3a3dBQUFBRWlOVENSUVJJbGNKRUNKUkNRNGk0UWtzQUFBQUlsRUpEQklpNFFrcUFBQUFFeUx5MGlKUkNRb2k0UWtvQUFBQUVTTHg0dldpVVFrSU9qRC9QLy9nSHdrYUFCMERFaUxUQ1JnZzZISUFBQUEvVXlOWENSd1NZdGJFRW1MY3hoSmkrTmZ3OHpNUUZWQlZFRlZRVlpCVjBpRDdFQklqV3drTUVpSlhVQklpWFZJU0lsOVVFaUxCYVpUQUFCSU04VklpVVVBaTNWb00vOUZpK2xOaS9CRWkvcUY5blVHU0lzQmkzQUU5MTF3aTg2SmZDUW9HOUpJaVh3a0lJUGlDUC9DL3hWY0ZRQUFUR1BnaGNCMUJ6UEE2Y29BQUFCK1owaTQ4UC8vLy8vLy8zOU1PK0IzV0V1TlRDUVFTSUg1QUFRQUFIY3hTSTFCRDBnN3dYY0tTTGp3Ly8vLy8vLy9EMGlENFBEb3d3VUFBRWdyNEVpTlhDUXdTSVhiZExISEE4ek1BQURyRStoSjAvLy9TSXZZU0lYQWRBL0hBTjNkQUFCSWc4TVE2d05JaTk5SWhkdDBpRTJMeERQU1NJdkxUUVBBNkQzNi8vOUZpODFOaThhNkFRQUFBSXZPUklsa0pDaElpVndrSVA4VnNCUUFBSVhBZEJWTWkwMWdSSXZBU0l2VFFZdlAveFdoRkFBQWkvaElqVXZ3Z1RuZDNRQUFkUVhvanI3Ly80dkhTSXROQUVnenplaTRzLy8vU0l0ZFFFaUxkVWhJaTMxUVNJMWxFRUZmUVY1QlhVRmNYY1BNekVpSlhDUUlTSWwwSkJCWFNJUHNZSXZ5U0l2UlNJMU1KRUJCaTlsSmkvam9ZTjcvLzBTTG5DU29BQUFBaTRRa21BQUFBRWlOVENSQVJJbGNKRENKUkNRb1NJdUVKSkFBQUFCRWk4dE1pOGVMMWtpSlJDUWc2RVgrLy8rQWZDUllBSFFNU0l0TUpGQ0RvY2dBQUFEOVNJdGNKSEJJaTNRa2VFaUR4R0Jmdzh6TVNJUHNLT2pyNWYvL1NJWEFkQXE1RmdBQUFPanM1Zi8vOWdYZFlBQUFBblFVUWJnQkFBQUF1aFVBQUVCQmpVZ0M2QnZvLy8rNUF3QUFBT2pSd3YvL3pMa0NBQUFBNmVMQy8vL016RUJUVlZaWFFWUkJWVUZXU0lQc1VFaUxCWXBSQUFCSU04UklpVVFrU0VHTDZFeUw4a3lMNmVqY3VmLy9NOXRJT1IzRGNBQUFTSXY0RDRYVkFBQUFTSTBOdXl3QUFQOFZIUk1BQUVpTDhFaUZ3QStFa3dFQUFFaU5GWklzQUFCSWk4ai9GUUVTQUFCSWhjQVBoSG9CQUFCSWk4ai9GYmNSQUFCSWpSVmdMQUFBU0l2T1NJa0ZibkFBQVA4VjJCRUFBRWlMeVA4Vmx4RUFBRWlORlNnc0FBQklpODVJaVFWV2NBQUEveFc0RVFBQVNJdkkveFYzRVFBQVNJMFY2Q3NBQUVpTHpraUpCVDV3QUFEL0ZaZ1JBQUJJaThqL0ZWY1JBQUJNaTloSWlRVTFjQUFBU0lYQWRDSklqUldoS3dBQVNJdk8veFZ3RVFBQVNJdkkveFV2RVFBQVNJa0ZDSEFBQU9zUVNJc0YvMjhBQU9zT1NJc0Y5bThBQUV5TEhmZHZBQUJJTzhkMFlrdzczM1JkU0l2SS94Vk1FUUFBU0lzTjNXOEFBRWlMOFA4VlBCRUFBRXlMNEVpRjluUThTSVhBZERmLzFraUZ3SFFxU0kxTUpEQkJ1UXdBQUFCTWpVUWtPRWlKVENRZ1FZMVI5VWlMeUVILzFJWEFkQWYyUkNSQUFYVUdEN3J0RmV0QVNJc05jVzhBQUVnN3ozUTAveFhtRUFBQVNJWEFkQ24vMEVpTDJFaUZ3SFFmU0lzTldHOEFBRWc3ejNRVC94WEZFQUFBU0lYQWRBaElpOHYvMEVpTDJFaUxEU2x2QUFEL0Zhc1FBQUJJaGNCMEVFU0x6VTJMeGttTDFVaUx5Ly9RNndJendFaUxUQ1JJU0RQTTZOZXcvLzlJZzhSUVFWNUJYVUZjWDE1ZFc4TkFVMGlEN0NCRk05Sk1pOGxJaGNsMERraUYwblFKVFlYQWRSMW1SSWtSNklqaC8vKzdGZ0FBQUlrWTZMem4vLytMdzBpRHhDQmJ3MlpFT1JGMENVaUR3UUpJLzhwMThVaUYwblVHWmtXSkVldk5TU3ZJUVErM0FHWkNpUVFCU1lQQUFtYUZ3SFFGU1AvS2RlbEloZEoxRUdaRmlSSG9NdUgvLzdzaUFBQUE2Nmd6d091dHpNek1RRk5JZyt3Z005dE5pOUJOaGNsMURraUZ5WFVPU0lYU2RTQXp3T3N2U0lYSmRCZEloZEowRWsyRnlYVUZab2taNitoTmhjQjFIR2FKR2VqbDRQLy91eFlBQUFDSkdPZ1o1Ly8vaThOSWc4UWdXOE5NaTlsTWk4SkpnL24vZFJ4Tks5cEJEN2NDWmtPSkJCTkpnOElDWm9YQWRDOUovOGgxNmVzb1RDdlJRdyszQkJwbVFZa0RTWVBEQW1hRndIUUtTZi9JZEFWSi84bDE1RTJGeVhVRVprR0pHMDJGd0ErRmJ2Ly8vMG1EK2Y5MUMyYUpYRkgrUVkxQVVPdVFab2taNkYvZy8vKzdJZ0FBQU9sMS8vLy96RWlMd1ErM0VFaUR3QUptaGRKMTlFZ3J3VWpSK0VqL3lNUE16TXhBVTBpRDdDQkZNOUpNaThsSWhjbDBEa2lGMG5RSlRZWEFkUjFtUklrUjZCVGcvLys3RmdBQUFJa1k2RWptLy8rTHcwaUR4Q0JidzBrcnlFRVB0d0JtUW9rRUFVbUR3QUptaGNCMEJVai95blhwU0lYU2RSQm1SWWtSNk5qZi8vKzdJZ0FBQU92Q004RHJ4OHhJZyt3b2hjbDRJSVA1QW40Tmcva0RkUmFMQmVSY0FBRHJJWXNGM0Z3QUFJa04xbHdBQU9zVDZKL2YvLy9IQUJZQUFBRG8xT1gvLzRQSS8waUR4Q2pEek16TXpNek16TXpNek16TXpNeG1aZzhmaEFBQUFBQUFTSVBzRUV5SkZDUk1pVndrQ0UwejIweU5WQ1FZVEN2UVRROUMwMlZNaXh3bEVBQUFBRTA3MDNNV1prR0I0Z0R3VFkyYkFQRC8vMEhHQXdCTk85TjE4RXlMRkNSTWkxd2tDRWlEeEJERHpNek16TXpNek14bVpnOGZoQUFBQUFBQVNDdlJTWVA0Q0hJaTlzRUhkQlJta0lvQk9nUUtkU3hJLzhGSi84ajJ3UWQxN2syTHlFbkI2UU4xSDAyRndIUVBpZ0U2QkFwMURFai93VW4veUhYeFNEUEF3eHZBZzlqL3c1Qkp3ZWtDZERkSWl3RklPd1FLZFZ0SWkwRUlTRHRFQ2doMVRFaUxRUkJJTzBRS0VIVTlTSXRCR0VnN1JBb1lkUzVJZzhFZ1NmL0pkYzFKZytBZlRZdklTY0hwQTNTYlNJc0JTRHNFQ25VYlNJUEJDRW4veVhYdVNZUGdCK3VEU0lQQkNFaUR3UWhJZzhFSVNJc01FVWdQeUVnUHlVZzd3UnZBZzlqL3c4ek16TXpNek16TXpNek16TXpNekdabUR4K0VBQUFBQUFCTmhjQjBkVWdyMFV5THlrbTdBQUVCQVFFQkFZSDJ3UWQwSDRvQlFvb1VDVWovd1RyQ2RWZEovOGgwVG9UQWRFcEk5OEVIQUFBQWRlRktqUlFKWm9IaS93OW1nZnI0RDNmUlNJc0JTb3NVQ1VnN3duWEZTSVBCQ0VtRDZBaEp1di8rL3Y3Ky92NStkaEZJZy9EL1RBUFNTVFBDU1lYRGRNSHJERWd6d01OSUc4QklnOWovdzRUU2RDZUU5blFqU01IcUVJVFNkQnVFOW5RWFNNSHFFSVRTZEErRTluUUx3ZW9RaE5KMEJJVDJkWWhJTThERHpQOGwxQXNBQVA4bDFnc0FBUDhsNEFzQUFQOGwyZ3dBQU16TVFGVklnK3dnU0l2cVNJTjlRQUIxRDRNOWxVc0FBUDkwQnVpcXMvLy9rRWlEeENCZHc4eEFWVWlEN0NCSWkrcElpd0ZJaTlHTENPaG94Ly8va0VpRHhDQmR3OHhBVlVpRDdDQklpK3E1RFFBQUFPZ1p6Ly8va0VpRHhDQmR3OHpNek16TXpFQlZTSVBzSUVpTDZya01BQUFBNlBuTy8vK1FTSVBFSUYzRHpFQlZTSVBzSUVpTDZvTzlnQUFBQUFCMEM3a0lBQUFBNk5YTy8vK1FTSVBFSUYzRHpFQlZTSVBzSUVpTDZ1akR1UC8va0VpRHhDQmR3OHpNek16TXpNek1RRlZJZyt3Z1NJdnFTSXNCTThtQk9BVUFBTUFQbE1HTHdZdkJTSVBFSUYzRHpFQlZTSVBzSUVpTDZraUxEZDVMQUFEL0ZlZ0xBQUNRU0lQRUlGM0R6RUJWU0lQc0lFaUw2cmtNQUFBQTZGM08vLytRU0lQRUlGM0R6RUJWU0lQc0lFaUw2cmtOQUFBQTZFTE8vLytRU0lQRUlGM0R6RUJWU0lQc0lFaUw2b045WUFCMENEUEo2Q1RPLy8rUVNJUEVJRjNEekVCVlNJUHNJRWlMNnJrT0FBQUE2QW5PLy8rUVNJUEVJRjNEek14SWpRVnBEQUFBU0kwTm9sNEFBRWlKQlp0ZUFBRHA0c2YvL3dud0FBQUFBQUFNU2ZBQUFBQUFBQXNKOEFBQUFBQUFBQUFBQUFBQUFBQUpTZkFBQUFBQUFBako4QUFBQUFBQUI0bndBQUFBQUFBQjZnQUFBQUFBQUFOS0FBQUFBQUFBQkNvQUFBQUFBQUFGU2dBQUFBQUFBQWFLQUFBQUFBQUFDRW9BQUFBQUFBQUtLZ0FBQUFBQUFBdHFBQUFBQUFBQURLb0FBQUFBQUFBT1NnQUFBQUFBQUErS0FBQUFBQUFBQUdvUUFBQUFBQUFCYWhBQUFBQUFBQUpLRUFBQUFBQUFBdW9RQUFBQUFBQUQ2aEFBQUFBQUFBVHFFQUFBQUFBQUJhb1FBQUFBQUFBR2FoQUFBQUFBQUFlS0VBQUFBQUFBQ01vUUFBQUFBQUFKcWhBQUFBQUFBQXFxRUFBQUFBQUFDOG9RQUFBQUFBQU15aEFBQUFBQUFBOUtFQUFBQUFBQUFDb2dBQUFBQUFBQlNpQUFBQUFBQUFMS0lBQUFBQUFBQkNvZ0FBQUFBQUFGeWlBQUFBQUFBQWNxSUFBQUFBQUFDTW9nQUFBQUFBQUtLaUFBQUFBQUFBc0tJQUFBQUFBQUMrb2dBQUFBQUFBTXlpQUFBQUFBQUE1cUlBQUFBQUFBRDJvZ0FBQUFBQUFBeWpBQUFBQUFBQUpxTUFBQUFBQUFBeW93QUFBQUFBQUVTakFBQUFBQUFBV0tNQUFBQUFBQUJ3b3dBQUFBQUFBSWlqQUFBQUFBQUFsS01BQUFBQUFBQ2Vvd0FBQUFBQUFLcWpBQUFBQUFBQXZLTUFBQUFBQUFES293QUFBQUFBQU5xakFBQUFBQUFBNXFNQUFBQUFBQUQ4b3dBQUFBQUFBQWlrQUFBQUFBQUFHS1FBQUFBQUFBQXVwQUFBQUFBQUFBQUFBQUFBQUFBQUFxQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBTmd1QUlBQkFBQUFwRUVBZ0FFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBR0MvQUlBQkFBQUFBTUFBZ0FFQUFBRFFsUUNBQVFBQUFHUVZBSUFCQUFBQVFDMEFnQUVBQUFCaVlXUWdZV3hzYjJOaGRHbHZiZ0FBUTI5eVJYaHBkRkJ5YjJObGMzTUFBRzBBY3dCakFHOEFjZ0JsQUdVQUxnQmtBR3dBYkFBQUFBQUFBQUFBQUFBQUJRQUF3QXNBQUFBQUFBQUFBQUFBQUIwQUFNQUVBQUFBQUFBQUFBQUFBQUNXQUFEQUJBQUFBQUFBQUFBQUFBQUFqUUFBd0FnQUFBQUFBQUFBQUFBQUFJNEFBTUFJQUFBQUFBQUFBQUFBQUFDUEFBREFDQUFBQUFBQUFBQUFBQUFBa0FBQXdBZ0FBQUFBQUFBQUFBQUFBSkVBQU1BSUFBQUFBQUFBQUFBQUFBQ1NBQURBQ0FBQUFBQUFBQUFBQUFBQWt3QUF3QWdBQUFBQUFBQUFBQUFBQUxRQ0FNQUlBQUFBQUFBQUFBQUFBQUMxQWdEQUNBQUFBQUFBQUFBQUFBQUFBd0FBQUFrQUFBREFBQUFBREFBQUFLQ1dBSUFCQUFBQUxDNEFnQUVBQUFCQUxRQ0FBUUFBQUZWdWEyNXZkMjRnWlhoalpYQjBhVzl1QUFBQUFBQUFBTWlXQUlBQkFBQUFsQzRBZ0FFQUFBQmpjMjNnQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQUFBQUFBQUNBRmt4a0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFTQUJJQURvQWJRQnRBRG9BY3dCekFBQUFBQUFBQUFBQVpBQmtBR1FBWkFBc0FDQUFUUUJOQUUwQVRRQWdBR1FBWkFBc0FDQUFlUUI1QUhrQWVRQUFBRTBBVFFBdkFHUUFaQUF2QUhrQWVRQUFBQUFBVUFCTkFBQUFBQUJCQUUwQUFBQUFBQUFBQUFCRUFHVUFZd0JsQUcwQVlnQmxBSElBQUFBQUFBQUFBQUJPQUc4QWRnQmxBRzBBWWdCbEFISUFBQUFBQUFBQUFBQlBBR01BZEFCdkFHSUFaUUJ5QUFBQVV3QmxBSEFBZEFCbEFHMEFZZ0JsQUhJQUFBQUFBQUFBUVFCMUFHY0FkUUJ6QUhRQUFBQUFBRW9BZFFCc0FIa0FBQUFBQUFBQUFBQktBSFVBYmdCbEFBQUFBQUFBQUFBQVFRQndBSElBYVFCc0FBQUFBQUFBQUUwQVlRQnlBR01BYUFBQUFBQUFBQUJHQUdVQVlnQnlBSFVBWVFCeUFIa0FBQUFBQUFBQUFBQktBR0VBYmdCMUFHRUFjZ0I1QUFBQVJBQmxBR01BQUFCT0FHOEFkZ0FBQUU4QVl3QjBBQUFBVXdCbEFIQUFBQUJCQUhVQVp3QUFBRW9BZFFCc0FBQUFTZ0IxQUc0QUFBQk5BR0VBZVFBQUFFRUFjQUJ5QUFBQVRRQmhBSElBQUFCR0FHVUFZZ0FBQUVvQVlRQnVBQUFBVXdCaEFIUUFkUUJ5QUdRQVlRQjVBQUFBQUFBQUFBQUFSZ0J5QUdrQVpBQmhBSGtBQUFBQUFGUUFhQUIxQUhJQWN3QmtBR0VBZVFBQUFBQUFBQUFBQUZjQVpRQmtBRzRBWlFCekFHUUFZUUI1QUFBQUFBQUFBRlFBZFFCbEFITUFaQUJoQUhrQUFBQk5BRzhBYmdCa0FHRUFlUUFBQUFBQVV3QjFBRzRBWkFCaEFIa0FBQUFBQUZNQVlRQjBBQUFBUmdCeUFHa0FBQUJVQUdnQWRRQUFBRmNBWlFCa0FBQUFWQUIxQUdVQUFBQk5BRzhBYmdBQUFGTUFkUUJ1QUFBQVNFZzZiVzA2YzNNQUFBQUFBQUFBQUdSa1pHUXNJRTFOVFUwZ1pHUXNJSGw1ZVhrQUFBQUFBRTFOTDJSa0wzbDVBQUFBQUZCTkFBQkJUUUFBQUFBQUFFUmxZMlZ0WW1WeUFBQUFBQUFBQUFCT2IzWmxiV0psY2dBQUFBQUFBQUFBVDJOMGIySmxjZ0JUWlhCMFpXMWlaWElBQUFCQmRXZDFjM1FBQUVwMWJIa0FBQUFBU25WdVpRQUFBQUJCY0hKcGJBQUFBRTFoY21Ob0FBQUFBQUFBQUVabFluSjFZWEo1QUFBQUFBQUFBQUJLWVc1MVlYSjVBRVJsWXdCT2IzWUFUMk4wQUZObGNBQkJkV2NBU25Wc0FFcDFiZ0JOWVhrQVFYQnlBRTFoY2dCR1pXSUFTbUZ1QUZOaGRIVnlaR0Y1QUFBQUFFWnlhV1JoZVFBQUFBQUFBRlJvZFhKelpHRjVBQUFBQUFBQUFBQlhaV1J1WlhOa1lYa0FBQUFBQUFBQVZIVmxjMlJoZVFCTmIyNWtZWGtBQUZOMWJtUmhlUUFBVTJGMEFFWnlhUUJVYUhVQVYyVmtBRlIxWlFCTmIyNEFVM1Z1QUFBQUFBQnlBSFVBYmdCMEFHa0FiUUJsQUNBQVpRQnlBSElBYndCeUFDQUFBQUFBQUEwQUNnQUFBQUFBVkFCTUFFOEFVd0JUQUNBQVpRQnlBSElBYndCeUFBMEFDZ0FBQUFBQUFBQlRBRWtBVGdCSEFDQUFaUUJ5QUhJQWJ3QnlBQTBBQ2dBQUFBQUFBQUFBQUVRQVR3Qk5BRUVBU1FCT0FDQUFaUUJ5QUhJQWJ3QnlBQTBBQ2dBQUFBQUFBQUFBQUFBQUFBQlNBRFlBTUFBekFETUFEUUFLQUMwQUlBQkJBSFFBZEFCbEFHMEFjQUIwQUNBQWRBQnZBQ0FBZFFCekFHVUFJQUJOQUZNQVNRQk1BQ0FBWXdCdkFHUUFaUUFnQUdZQWNnQnZBRzBBSUFCMEFHZ0FhUUJ6QUNBQVlRQnpBSE1BWlFCdEFHSUFiQUI1QUNBQVpBQjFBSElBYVFCdUFHY0FJQUJ1QUdFQWRBQnBBSFlBWlFBZ0FHTUFid0JrQUdVQUlBQnBBRzRBYVFCMEFHa0FZUUJzQUdrQWVnQmhBSFFBYVFCdkFHNEFDZ0JVQUdnQWFRQnpBQ0FBYVFCdUFHUUFhUUJqQUdFQWRBQmxBSE1BSUFCaEFDQUFZZ0IxQUdjQUlBQnBBRzRBSUFCNUFHOEFkUUJ5QUNBQVlRQndBSEFBYkFCcEFHTUFZUUIwQUdrQWJ3QnVBQzRBSUFCSkFIUUFJQUJwQUhNQUlBQnRBRzhBY3dCMEFDQUFiQUJwQUdzQVpRQnNBSGtBSUFCMEFHZ0FaUUFnQUhJQVpRQnpBSFVBYkFCMEFDQUFid0JtQUNBQVl3QmhBR3dBYkFCcEFHNEFad0FnQUdFQWJnQWdBRTBBVXdCSkFFd0FMUUJqQUc4QWJRQndBR2tBYkFCbEFHUUFJQUFvQUM4QVl3QnNBSElBS1FBZ0FHWUFkUUJ1QUdNQWRBQnBBRzhBYmdBZ0FHWUFjZ0J2QUcwQUlBQmhBQ0FBYmdCaEFIUUFhUUIyQUdVQUlBQmpBRzhBYmdCekFIUUFjZ0IxQUdNQWRBQnZBSElBSUFCdkFISUFJQUJtQUhJQWJ3QnRBQ0FBUkFCc0FHd0FUUUJoQUdrQWJnQXVBQTBBQ2dBQUFBQUFVZ0EyQURBQU13QXlBQTBBQ2dBdEFDQUFiZ0J2QUhRQUlBQmxBRzRBYndCMUFHY0FhQUFnQUhNQWNBQmhBR01BWlFBZ0FHWUFid0J5QUNBQWJBQnZBR01BWVFCc0FHVUFJQUJwQUc0QVpnQnZBSElBYlFCaEFIUUFhUUJ2QUc0QURRQUtBQUFBQUFBQUFBQUFBQUFBQUZJQU5nQXdBRE1BTVFBTkFBb0FMUUFnQUVFQWRBQjBBR1VBYlFCd0FIUUFJQUIwQUc4QUlBQnBBRzRBYVFCMEFHa0FZUUJzQUdrQWVnQmxBQ0FBZEFCb0FHVUFJQUJEQUZJQVZBQWdBRzBBYndCeUFHVUFJQUIwQUdnQVlRQnVBQ0FBYndCdUFHTUFaUUF1QUFvQVZBQm9BR2tBY3dBZ0FHa0FiZ0JrQUdrQVl3QmhBSFFBWlFCekFDQUFZUUFnQUdJQWRRQm5BQ0FBYVFCdUFDQUFlUUJ2QUhVQWNnQWdBR0VBY0FCd0FHd0FhUUJqQUdFQWRBQnBBRzhBYmdBdUFBMEFDZ0FBQUFBQVVnQTJBREFBTXdBd0FBMEFDZ0F0QUNBQVF3QlNBRlFBSUFCdUFHOEFkQUFnQUdrQWJnQnBBSFFBYVFCaEFHd0FhUUI2QUdVQVpBQU5BQW9BQUFBQUFBQUFBQUFBQUFBQVVnQTJBREFBTWdBNEFBMEFDZ0F0QUNBQWRRQnVBR0VBWWdCc0FHVUFJQUIwQUc4QUlBQnBBRzRBYVFCMEFHa0FZUUJzQUdrQWVnQmxBQ0FBYUFCbEFHRUFjQUFOQUFvQUFBQUFBQUFBQUFCU0FEWUFNQUF5QURjQURRQUtBQzBBSUFCdUFHOEFkQUFnQUdVQWJnQnZBSFVBWndCb0FDQUFjd0J3QUdFQVl3QmxBQ0FBWmdCdkFISUFJQUJzQUc4QWR3QnBBRzhBSUFCcEFHNEFhUUIwQUdrQVlRQnNBR2tBZWdCaEFIUUFhUUJ2QUc0QURRQUtBQUFBQUFBQUFBQUFVZ0EyQURBQU1nQTJBQTBBQ2dBdEFDQUFiZ0J2QUhRQUlBQmxBRzRBYndCMUFHY0FhQUFnQUhNQWNBQmhBR01BWlFBZ0FHWUFid0J5QUNBQWN3QjBBR1FBYVFCdkFDQUFhUUJ1QUdrQWRBQnBBR0VBYkFCcEFIb0FZUUIwQUdrQWJ3QnVBQTBBQ2dBQUFBQUFBQUFBQUZJQU5nQXdBRElBTlFBTkFBb0FMUUFnQUhBQWRRQnlBR1VBSUFCMkFHa0FjZ0IwQUhVQVlRQnNBQ0FBWmdCMUFHNEFZd0IwQUdrQWJ3QnVBQ0FBWXdCaEFHd0FiQUFOQUFvQUFBQUFBQUFBVWdBMkFEQUFNZ0EwQUEwQUNnQXRBQ0FBYmdCdkFIUUFJQUJsQUc0QWJ3QjFBR2NBYUFBZ0FITUFjQUJoQUdNQVpRQWdBR1lBYndCeUFDQUFYd0J2QUc0QVpRQjRBR2tBZEFBdkFHRUFkQUJsQUhnQWFRQjBBQ0FBZEFCaEFHSUFiQUJsQUEwQUNnQUFBQUFBQUFBQUFGSUFOZ0F3QURFQU9RQU5BQW9BTFFBZ0FIVUFiZ0JoQUdJQWJBQmxBQ0FBZEFCdkFDQUFid0J3QUdVQWJnQWdBR01BYndCdUFITUFid0JzQUdVQUlBQmtBR1VBZGdCcEFHTUFaUUFOQUFvQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUZJQU5nQXdBREVBT0FBTkFBb0FMUUFnQUhVQWJnQmxBSGdBY0FCbEFHTUFkQUJsQUdRQUlBQm9BR1VBWVFCd0FDQUFaUUJ5QUhJQWJ3QnlBQTBBQ2dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBVWdBMkFEQUFNUUEzQUEwQUNnQXRBQ0FBZFFCdUFHVUFlQUJ3QUdVQVl3QjBBR1VBWkFBZ0FHMEFkUUJzQUhRQWFRQjBBR2dBY2dCbEFHRUFaQUFnQUd3QWJ3QmpBR3NBSUFCbEFISUFjZ0J2QUhJQURRQUtBQUFBQUFBQUFBQUFVZ0EyQURBQU1RQTJBQTBBQ2dBdEFDQUFiZ0J2QUhRQUlBQmxBRzRBYndCMUFHY0FhQUFnQUhNQWNBQmhBR01BWlFBZ0FHWUFid0J5QUNBQWRBQm9BSElBWlFCaEFHUUFJQUJrQUdFQWRBQmhBQTBBQ2dBQUFBQUFBQUFBQUFBQVVnQTJBREFBTVFBd0FBMEFDZ0F0QUNBQVlRQmlBRzhBY2dCMEFDZ0FLUUFnQUdnQVlRQnpBQ0FBWWdCbEFHVUFiZ0FnQUdNQVlRQnNBR3dBWlFCa0FBMEFDZ0FBQUFBQUFBQUFBQUFBQUFCU0FEWUFNQUF3QURrQURRQUtBQzBBSUFCdUFHOEFkQUFnQUdVQWJnQnZBSFVBWndCb0FDQUFjd0J3QUdFQVl3QmxBQ0FBWmdCdkFISUFJQUJsQUc0QWRnQnBBSElBYndCdUFHMEFaUUJ1QUhRQURRQUtBQUFBQUFBQUFBQUFBQUJTQURZQU1BQXdBRGdBRFFBS0FDMEFJQUJ1QUc4QWRBQWdBR1VBYmdCdkFIVUFad0JvQUNBQWN3QndBR0VBWXdCbEFDQUFaZ0J2QUhJQUlBQmhBSElBWndCMUFHMEFaUUJ1QUhRQWN3QU5BQW9BQUFBQUFBQUFBQUFBQUFBQUFBQlNBRFlBTUFBd0FESUFEUUFLQUMwQUlBQm1BR3dBYndCaEFIUUFhUUJ1QUdjQUlBQndBRzhBYVFCdUFIUUFJQUJ6QUhVQWNBQndBRzhBY2dCMEFDQUFiZ0J2QUhRQUlBQnNBRzhBWVFCa0FHVUFaQUFOQUFvQUFBQUFBQUFBQUFBQ0FBQUFBQUFBQUZDQUFJQUJBQUFBQ0FBQUFBQUFBQUR3ZndDQUFRQUFBQWtBQUFBQUFBQUFrSDhBZ0FFQUFBQUtBQUFBQUFBQUFFQi9BSUFCQUFBQUVBQUFBQUFBQUFEZ2ZnQ0FBUUFBQUJFQUFBQUFBQUFBZ0g0QWdBRUFBQUFTQUFBQUFBQUFBREIrQUlBQkFBQUFFd0FBQUFBQUFBRFFmUUNBQVFBQUFCZ0FBQUFBQUFBQVlIMEFnQUVBQUFBWkFBQUFBQUFBQUJCOUFJQUJBQUFBR2dBQUFBQUFBQUNnZkFDQUFRQUFBQnNBQUFBQUFBQUFNSHdBZ0FFQUFBQWNBQUFBQUFBQUFPQjdBSUFCQUFBQUhnQUFBQUFBQUFDWWV3Q0FBUUFBQUI4QUFBQUFBQUFBMEhvQWdBRUFBQUFnQUFBQUFBQUFBR0I2QUlBQkFBQUFJUUFBQUFBQUFBQndlQUNBQVFBQUFIZ0FBQUFBQUFBQVNIZ0FnQUVBQUFCNUFBQUFBQUFBQUNoNEFJQUJBQUFBZWdBQUFBQUFBQUFJZUFDQUFRQUFBUHdBQUFBQUFBQUFBSGdBZ0FFQUFBRC9BQUFBQUFBQUFPQjNBSUFCQUFBQVRRQnBBR01BY2dCdkFITUFid0JtQUhRQUlBQldBR2tBY3dCMUFHRUFiQUFnQUVNQUt3QXJBQ0FBVWdCMUFHNEFkQUJwQUcwQVpRQWdBRXdBYVFCaUFISUFZUUJ5QUhrQUFBQUFBQW9BQ2dBQUFBQUFBQUFBQUM0QUxnQXVBQUFBUEFCd0FISUFid0JuQUhJQVlRQnRBQ0FBYmdCaEFHMEFaUUFnQUhVQWJnQnJBRzRBYndCM0FHNEFQZ0FBQUFBQVVnQjFBRzRBZEFCcEFHMEFaUUFnQUVVQWNnQnlBRzhBY2dBaEFBb0FDZ0JRQUhJQWJ3Qm5BSElBWVFCdEFEb0FJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFvQUNnQUtBQW9BQ2dBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBU0FBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQ0VBSVFBaEFDRUFJUUFoQUNFQUlRQWhBQ0VBQkFBRUFBUUFCQUFFQUFRQUJBQWdRQ0JBSUVBZ1FDQkFJRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUJBQUVBQVFBQkFBRUFBUUFJSUFnZ0NDQUlJQWdnQ0NBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBUUFCQUFFQUFRQUNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBYUFBb0FDZ0FLQUFvQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUVnQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFoQUNFQUlRQWhBQ0VBSVFBaEFDRUFJUUFoQUFRQUJBQUVBQVFBQkFBRUFBUUFJRUJnUUdCQVlFQmdRR0JBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFUUFCQUFFQUFRQUJBQUVBQ0NBWUlCZ2dHQ0FZSUJnZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkVBQVFBQkFBRUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQklBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVVBQlFBRUFBUUFCQUFFQUFRQUJRQUVBQVFBQkFBRUFBUUFCQUFBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUkFBQVFFQkFRRUJBUUVCQVFFQkFRRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VRQUFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VCQVFBQUFBQUFBQUFBQUFBQUFJQ0Jnb09FaFlhSGlJbUtpNHlOam8rUWtaS1RsSldXbDVpWm1wdWNuWjZmb0tHaW82U2xwcWVvcWFxcnJLMnVyN0N4c3JPMHRiYTN1TG02dTd5OXZyL0F3Y0xEeE1YR3g4akp5c3ZNemM3UDBOSFMwOVRWMXRmWTJkcmIzTjNlMytEaDR1UGs1ZWJuNk9ucTYrenQ3dS93OGZMejlQWDI5L2o1K3Z2OC9mNy9BQUVDQXdRRkJnY0lDUW9MREEwT0R4QVJFaE1VRlJZWEdCa2FHeHdkSGg4Z0lTSWpKQ1VtSnlncEtpc3NMUzR2TURFeU16UTFOamM0T1RvN1BEMCtQMEJoWW1Oa1pXWm5hR2xxYTJ4dGJtOXdjWEp6ZEhWMmQzaDVlbHRjWFY1ZllHRmlZMlJsWm1kb2FXcHJiRzF1YjNCeGNuTjBkWFozZUhsNmUzeDlmbitBZ1lLRGhJV0doNGlKaW91TWpZNlBrSkdTazVTVmxwZVltWnFibkoyZW42Q2hvcU9rcGFhbnFLbXFxNnl0cnErd3NiS3p0TFcydDdpNXVydTh2YjYvd01IQ3c4VEZ4c2ZJeWNyTHpNM096OURSMHRQVTFkYlgyTm5hMjl6ZDN0L2c0ZUxqNU9YbTUranA2dXZzN2U3djhQSHk4L1QxOXZmNCtmcjcvUDMrLzRDQmdvT0VoWWFIaUltS2k0eU5qbytRa1pLVGxKV1dsNWlabXB1Y25aNmZvS0dpbzZTbHBxZW9xYXFycksydXI3Q3hzck8wdGJhM3VMbTZ1N3k5dnIvQXdjTER4TVhHeDhqSnlzdk16YzdQME5IUzA5VFYxdGZZMmRyYjNOM2UzK0RoNHVQazVlYm42T25xNit6dDd1L3c4Zkx6OVBYMjkvajUrdnY4L2Y3L0FBRUNBd1FGQmdjSUNRb0xEQTBPRHhBUkVoTVVGUllYR0JrYUd4d2RIaDhnSVNJakpDVW1KeWdwS2lzc0xTNHZNREV5TXpRMU5qYzRPVG83UEQwK1AwQkJRa05FUlVaSFNFbEtTMHhOVGs5UVVWSlRWRlZXVjFoWldsdGNYVjVmWUVGQ1EwUkZSa2RJU1VwTFRFMU9UMUJSVWxOVVZWWlhXRmxhZTN4OWZuK0FnWUtEaElXR2g0aUppb3VNalk2UGtKR1NrNVNWbHBlWW1acWJuSjJlbjZDaG9xT2twYWFucUttcXE2eXRycSt3c2JLenRMVzJ0N2k1dXJ1OHZiNi93TUhDdzhURnhzZkl5Y3JMek0zT3o5RFIwdFBVMWRiWDJObmEyOXpkM3QvZzRlTGo1T1htNStqcDZ1dnM3ZTd2OFBIeTgvVDE5dmY0K2ZyNy9QMysvMGRsZEZCeWIyTmxjM05YYVc1a2IzZFRkR0YwYVc5dUFFZGxkRlZ6WlhKUFltcGxZM1JKYm1admNtMWhkR2x2YmxjQUFBQUFBQUFBUjJWMFRHRnpkRUZqZEdsMlpWQnZjSFZ3QUFBQUFBQUFSMlYwUVdOMGFYWmxWMmx1Wkc5M0FFMWxjM05oWjJWQ2IzaFhBQUFBQUFCVkFGTUFSUUJTQURNQU1nQXVBRVFBVEFCTUFBQUFBQUFnUTI5dGNHeGxkR1VnVDJKcVpXTjBJRXh2WTJGMGIzSW5BQUFBQUFBQUFDQkRiR0Z6Y3lCSWFXVnlZWEpqYUhrZ1JHVnpZM0pwY0hSdmNpY0FBQUFBSUVKaGMyVWdRMnhoYzNNZ1FYSnlZWGtuQUFBQUFBQUFJRUpoYzJVZ1EyeGhjM01nUkdWelkzSnBjSFJ2Y2lCaGRDQW9BQUFBQUFBZ1ZIbHdaU0JFWlhOamNtbHdkRzl5SndBQUFBQUFBQUJnYkc5allXd2djM1JoZEdsaklIUm9jbVZoWkNCbmRXRnlaQ2NBQUFBQUFHQnRZVzVoWjJWa0lIWmxZM1J2Y2lCamIzQjVJR052Ym5OMGNuVmpkRzl5SUdsMFpYSmhkRzl5SndBQUFBQUFBR0IyWldOMGIzSWdkbUpoYzJVZ1kyOXdlU0JqYjI1emRISjFZM1J2Y2lCcGRHVnlZWFJ2Y2ljQUFBQUFBQUFBQUdCMlpXTjBiM0lnWTI5d2VTQmpiMjV6ZEhKMVkzUnZjaUJwZEdWeVlYUnZjaWNBQUFBQUFBQmdaSGx1WVcxcFl5QmhkR1Y0YVhRZ1pHVnpkSEoxWTNSdmNpQm1iM0lnSndBQUFBQUFBQUFBWUdSNWJtRnRhV01nYVc1cGRHbGhiR2w2WlhJZ1ptOXlJQ2NBQUFBQUFBQmdaV2dnZG1WamRHOXlJSFppWVhObElHTnZjSGtnWTI5dWMzUnlkV04wYjNJZ2FYUmxjbUYwYjNJbkFBQUFBQUJnWldnZ2RtVmpkRzl5SUdOdmNIa2dZMjl1YzNSeWRXTjBiM0lnYVhSbGNtRjBiM0luQUFBQVlHMWhibUZuWldRZ2RtVmpkRzl5SUdSbGMzUnlkV04wYjNJZ2FYUmxjbUYwYjNJbkFBQUFBR0J0WVc1aFoyVmtJSFpsWTNSdmNpQmpiMjV6ZEhKMVkzUnZjaUJwZEdWeVlYUnZjaWNBQUFCZ2NHeGhZMlZ0Wlc1MElHUmxiR1YwWlZ0ZElHTnNiM04xY21VbkFBQUFBR0J3YkdGalpXMWxiblFnWkdWc1pYUmxJR05zYjNOMWNtVW5BQUFBQUFBQVlHOXRibWtnWTJGc2JITnBaeWNBQUNCa1pXeGxkR1ZiWFFBQUFDQnVaWGRiWFFBQUFBQUFBR0JzYjJOaGJDQjJablJoWW14bElHTnZibk4wY25WamRHOXlJR05zYjNOMWNtVW5BQUFBQUFCZ2JHOWpZV3dnZG1aMFlXSnNaU2NBWUZKVVZFa0FBQUJnUlVnQUFBQUFBR0IxWkhRZ2NtVjBkWEp1YVc1bkp3QmdZMjl3ZVNCamIyNXpkSEoxWTNSdmNpQmpiRzl6ZFhKbEp3QUFBQUFBQUdCbGFDQjJaV04wYjNJZ2RtSmhjMlVnWTI5dWMzUnlkV04wYjNJZ2FYUmxjbUYwYjNJbkFBQmdaV2dnZG1WamRHOXlJR1JsYzNSeWRXTjBiM0lnYVhSbGNtRjBiM0luQUdCbGFDQjJaV04wYjNJZ1kyOXVjM1J5ZFdOMGIzSWdhWFJsY21GMGIzSW5BQUFBQUFBQUFBQmdkbWx5ZEhWaGJDQmthWE53YkdGalpXMWxiblFnYldGd0p3QUFBQUFBQUdCMlpXTjBiM0lnZG1KaGMyVWdZMjl1YzNSeWRXTjBiM0lnYVhSbGNtRjBiM0luQUFBQUFBQmdkbVZqZEc5eUlHUmxjM1J5ZFdOMGIzSWdhWFJsY21GMGIzSW5BQUFBQUdCMlpXTjBiM0lnWTI5dWMzUnlkV04wYjNJZ2FYUmxjbUYwYjNJbkFBQUFZSE5qWVd4aGNpQmtaV3hsZEdsdVp5QmtaWE4wY25WamRHOXlKd0FBQUFCZ1pHVm1ZWFZzZENCamIyNXpkSEoxWTNSdmNpQmpiRzl6ZFhKbEp3QUFBR0IyWldOMGIzSWdaR1ZzWlhScGJtY2daR1Z6ZEhKMVkzUnZjaWNBQUFBQVlIWmlZWE5sSUdSbGMzUnlkV04wYjNJbkFBQUFBQUFBWUhOMGNtbHVaeWNBQUFBQUFBQUFBR0JzYjJOaGJDQnpkR0YwYVdNZ1ozVmhjbVFuQUFBQUFHQjBlWEJsYjJZbkFBQUFBQUFBQUFCZ2RtTmhiR3duQUdCMlluUmhZbXhsSndBQUFBQUFBQUJnZG1aMFlXSnNaU2NBQUFCZVBRQUFmRDBBQUNZOUFBQThQRDBBUGo0OUFDVTlBQUF2UFFBQUxUMEFBQ3M5QUFBcVBRQUFmSHdBQUNZbUFBQjhBQUFBWGdBQUFINEFBQUFvS1FBQUxBQUFBRDQ5QUFBK0FBQUFQRDBBQUR3QUFBQWxBQUFBTHdBQUFDMCtLZ0FtQUFBQUt3QUFBQzBBQUFBdExRQUFLeXNBQUNvQUFBQXRQZ0FBYjNCbGNtRjBiM0lBQUFBQVcxMEFBQ0U5QUFBOVBRQUFJUUFBQUR3OEFBQStQZ0FBUFFBQUFDQmtaV3hsZEdVQUlHNWxkd0FBQUFCZlgzVnVZV3hwWjI1bFpBQUFBQUFBWDE5eVpYTjBjbWxqZEFBQUFBQUFBRjlmY0hSeU5qUUFYMTlsWVdKcEFBQmZYMk5zY21OaGJHd0FBQUFBQUFBQVgxOW1ZWE4wWTJGc2JBQUFBQUFBQUY5ZmRHaHBjMk5oYkd3QUFBQUFBQUJmWDNOMFpHTmhiR3dBQUFBQUFBQUFYMTl3WVhOallXd0FBQUFBQUFBQUFGOWZZMlJsWTJ3QVgxOWlZWE5sWkNnQUFBQUFBQUFBQUFBQUFBQUFBQUFBaUpFQWdBRUFBQUNBa1FDQUFRQUFBSENSQUlBQkFBQUFZSkVBZ0FFQUFBQlFrUUNBQVFBQUFFQ1JBSUFCQUFBQU1KRUFnQUVBQUFBb2tRQ0FBUUFBQUNDUkFJQUJBQUFBRUpFQWdBRUFBQUFBa1FDQUFRQUFBUDJRQUlBQkFBQUErSkFBZ0FFQUFBRHdrQUNBQVFBQUFPeVFBSUFCQUFBQTZKQUFnQUVBQUFEa2tBQ0FBUUFBQU9DUUFJQUJBQUFBM0pBQWdBRUFBQURZa0FDQUFRQUFBTlNRQUlBQkFBQUF5SkFBZ0FFQUFBREVrQUNBQVFBQUFNQ1FBSUFCQUFBQXZKQUFnQUVBQUFDNGtBQ0FBUUFBQUxTUUFJQUJBQUFBc0pBQWdBRUFBQUNza0FDQUFRQUFBS2lRQUlBQkFBQUFwSkFBZ0FFQUFBQ2drQUNBQVFBQUFKeVFBSUFCQUFBQW1KQUFnQUVBQUFDVWtBQ0FBUUFBQUpDUUFJQUJBQUFBakpBQWdBRUFBQUNJa0FDQUFRQUFBSVNRQUlBQkFBQUFnSkFBZ0FFQUFBQjhrQUNBQVFBQUFIaVFBSUFCQUFBQWRKQUFnQUVBQUFCd2tBQ0FBUUFBQUd5UUFJQUJBQUFBYUpBQWdBRUFBQUJra0FDQUFRQUFBR0NRQUlBQkFBQUFYSkFBZ0FFQUFBQllrQUNBQVFBQUFGU1FBSUFCQUFBQVVKQUFnQUVBQUFCTWtBQ0FBUUFBQUVDUUFJQUJBQUFBTUpBQWdBRUFBQUFva0FDQUFRQUFBQmlRQUlBQkFBQUFBSkFBZ0FFQUFBRHdqd0NBQVFBQUFOaVBBSUFCQUFBQXVJOEFnQUVBQUFDWWp3Q0FBUUFBQUhpUEFJQUJBQUFBV0k4QWdBRUFBQUE0andDQUFRQUFBQkNQQUlBQkFBQUE4STRBZ0FFQUFBRElqZ0NBQVFBQUFLaU9BSUFCQUFBQWdJNEFnQUVBQUFCZ2pnQ0FBUUFBQUZDT0FJQUJBQUFBU0k0QWdBRUFBQUJBamdDQUFRQUFBRENPQUlBQkFBQUFDSTRBZ0FFQUFBRDhqUUNBQVFBQUFQQ05BSUFCQUFBQTRJMEFnQUVBQUFEQWpRQ0FBUUFBQUtDTkFJQUJBQUFBZUkwQWdBRUFBQUJRalFDQUFRQUFBQ2lOQUlBQkFBQUErSXdBZ0FFQUFBRFlqQUNBQVFBQUFMQ01BSUFCQUFBQWlJd0FnQUVBQUFCWWpBQ0FBUUFBQUNpTUFJQUJBQUFBQ0l3QWdBRUFBQUQ5a0FDQUFRQUFBUENMQUlBQkFBQUEwSXNBZ0FFQUFBQzRpd0NBQVFBQUFKaUxBSUFCQUFBQWVJc0FnQUVBQUFBQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTERBME9EeEFSRWhNVUZSWVhHQmthR3h3ZEhoOGdJU0lqSkNVbUp5Z3BLaXNzTFM0dk1ERXlNelExTmpjNE9UbzdQRDArUDBCQlFrTkVSVVpIU0VsS1MweE5UazlRVVZKVFZGVldWMWhaV2x0Y1hWNWZZR0ZpWTJSbFptZG9hV3ByYkcxdWIzQnhjbk4wZFhaM2VIbDZlM3g5Zm44QVUyVkVaV0oxWjFCeWFYWnBiR1ZuWlFBQUFBQUFBQUFBQUFBQUFBQUFBQUF2WXlCa1pXSjFaeTVpWVhRZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQUFBQUFBQUFBQUFZenBjZDJsdVpHOTNjMXh6ZVhOMFpXMHpNbHhqYldRdVpYaGxBRzl3Wlc0QUFBQUFBQUFBQUFFQUFBQUFBQUFBQUFBQUFCQ3dBQUQ0bFFBQTBKVUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUFBQUFRbGdBQUFBQUFBQUFBQUFBb2xnQUFVSllBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFRc0FBQUFRQUFBQUFBQUFELy8vLy9BQUFBQUVBQUFBRDRsUUFBQUFBQUFBQUFBQUFBQUFBQU9MQUFBQUFBQUFBQUFBQUEvLy8vL3dBQUFBQkFBQUFBZUpZQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFBQUpDV0FBQUFBQUFBQUFBQUFGQ1dBQUFBQUFBQUFBQUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQTRzQUFBZUpZQUFLQ1dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFBQUFBQUFBQUFBQUFBdUxBQUFQQ1dBQURJbGdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVFBQUFBaVhBQUFBQUFBQUFBQUFBQmlYQUFBQUFBQUFBQUFBQUFBQUFBQzRzQUFBQUFBQUFBQUFBQUQvLy8vL0FBQUFBRUFBQUFEd2xnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBRVFvQ0FBb3lCakJvRmdBQUFRQUFBQUVTQUFBakVnQUFzR1FBQUFBQUFBQUpGUWdBRlhRS0FCVmtDUUFWTkFnQUZWSVJ3R2dXQUFBQkFBQUE0UklBQUtzVEFBRFdaQUFBcnhNQUFBRU1BZ0FNQVJFQUFTQU1BQ0JrRVFBZ1ZCQUFJRFFPQUNCeUhQQWE0QmpRRnNBVWNBRUdBZ0FHTWdKUUVRb0VBQW8wQmdBS01nWndhQllBQUFJQUFBRDZHQUFBQkJrQUFQUmtBQUFBQUFBQUdSa0FBRUFaQUFBVVpRQUFBQUFBQUJFVEJBQVROQWNBRXpJUGNHZ1dBQUFDQUFBQW9Cb0FBTTBhQUFEMFpBQUFBQUFBQU44YUFBQVdHd0FBRkdVQUFBQUFBQUFCR1FvQUdYUUpBQmxrQ0FBWlZBY0FHVFFHQUJreUZjQUJCZ0lBQmpJQ01BRVBCQUFQTkFZQUR6SUxjQkVjQ2dBY1pBOEFIRFFPQUJ4eUdQQVc0QlRRRXNBUWNHZ1dBQUFCQUFBQXd4OEFBTkVnQUFBdlpRQUFBQUFBQUFFY0N3QWNkQmdBSEZRWEFCdzBGZ0FjQVJJQUZlQVQwQkhBQUFBQkR3WUFEMlFIQUE4MEJnQVBNZ3R3QVIwTUFCMTBDd0FkWkFvQUhWUUpBQjAwQ0FBZE1obmdGOUFWd0FFUEJnQVBaQXNBRHpRS0FBOVNDM0FCR1FvQUdYUU5BQmxrREFBWlZBc0FHVFFLQUJseUZjQUJDZ1FBQ2pRSUFBb3lCbkFCRkFZQUZHUUhBQlEwQmdBVU1oQndFUmtLQUJsMENnQVpaQWtBR1RRSUFCa3lGZUFUMEJIQWFCWUFBQUVBQUFBK0x3QUFCREFBQUZObEFBQUFBQUFBQVJJR0FCSjBFQUFTTkE4QUVySUxVQUFBQUFBQkJ3SUFCd0diQUFFQUFBQUJBQUFBQVFBQUFBa0VBUUFFUWdBQWFCWUFBQUVBQUFEWE1nQUFDak1BQUhCbEFBQUtNd0FBQVJVSUFCVjBDQUFWWkFjQUZUUUdBQlV5RWNBQkZBZ0FGR1FJQUJSVUJ3QVVOQVlBRkRJUWNCRVZDQUFWZEFnQUZXUUhBQlUwQmdBVk1oSFFhQllBQUFFQUFBQzdOQUFBK1RRQUFKSmxBQUFBQUFBQUFRb0VBQW8wQmdBS01nWndFUVlDQUFZeUFqQm9GZ0FBQVFBQUFLYzRBQUM5T0FBQXNHVUFBQUFBQUFBWkx3a0FIblMxQUI1a3RBQWVOTE1BSGdHd0FCQlFBQUN3V0FBQWNBVUFBQkVLQkFBS05BY0FDaklHY0dnV0FBQUJBQUFBbWpzQUFQRTdBQURMWlFBQUFBQUFBQUVHQWdBR2NnSXdHUjhJQUJBMEVBQVFjZ3pRQ3NBSWNBZGdCbEN3V0FBQU9BQUFBQkVaQ2dBWnhBc0FHWFFLQUJsa0NRQVpOQWdBR1ZJVjBHZ1dBQUFCQUFBQXBFQUFBRkJCQUFETFpRQUFBQUFBQUFrRUFRQUVRZ0FBYUJZQUFBRUFBQUM1UXdBQXZVTUFBQUVBQUFDOVF3QUFFUmNLQUJka0RnQVhOQTBBRjFJVDhCSGdEOUFOd0F0d2FCWUFBQUVBQUFCUlJRQUEzMFVBQU9abEFBQUFBQUFBR1M0SkFCMWt4QUFkTk1NQUhRRytBQTdBREhBTFVBQUFzRmdBQU9BRkFBQUJGQWdBRkdRS0FCUlVDUUFVTkFnQUZGSVFjQUVFQVFBRVlnQUFHUzBMQUJ0a1VRQWJWRkFBR3pSUEFCc0JTZ0FVMEJMQUVIQUFBTEJZQUFCQUFnQUFBUVFCQUFSQ0FBQUFBQUFBQVFBQUFBRVBCZ0FQWkFzQUR6UUtBQTl5QzNBUkJnSUFCbElDTUdnV0FBQUJBQUFBUEUwQUFJUk5BQUFFWmdBQUFBQUFBQUFBQUFBQkFBQUFBQUFBQUFFQUFBQUJEZ0lBRGpJS01BRUtBZ0FLTWdZd0FBQUFBQUVBQUFBWkxRMUZIM1FTQUJ0a0VRQVhOQkFBRTBNT2tncndDT0FHMEFUQUFsQUFBTEJZQUFCSUFBQUFBUThHQUE5a0VRQVBOQkFBRDlJTGNCa3REVFVmZEJBQUcyUVBBQmMwRGdBVE13NXlDdkFJNEFiUUJNQUNVQUFBc0ZnQUFEQUFBQUFCRHdZQUQyUVBBQTgwRGdBUHNndHdHUjRJQUErU0MrQUowQWZBQlhBRVlBTlFBakN3V0FBQVNBQUFBQUVFQVFBRUVnQUFBUUFBQUFBQUFBQUJBQUFBR1JNQkFBVENBQUN3V0FBQVVBQUFBQUFBQUFBQUFBQUFWQlVBQUFBQUFBQ29uQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlBQUFEQW5BQUE2SndBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFRc0FBQUFBQUFBUC8vLy84QUFBQUFHQUFBQUtBVkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU9MQUFBQUFBQUFELy8vLy9BQUFBQUJnQUFBQm9MZ0FBQUFBQUFBQUFBQUNBblFBQUFBQUFBQUFBQUFDaW53QUFJSEFBQUdDZEFBQUFBQUFBQUFBQUFQU2ZBQUFBY0FBQWFKOEFBQUFBQUFBQUFBQUFFcUFBQUFoeUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEY253QUFBQUFBQU1TZkFBQUFBQUFBc0o4QUFBQUFBQUFBQUFBQUFBQUFBSlNmQUFBQUFBQUFqSjhBQUFBQUFBQjRud0FBQUFBQUFCNmdBQUFBQUFBQU5LQUFBQUFBQUFCQ29BQUFBQUFBQUZTZ0FBQUFBQUFBYUtBQUFBQUFBQUNFb0FBQUFBQUFBS0tnQUFBQUFBQUF0cUFBQUFBQUFBREtvQUFBQUFBQUFPU2dBQUFBQUFBQStLQUFBQUFBQUFBR29RQUFBQUFBQUJhaEFBQUFBQUFBSktFQUFBQUFBQUF1b1FBQUFBQUFBRDZoQUFBQUFBQUFUcUVBQUFBQUFBQmFvUUFBQUFBQUFHYWhBQUFBQUFBQWVLRUFBQUFBQUFDTW9RQUFBQUFBQUpxaEFBQUFBQUFBcXFFQUFBQUFBQUM4b1FBQUFBQUFBTXloQUFBQUFBQUE5S0VBQUFBQUFBQUNvZ0FBQUFBQUFCU2lBQUFBQUFBQUxLSUFBQUFBQUFCQ29nQUFBQUFBQUZ5aUFBQUFBQUFBY3FJQUFBQUFBQUNNb2dBQUFBQUFBS0tpQUFBQUFBQUFzS0lBQUFBQUFBQytvZ0FBQUFBQUFNeWlBQUFBQUFBQTVxSUFBQUFBQUFEMm9nQUFBQUFBQUF5akFBQUFBQUFBSnFNQUFBQUFBQUF5b3dBQUFBQUFBRVNqQUFBQUFBQUFXS01BQUFBQUFBQndvd0FBQUFBQUFJaWpBQUFBQUFBQWxLTUFBQUFBQUFDZW93QUFBQUFBQUtxakFBQUFBQUFBdktNQUFBQUFBQURLb3dBQUFBQUFBTnFqQUFBQUFBQUE1cU1BQUFBQUFBRDhvd0FBQUFBQUFBaWtBQUFBQUFBQUdLUUFBQUFBQUFBdXBBQUFBQUFBQUFBQUFBQUFBQUFBQXFBQUFBQUFBQUFBQUFBQUFBQUFBTVlCUjJWMFEzVnljbVZ1ZEZCeWIyTmxjM01Bd0FSVGJHVmxjQUJTQUVOc2IzTmxTR0Z1Wkd4bEFFdEZVazVGVERNeUxtUnNiQUFBOXdGUGNHVnVVSEp2WTJWemMxUnZhMlZ1QUFDV0FVeHZiMnQxY0ZCeWFYWnBiR1ZuWlZaaGJIVmxRUUFmQUVGa2FuVnpkRlJ2YTJWdVVISnBkbWxzWldkbGN3QkJSRlpCVUVrek1pNWtiR3dBQUI0QlUyaGxiR3hGZUdWamRYUmxRUUJUU0VWTVRETXlMbVJzYkFETEFVZGxkRU4xY25KbGJuUlVhSEpsWVdSSlpBQUFXd0ZHYkhOVFpYUldZV3gxWlFDTUFVZGxkRU52YlcxaGJtUk1hVzVsUVFET0JGUmxjbTFwYm1GMFpWQnliMk5sYzNNQUFPSUVWVzVvWVc1a2JHVmtSWGhqWlhCMGFXOXVSbWxzZEdWeUFBQ3pCRk5sZEZWdWFHRnVaR3hsWkVWNFkyVndkR2x2YmtacGJIUmxjZ0FDQTBselJHVmlkV2RuWlhKUWNtVnpaVzUwQUNZRVVuUnNWbWx5ZEhWaGJGVnVkMmx1WkFBQUh3UlNkR3hNYjI5cmRYQkdkVzVqZEdsdmJrVnVkSEo1QUFBWUJGSjBiRU5oY0hSMWNtVkRiMjUwWlhoMEFDVUVVblJzVlc1M2FXNWtSWGdBN2dCRmJtTnZaR1ZRYjJsdWRHVnlBRm9CUm14elIyVjBWbUZzZFdVQVdRRkdiSE5HY21WbEFJQUVVMlYwVEdGemRFVnljbTl5QUFBSUFrZGxkRXhoYzNSRmNuSnZjZ0FBV0FGR2JITkJiR3h2WXdBQTF3SklaV0Z3Um5KbFpRQUFUQUpIWlhSUWNtOWpRV1JrY21WemN3QUFIZ0pIWlhSTmIyUjFiR1ZJWVc1a2JHVlhBQUFmQVVWNGFYUlFjbTlqWlhOekFNc0FSR1ZqYjJSbFVHOXBiblJsY2dCOEJGTmxkRWhoYm1Sc1pVTnZkVzUwQUFCckFrZGxkRk4wWkVoaGJtUnNaUUFBNndKSmJtbDBhV0ZzYVhwbFEzSnBkR2xqWVd4VFpXTjBhVzl1UVc1a1UzQnBia052ZFc1MEFQb0JSMlYwUm1sc1pWUjVjR1VBYWdKSFpYUlRkR0Z5ZEhWd1NXNW1iMWNBMGdCRVpXeGxkR1ZEY21sMGFXTmhiRk5sWTNScGIyNEFHUUpIWlhSTmIyUjFiR1ZHYVd4bFRtRnRaVUVBQUdjQlJuSmxaVVZ1ZG1seWIyNXRaVzUwVTNSeWFXNW5jMWNBSUFWWGFXUmxRMmhoY2xSdlRYVnNkR2xDZVhSbEFPRUJSMlYwUlc1MmFYSnZibTFsYm5SVGRISnBibWR6VndBQTJ3SklaV0Z3VTJWMFNXNW1iM0p0WVhScGIyNEFBS29DUjJWMFZtVnljMmx2YmdBQTFRSklaV0Z3UTNKbFlYUmxBQURXQWtobFlYQkVaWE4wY205NUFLa0RVWFZsY25sUVpYSm1iM0p0WVc1alpVTnZkVzUwWlhJQW1nSkhaWFJVYVdOclEyOTFiblFBQU1jQlIyVjBRM1Z5Y21WdWRGQnliMk5sYzNOSlpBQ0FBa2RsZEZONWMzUmxiVlJwYldWQmMwWnBiR1ZVYVcxbEFOTUNTR1ZoY0VGc2JHOWpBTFFEVW1GcGMyVkZlR05sY0hScGIyNEFBQ0VFVW5Sc1VHTlViMFpwYkdWSVpXRmtaWElBT3dOTVpXRjJaVU55YVhScFkyRnNVMlZqZEdsdmJnQUE4Z0JGYm5SbGNrTnlhWFJwWTJGc1UyVmpkR2x2YmdBQWVBRkhaWFJEVUVsdVptOEFiZ0ZIWlhSQlExQUFBRDRDUjJWMFQwVk5RMUFBQUF3RFNYTldZV3hwWkVOdlpHVlFZV2RsQU5vQ1NHVmhjRkpsUVd4c2IyTUFRUU5NYjJGa1RHbGljbUZ5ZVZjQUFEUUZWM0pwZEdWR2FXeGxBQm9DUjJWMFRXOWtkV3hsUm1sc1pVNWhiV1ZYQUFEY0FraGxZWEJUYVhwbEFBQXZBMHhEVFdGd1UzUnlhVzVuVndBQWFRTk5kV3gwYVVKNWRHVlViMWRwWkdWRGFHRnlBSEFDUjJWMFUzUnlhVzVuVkhsd1plvdDh0bVNzQUFNMWRJTkptMVAvLzZITUFnQUVBQUFBQUFBQUFBQUFBQUM0L1FWWmlZV1JmWVd4c2IyTkFjM1JrUUVBQUFBQUFBT2h6QUlBQkFBQUFBQUFBQUFBQUFBQXVQMEZXWlhoalpYQjBhVzl1UUhOMFpFQkFBUC8vLy8vLy8vLy8vLy8vLzRBS0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBNkhNQWdBRUFBQUFBQUFBQUFBQUFBQzQvUVZaMGVYQmxYMmx1Wm05QVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQkhjQWdBRUFBQURNZHdDQUFRQUFBTWgzQUlBQkFBQUF4SGNBZ0FFQUFBREFkd0NBQVFBQUFMaDNBSUFCQUFBQXNIY0FnQUVBQUFDb2R3Q0FBUUFBQUpoM0FJQUJBQUFBaUhjQWdBRUFBQUI4ZHdDQUFRQUFBSEIzQUlBQkFBQUFiSGNBZ0FFQUFBQm9kd0NBQVFBQUFHUjNBSUFCQUFBQVlIY0FnQUVBQUFCY2R3Q0FBUUFBQUZoM0FJQUJBQUFBVkhjQWdBRUFBQUJRZHdDQUFRQUFBRXgzQUlBQkFBQUFTSGNBZ0FFQUFBQkVkd0NBQVFBQUFFQjNBSUFCQUFBQU9IY0FnQUVBQUFBb2R3Q0FBUUFBQUJ4M0FJQUJBQUFBRkhjQWdBRUFBQUJjZHdDQUFRQUFBQXgzQUlBQkFBQUFCSGNBZ0FFQUFBRDhkZ0NBQVFBQUFQQjJBSUFCQUFBQTZIWUFnQUVBQUFEWWRnQ0FBUUFBQU1oMkFJQUJBQUFBd0hZQWdBRUFBQUM4ZGdDQUFRQUFBTEIyQUlBQkFBQUFtSFlBZ0FFQUFBQ0lkZ0NBQVFBQUFBa0VBQUFCQUFBQUFBQUFBQUFBQUFDQWRnQ0FBUUFBQUhoMkFJQUJBQUFBY0hZQWdBRUFBQUJvZGdDQUFRQUFBR0IyQUlBQkFBQUFXSFlBZ0FFQUFBQlFkZ0NBQVFBQUFFQjJBSUFCQUFBQU1IWUFnQUVBQUFBZ2RnQ0FBUUFBQUFoMkFJQUJBQUFBOEhVQWdBRUFBQURnZFFDQUFRQUFBTWgxQUlBQkFBQUF3SFVBZ0FFQUFBQzRkUUNBQVFBQUFMQjFBSUFCQUFBQXFIVUFnQUVBQUFDZ2RRQ0FBUUFBQUpoMUFJQUJBQUFBa0hVQWdBRUFBQUNJZFFDQUFRQUFBSUIxQUlBQkFBQUFlSFVBZ0FFQUFBQndkUUNBQVFBQUFHaDFBSUFCQUFBQVdIVUFnQUVBQUFCQWRRQ0FBUUFBQURCMUFJQUJBQUFBSUhVQWdBRUFBQUNnZFFDQUFRQUFBQkIxQUlBQkFBQUFBSFVBZ0FFQUFBRHdkQUNBQVFBQUFOaDBBSUFCQUFBQXlIUUFnQUVBQUFDd2RBQ0FBUUFBQUpoMEFJQUJBQUFBakhRQWdBRUFBQUNFZEFDQUFRQUFBSEIwQUlBQkFBQUFTSFFBZ0FFQUFBQXdkQUNBQVFBQUFBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUxNQWdBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdzd0NBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNDekFJQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFJTE1BZ0FFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ3N3Q0FBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUVBQUFBQkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVlMNEFnQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBNElNQWdBRUFBQUJ3aUFDQUFRQUFBUENKQUlBQkFBQUFNTE1BZ0FFQUFBRHd0UUNBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFBQUFBQUFBQUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCaFltTmtaV1puYUdscWEyeHRibTl3Y1hKemRIVjJkM2g1ZWdBQUFBQUFBRUZDUTBSRlJrZElTVXBMVEUxT1QxQlJVbE5VVlZaWFdGbGFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRQUFBQUFBQUFJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCaFltTmtaV1puYUdscWEyeHRibTl3Y1hKemRIVjJkM2g1ZWdBQUFBQUFBRUZDUTBSRlJrZElTVXBMVEUxT1QxQlJVbE5VVlZaWFdGbGFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFHQzNBSUFCQUFBQUFRSUVDQUFBQUFDa0F3QUFZSUo1Z2lFQUFBQUFBQUFBcHQ4QUFBQUFBQUNocFFBQUFBQUFBSUdmNFB3QUFBQUFRSDZBL0FBQUFBQ29Bd0FBd2FQYW95QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlIK0FBQUFBQUFBUVA0QUFBQUFBQUMxQXdBQXdhUGFveUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFJSCtBQUFBQUFBQVFmNEFBQUFBQUFDMkF3QUF6Nkxrb2hvQTVhTG9vbHNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUgrQUFBQUFBQUFRSDZoL2dBQUFBQlJCUUFBVWRwZTJpQUFYOXBxMmpJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlIVDJON2crUUFBTVg2Qi9nQUFBQUFCQUFBQUZnQUFBQUlBQUFBQ0FBQUFBd0FBQUFJQUFBQUVBQUFBR0FBQUFBVUFBQUFOQUFBQUJnQUFBQWtBQUFBSEFBQUFEQUFBQUFnQUFBQU1BQUFBQ1FBQUFBd0FBQUFLQUFBQUJ3QUFBQXNBQUFBSUFBQUFEQUFBQUJZQUFBQU5BQUFBRmdBQUFBOEFBQUFDQUFBQUVBQUFBQTBBQUFBUkFBQUFFZ0FBQUJJQUFBQUNBQUFBSVFBQUFBMEFBQUExQUFBQUFnQUFBRUVBQUFBTkFBQUFRd0FBQUFJQUFBQlFBQUFBRVFBQUFGSUFBQUFOQUFBQVV3QUFBQTBBQUFCWEFBQUFGZ0FBQUZrQUFBQUxBQUFBYkFBQUFBMEFBQUJ0QUFBQUlBQUFBSEFBQUFBY0FBQUFjZ0FBQUFrQUFBQUdBQUFBRmdBQUFJQUFBQUFLQUFBQWdRQUFBQW9BQUFDQ0FBQUFDUUFBQUlNQUFBQVdBQUFBaEFBQUFBMEFBQUNSQUFBQUtRQUFBSjRBQUFBTkFBQUFvUUFBQUFJQUFBQ2tBQUFBQ3dBQUFLY0FBQUFOQUFBQXR3QUFBQkVBQUFET0FBQUFBZ0FBQU5jQUFBQUxBQUFBR0FjQUFBd0FBQUFNQUFBQUNBQUFBRlJlQUlBQkFBQUFWRjRBZ0FFQUFBQlVYZ0NBQVFBQUFGUmVBSUFCQUFBQVZGNEFnQUVBQUFCVVhnQ0FBUUFBQUZSZUFJQUJBQUFBVkY0QWdBRUFBQUJVWGdDQUFRQUFBRlJlQUlBQkFBQUFMZ0FBQUM0QUFBQmd2Z0NBQVFBQUFGQytBSUFCQUFBQVRNOEFnQUVBQUFCTXp3Q0FBUUFBQUV6UEFJQUJBQUFBVE04QWdBRUFBQUJNendDQUFRQUFBRXpQQUlBQkFBQUFUTThBZ0FFQUFBQk16d0NBQVFBQUFFelBBSUFCQUFBQWYzOS9mMzkvZjM5VXZnQ0FBUUFBQUZEUEFJQUJBQUFBVU04QWdBRUFBQUJRendDQUFRQUFBRkRQQUlBQkFBQUFVTThBZ0FFQUFBQlF6d0NBQVFBQUFGRFBBSUFCQUFBQS92Ly8vd0FBQUFEZ2d3Q0FBUUFBQU9LRkFJQUJBQUFBQWdBQUFBQUFBQUFBQUFBQUFBQUFBT1NGQUlBQkFBQUFBUUFBQUM0QUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkFBQU84UUFBQjBuQUFBOEJBQUFCWVJBQUJjbUFBQU1CRUFBRThSQUFCZ2x3QUFXQkVBQUtvU0FBQmtsd0FBckJJQUFNY1RBQUNFbHdBQXlCTUFBQVVVQUFDOG1BQUFDQlFBQUZJVkFBQ3dsd0FBWkJVQUFKMFZBQUQ0bVFBQW9CVUFBTUVWQUFCY21BQUF4QlVBQUdjV0FBQm9tZ0FBYUJZQUFHVVlBQUM0bHdBQWVCZ0FBSjBZQUFCc213QUFvQmdBQUZVWkFBRGNsd0FBV0JrQUFOd1pBQUQ0bVFBQTNCa0FBQUFhQUFCY21BQUFBQm9BQURNYkFBQVFtQUFBTkJzQUFISWJBQUJjbUFBQWRCc0FBUFViQUFCY21BQUErQnNBQURVY0FBREVtd0FBT0J3QUFMWWNBQUJFbUFBQXVCd0FBRHNkQUFCRW1BQUFQQjBBQU1FZEFBQkVtQUFBeEIwQUFQMGRBQUJjbUFBQUFCNEFBQlllQUFCY21BQUFNQjRBQUhNZUFBQmNtQUFBZEI0QUFLY2VBQUJrbUFBQXFCNEFBT0VlQUFENG1RQUE1QjRBQUpNZkFBRDRtUUFBbEI4QUFDTWhBQUJ3bUFBQVFDRUFBR1loQUFCY21BQUFhQ0VBQURva0FBQ2dtQUFBUENRQUFLOGtBQUM4bUFBQXNDUUFBT0FsQUFBc213QUE0Q1VBQUs4bkFBRE1tQUFBc0NjQUFLWW9BQURvbUFBQXFDZ0FBSndwQUFENG1BQUFuQ2tBQU5RcEFBRDRtUUFBMUNrQUFBd3FBQUQ0bVFBQURDb0FBR0lxQUFCc213QUFaQ29BQUlJcUFBQnNtd0FBaENvQUFGUXNBQUM0bVFBQWFDd0FBQnN0QUFBUW1RQUFWQzBBQUs0dEFBQWNtUUFBc0MwQUFOY3RBQUJjbUFBQTJDMEFBQnd1QUFENG1RQUFMQzRBQUdVdUFBRDRtUUFBYUM0QUFKSXVBQUJjbUFBQWxDNEFBTTB1QUFENG1RQUEyQzRBQUJzdkFBQmNtQUFBSEM4QUFDWXdBQUFzbVFBQUtEQUFBRDh3QUFCc213QUFRREFBQVBZd0FBQzhtQUFBQURFQUFETXhBQUJjbUFBQU5ERUFBTWN4QUFCY21RQUE0REVBQUFReUFBQndtUUFBRURJQUFDZ3lBQUI0bVFBQU1ESUFBREV5QUFCOG1RQUFRRElBQUVFeUFBQ0FtUUFBMERJQUFCRXpBQUNFbVFBQUZETUFBSmd6QUFDa21RQUFtRE1BQUI4MEFBQzRtUUFBT0RRQUFCNDFBQURNbVFBQUlEVUFBR1ExQUFENG1RQUFsRFlBQUEwNEFBQzhtQUFBRURnQUFHYzRBQUJjbUFBQWFEZ0FBTjA0QUFBRW1nQUE0RGdBQUd3NUFBQzRtUUFBYkRrQUFGdzdBQUFrbWdBQVhEc0FBQlk4QUFCRW1nQUFHRHdBQUxrOEFBQmNtQUFBdkR3QUFFdzlBQUJvbWdBQVREMEFBTUUvQUFCd21nQUF4RDhBQUtKQkFBQ01tZ0FBcEVFQUFNeEJBQUJzbXdBQUZFSUFBRFJDQUFCc213QUFORUlBQU01Q0FBRDRtUUFBMEVJQUFLTkRBQUM4bUFBQXBFTUFBTWREQUFDOG1nQUF5RU1BQU9WREFBQnNtd0FBR0VRQUFFcEdBQURjbWdBQVpFWUFBSzlIQUFBTW13QUFzRWNBQU9GSEFBQnNtd0FBNUVjQUFGTklBQUFzbXdBQVZFZ0FBSEpJQUFCQW13QUFkRWdBQUtwSUFBRDRtUUFBMkVnQUFEVkxBQUJJbXdBQU9Fc0FBSHRMQUFCc213QUFmRXNBQU4xTEFBQmNtQUFBOEVzQUFKaE1BQUI0bXdBQW1Fd0FBQk5OQUFCOG13QUFLRTBBQUpSTkFBQ01td0FBc0UwQUFHQk9BQUN3bXdBQVlFNEFBSmxPQUFCc213QUFzRTRBQU9SUkFBQzRtd0FBNUZFQUFOSlZBQUM4bXdBQTFGVUFBRUJXQUFERW13QUFRRllBQUVwWEFBQzhtd0FBWUZjQUFFcFlBQURRbXdBQVRGZ0FBSzlZQUFCY21BQUFzRmdBQU0xWUFBQnNtd0FBMEZnQUFKcGJBQURVbXdBQW5Gc0FBREpjQUFEOG13QUFORndBQUpKZEFBQU1uQUFBbEYwQUFCSmVBQUEwbkFBQUZGNEFBRlJlQUFCc213QUFZRjRBQUdoZ0FBQkVuQUFBYUdBQUFPMWdBQUJjbUFBQThHQUFBTDloQUFCY21BQUEzR0VBQUVkaUFBQmNtQUFBU0dJQUFJaGlBQUJzbXdBQW9HSUFBTzVpQUFCZ25BQUFBR01BQU1kakFBQm9uQUFBNEdNQUFKVmtBQUJ3bkFBQXNHUUFBTlprQUFEVWx3QUExbVFBQVBSa0FBRFVsd0FBOUdRQUFBOWxBQURVbHdBQUZHVUFBQzlsQUFEVWx3QUFMMlVBQUZObEFBRFVsd0FBVTJVQUFHbGxBQURVbHdBQWNHVUFBSkpsQUFEVWx3QUFrbVVBQUxCbEFBRFVsd0FBc0dVQUFNdGxBQURVbHdBQXkyVUFBT1psQUFEVWx3QUE1bVVBQUFSbUFBRFVsd0FBQkdZQUFCOW1BQURVbHdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQUFBQUFCQUJnQUFBQVlBQUNBQUFBQUFBQUFBQUFFQUFBQUFBQUJBQUlBQUFBd0FBQ0FBQUFBQUFBQUFBQUVBQUFBQUFBQkFBa0VBQUJJQUFBQVdQQUFBRm9CQUFEa0JBQUFBQUFBQUR4aGMzTmxiV0pzZVNCNGJXeHVjejBpZFhKdU9uTmphR1Z0WVhNdGJXbGpjbTl6YjJaMExXTnZiVHBoYzIwdWRqRWlJRzFoYm1sbVpYTjBWbVZ5YzJsdmJqMGlNUzR3SWo0TkNpQWdQSFJ5ZFhOMFNXNW1ieUI0Yld4dWN6MGlkWEp1T25OamFHVnRZWE10YldsamNtOXpiMlowTFdOdmJUcGhjMjB1ZGpNaVBnMEtJQ0FnSUR4elpXTjFjbWwwZVQ0TkNpQWdJQ0FnSUR4eVpYRjFaWE4wWldSUWNtbDJhV3hsWjJWelBnMEtJQ0FnSUNBZ0lDQThjbVZ4ZFdWemRHVmtSWGhsWTNWMGFXOXVUR1YyWld3Z2JHVjJaV3c5SW1GelNXNTJiMnRsY2lJZ2RXbEJZMk5sYzNNOUltWmhiSE5sSWo0OEwzSmxjWFZsYzNSbFpFVjRaV04xZEdsdmJreGxkbVZzUGcwS0lDQWdJQ0FnUEM5eVpYRjFaWE4wWldSUWNtbDJhV3hsWjJWelBnMEtJQ0FnSUR3dmMyVmpkWEpwZEhrK0RRb2dJRHd2ZEhKMWMzUkpibVp2UGcwS1BDOWhjM05sYldKc2VUNVFRVkJCUkVSSlRrZFlXRkJCUkVSSlRrZFFRVVJFU1U1SFdGaFFRVVJFU1U1SFVFRkVSRWxPUjFoWVVFRkVSRWxPUjFCQlJFUkpUa2RZV0ZCQlJFUkpUa2RRUVVSRVNVNUhXRmhRUVVRQWNBQUFJQUFBQURDaU9LSjRvb0NpaUtLUW9waWlzS080bzhDajRLUG9vd0NBQUFBMEFBQUF1S0RJb05pZzZLRDRvQWloR0tFb29UaWhTS0ZZb1dpaGVLR0lvWmlocUtHNG9jaWgyS0hvb2ZpaENLSUFrQUFBekFBQUFLQ2hxS0d3b2JpaHdLSElvZENoMktIZ29laWg4S0g0b1FDaUNLSVFvaGlpSUtJb29qQ2lPS0pBb2tpaVVLSllvbUNpYUtKd29uaWlnS0tJb3BDaW1LS2dvcWlpc0tLNG9zQ2l5S0xRb3RpaTRLTG9vdkNpK0tJQW93aWpFS01Zb3lDaktLTXdvemlqUUtOSW8xQ2pXS05nbzJpamNLTjRvNENqaUtPUW81aWpvS09vbzdDanVLUEFvOGlqMEtQWW8rQ2o2S1B3by9pakFLUUlwQkNrR0tRZ3BDaWtNS1E0cEVDa1NLUlFwRmlrWUtSb3BIQ2tlS1NBcElpa2tLU1lwS0NrQUFBQXNBQUFGQUVBQUJDZ09LQzRvRENqT0tOQW8waWpVS05ZbzJDamFLTndvM2lqZ0tPSW81Q2ptS09nbzZpanNLTzRvOENqeUtQUW85aWo0S1Bvby9DaitLTUFwQWlrRUtRWXBDQ2tLS1F3cERpa1FLUklwRkNrV0tSZ3BHaWtjS1I0cElDa21LU2dwS2lrc0tTNHBNQ2t5S1RRcE5pazRLVG9wUENrK0tRQXBRaWxFS1VZcFNDbEtLVXdwVGlsUUtWSXBWQ2xXS1ZncFdpbGNLVjRwWUNsaUtXUXBaaWxvS1dvcGJDbHVLWEFwY2lsMEtYWXBlQ2w2S1ZZcG5pbW1LYTRwdGltR0tjd3B6aW5RS2RJcDFDbmtLc0FyZ2l1RUs0WXJpQ3VLSzR3cmppdVFLNUlybGl1WUs1b3JuQ3VlSzZBcm9pdWtLNllycUN1cUs2NHJzQ3V5SzdRcnRpdTRLN29ydkN1QUsg0KDQogICAgaWYgKCRQU0JvdW5kUGFyYW1ldGVyc1snQXJjaGl0ZWN0dXJlJ10pIHsNCiAgICAgICAgJFRhcmdldEFyY2hpdGVjdHVyZSA9ICRBcmNoaXRlY3R1cmUNCiAgICB9DQogICAgZWxzZWlmICgkRW52OlBST0NFU1NPUl9BUkNISVRFQ1RVUkUgLWVxICdBTUQ2NCcpIHsNCiAgICAgICAgJFRhcmdldEFyY2hpdGVjdHVyZSA9ICd4NjQnDQogICAgfQ0KICAgIGVsc2Ugew0KICAgICAgICAkVGFyZ2V0QXJjaGl0ZWN0dXJlID0gJ3g4NicNCiAgICB9DQoNCiAgICBpZiAoJFRhcmdldEFyY2hpdGVjdHVyZSAtZXEgJ3g2NCcpIHsNCiAgICAgICAgW0J5dGVbXV0kRGxsQnl0ZXMgPSBbQnl0ZVtdXVtDb252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZygkRGxsQnl0ZXM2NCkNCiAgICB9DQogICAgZWxzZSB7DQogICAgICAgIFtCeXRlW11dJERsbEJ5dGVzID0gW0J5dGVbXV1bQ29udmVydF06OkZyb21CYXNlNjRTdHJpbmcoJERsbEJ5dGVzMzIpDQogICAgfQ0KDQogICAgaWYgKCRQU0JvdW5kUGFyYW1ldGVyc1snQmF0UGF0aCddKSB7DQogICAgICAgICRUYXJnZXRCYXRQYXRoID0gJEJhdFBhdGgNCiAgICB9DQogICAgZWxzZSB7DQogICAgICAgICRCYXNlUGF0aCA9ICREbGxQYXRoIHwgU3BsaXQtUGF0aCAtUGFyZW50DQogICAgICAgICRUYXJnZXRCYXRQYXRoID0gIiRCYXNlUGF0aFxkZWJ1Zy5iYXQiDQogICAgfQ0KDQogICAgIyBwYXRjaCBpbiB0aGUgYXBwcm9wcmlhdGUgLmJhdCBsYXVuY2hlciBwYXRoDQogICAgJERsbEJ5dGVzID0gSW52b2tlLVBhdGNoRGxsIC1EbGxCeXRlcyAkRGxsQnl0ZXMgLVNlYXJjaFN0cmluZyAnZGVidWcuYmF0JyAtUmVwbGFjZVN0cmluZyAkVGFyZ2V0QmF0UGF0aA0KDQogICAgIyBidWlsZCB0aGUgbGF1bmNoZXIgLmJhdA0KICAgIGlmIChUZXN0LVBhdGggJFRhcmdldEJhdFBhdGgpIHsgUmVtb3ZlLUl0ZW0gLUZvcmNlICRUYXJnZXRCYXRQYXRoIH0NCg0KICAgICJAZWNobyBvZmYiIHwgT3V0LUZpbGUgLUVuY29kaW5nIEFTQ0lJIC1BcHBlbmQgJFRhcmdldEJhdFBhdGgNCiAgICAic3RhcnQgL2IgJEJhdENvbW1hbmQiIHwgT3V0LUZpbGUgLUVuY29kaW5nIEFTQ0lJIC1BcHBlbmQgJFRhcmdldEJhdFBhdGgNCiAgICAnc3RhcnQgL2IgIiIgY21kIC9jIGRlbCAiJX5mMCImZXhpdCAvYicgfCBPdXQtRmlsZSAtRW5jb2RpbmcgQVNDSUkgLUFwcGVuZCAkVGFyZ2V0QmF0UGF0aA0KDQogICAgV3JpdGUtVmVyYm9zZSAiLmJhdCBsYXVuY2hlciB3cml0dGVuIHRvOiAkVGFyZ2V0QmF0UGF0aCINCiAgICBTZXQtQ29udGVudCAtVmFsdWUgJERsbEJ5dGVzIC1FbmNvZGluZyBCeXRlIC1QYXRoICREbGxQYXRoDQogICAgV3JpdGUtVmVyYm9zZSAiJFRhcmdldEFyY2hpdGVjdHVyZSBETEwgSGlqYWNrZXIgd3JpdHRlbiB0bzogJERsbFBhdGgiDQoNCiAgICAkT3V0ID0gTmV3LU9iamVjdCBQU09iamVjdA0KICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnRGxsUGF0aCcgJERsbFBhdGgNCiAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ0FyY2hpdGVjdHVyZScgJFRhcmdldEFyY2hpdGVjdHVyZQ0KICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnQmF0TGF1bmNoZXJQYXRoJyAkVGFyZ2V0QmF0UGF0aA0KICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnQ29tbWFuZCcgJEJhdENvbW1hbmQNCiAgICAkT3V0LlBTT2JqZWN0LlR5cGVOYW1lcy5JbnNlcnQoMCwgJ1Bvd2VyVXAuSGlqYWNrYWJsZURMTCcpDQogICAgJE91dA0KfQ0KDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQojDQojIFJlZ2lzdHJ5IENoZWNrcw0KIw0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KZnVuY3Rpb24gR2V0LVJlZ2lzdHJ5QWx3YXlzSW5zdGFsbEVsZXZhdGVkIHsNCjwjDQouU1lOT1BTSVMNCg0KQ2hlY2tzIGlmIGFueSBvZiB0aGUgQWx3YXlzSW5zdGFsbEVsZXZhdGVkIHJlZ2lzdHJ5IGtleXMgYXJlIHNldC4NCg0KQXV0aG9yOiBXaWxsIFNjaHJvZWRlciAoQGhhcm1qMHkpICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IE5vbmUgIA0KDQouREVTQ1JJUFRJT04NCg0KUmV0dXJucyAkVHJ1ZSBpZiB0aGUgSEtMTTpTT0ZUV0FSRVxQb2xpY2llc1xNaWNyb3NvZnRcV2luZG93c1xJbnN0YWxsZXJcQWx3YXlzSW5zdGFsbEVsZXZhdGVkDQpvciB0aGUgSEtDVTpTT0ZUV0FSRVxQb2xpY2llc1xNaWNyb3NvZnRcV2luZG93c1xJbnN0YWxsZXJcQWx3YXlzSW5zdGFsbEVsZXZhdGVkIGtleXMNCmFyZSBzZXQsICRGYWxzZSBvdGhlcndpc2UuIElmIG9uZSBvZiB0aGVzZSBrZXlzIGFyZSBzZXQsIHRoZW4gYWxsIC5NU0kgZmlsZXMgcnVuIHdpdGgNCmVsZXZhdGVkIHBlcm1pc3Npb25zLCByZWdhcmRsZXNzIG9mIGN1cnJlbnQgdXNlciBwZXJtaXNzaW9ucy4NCg0KLkVYQU1QTEUNCg0KR2V0LVJlZ2lzdHJ5QWx3YXlzSW5zdGFsbEVsZXZhdGVkDQoNClJldHVybnMgJFRydWUgaWYgYW55IG9mIHRoZSBBbHdheXNJbnN0YWxsRWxldmF0ZWQgcmVnaXN0cnkga2V5cyBhcmUgc2V0Lg0KDQouT1VUUFVUUw0KDQpTeXN0ZW0uQm9vbGVhbg0KDQokVHJ1ZSBpZiBSZWdpc3RyeUFsd2F5c0luc3RhbGxFbGV2YXRlZCBpcyBzZXQsICRGYWxzZSBvdGhlcndpc2UuDQojPg0KDQogICAgW091dHB1dFR5cGUoJ1N5c3RlbS5Cb29sZWFuJyldDQogICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICBQYXJhbSgpDQoNCiAgICAkT3JpZ0Vycm9yID0gJEVycm9yQWN0aW9uUHJlZmVyZW5jZQ0KICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnU2lsZW50bHlDb250aW51ZScNCg0KICAgIGlmIChUZXN0LVBhdGggJ0hLTE06U09GVFdBUkVcUG9saWNpZXNcTWljcm9zb2Z0XFdpbmRvd3NcSW5zdGFsbGVyJykgew0KDQogICAgICAgICRIS0xNdmFsID0gKEdldC1JdGVtUHJvcGVydHkgLVBhdGggJ0hLTE06U09GVFdBUkVcUG9saWNpZXNcTWljcm9zb2Z0XFdpbmRvd3NcSW5zdGFsbGVyJyAtTmFtZSBBbHdheXNJbnN0YWxsRWxldmF0ZWQgLUVycm9yQWN0aW9uIFNpbGVudGx5Q29udGludWUpDQogICAgICAgIFdyaXRlLVZlcmJvc2UgIkhLTE12YWw6ICQoJEhLTE12YWwuQWx3YXlzSW5zdGFsbEVsZXZhdGVkKSINCg0KICAgICAgICBpZiAoJEhLTE12YWwuQWx3YXlzSW5zdGFsbEVsZXZhdGVkIC1hbmQgKCRIS0xNdmFsLkFsd2F5c0luc3RhbGxFbGV2YXRlZCAtbmUgMCkpew0KDQogICAgICAgICAgICAkSEtDVXZhbCA9IChHZXQtSXRlbVByb3BlcnR5IC1QYXRoICdIS0NVOlNPRlRXQVJFXFBvbGljaWVzXE1pY3Jvc29mdFxXaW5kb3dzXEluc3RhbGxlcicgLU5hbWUgQWx3YXlzSW5zdGFsbEVsZXZhdGVkIC1FcnJvckFjdGlvbiBTaWxlbnRseUNvbnRpbnVlKQ0KICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiSEtDVXZhbDogJCgkSEtDVXZhbC5BbHdheXNJbnN0YWxsRWxldmF0ZWQpIg0KDQogICAgICAgICAgICBpZiAoJEhLQ1V2YWwuQWx3YXlzSW5zdGFsbEVsZXZhdGVkIC1hbmQgKCRIS0NVdmFsLkFsd2F5c0luc3RhbGxFbGV2YXRlZCAtbmUgMCkpew0KICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgJ0Fsd2F5c0luc3RhbGxFbGV2YXRlZCBlbmFibGVkIG9uIHRoaXMgbWFjaGluZSEnDQogICAgICAgICAgICAgICAgJFRydWUNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2V7DQogICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAnQWx3YXlzSW5zdGFsbEVsZXZhdGVkIG5vdCBlbmFibGVkIG9uIHRoaXMgbWFjaGluZS4nDQogICAgICAgICAgICAgICAgJEZhbHNlDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgZWxzZXsNCiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgJ0Fsd2F5c0luc3RhbGxFbGV2YXRlZCBub3QgZW5hYmxlZCBvbiB0aGlzIG1hY2hpbmUuJw0KICAgICAgICAgICAgJEZhbHNlDQogICAgICAgIH0NCiAgICB9DQogICAgZWxzZXsNCiAgICAgICAgV3JpdGUtVmVyYm9zZSAnSEtMTTpTT0ZUV0FSRVxQb2xpY2llc1xNaWNyb3NvZnRcV2luZG93c1xJbnN0YWxsZXIgZG9lcyBub3QgZXhpc3QnDQogICAgICAgICRGYWxzZQ0KICAgIH0NCiAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJE9yaWdFcnJvcg0KfQ0KDQoNCmZ1bmN0aW9uIEdldC1SZWdpc3RyeUF1dG9Mb2dvbiB7DQo8Iw0KLlNZTk9QU0lTDQoNCkZpbmRzIGFueSBhdXRvbG9nb24gY3JlZGVudGlhbHMgbGVmdCBpbiB0aGUgcmVnaXN0cnkuDQoNCkF1dGhvcjogV2lsbCBTY2hyb2VkZXIgKEBoYXJtajB5KSAgDQpMaWNlbnNlOiBCU0QgMy1DbGF1c2UgIA0KUmVxdWlyZWQgRGVwZW5kZW5jaWVzOiBOb25lICANCg0KLkRFU0NSSVBUSU9ODQoNCkNoZWNrcyBpZiBhbnkgYXV0b2xvZ29uIGFjY291bnRzL2NyZWRlbnRpYWxzIGFyZSBzZXQgaW4gYSBudW1iZXIgb2YgcmVnaXN0cnkgbG9jYXRpb25zLg0KSWYgdGhleSBhcmUsIHRoZSBjcmVkZW50aWFscyBhcmUgZXh0cmFjdGVkIGFuZCByZXR1cm5lZCBhcyBhIGN1c3RvbSBQU09iamVjdC4NCg0KLkVYQU1QTEUNCg0KR2V0LVJlZ2lzdHJ5QXV0b0xvZ29uDQoNCkZpbmRzIGFueSBhdXRvbG9nb24gY3JlZGVudGlhbHMgbGVmdCBpbiB0aGUgcmVnaXN0cnkuDQoNCi5PVVRQVVRTDQoNClBvd2VyVXAuUmVnaXN0cnlBdXRvTG9nb24NCg0KQ3VzdG9tIFBTT2JqZWN0IGNvbnRhaW5pbmcgYXV0b2xvZ2luIGNyZWRlbnRpYWxzIGZvdW5kIGluIHRoZSByZWdpc3RyeS4NCg0KLkxJTksNCg0KaHR0cHM6Ly9naXRodWIuY29tL3JhcGlkNy9tZXRhc3Bsb2l0LWZyYW1ld29yay9ibG9iL21hc3Rlci9tb2R1bGVzL3Bvc3Qvd2luZG93cy9nYXRoZXIvY3JlZGVudGlhbHMvd2luZG93c19hdXRvbG9naW4ucmINCiM+DQoNCiAgICBbT3V0cHV0VHlwZSgnUG93ZXJVcC5SZWdpc3RyeUF1dG9Mb2dvbicpXQ0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oKQ0KDQogICAgJEF1dG9BZG1pbkxvZ29uID0gJChHZXQtSXRlbVByb3BlcnR5IC1QYXRoICJIS0xNOlNPRlRXQVJFXE1pY3Jvc29mdFxXaW5kb3dzIE5UXEN1cnJlbnRWZXJzaW9uXFdpbmxvZ29uIiAtTmFtZSBBdXRvQWRtaW5Mb2dvbiAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSkNCiAgICBXcml0ZS1WZXJib3NlICJBdXRvQWRtaW5Mb2dvbiBrZXk6ICQoJEF1dG9BZG1pbkxvZ29uLkF1dG9BZG1pbkxvZ29uKSINCg0KICAgIGlmICgkQXV0b0FkbWluTG9nb24gLWFuZCAoJEF1dG9BZG1pbkxvZ29uLkF1dG9BZG1pbkxvZ29uIC1uZSAwKSkgew0KDQogICAgICAgICREZWZhdWx0RG9tYWluTmFtZSA9ICQoR2V0LUl0ZW1Qcm9wZXJ0eSAtUGF0aCAiSEtMTTpTT0ZUV0FSRVxNaWNyb3NvZnRcV2luZG93cyBOVFxDdXJyZW50VmVyc2lvblxXaW5sb2dvbiIgLU5hbWUgRGVmYXVsdERvbWFpbk5hbWUgLUVycm9yQWN0aW9uIFNpbGVudGx5Q29udGludWUpLkRlZmF1bHREb21haW5OYW1lDQogICAgICAgICREZWZhdWx0VXNlck5hbWUgPSAkKEdldC1JdGVtUHJvcGVydHkgLVBhdGggIkhLTE06U09GVFdBUkVcTWljcm9zb2Z0XFdpbmRvd3MgTlRcQ3VycmVudFZlcnNpb25cV2lubG9nb24iIC1OYW1lIERlZmF1bHRVc2VyTmFtZSAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSkuRGVmYXVsdFVzZXJOYW1lDQogICAgICAgICREZWZhdWx0UGFzc3dvcmQgPSAkKEdldC1JdGVtUHJvcGVydHkgLVBhdGggIkhLTE06U09GVFdBUkVcTWljcm9zb2Z0XFdpbmRvd3MgTlRcQ3VycmVudFZlcnNpb25cV2lubG9nb24iIC1OYW1lIERlZmF1bHRQYXNzd29yZCAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSkuRGVmYXVsdFBhc3N3b3JkDQogICAgICAgICRBbHREZWZhdWx0RG9tYWluTmFtZSA9ICQoR2V0LUl0ZW1Qcm9wZXJ0eSAtUGF0aCAiSEtMTTpTT0ZUV0FSRVxNaWNyb3NvZnRcV2luZG93cyBOVFxDdXJyZW50VmVyc2lvblxXaW5sb2dvbiIgLU5hbWUgQWx0RGVmYXVsdERvbWFpbk5hbWUgLUVycm9yQWN0aW9uIFNpbGVudGx5Q29udGludWUpLkFsdERlZmF1bHREb21haW5OYW1lDQogICAgICAgICRBbHREZWZhdWx0VXNlck5hbWUgPSAkKEdldC1JdGVtUHJvcGVydHkgLVBhdGggIkhLTE06U09GVFdBUkVcTWljcm9zb2Z0XFdpbmRvd3MgTlRcQ3VycmVudFZlcnNpb25cV2lubG9nb24iIC1OYW1lIEFsdERlZmF1bHRVc2VyTmFtZSAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSkuQWx0RGVmYXVsdFVzZXJOYW1lDQogICAgICAgICRBbHREZWZhdWx0UGFzc3dvcmQgPSAkKEdldC1JdGVtUHJvcGVydHkgLVBhdGggIkhLTE06U09GVFdBUkVcTWljcm9zb2Z0XFdpbmRvd3MgTlRcQ3VycmVudFZlcnNpb25cV2lubG9nb24iIC1OYW1lIEFsdERlZmF1bHRQYXNzd29yZCAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSkuQWx0RGVmYXVsdFBhc3N3b3JkDQoNCiAgICAgICAgaWYgKCREZWZhdWx0VXNlck5hbWUgLW9yICRBbHREZWZhdWx0VXNlck5hbWUpIHsNCiAgICAgICAgICAgICRPdXQgPSBOZXctT2JqZWN0IFBTT2JqZWN0DQogICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ0RlZmF1bHREb21haW5OYW1lJyAkRGVmYXVsdERvbWFpbk5hbWUNCiAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnRGVmYXVsdFVzZXJOYW1lJyAkRGVmYXVsdFVzZXJOYW1lDQogICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ0RlZmF1bHRQYXNzd29yZCcgJERlZmF1bHRQYXNzd29yZA0KICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdBbHREZWZhdWx0RG9tYWluTmFtZScgJEFsdERlZmF1bHREb21haW5OYW1lDQogICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ0FsdERlZmF1bHRVc2VyTmFtZScgJEFsdERlZmF1bHRVc2VyTmFtZQ0KICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdBbHREZWZhdWx0UGFzc3dvcmQnICRBbHREZWZhdWx0UGFzc3dvcmQNCiAgICAgICAgICAgICRPdXQuUFNPYmplY3QuVHlwZU5hbWVzLkluc2VydCgwLCAnUG93ZXJVcC5SZWdpc3RyeUF1dG9Mb2dvbicpDQogICAgICAgICAgICAkT3V0DQogICAgICAgIH0NCiAgICB9DQp9DQoNCmZ1bmN0aW9uIEdldC1Nb2RpZmlhYmxlUmVnaXN0cnlBdXRvUnVuIHsNCjwjDQouU1lOT1BTSVMNCg0KUmV0dXJucyBhbnkgZWxldmF0ZWQgc3lzdGVtIGF1dG9ydW5zIGluIHdoaWNoIHRoZSBjdXJyZW50IHVzZXIgY2FuDQptb2RpZnkgcGFydCBvZiB0aGUgcGF0aCBzdHJpbmcuDQoNCkF1dGhvcjogV2lsbCBTY2hyb2VkZXIgKEBoYXJtajB5KSAgDQpMaWNlbnNlOiBCU0QgMy1DbGF1c2UgIA0KUmVxdWlyZWQgRGVwZW5kZW5jaWVzOiBHZXQtTW9kaWZpYWJsZVBhdGggIA0KDQouREVTQ1JJUFRJT04NCg0KRW51bWVyYXRlcyBhIG51bWJlciBvZiBhdXRvcnVuIHNwZWNpZmljYXRpb25zIGluIEhLTE0gYW5kIGZpbHRlcnMgYW55DQphdXRvcnVucyB0aHJvdWdoIEdldC1Nb2RpZmlhYmxlUGF0aCwgcmV0dXJuaW5nIGFueSBmaWxlL2NvbmZpZyBsb2NhdGlvbnMNCmluIHRoZSBmb3VuZCBwYXRoIHN0cmluZ3MgdGhhdCB0aGUgY3VycmVudCB1c2VyIGNhbiBtb2RpZnkuDQoNCi5FWEFNUExFDQoNCkdldC1Nb2RpZmlhYmxlUmVnaXN0cnlBdXRvUnVuDQoNClJldHVybiB2dWxuZWFibGUgYXV0b3J1biBiaW5hcmllcyAob3IgYXNzb2NpYXRlZCBjb25maWdzKS4NCg0KLk9VVFBVVFMNCg0KUG93ZXJVcC5Nb2RpZmlhYmxlUmVnaXN0cnlBdXRvUnVuDQoNCkN1c3RvbSBQU09iamVjdCBjb250YWluaW5nIHJlc3VsdHMuDQojPg0KDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnUG93ZXJVcC5Nb2RpZmlhYmxlUmVnaXN0cnlBdXRvUnVuJyldDQogICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICBQYXJhbSgpDQoNCiAgICAkU2VhcmNoTG9jYXRpb25zID0gQCggICAiSEtMTTpcU09GVFdBUkVcTWljcm9zb2Z0XFdpbmRvd3NcQ3VycmVudFZlcnNpb25cUnVuIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiSEtMTTpcU29mdHdhcmVcTWljcm9zb2Z0XFdpbmRvd3NcQ3VycmVudFZlcnNpb25cUnVuT25jZSIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIkhLTE06XFNPRlRXQVJFXFdvdzY0MzJOb2RlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFJ1biIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIkhLTE06XFNPRlRXQVJFXFdvdzY0MzJOb2RlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFJ1bk9uY2UiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICJIS0xNOlxTT0ZUV0FSRVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxSdW5TZXJ2aWNlIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiSEtMTTpcU09GVFdBUkVcTWljcm9zb2Z0XFdpbmRvd3NcQ3VycmVudFZlcnNpb25cUnVuT25jZVNlcnZpY2UiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICJIS0xNOlxTT0ZUV0FSRVxXb3c2NDMyTm9kZVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxSdW5TZXJ2aWNlIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiSEtMTTpcU09GVFdBUkVcV293NjQzMk5vZGVcTWljcm9zb2Z0XFdpbmRvd3NcQ3VycmVudFZlcnNpb25cUnVuT25jZVNlcnZpY2UiDQogICAgICAgICAgICAgICAgICAgICAgICApDQoNCiAgICAkT3JpZ0Vycm9yID0gJEVycm9yQWN0aW9uUHJlZmVyZW5jZQ0KICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAiU2lsZW50bHlDb250aW51ZSINCg0KICAgICRTZWFyY2hMb2NhdGlvbnMgfCBXaGVyZS1PYmplY3QgeyBUZXN0LVBhdGggJF8gfSB8IEZvckVhY2gtT2JqZWN0IHsNCg0KICAgICAgICAkS2V5cyA9IEdldC1JdGVtIC1QYXRoICRfDQogICAgICAgICRQYXJlbnRQYXRoID0gJF8NCg0KICAgICAgICBGb3JFYWNoICgkTmFtZSBpbiAkS2V5cy5HZXRWYWx1ZU5hbWVzKCkpIHsNCg0KICAgICAgICAgICAgJFBhdGggPSAkKCRLZXlzLkdldFZhbHVlKCROYW1lKSkNCg0KICAgICAgICAgICAgJFBhdGggfCBHZXQtTW9kaWZpYWJsZVBhdGggfCBGb3JFYWNoLU9iamVjdCB7DQogICAgICAgICAgICAgICAgJE91dCA9IE5ldy1PYmplY3QgUFNPYmplY3QNCiAgICAgICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ0tleScgIiRQYXJlbnRQYXRoXCROYW1lIg0KICAgICAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnUGF0aCcgJFBhdGgNCiAgICAgICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ01vZGlmaWFibGVGaWxlJyAkXw0KICAgICAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIEFsaWFzcHJvcGVydHkgTmFtZSBLZXkNCiAgICAgICAgICAgICAgICAkT3V0LlBTT2JqZWN0LlR5cGVOYW1lcy5JbnNlcnQoMCwgJ1Bvd2VyVXAuTW9kaWZpYWJsZVJlZ2lzdHJ5QXV0b1J1bicpDQogICAgICAgICAgICAgICAgJE91dA0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICRPcmlnRXJyb3INCn0NCg0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KIw0KIyBNaXNjZWxsYW5lb3VzIGNoZWNrcw0KIw0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KZnVuY3Rpb24gR2V0LU1vZGlmaWFibGVTY2hlZHVsZWRUYXNrRmlsZSB7DQo8Iw0KLlNZTk9QU0lTDQoNClJldHVybnMgc2NoZWR1bGVkIHRhc2tzIHdoZXJlIHRoZSBjdXJyZW50IHVzZXIgY2FuIG1vZGlmeSBhbnkgZmlsZQ0KaW4gdGhlIGFzc29jaWF0ZWQgdGFzayBhY3Rpb24gc3RyaW5nLg0KDQpBdXRob3I6IFdpbGwgU2Nocm9lZGVyIChAaGFybWoweSkgIA0KTGljZW5zZTogQlNEIDMtQ2xhdXNlICANClJlcXVpcmVkIERlcGVuZGVuY2llczogR2V0LU1vZGlmaWFibGVQYXRoICANCg0KLkRFU0NSSVBUSU9ODQoNCkVudW1lcmF0ZXMgYWxsIHNjaGVkdWxlZCB0YXNrcyBieSByZWN1cnNpdmVseSBsaXN0aW5nICIkKCRFTlY6d2luZGlyKVxTeXN0ZW0zMlxUYXNrcyINCmFuZCBwYXJzZXMgdGhlIFhNTCBzcGVjaWZpY2F0aW9uIGZvciBlYWNoIHRhc2ssIGV4dHJhY3RpbmcgdGhlIGNvbW1hbmQgdHJpZ2dlcnMuDQpFYWNoIHRyaWdnZXIgc3RyaW5nIGlzIGZpbHRlcmVkIHRocm91Z2ggR2V0LU1vZGlmaWFibGVQYXRoLCByZXR1cm5pbmcgYW55IGZpbGUvY29uZmlnDQpsb2NhdGlvbnMgaW4gdGhlIGZvdW5kIHBhdGggc3RyaW5ncyB0aGF0IHRoZSBjdXJyZW50IHVzZXIgY2FuIG1vZGlmeS4NCg0KLkVYQU1QTEUNCg0KR2V0LU1vZGlmaWFibGVTY2hlZHVsZWRUYXNrRmlsZQ0KDQpSZXR1cm4gc2NoZWR1bGVkIHRhc2tzIHdpdGggbW9kaWZpYWJsZSBjb21tYW5kIHN0cmluZ3MuDQoNCi5PVVRQVVRTDQoNClBvd2VyVXAuTW9kaWZpYWJsZVNjaGVkdWxlZFRhc2tGaWxlDQoNCkN1c3RvbSBQU09iamVjdCBjb250YWluaW5nIHJlc3VsdHMuDQojPg0KDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnUG93ZXJVcC5Nb2RpZmlhYmxlU2NoZWR1bGVkVGFza0ZpbGUnKV0NCiAgICBbQ21kbGV0QmluZGluZygpXQ0KICAgIFBhcmFtKCkNCg0KICAgICRPcmlnRXJyb3IgPSAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlDQogICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICJTaWxlbnRseUNvbnRpbnVlIg0KDQogICAgJFBhdGggPSAiJCgkRU5WOndpbmRpcilcU3lzdGVtMzJcVGFza3MiDQoNCiAgICAjIHJlY3Vyc2l2ZWx5IGVudW1lcmF0ZSBhbGwgc2NodGFzayAueG1scw0KICAgIEdldC1DaGlsZEl0ZW0gLVBhdGggJFBhdGggLVJlY3Vyc2UgfCBXaGVyZS1PYmplY3QgeyAtbm90ICRfLlBTSXNDb250YWluZXIgfSB8IEZvckVhY2gtT2JqZWN0IHsNCiAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICRUYXNrTmFtZSA9ICRfLk5hbWUNCiAgICAgICAgICAgICRUYXNrWE1MID0gW3htbF0gKEdldC1Db250ZW50ICRfLkZ1bGxOYW1lKQ0KICAgICAgICAgICAgaWYgKCRUYXNrWE1MLlRhc2suVHJpZ2dlcnMpIHsNCg0KICAgICAgICAgICAgICAgICRUYXNrVHJpZ2dlciA9ICRUYXNrWE1MLlRhc2suVHJpZ2dlcnMuT3V0ZXJYTUwNCg0KICAgICAgICAgICAgICAgICMgY2hlY2sgc2NodGFzayBjb21tYW5kDQogICAgICAgICAgICAgICAgJFRhc2tYTUwuVGFzay5BY3Rpb25zLkV4ZWMuQ29tbWFuZCB8IEdldC1Nb2RpZmlhYmxlUGF0aCB8IEZvckVhY2gtT2JqZWN0IHsNCiAgICAgICAgICAgICAgICAgICAgJE91dCA9IE5ldy1PYmplY3QgUFNPYmplY3QNCiAgICAgICAgICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdUYXNrTmFtZScgJFRhc2tOYW1lDQogICAgICAgICAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnVGFza0ZpbGVQYXRoJyAkXw0KICAgICAgICAgICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ1Rhc2tUcmlnZ2VyJyAkVGFza1RyaWdnZXINCiAgICAgICAgICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgQWxpYXNwcm9wZXJ0eSBOYW1lIFRhc2tOYW1lDQogICAgICAgICAgICAgICAgICAgICRPdXQuUFNPYmplY3QuVHlwZU5hbWVzLkluc2VydCgwLCAnUG93ZXJVcC5Nb2RpZmlhYmxlU2NoZWR1bGVkVGFza0ZpbGUnKQ0KICAgICAgICAgICAgICAgICAgICAkT3V0DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgIyBjaGVjayBzY2h0YXNrIGFyZ3VtZW50cw0KICAgICAgICAgICAgICAgICRUYXNrWE1MLlRhc2suQWN0aW9ucy5FeGVjLkFyZ3VtZW50cyB8IEdldC1Nb2RpZmlhYmxlUGF0aCB8IEZvckVhY2gtT2JqZWN0IHsNCiAgICAgICAgICAgICAgICAgICAgJE91dCA9IE5ldy1PYmplY3QgUFNPYmplY3QNCiAgICAgICAgICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdUYXNrTmFtZScgJFRhc2tOYW1lDQogICAgICAgICAgICAgICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnVGFza0ZpbGVQYXRoJyAkXw0KICAgICAgICAgICAgICAgICAgICAkT3V0IHwgQWRkLU1lbWJlciBOb3RlcHJvcGVydHkgJ1Rhc2tUcmlnZ2VyJyAkVGFza1RyaWdnZXINCiAgICAgICAgICAgICAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgQWxpYXNwcm9wZXJ0eSBOYW1lIFRhc2tOYW1lDQogICAgICAgICAgICAgICAgICAgICRPdXQuUFNPYmplY3QuVHlwZU5hbWVzLkluc2VydCgwLCAnUG93ZXJVcC5Nb2RpZmlhYmxlU2NoZWR1bGVkVGFza0ZpbGUnKQ0KICAgICAgICAgICAgICAgICAgICAkT3V0DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGNhdGNoIHsNCiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkVycm9yOiAkXyINCiAgICAgICAgfQ0KICAgIH0NCiAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJE9yaWdFcnJvcg0KfQ0KDQoNCmZ1bmN0aW9uIEdldC1VbmF0dGVuZGVkSW5zdGFsbEZpbGUgew0KPCMNCi5TWU5PUFNJUw0KDQpDaGVja3Mgc2V2ZXJhbCBsb2NhdGlvbnMgZm9yIHJlbWFpbmluZyB1bmF0dGVuZGVkIGluc3RhbGxhdGlvbiBmaWxlcywNCndoaWNoIG1heSBoYXZlIGRlcGxveW1lbnQgY3JlZGVudGlhbHMuDQoNCkF1dGhvcjogV2lsbCBTY2hyb2VkZXIgKEBoYXJtajB5KSAgDQpMaWNlbnNlOiBCU0QgMy1DbGF1c2UgIA0KUmVxdWlyZWQgRGVwZW5kZW5jaWVzOiBOb25lICANCg0KLkVYQU1QTEUNCg0KR2V0LVVuYXR0ZW5kZWRJbnN0YWxsRmlsZQ0KDQpGaW5kcyBhbnkgcmVtYWluaW5nIHVuYXR0ZW5kZWQgaW5zdGFsbGF0aW9uIGZpbGVzLg0KDQouTElOSw0KDQpodHRwOi8vd3d3LmZ1enp5c2VjdXJpdHkuY29tL3R1dG9yaWFscy8xNi5odG1sDQoNCi5PVVRQVVRTDQoNClBvd2VyVXAuVW5hdHRlbmRlZEluc3RhbGxGaWxlDQoNCkN1c3RvbSBQU09iamVjdCBjb250YWluaW5nIHJlc3VsdHMuDQojPg0KDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnUG93ZXJVcC5VbmF0dGVuZGVkSW5zdGFsbEZpbGUnKV0NCiAgICBbQ21kbGV0QmluZGluZygpXQ0KICAgIFBhcmFtKCkNCg0KICAgICRPcmlnRXJyb3IgPSAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlDQogICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICJTaWxlbnRseUNvbnRpbnVlIg0KDQogICAgJFNlYXJjaExvY2F0aW9ucyA9IEAoICAgImM6XHN5c3ByZXBcc3lzcHJlcC54bWwiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICJjOlxzeXNwcmVwXHN5c3ByZXAuaW5mIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYzpcc3lzcHJlcC5pbmYiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIChKb2luLVBhdGggJEVudjpXaW5EaXIgIlxQYW50aGVyXFVuYXR0ZW5kZWQueG1sIiksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKEpvaW4tUGF0aCAkRW52OldpbkRpciAiXFBhbnRoZXJcVW5hdHRlbmRcVW5hdHRlbmRlZC54bWwiKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoSm9pbi1QYXRoICRFbnY6V2luRGlyICJcUGFudGhlclxVbmF0dGVuZC54bWwiKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoSm9pbi1QYXRoICRFbnY6V2luRGlyICJcUGFudGhlclxVbmF0dGVuZFxVbmF0dGVuZC54bWwiKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoSm9pbi1QYXRoICRFbnY6V2luRGlyICJcU3lzdGVtMzJcU3lzcHJlcFx1bmF0dGVuZC54bWwiKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoSm9pbi1QYXRoICRFbnY6V2luRGlyICJcU3lzdGVtMzJcU3lzcHJlcFxQYW50aGVyXHVuYXR0ZW5kLnhtbCIpDQogICAgICAgICAgICAgICAgICAgICAgICApDQoNCiAgICAjIHRlc3QgdGhlIGV4aXN0ZW5jZSBvZiBlYWNoIHBhdGggYW5kIHJldHVybiBhbnl0aGluZyBmb3VuZA0KICAgICRTZWFyY2hMb2NhdGlvbnMgfCBXaGVyZS1PYmplY3QgeyBUZXN0LVBhdGggJF8gfSB8IEZvckVhY2gtT2JqZWN0IHsNCiAgICAgICAgJE91dCA9IE5ldy1PYmplY3QgUFNPYmplY3QNCiAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdVbmF0dGVuZFBhdGgnICRfDQogICAgICAgICRPdXQgfCBBZGQtTWVtYmVyIEFsaWFzcHJvcGVydHkgTmFtZSBVbmF0dGVuZFBhdGgNCiAgICAgICAgJE91dC5QU09iamVjdC5UeXBlTmFtZXMuSW5zZXJ0KDAsICdQb3dlclVwLlVuYXR0ZW5kZWRJbnN0YWxsRmlsZScpDQogICAgICAgICRPdXQNCiAgICB9DQoNCiAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJE9yaWdFcnJvcg0KfQ0KDQoNCmZ1bmN0aW9uIEdldC1XZWJDb25maWcgew0KPCMNCi5TWU5PUFNJUw0KDQpUaGlzIHNjcmlwdCB3aWxsIHJlY292ZXIgY2xlYXJ0ZXh0IGFuZCBlbmNyeXB0ZWQgY29ubmVjdGlvbiBzdHJpbmdzIGZyb20gYWxsIHdlYi5jb25maWcNCmZpbGVzIG9uIHRoZSBzeXN0ZW0uIEFsc28sIGl0IHdpbGwgZGVjcnlwdCB0aGVtIGlmIG5lZWRlZC4NCg0KQXV0aG9yOiBTY290dCBTdXRoZXJsYW5kLCBBbnR0aSBSYW50YXNhYXJpICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IE5vbmUgIA0KDQouREVTQ1JJUFRJT04NCg0KVGhpcyBzY3JpcHQgd2lsbCBpZGVudGlmeSBhbGwgb2YgdGhlIHdlYi5jb25maWcgZmlsZXMgb24gdGhlIHN5c3RlbSBhbmQgcmVjb3ZlciB0aGUNCmNvbm5lY3Rpb24gc3RyaW5ncyB1c2VkIHRvIHN1cHBvcnQgYXV0aGVudGljYXRpb24gdG8gYmFja2VuZCBkYXRhYmFzZXMuICBJZiBuZWVkZWQsIHRoZQ0Kc2NyaXB0IHdpbGwgYWxzbyBkZWNyeXB0IHRoZSBjb25uZWN0aW9uIHN0cmluZ3Mgb24gdGhlIGZseS4gIFRoZSBvdXRwdXQgc3VwcG9ydHMgdGhlDQpwaXBlbGluZSB3aGljaCBjYW4gYmUgdXNlZCB0byBjb252ZXJ0IGFsbCBvZiB0aGUgcmVzdWx0cyBpbnRvIGEgcHJldHR5IHRhYmxlIGJ5IHBpcGluZw0KdG8gZm9ybWF0LXRhYmxlLg0KDQouRVhBTVBMRQ0KDQpSZXR1cm4gYSBsaXN0IG9mIGNsZWFydGV4dCBhbmQgZGVjcnlwdGVkIGNvbm5lY3Qgc3RyaW5ncyBmcm9tIHdlYi5jb25maWcgZmlsZXMuDQoNCkdldC1XZWJDb25maWcNCg0KdXNlciAgIDogczFhZG1pbg0KcGFzcyAgIDogczFwYXNzd29yZA0KZGJzZXJ2IDogMTkyLjE2OC4xLjEwM1xzZXJ2ZXIxDQp2ZGlyICAgOiBDOlx0ZXN0Mg0KcGF0aCAgIDogQzpcdGVzdDJcd2ViLmNvbmZpZw0KZW5jciAgIDogTm8NCg0KdXNlciAgIDogczF1c2VyDQpwYXNzICAgOiBzMXBhc3N3b3JkDQpkYnNlcnYgOiAxOTIuMTY4LjEuMTAzXHNlcnZlcjENCnZkaXIgICA6IEM6XGluZXRwdWJcd3d3cm9vdA0KcGF0aCAgIDogQzpcaW5ldHB1Ylx3d3dyb290XHdlYi5jb25maWcNCmVuY3IgICA6IFllcw0KDQouRVhBTVBMRQ0KDQpSZXR1cm4gYSBsaXN0IG9mIGNsZWFyIHRleHQgYW5kIGRlY3J5cHRlZCBjb25uZWN0IHN0cmluZ3MgZnJvbSB3ZWIuY29uZmlnIGZpbGVzLg0KDQpHZXQtV2ViQ29uZmlnIHwgRm9ybWF0LVRhYmxlIC1BdXRvc2l6ZQ0KDQp1c2VyICAgIHBhc3MgICAgICAgZGJzZXJ2ICAgICAgICAgICAgICAgIHZkaXIgICAgICAgICAgICAgICBwYXRoICAgICAgICAgICAgICAgICAgICAgICAgICBlbmNyDQotLS0tICAgIC0tLS0gICAgICAgLS0tLS0tICAgICAgICAgICAgICAgIC0tLS0gICAgICAgICAgICAgICAtLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAtLS0tDQpzMWFkbWluIHMxcGFzc3dvcmQgMTkyLjE2OC4xLjEwMVxzZXJ2ZXIxIEM6XEFwcDEgICAgICAgICAgICBDOlxBcHAxXHdlYi5jb25maWcgICAgICAgICAgICBObw0KczF1c2VyICBzMXBhc3N3b3JkIDE5Mi4xNjguMS4xMDFcc2VydmVyMSBDOlxpbmV0cHViXHd3d3Jvb3QgQzpcaW5ldHB1Ylx3d3dyb290XHdlYi5jb25maWcgTm8NCnMydXNlciAgczJwYXNzd29yZCAxOTIuMTY4LjEuMTAyXHNlcnZlcjIgQzpcQXBwMiAgICAgICAgICAgIEM6XEFwcDJcdGVzdFx3ZWIuY29uZmlnICAgICAgIE5vDQpzMnVzZXIgIHMycGFzc3dvcmQgMTkyLjE2OC4xLjEwMlxzZXJ2ZXIyIEM6XEFwcDIgICAgICAgICAgICBDOlxBcHAyXHdlYi5jb25maWcgICAgICAgICAgICBZZXMNCnMzdXNlciAgczNwYXNzd29yZCAxOTIuMTY4LjEuMTAzXHNlcnZlcjMgRDpcQXBwMyAgICAgICAgICAgIEQ6XEFwcDNcd2ViLmNvbmZpZyAgICAgICAgICAgIE5vDQoNCi5PVVRQVVRTDQoNClN5c3RlbS5Cb29sZWFuDQoNClN5c3RlbS5EYXRhLkRhdGFUYWJsZQ0KDQouTElOSw0KDQpodHRwczovL2dpdGh1Yi5jb20vZGFya29wZXJhdG9yL1Bvc2gtU2VjTW9kL2Jsb2IvbWFzdGVyL1Bvc3RFeHBsb2l0YXRpb24vUG9zdEV4cGxvaXRhdGlvbi5wc20xDQpodHRwOi8vd3d3Lm5ldHNwaS5jb20NCmh0dHBzOi8vcmF3Mi5naXRodWIuY29tL05ldFNQSS9jbWRzcWwvbWFzdGVyL2NtZHNxbC5hc3B4DQpodHRwOi8vd3d3Lmlpcy5uZXQvbGVhcm4vZ2V0LXN0YXJ0ZWQvZ2V0dGluZy1zdGFydGVkLXdpdGgtaWlzL2dldHRpbmctc3RhcnRlZC13aXRoLWFwcGNtZGV4ZQ0KaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2s2aDljejhoKHY9dnMuODApLmFzcHgNCg0KLk5PVEVTDQoNCkJlbG93IGlzIGFuIGFsdGVyYW50aXZlIG1ldGhvZCBmb3IgZ3JhYmJpbmcgY29ubmVjdGlvbiBzdHJpbmdzLCBidXQgaXQgZG9lc24ndCBzdXBwb3J0IGRlY3J5cHRpb24uDQpmb3IgL2YgInRva2Vucz0qIiAlaSBpbiAoJyVzeXN0ZW1yb290JVxzeXN0ZW0zMlxpbmV0c3J2XGFwcGNtZC5leGUgbGlzdCBzaXRlcyAvdGV4dDpuYW1lJykgZG8gJXN5c3RlbXJvb3QlXHN5c3RlbTMyXGluZXRzcnZcYXBwY21kLmV4ZSBsaXN0IGNvbmZpZyAiJWkiIC1zZWN0aW9uOmNvbm5lY3Rpb25zdHJpbmdzDQoNCkF1dGhvcjogU2NvdHQgU3V0aGVybGFuZCAtIDIwMTQsIE5ldFNQSQ0KQXV0aG9yOiBBbnR0aSBSYW50YXNhYXJpIC0gMjAxNCwgTmV0U1BJDQojPg0KDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNBdm9pZFVzaW5nSW52b2tlRXhwcmVzc2lvbicsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnU3lzdGVtLkJvb2xlYW4nKV0NCiAgICBbT3V0cHV0VHlwZSgnU3lzdGVtLkRhdGEuRGF0YVRhYmxlJyldDQogICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICBQYXJhbSgpDQoNCiAgICAkT3JpZ0Vycm9yID0gJEVycm9yQWN0aW9uUHJlZmVyZW5jZQ0KICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnU2lsZW50bHlDb250aW51ZScNCg0KICAgICMgQ2hlY2sgaWYgYXBwY21kLmV4ZSBleGlzdHMNCiAgICBpZiAoVGVzdC1QYXRoICAoIiRFbnY6U3lzdGVtUm9vdFxTeXN0ZW0zMlxJbmV0U1JWXGFwcGNtZC5leGUiKSkgew0KDQogICAgICAgICMgQ3JlYXRlIGRhdGEgdGFibGUgdG8gaG91c2UgcmVzdWx0cw0KICAgICAgICAkRGF0YVRhYmxlID0gTmV3LU9iamVjdCBTeXN0ZW0uRGF0YS5EYXRhVGFibGUNCg0KICAgICAgICAjIENyZWF0ZSBhbmQgbmFtZSBjb2x1bW5zIGluIHRoZSBkYXRhIHRhYmxlDQogICAgICAgICROdWxsID0gJERhdGFUYWJsZS5Db2x1bW5zLkFkZCgndXNlcicpDQogICAgICAgICROdWxsID0gJERhdGFUYWJsZS5Db2x1bW5zLkFkZCgncGFzcycpDQogICAgICAgICROdWxsID0gJERhdGFUYWJsZS5Db2x1bW5zLkFkZCgnZGJzZXJ2JykNCiAgICAgICAgJE51bGwgPSAkRGF0YVRhYmxlLkNvbHVtbnMuQWRkKCd2ZGlyJykNCiAgICAgICAgJE51bGwgPSAkRGF0YVRhYmxlLkNvbHVtbnMuQWRkKCdwYXRoJykNCiAgICAgICAgJE51bGwgPSAkRGF0YVRhYmxlLkNvbHVtbnMuQWRkKCdlbmNyJykNCg0KICAgICAgICAjIEdldCBsaXN0IG9mIHZpcnR1YWwgZGlyZWN0b3JpZXMgaW4gSUlTDQogICAgICAgIEM6XFdpbmRvd3NcU3lzdGVtMzJcSW5ldFNSVlxhcHBjbWQuZXhlIGxpc3QgdmRpciAvdGV4dDpwaHlzaWNhbHBhdGggfA0KICAgICAgICBGb3JFYWNoLU9iamVjdCB7DQoNCiAgICAgICAgICAgICRDdXJyZW50VmRpciA9ICRfDQoNCiAgICAgICAgICAgICMgQ29udmVydHMgQ01EIHN0eWxlIGVudiB2YXJzICglKSB0byBwb3dlcnNoZWxsIGVudiB2YXJzIChlbnYpDQogICAgICAgICAgICBpZiAoJF8gLWxpa2UgIiolKiIpIHsNCiAgICAgICAgICAgICAgICAkRW52YXJOYW1lID0gImAkRW52OiIrJF8uc3BsaXQoIiUiKVsxXQ0KICAgICAgICAgICAgICAgICRFbnZhclZhbHVlID0gSW52b2tlLUV4cHJlc3Npb24gJEVudmFyTmFtZQ0KICAgICAgICAgICAgICAgICRSZXN0b2ZQYXRoID0gJF8uc3BsaXQoJyUnKVsyXQ0KICAgICAgICAgICAgICAgICRDdXJyZW50VmRpciAgPSAkRW52YXJWYWx1ZSskUmVzdG9mUGF0aA0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjIFNlYXJjaCBmb3Igd2ViLmNvbmZpZyBmaWxlcyBpbiBlYWNoIHZpcnR1YWwgZGlyZWN0b3J5DQogICAgICAgICAgICAkQ3VycmVudFZkaXIgfCBHZXQtQ2hpbGRJdGVtIC1SZWN1cnNlIC1GaWx0ZXIgd2ViLmNvbmZpZyB8IEZvckVhY2gtT2JqZWN0IHsNCg0KICAgICAgICAgICAgICAgICMgU2V0IHdlYi5jb25maWcgcGF0aA0KICAgICAgICAgICAgICAgICRDdXJyZW50UGF0aCA9ICRfLmZ1bGxuYW1lDQoNCiAgICAgICAgICAgICAgICAjIFJlYWQgdGhlIGRhdGEgZnJvbSB0aGUgd2ViLmNvbmZpZyB4bWwgZmlsZQ0KICAgICAgICAgICAgICAgIFt4bWxdJENvbmZpZ0ZpbGUgPSBHZXQtQ29udGVudCAkXy5mdWxsbmFtZQ0KDQogICAgICAgICAgICAgICAgIyBDaGVjayBpZiB0aGUgY29ubmVjdGlvblN0cmluZ3MgYXJlIGVuY3J5cHRlZA0KICAgICAgICAgICAgICAgIGlmICgkQ29uZmlnRmlsZS5jb25maWd1cmF0aW9uLmNvbm5lY3Rpb25TdHJpbmdzLmFkZCkgew0KDQogICAgICAgICAgICAgICAgICAgICMgRm9yZWFjaCBjb25uZWN0aW9uIHN0cmluZyBhZGQgdG8gZGF0YSB0YWJsZQ0KICAgICAgICAgICAgICAgICAgICAkQ29uZmlnRmlsZS5jb25maWd1cmF0aW9uLmNvbm5lY3Rpb25TdHJpbmdzLmFkZHwNCiAgICAgICAgICAgICAgICAgICAgRm9yRWFjaC1PYmplY3Qgew0KDQogICAgICAgICAgICAgICAgICAgICAgICBbU3RyaW5nXSRNeUNvblN0cmluZyA9ICRfLmNvbm5lY3Rpb25TdHJpbmcNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkTXlDb25TdHJpbmcgLWxpa2UgJypwYXNzd29yZConKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJENvbmZVc2VyID0gJE15Q29uU3RyaW5nLlNwbGl0KCc9JylbM10uU3BsaXQoJzsnKVswXQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRDb25mUGFzcyA9ICRNeUNvblN0cmluZy5TcGxpdCgnPScpWzRdLlNwbGl0KCc7JylbMF0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkQ29uZlNlcnYgPSAkTXlDb25TdHJpbmcuU3BsaXQoJz0nKVsxXS5TcGxpdCgnOycpWzBdDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJENvbmZWZGlyID0gJEN1cnJlbnRWZGlyDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJENvbmZFbmMgPSAnTm8nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJE51bGwgPSAkRGF0YVRhYmxlLlJvd3MuQWRkKCRDb25mVXNlciwgJENvbmZQYXNzLCAkQ29uZlNlcnYsICRDb25mVmRpciwgJEN1cnJlbnRQYXRoLCAkQ29uZkVuYykNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBlbHNlIHsNCg0KICAgICAgICAgICAgICAgICAgICAjIEZpbmQgbmV3ZXN0IHZlcnNpb24gb2YgYXNwbmV0X3JlZ2lpcy5leGUgdG8gdXNlIChpdCB3b3JrcyB3aXRoIG9sZGVyIHZlcnNpb25zKQ0KICAgICAgICAgICAgICAgICAgICAkQXNwbmV0UmVnaWlzUGF0aCA9IEdldC1DaGlsZEl0ZW0gLVBhdGggIiRFbnY6U3lzdGVtUm9vdFxNaWNyb3NvZnQuTkVUXEZyYW1ld29ya1wiIC1SZWN1cnNlIC1maWx0ZXIgJ2FzcG5ldF9yZWdpaXMuZXhlJyAgfCBTb3J0LU9iamVjdCAtRGVzY2VuZGluZyB8IFNlbGVjdC1PYmplY3QgZnVsbG5hbWUgLUZpcnN0IDENCg0KICAgICAgICAgICAgICAgICAgICAjIENoZWNrIGlmIGFzcG5ldF9yZWdpaXMuZXhlIGV4aXN0cw0KICAgICAgICAgICAgICAgICAgICBpZiAoVGVzdC1QYXRoICAoJEFzcG5ldFJlZ2lpc1BhdGguRnVsbE5hbWUpKSB7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICMgU2V0dXAgcGF0aCBmb3IgdGVtcCB3ZWIuY29uZmlnIHRvIHRoZSBjdXJyZW50IHVzZXIncyB0ZW1wIGRpcg0KICAgICAgICAgICAgICAgICAgICAgICAgJFdlYkNvbmZpZ1BhdGggPSAoR2V0LUl0ZW0gJEVudjp0ZW1wKS5GdWxsTmFtZSArICdcd2ViLmNvbmZpZycNCg0KICAgICAgICAgICAgICAgICAgICAgICAgIyBSZW1vdmUgZXhpc3RpbmcgdGVtcCB3ZWIuY29uZmlnDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoVGVzdC1QYXRoICAoJFdlYkNvbmZpZ1BhdGgpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVtb3ZlLUl0ZW0gJFdlYkNvbmZpZ1BhdGgNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgIyBDb3B5IHdlYi5jb25maWcgZnJvbSB2ZGlyIHRvIHVzZXIgdGVtcCBmb3IgZGVjcnlwdGlvbg0KICAgICAgICAgICAgICAgICAgICAgICAgQ29weS1JdGVtICRDdXJyZW50UGF0aCAkV2ViQ29uZmlnUGF0aA0KDQogICAgICAgICAgICAgICAgICAgICAgICAjIERlY3J5cHQgd2ViLmNvbmZpZyBpbiB1c2VyIHRlbXANCiAgICAgICAgICAgICAgICAgICAgICAgICRBc3BuZXRSZWdpaXNDbWQgPSAkQXNwbmV0UmVnaWlzUGF0aC5mdWxsbmFtZSsnIC1wZGYgImNvbm5lY3Rpb25TdHJpbmdzIiAoZ2V0LWl0ZW0gJEVudjp0ZW1wKS5GdWxsTmFtZScNCiAgICAgICAgICAgICAgICAgICAgICAgICROdWxsID0gSW52b2tlLUV4cHJlc3Npb24gJEFzcG5ldFJlZ2lpc0NtZA0KDQogICAgICAgICAgICAgICAgICAgICAgICAjIFJlYWQgdGhlIGRhdGEgZnJvbSB0aGUgd2ViLmNvbmZpZyBpbiB0ZW1wDQogICAgICAgICAgICAgICAgICAgICAgICBbeG1sXSRUTVBDb25maWdGaWxlID0gR2V0LUNvbnRlbnQgJFdlYkNvbmZpZ1BhdGgNCg0KICAgICAgICAgICAgICAgICAgICAgICAgIyBDaGVjayBpZiB0aGUgY29ubmVjdGlvblN0cmluZ3MgYXJlIHN0aWxsIGVuY3J5cHRlZA0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRUTVBDb25maWdGaWxlLmNvbmZpZ3VyYXRpb24uY29ubmVjdGlvblN0cmluZ3MuYWRkKSB7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIEZvcmVhY2ggY29ubmVjdGlvbiBzdHJpbmcgYWRkIHRvIGRhdGEgdGFibGUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkVE1QQ29uZmlnRmlsZS5jb25maWd1cmF0aW9uLmNvbm5lY3Rpb25TdHJpbmdzLmFkZCB8IEZvckVhY2gtT2JqZWN0IHsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbU3RyaW5nXSRNeUNvblN0cmluZyA9ICRfLmNvbm5lY3Rpb25TdHJpbmcNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRNeUNvblN0cmluZyAtbGlrZSAnKnBhc3N3b3JkKicpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRDb25mVXNlciA9ICRNeUNvblN0cmluZy5TcGxpdCgnPScpWzNdLlNwbGl0KCc7JylbMF0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRDb25mUGFzcyA9ICRNeUNvblN0cmluZy5TcGxpdCgnPScpWzRdLlNwbGl0KCc7JylbMF0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRDb25mU2VydiA9ICRNeUNvblN0cmluZy5TcGxpdCgnPScpWzFdLlNwbGl0KCc7JylbMF0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRDb25mVmRpciA9ICRDdXJyZW50VmRpcg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJENvbmZFbmMgPSAnWWVzJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJE51bGwgPSAkRGF0YVRhYmxlLlJvd3MuQWRkKCRDb25mVXNlciwgJENvbmZQYXNzLCAkQ29uZlNlcnYsICRDb25mVmRpciwgJEN1cnJlbnRQYXRoLCAkQ29uZkVuYykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkRlY3J5cHRpb24gb2YgJEN1cnJlbnRQYXRoIGZhaWxlZC4iDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJEZhbHNlDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICdhc3BuZXRfcmVnaWlzLmV4ZSBkb2VzIG5vdCBleGlzdCBpbiB0aGUgZGVmYXVsdCBsb2NhdGlvbi4nDQogICAgICAgICAgICAgICAgICAgICAgICAkRmFsc2UNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgICMgQ2hlY2sgaWYgYW55IGNvbm5lY3Rpb24gc3RyaW5ncyB3ZXJlIGZvdW5kDQogICAgICAgIGlmICggJERhdGFUYWJsZS5yb3dzLkNvdW50IC1ndCAwICkgew0KICAgICAgICAgICAgIyBEaXNwbGF5IHJlc3VsdHMgaW4gbGlzdCB2aWV3IHRoYXQgY2FuIGZlZWQgaW50byB0aGUgcGlwZWxpbmUNCiAgICAgICAgICAgICREYXRhVGFibGUgfCBTb3J0LU9iamVjdCB1c2VyLHBhc3MsZGJzZXJ2LHZkaXIscGF0aCxlbmNyIHwgU2VsZWN0LU9iamVjdCB1c2VyLHBhc3MsZGJzZXJ2LHZkaXIscGF0aCxlbmNyIC1VbmlxdWUNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgJ05vIGNvbm5lY3Rpb24gc3RyaW5ncyBmb3VuZC4nDQogICAgICAgICAgICAkRmFsc2UNCiAgICAgICAgfQ0KICAgIH0NCiAgICBlbHNlIHsNCiAgICAgICAgV3JpdGUtVmVyYm9zZSAnQXBwY21kLmV4ZSBkb2VzIG5vdCBleGlzdCBpbiB0aGUgZGVmYXVsdCBsb2NhdGlvbi4nDQogICAgICAgICRGYWxzZQ0KICAgIH0NCiAgICAkRXJyb3JBY3Rpb25QcmVmZXJlbmNlID0gJE9yaWdFcnJvcg0KfQ0KDQoNCmZ1bmN0aW9uIEdldC1BcHBsaWNhdGlvbkhvc3Qgew0KPCMNCi5TWU5PUFNJUw0KDQpSZWNvdmVycyBlbmNyeXB0ZWQgYXBwbGljYXRpb24gcG9vbCBhbmQgdmlydHVhbCBkaXJlY3RvcnkgcGFzc3dvcmRzIGZyb20gdGhlIGFwcGxpY2F0aW9uSG9zdC5jb25maWcgb24gdGhlIHN5c3RlbS4NCg0KQXV0aG9yOiBTY290dCBTdXRoZXJsYW5kICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IE5vbmUgIA0KDQouREVTQ1JJUFRJT04NCg0KVGhpcyBzY3JpcHQgd2lsbCBkZWNyeXB0IGFuZCByZWNvdmVyIGFwcGxpY2F0aW9uIHBvb2wgYW5kIHZpcnR1YWwgZGlyZWN0b3J5IHBhc3N3b3Jkcw0KZnJvbSB0aGUgYXBwbGljYXRpb25Ib3N0LmNvbmZpZyBmaWxlIG9uIHRoZSBzeXN0ZW0uICBUaGUgb3V0cHV0IHN1cHBvcnRzIHRoZQ0KcGlwZWxpbmUgd2hpY2ggY2FuIGJlIHVzZWQgdG8gY29udmVydCBhbGwgb2YgdGhlIHJlc3VsdHMgaW50byBhIHByZXR0eSB0YWJsZSBieSBwaXBpbmcNCnRvIGZvcm1hdC10YWJsZS4NCg0KLkVYQU1QTEUNCg0KUmV0dXJuIGFwcGxpY2F0aW9uIHBvb2wgYW5kIHZpcnR1YWwgZGlyZWN0b3J5IHBhc3N3b3JkcyBmcm9tIHRoZSBhcHBsaWNhdGlvbkhvc3QuY29uZmlnIG9uIHRoZSBzeXN0ZW0uDQoNCkdldC1BcHBsaWNhdGlvbkhvc3QNCg0KdXNlciAgICA6IFBvb2xVc2VyMQ0KcGFzcyAgICA6IFBvb2xQYXJ0eTEhDQp0eXBlICAgIDogQXBwbGljYXRpb24gUG9vbA0KdmRpciAgICA6IE5BDQphcHBwb29sIDogQXBwbGljYXRpb25Qb29sMQ0KdXNlciAgICA6IFBvb2xVc2VyMg0KcGFzcyAgICA6IFBvb2xQYXJ0eTIhDQp0eXBlICAgIDogQXBwbGljYXRpb24gUG9vbA0KdmRpciAgICA6IE5BDQphcHBwb29sIDogQXBwbGljYXRpb25Qb29sMg0KdXNlciAgICA6IFZkaXJVc2VyMQ0KcGFzcyAgICA6IFZkaXJQYXNzd29yZDEhDQp0eXBlICAgIDogVmlydHVhbCBEaXJlY3RvcnkNCnZkaXIgICAgOiBzaXRlMS92ZGlyMS8NCmFwcHBvb2wgOiBOQQ0KdXNlciAgICA6IFZkaXJVc2VyMg0KcGFzcyAgICA6IFZkaXJQYXNzd29yZDIhDQp0eXBlICAgIDogVmlydHVhbCBEaXJlY3RvcnkNCnZkaXIgICAgOiBzaXRlMi8NCmFwcHBvb2wgOiBOQQ0KDQouRVhBTVBMRQ0KDQpSZXR1cm4gYSBsaXN0IG9mIGNsZWFydGV4dCBhbmQgZGVjcnlwdGVkIGNvbm5lY3Qgc3RyaW5ncyBmcm9tIHdlYi5jb25maWcgZmlsZXMuDQoNCkdldC1BcHBsaWNhdGlvbkhvc3QgfCBGb3JtYXQtVGFibGUgLUF1dG9zaXplDQoNCnVzZXIgICAgICAgICAgcGFzcyAgICAgICAgICAgICAgIHR5cGUgICAgICAgICAgICAgIHZkaXIgICAgICAgICBhcHBwb29sDQotLS0tICAgICAgICAgIC0tLS0gICAgICAgICAgICAgICAtLS0tICAgICAgICAgICAgICAtLS0tICAgICAgICAgLS0tLS0tLQ0KUG9vbFVzZXIxICAgICBQb29sUGFydHkxISAgICAgICBBcHBsaWNhdGlvbiBQb29sICAgTkEgICAgICAgICAgIEFwcGxpY2F0aW9uUG9vbDENClBvb2xVc2VyMiAgICAgUG9vbFBhcnR5MiEgICAgICAgQXBwbGljYXRpb24gUG9vbCAgIE5BICAgICAgICAgICBBcHBsaWNhdGlvblBvb2wyDQpWZGlyVXNlcjEgICAgIFZkaXJQYXNzd29yZDEhICAgIFZpcnR1YWwgRGlyZWN0b3J5ICBzaXRlMS92ZGlyMS8gTkENClZkaXJVc2VyMiAgICAgVmRpclBhc3N3b3JkMiEgICAgVmlydHVhbCBEaXJlY3RvcnkgIHNpdGUyLyAgICAgICBOQQ0KDQouT1VUUFVUUw0KDQpTeXN0ZW0uRGF0YS5EYXRhVGFibGUNCg0KU3lzdGVtLkJvb2xlYW4NCg0KLkxJTksNCg0KaHR0cHM6Ly9naXRodWIuY29tL2RhcmtvcGVyYXRvci9Qb3NoLVNlY01vZC9ibG9iL21hc3Rlci9Qb3N0RXhwbG9pdGF0aW9uL1Bvc3RFeHBsb2l0YXRpb24ucHNtMQ0KaHR0cDovL3d3dy5uZXRzcGkuY29tDQpodHRwOi8vd3d3Lmlpcy5uZXQvbGVhcm4vZ2V0LXN0YXJ0ZWQvZ2V0dGluZy1zdGFydGVkLXdpdGgtaWlzL2dldHRpbmctc3RhcnRlZC13aXRoLWFwcGNtZGV4ZQ0KaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2s2aDljejhoKHY9dnMuODApLmFzcHgNCg0KLk5PVEVTDQoNCkF1dGhvcjogU2NvdHQgU3V0aGVybGFuZCAtIDIwMTQsIE5ldFNQSQ0KVmVyc2lvbjogR2V0LUFwcGxpY2F0aW9uSG9zdCB2MS4wDQpDb21tZW50czogU2hvdWxkIHdvcmsgb24gSUlTIDYgYW5kIEFib3ZlDQojPg0KDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNBdm9pZFVzaW5nSW52b2tlRXhwcmVzc2lvbicsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnU3lzdGVtLkRhdGEuRGF0YVRhYmxlJyldDQogICAgW091dHB1dFR5cGUoJ1N5c3RlbS5Cb29sZWFuJyldDQogICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICBQYXJhbSgpDQoNCiAgICAkT3JpZ0Vycm9yID0gJEVycm9yQWN0aW9uUHJlZmVyZW5jZQ0KICAgICRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAnU2lsZW50bHlDb250aW51ZScNCg0KICAgICMgQ2hlY2sgaWYgYXBwY21kLmV4ZSBleGlzdHMNCiAgICBpZiAoVGVzdC1QYXRoICAoIiRFbnY6U3lzdGVtUm9vdFxTeXN0ZW0zMlxpbmV0c3J2XGFwcGNtZC5leGUiKSkgew0KICAgICAgICAjIENyZWF0ZSBkYXRhIHRhYmxlIHRvIGhvdXNlIHJlc3VsdHMNCiAgICAgICAgJERhdGFUYWJsZSA9IE5ldy1PYmplY3QgU3lzdGVtLkRhdGEuRGF0YVRhYmxlDQoNCiAgICAgICAgIyBDcmVhdGUgYW5kIG5hbWUgY29sdW1ucyBpbiB0aGUgZGF0YSB0YWJsZQ0KICAgICAgICAkTnVsbCA9ICREYXRhVGFibGUuQ29sdW1ucy5BZGQoJ3VzZXInKQ0KICAgICAgICAkTnVsbCA9ICREYXRhVGFibGUuQ29sdW1ucy5BZGQoJ3Bhc3MnKQ0KICAgICAgICAkTnVsbCA9ICREYXRhVGFibGUuQ29sdW1ucy5BZGQoJ3R5cGUnKQ0KICAgICAgICAkTnVsbCA9ICREYXRhVGFibGUuQ29sdW1ucy5BZGQoJ3ZkaXInKQ0KICAgICAgICAkTnVsbCA9ICREYXRhVGFibGUuQ29sdW1ucy5BZGQoJ2FwcHBvb2wnKQ0KDQogICAgICAgICMgR2V0IGxpc3Qgb2YgYXBwbGljYXRpb24gcG9vbHMNCiAgICAgICAgSW52b2tlLUV4cHJlc3Npb24gIiRFbnY6U3lzdGVtUm9vdFxTeXN0ZW0zMlxpbmV0c3J2XGFwcGNtZC5leGUgbGlzdCBhcHBwb29scyAvdGV4dDpuYW1lIiB8IEZvckVhY2gtT2JqZWN0IHsNCg0KICAgICAgICAgICAgIyBHZXQgYXBwbGljYXRpb24gcG9vbCBuYW1lDQogICAgICAgICAgICAkUG9vbE5hbWUgPSAkXw0KDQogICAgICAgICAgICAjIEdldCB1c2VybmFtZQ0KICAgICAgICAgICAgJFBvb2xVc2VyQ21kID0gIiRFbnY6U3lzdGVtUm9vdFxTeXN0ZW0zMlxpbmV0c3J2XGFwcGNtZC5leGUgbGlzdCBhcHBwb29sICIgKyAiYCIkUG9vbE5hbWVgIiAvdGV4dDpwcm9jZXNzbW9kZWwudXNlcm5hbWUiDQogICAgICAgICAgICAkUG9vbFVzZXIgPSBJbnZva2UtRXhwcmVzc2lvbiAkUG9vbFVzZXJDbWQNCg0KICAgICAgICAgICAgIyBHZXQgcGFzc3dvcmQNCiAgICAgICAgICAgICRQb29sUGFzc3dvcmRDbWQgPSAiJEVudjpTeXN0ZW1Sb290XFN5c3RlbTMyXGluZXRzcnZcYXBwY21kLmV4ZSBsaXN0IGFwcHBvb2wgIiArICJgIiRQb29sTmFtZWAiIC90ZXh0OnByb2Nlc3Ntb2RlbC5wYXNzd29yZCINCiAgICAgICAgICAgICRQb29sUGFzc3dvcmQgPSBJbnZva2UtRXhwcmVzc2lvbiAkUG9vbFBhc3N3b3JkQ21kDQoNCiAgICAgICAgICAgICMgQ2hlY2sgaWYgY3JlZGVudGlhbHMgZXhpc3RzDQogICAgICAgICAgICBpZiAoKCRQb29sUGFzc3dvcmQgLW5lICIiKSAtYW5kICgkUG9vbFBhc3N3b3JkIC1pc25vdCBbc3lzdGVtLmFycmF5XSkpIHsNCiAgICAgICAgICAgICAgICAjIEFkZCBjcmVkZW50aWFscyB0byBkYXRhYmFzZQ0KICAgICAgICAgICAgICAgICROdWxsID0gJERhdGFUYWJsZS5Sb3dzLkFkZCgkUG9vbFVzZXIsICRQb29sUGFzc3dvcmQsJ0FwcGxpY2F0aW9uIFBvb2wnLCdOQScsJFBvb2xOYW1lKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgIyBHZXQgbGlzdCBvZiB2aXJ0dWFsIGRpcmVjdG9yaWVzDQogICAgICAgIEludm9rZS1FeHByZXNzaW9uICIkRW52OlN5c3RlbVJvb3RcU3lzdGVtMzJcaW5ldHNydlxhcHBjbWQuZXhlIGxpc3QgdmRpciAvdGV4dDp2ZGlyLm5hbWUiIHwgRm9yRWFjaC1PYmplY3Qgew0KDQogICAgICAgICAgICAjIEdldCBWaXJ0dWFsIERpcmVjdG9yeSBOYW1lDQogICAgICAgICAgICAkVmRpck5hbWUgPSAkXw0KDQogICAgICAgICAgICAjIEdldCB1c2VybmFtZQ0KICAgICAgICAgICAgJFZkaXJVc2VyQ21kID0gIiRFbnY6U3lzdGVtUm9vdFxTeXN0ZW0zMlxpbmV0c3J2XGFwcGNtZC5leGUgbGlzdCB2ZGlyICIgKyAiYCIkVmRpck5hbWVgIiAvdGV4dDp1c2VyTmFtZSINCiAgICAgICAgICAgICRWZGlyVXNlciA9IEludm9rZS1FeHByZXNzaW9uICRWZGlyVXNlckNtZA0KDQogICAgICAgICAgICAjIEdldCBwYXNzd29yZA0KICAgICAgICAgICAgJFZkaXJQYXNzd29yZENtZCA9ICIkRW52OlN5c3RlbVJvb3RcU3lzdGVtMzJcaW5ldHNydlxhcHBjbWQuZXhlIGxpc3QgdmRpciAiICsgImAiJFZkaXJOYW1lYCIgL3RleHQ6cGFzc3dvcmQiDQogICAgICAgICAgICAkVmRpclBhc3N3b3JkID0gSW52b2tlLUV4cHJlc3Npb24gJFZkaXJQYXNzd29yZENtZA0KDQogICAgICAgICAgICAjIENoZWNrIGlmIGNyZWRlbnRpYWxzIGV4aXN0cw0KICAgICAgICAgICAgaWYgKCgkVmRpclBhc3N3b3JkIC1uZSAiIikgLWFuZCAoJFZkaXJQYXNzd29yZCAtaXNub3QgW3N5c3RlbS5hcnJheV0pKSB7DQogICAgICAgICAgICAgICAgIyBBZGQgY3JlZGVudGlhbHMgdG8gZGF0YWJhc2UNCiAgICAgICAgICAgICAgICAkTnVsbCA9ICREYXRhVGFibGUuUm93cy5BZGQoJFZkaXJVc2VyLCAkVmRpclBhc3N3b3JkLCdWaXJ0dWFsIERpcmVjdG9yeScsJFZkaXJOYW1lLCdOQScpDQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAjIENoZWNrIGlmIGFueSBwYXNzd29yZHMgd2VyZSBmb3VuZA0KICAgICAgICBpZiAoICREYXRhVGFibGUucm93cy5Db3VudCAtZ3QgMCApIHsNCiAgICAgICAgICAgICMgRGlzcGxheSByZXN1bHRzIGluIGxpc3QgdmlldyB0aGF0IGNhbiBmZWVkIGludG8gdGhlIHBpcGVsaW5lDQogICAgICAgICAgICAkRGF0YVRhYmxlIHwgIFNvcnQtT2JqZWN0IHR5cGUsdXNlcixwYXNzLHZkaXIsYXBwcG9vbCB8IFNlbGVjdC1PYmplY3QgdXNlcixwYXNzLHR5cGUsdmRpcixhcHBwb29sIC1VbmlxdWUNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICMgU3RhdHVzIHVzZXINCiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgJ05vIGFwcGxpY2F0aW9uIHBvb2wgb3IgdmlydHVhbCBkaXJlY3RvcnkgcGFzc3dvcmRzIHdlcmUgZm91bmQuJw0KICAgICAgICAgICAgJEZhbHNlDQogICAgICAgIH0NCiAgICB9DQogICAgZWxzZSB7DQogICAgICAgIFdyaXRlLVZlcmJvc2UgJ0FwcGNtZC5leGUgZG9lcyBub3QgZXhpc3QgaW4gdGhlIGRlZmF1bHQgbG9jYXRpb24uJw0KICAgICAgICAkRmFsc2UNCiAgICB9DQogICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICRPcmlnRXJyb3INCn0NCg0KDQpmdW5jdGlvbiBHZXQtU2l0ZUxpc3RQYXNzd29yZCB7DQo8Iw0KLlNZTk9QU0lTDQoNClJldHJpZXZlcyB0aGUgcGxhaW50ZXh0IHBhc3N3b3JkcyBmb3IgZm91bmQgTWNBZmVlJ3MgU2l0ZUxpc3QueG1sIGZpbGVzLg0KQmFzZWQgb24gSmVyb21lIE5va2luIChAZnVub3ZlcmlwKSdzIFB5dGhvbiBzb2x1dGlvbiAoaW4gbGlua3MpLg0KDQpBdXRob3I6IEplcm9tZSBOb2tpbiAoQGZ1bm92ZXJpcCkgIA0KUG93ZXJTaGVsbCBQb3J0OiBAaGFybWoweSAgDQpMaWNlbnNlOiBCU0QgMy1DbGF1c2UgIA0KUmVxdWlyZWQgRGVwZW5kZW5jaWVzOiBOb25lICANCg0KLkRFU0NSSVBUSU9ODQoNClNlYXJjaGVzIGZvciBhbnkgTWNBZmVlIFNpdGVMaXN0LnhtbCBpbiBDOlxQcm9ncmFtIEZpbGVzXCwgQzpcUHJvZ3JhbSBGaWxlcyAoeDg2KVwsDQpDOlxEb2N1bWVudHMgYW5kIFNldHRpbmdzXCwgb3IgQzpcVXNlcnNcLiBGb3IgYW55IGZpbGVzIGZvdW5kLCB0aGUgYXBwcm9wcmlhdGUNCmNyZWRlbnRpYWwgZmllbGRzIGFyZSBleHRyYWN0ZWQgYW5kIGRlY3J5cHRlZCB1c2luZyB0aGUgaW50ZXJuYWwgR2V0LURlY3J5cHRlZFNpdGVsaXN0UGFzc3dvcmQNCmZ1bmN0aW9uIHRoYXQgdGFrZXMgYWR2YW50YWdlIG9mIE1jQWZlZSdzIHN0YXRpYyBrZXkgZW5jcnlwdGlvbi4gQW55IGRlY3J5cHRlZCBjcmVkZW50aWFscw0KYXJlIG91dHB1dCBpbiBjdXN0b20gb2JqZWN0cy4gU2VlIGxpbmtzIGZvciBtb3JlIGluZm9ybWF0aW9uLg0KDQouUEFSQU1FVEVSIFBhdGgNCg0KT3B0aW9uYWwgcGF0aCB0byBhIFNpdGVMaXN0LnhtbCBmaWxlIG9yIGZvbGRlci4NCg0KLkVYQU1QTEUNCg0KR2V0LVNpdGVMaXN0UGFzc3dvcmQNCg0KRW5jUGFzc3dvcmQgOiBqV2JUeVM3QkwxSGo3UGtPNURpL1FoaFltY0dqNWNPb1oyT2tEVHJGWHNSL2FiQUZQTTlCM1E9PQ0KVXNlck5hbWUgICAgOg0KUGF0aCAgICAgICAgOiBQcm9kdWN0cy9Db21tb25VcGRhdGVyDQpOYW1lICAgICAgICA6IE1jQWZlZUh0dHANCkRlY1Bhc3N3b3JkIDogTXlTdHJvbmdQYXNzd29yZCENCkVuYWJsZWQgICAgIDogMQ0KRG9tYWluTmFtZSAgOg0KU2VydmVyICAgICAgOiB1cGRhdGUubmFpLmNvbTo4MA0KDQpFbmNQYXNzd29yZCA6IGpXYlR5UzdCTDFIajdQa081RGkvUWhoWW1jR2o1Y09vWjJPa0RUckZYc1IvYWJBRlBNOUIzUT09DQpVc2VyTmFtZSAgICA6IE1jQWZlZVNlcnZpY2UNClBhdGggICAgICAgIDogUmVwb3NpdG9yeSQNCk5hbWUgICAgICAgIDogUGFyaXMNCkRlY1Bhc3N3b3JkIDogTXlTdHJvbmdQYXNzd29yZCENCkVuYWJsZWQgICAgIDogMQ0KRG9tYWluTmFtZSAgOiBjb21wYW55ZG9tYWluDQpTZXJ2ZXIgICAgICA6IHBhcmlzMDAxDQoNCkVuY1Bhc3N3b3JkIDogaldiVHlTN0JMMUhqN1BrTzVEaS9RaGhZbWNHajVjT29aMk9rRFRyRlhzUi9hYkFGUE05QjNRPT0NClVzZXJOYW1lICAgIDogTWNBZmVlU2VydmljZQ0KUGF0aCAgICAgICAgOiBSZXBvc2l0b3J5JA0KTmFtZSAgICAgICAgOiBUb2t5bw0KRGVjUGFzc3dvcmQgOiBNeVN0cm9uZ1Bhc3N3b3JkIQ0KRW5hYmxlZCAgICAgOiAxDQpEb21haW5OYW1lICA6IGNvbXBhbnlkb21haW4NClNlcnZlciAgICAgIDogdG9reW8wMDANCg0KLk9VVFBVVFMNCg0KUG93ZXJVcC5TaXRlTGlzdFBhc3N3b3JkDQoNCi5MSU5LDQoNCmh0dHBzOi8vZ2l0aHViLmNvbS9mdW5vdmVyaXAvbWNhZmVlLXNpdGVsaXN0LXB3ZC1kZWNyeXB0aW9uLw0KaHR0cHM6Ly9mdW5vdmVyaXAubmV0LzIwMTYvMDIvbWNhZmVlLXNpdGVsaXN0LXhtbC1wYXNzd29yZC1kZWNyeXB0aW9uLw0KaHR0cHM6Ly9naXRodWIuY29tL3RmYWlyYW5lL0hhY2tTdG9yeS9ibG9iL21hc3Rlci9NY0FmZWVQcml2ZXNjLm1kDQpodHRwczovL3d3dy5zeXNzLmRlL2ZpbGVhZG1pbi9kb2t1bWVudGUvUHVibGlrYXRpb25lbi8yMDExL1N5U1NfMjAxMV9EZWVnX1ByaXZpbGVnZV9Fc2NhbGF0aW9uX3ZpYV9BbnRpdmlydXNfU29mdHdhcmUucGRmDQojPg0KDQogICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICBbT3V0cHV0VHlwZSgnUG93ZXJVcC5TaXRlTGlzdFBhc3N3b3JkJyldDQogICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICBQYXJhbSgNCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDAsIFZhbHVlRnJvbVBpcGVsaW5lID0gJFRydWUpXQ0KICAgICAgICBbVmFsaWRhdGVTY3JpcHQoe1Rlc3QtUGF0aCAtUGF0aCAkXyB9KV0NCiAgICAgICAgW1N0cmluZ1tdXQ0KICAgICAgICAkUGF0aA0KICAgICkNCg0KICAgIEJFR0lOIHsNCiAgICAgICAgZnVuY3Rpb24gTG9jYWw6R2V0LURlY3J5cHRlZFNpdGVsaXN0UGFzc3dvcmQgew0KICAgICAgICAgICAgIyBQb3dlclNoZWxsIGFkYXB0YXRpb24gb2YgaHR0cHM6Ly9naXRodWIuY29tL2Z1bm92ZXJpcC9tY2FmZWUtc2l0ZWxpc3QtcHdkLWRlY3J5cHRpb24vDQogICAgICAgICAgICAjIE9yaWdpbmFsIEF1dGhvcjogSmVyb21lIE5va2luIChAZnVub3ZlcmlwIC8gamVyb21lLm5va2luQGdtYWlsLmNvbSkNCiAgICAgICAgICAgICMgcG9ydCBieSBAaGFybWoweQ0KICAgICAgICAgICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICAgICAgICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgICAgICAgICBQYXJhbSgNCiAgICAgICAgICAgICAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeSA9ICRUcnVlKV0NCiAgICAgICAgICAgICAgICBbU3RyaW5nXQ0KICAgICAgICAgICAgICAgICRCNjRQYXNzDQogICAgICAgICAgICApDQoNCiAgICAgICAgICAgICMgbWFrZSBzdXJlIHRoZSBhcHByb3ByaWF0ZSBhc3NlbWJsaWVzIGFyZSBsb2FkZWQNCiAgICAgICAgICAgIEFkZC1UeXBlIC1Bc3NlbWJseSBTeXN0ZW0uU2VjdXJpdHkNCiAgICAgICAgICAgIEFkZC1UeXBlIC1Bc3NlbWJseSBTeXN0ZW0uQ29yZQ0KDQogICAgICAgICAgICAjIGRlY2xhcmUgdGhlIGVuY29kaW5nL2NyeXB0byBwcm92aWRlcnMgd2UgbmVlZA0KICAgICAgICAgICAgJEVuY29kaW5nID0gW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6QVNDSUkNCiAgICAgICAgICAgICRTSEExID0gTmV3LU9iamVjdCBTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LlNIQTFDcnlwdG9TZXJ2aWNlUHJvdmlkZXINCiAgICAgICAgICAgICQzREVTID0gTmV3LU9iamVjdCBTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LlRyaXBsZURFU0NyeXB0b1NlcnZpY2VQcm92aWRlcg0KDQogICAgICAgICAgICAjIHN0YXRpYyBNY0FmZWUga2V5IFhPUiBrZXkgTE9MDQogICAgICAgICAgICAkWE9SS2V5ID0gMHgxMiwweDE1LDB4MEYsMHgxMCwweDExLDB4MUMsMHgxQSwweDA2LDB4MEEsMHgxRiwweDFCLDB4MTgsMHgxNywweDE2LDB4MDUsMHgxOQ0KDQogICAgICAgICAgICAjIHhvciB0aGUgaW5wdXQgYjY0IHN0cmluZyB3aXRoIHRoZSBzdGF0aWMgWE9SIGtleQ0KICAgICAgICAgICAgJEkgPSAwOw0KICAgICAgICAgICAgJFVuWG9yZWQgPSBbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCRCNjRQYXNzKSB8IEZvcmVhY2gtT2JqZWN0IHsgJF8gLUJYb3IgJFhPUktleVskSSsrICUgJFhPUktleS5MZW5ndGhdIH0NCg0KICAgICAgICAgICAgIyBidWlsZCB0aGUgc3RhdGljIE1jQWZlZSAzREVTIGtleSBUUk9MT0wNCiAgICAgICAgICAgICQzREVTS2V5ID0gJFNIQTEuQ29tcHV0ZUhhc2goJEVuY29kaW5nLkdldEJ5dGVzKCc8IUAjJCVePicpKSArICwweDAwKjQNCg0KICAgICAgICAgICAgIyBzZXQgdGhlIG9wdGlvbnMgd2UgbmVlZA0KICAgICAgICAgICAgJDNERVMuTW9kZSA9ICdFQ0InDQogICAgICAgICAgICAkM0RFUy5QYWRkaW5nID0gJ05vbmUnDQogICAgICAgICAgICAkM0RFUy5LZXkgPSAkM0RFU0tleQ0KDQogICAgICAgICAgICAjIGRlY3J5cHQgdGhlIHVuWG9yJ2VkIGJsb2NrDQogICAgICAgICAgICAkRGVjcnlwdGVkID0gJDNERVMuQ3JlYXRlRGVjcnlwdG9yKCkuVHJhbnNmb3JtRmluYWxCbG9jaygkVW5Yb3JlZCwgMCwgJFVuWG9yZWQuTGVuZ3RoKQ0KDQogICAgICAgICAgICAjIGlnbm9yZSB0aGUgcGFkZGluZyBmb3IgdGhlIHJlc3VsdA0KICAgICAgICAgICAgJEluZGV4ID0gW0FycmF5XTo6SW5kZXhPZigkRGVjcnlwdGVkLCBbQnl0ZV0wKQ0KICAgICAgICAgICAgaWYgKCRJbmRleCAtbmUgLTEpIHsNCiAgICAgICAgICAgICAgICAkRGVjcnlwdGVkUGFzcyA9ICRFbmNvZGluZy5HZXRTdHJpbmcoJERlY3J5cHRlZFswLi4oJEluZGV4LTEpXSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgICAgICREZWNyeXB0ZWRQYXNzID0gJEVuY29kaW5nLkdldFN0cmluZygkRGVjcnlwdGVkKQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBOZXctT2JqZWN0IC1UeXBlTmFtZSBQU09iamVjdCAtUHJvcGVydHkgQHsnRW5jcnlwdGVkJz0kQjY0UGFzczsnRGVjcnlwdGVkJz0kRGVjcnlwdGVkUGFzc30NCiAgICAgICAgfQ0KDQogICAgICAgIGZ1bmN0aW9uIExvY2FsOkdldC1TaXRlbGlzdEZpZWxkIHsNCiAgICAgICAgICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU1Nob3VsZFByb2Nlc3MnLCAnJyldDQogICAgICAgICAgICBbQ21kbGV0QmluZGluZygpXQ0KICAgICAgICAgICAgUGFyYW0oDQogICAgICAgICAgICAgICAgW1BhcmFtZXRlcihNYW5kYXRvcnkgPSAkVHJ1ZSldDQogICAgICAgICAgICAgICAgW1N0cmluZ10NCiAgICAgICAgICAgICAgICAkUGF0aA0KICAgICAgICAgICAgKQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIFtYbWxdJFNpdGVMaXN0WG1sID0gR2V0LUNvbnRlbnQgLVBhdGggJFBhdGgNCg0KICAgICAgICAgICAgICAgIGlmICgkU2l0ZUxpc3RYbWwuSW5uZXJYbWwgLUxpa2UgIipwYXNzd29yZCoiKSB7DQogICAgICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIlBvdGVudGlhbCBwYXNzd29yZCBpbiBmb3VuZCBpbiAkUGF0aCINCg0KICAgICAgICAgICAgICAgICAgICAkU2l0ZUxpc3RYbWwuU2l0ZUxpc3RzLlNpdGVMaXN0LkNoaWxkTm9kZXMgfCBGb3JlYWNoLU9iamVjdCB7DQogICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRQYXNzd29yZFJhdyA9ICRfLlBhc3N3b3JkLicjVGV4dCcNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkXy5QYXNzd29yZC5FbmNyeXB0ZWQgLWVxIDEpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBkZWNyeXB0IHRoZSBiYXNlNjQgcGFzc3dvcmQgaWYgaXQncyBtYXJrZWQgYXMgZW5jcnlwdGVkDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICREZWNQYXNzd29yZCA9IGlmICgkUGFzc3dvcmRSYXcpIHsgKEdldC1EZWNyeXB0ZWRTaXRlbGlzdFBhc3N3b3JkIC1CNjRQYXNzICRQYXNzd29yZFJhdykuRGVjcnlwdGVkIH0gZWxzZSB7Jyd9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkRGVjUGFzc3dvcmQgPSAkUGFzc3dvcmRSYXcNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkU2VydmVyID0gaWYgKCRfLlNlcnZlcklQKSB7ICRfLlNlcnZlcklQIH0gZWxzZSB7ICRfLlNlcnZlciB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJFBhdGggPSBpZiAoJF8uU2hhcmVOYW1lKSB7ICRfLlNoYXJlTmFtZSB9IGVsc2UgeyAkXy5SZWxhdGl2ZVBhdGggfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJE9iamVjdFByb3BlcnRpZXMgPSBAew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnTmFtZScgPSAkXy5OYW1lOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnRW5hYmxlZCcgPSAkXy5FbmFibGVkOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnU2VydmVyJyA9ICRTZXJ2ZXI7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdQYXRoJyA9ICRQYXRoOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnRG9tYWluTmFtZScgPSAkXy5Eb21haW5OYW1lOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnVXNlck5hbWUnID0gJF8uVXNlck5hbWU7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdFbmNQYXNzd29yZCcgPSAkUGFzc3dvcmRSYXc7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdEZWNQYXNzd29yZCcgPSAkRGVjUGFzc3dvcmQ7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRPdXQgPSBOZXctT2JqZWN0IC1UeXBlTmFtZSBQU09iamVjdCAtUHJvcGVydHkgJE9iamVjdFByb3BlcnRpZXMNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkT3V0LlBTT2JqZWN0LlR5cGVOYW1lcy5JbnNlcnQoMCwgJ1Bvd2VyVXAuU2l0ZUxpc3RQYXNzd29yZCcpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJE91dA0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2ggew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkVycm9yIHBhcnNpbmcgbm9kZSA6ICRfIg0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgY2F0Y2ggew0KICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIkVycm9yIHBhcnNpbmcgZmlsZSAnJFBhdGgnIDogJF8iDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBQUk9DRVNTIHsNCiAgICAgICAgaWYgKCRQU0JvdW5kUGFyYW1ldGVyc1snUGF0aCddKSB7DQogICAgICAgICAgICAkWG1sRmlsZVBhdGhzID0gJFBhdGgNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICRYbWxGaWxlUGF0aHMgPSBAKCdDOlxQcm9ncmFtIEZpbGVzXCcsJ0M6XFByb2dyYW0gRmlsZXMgKHg4NilcJywnQzpcRG9jdW1lbnRzIGFuZCBTZXR0aW5nc1wnLCdDOlxVc2Vyc1wnKQ0KICAgICAgICB9DQoNCiAgICAgICAgJFhtbEZpbGVQYXRocyB8IEZvcmVhY2gtT2JqZWN0IHsgR2V0LUNoaWxkSXRlbSAtUGF0aCAkXyAtUmVjdXJzZSAtSW5jbHVkZSAnU2l0ZUxpc3QueG1sJyAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSB9IHwgV2hlcmUtT2JqZWN0IHsgJF8gfSB8IEZvcmVhY2gtT2JqZWN0IHsNCiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIlBhcnNpbmcgU2l0ZUxpc3QueG1sIGZpbGUgJyQoJF8uRnVsbG5hbWUpJyINCiAgICAgICAgICAgIEdldC1TaXRlbGlzdEZpZWxkIC1QYXRoICRfLkZ1bGxuYW1lDQogICAgICAgIH0NCiAgICB9DQp9DQoNCg0KZnVuY3Rpb24gR2V0LUNhY2hlZEdQUFBhc3N3b3JkIHsNCjwjDQouU1lOT1BTSVMNCg0KUmV0cmlldmVzIHRoZSBwbGFpbnRleHQgcGFzc3dvcmQgYW5kIG90aGVyIGluZm9ybWF0aW9uIGZvciBhY2NvdW50cyBwdXNoZWQgdGhyb3VnaCBHcm91cCBQb2xpY3kgUHJlZmVyZW5jZXMgYW5kDQpsZWZ0IGluIGNhY2hlZCBmaWxlcyBvbiB0aGUgaG9zdC4NCg0KQXV0aG9yOiBDaHJpcyBDYW1wYmVsbCAoQG9ic2N1cmVzZWMpICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IE5vbmUgIA0KDQouREVTQ1JJUFRJT04NCg0KR2V0LUNhY2hlZEdQUFBhc3N3b3JkIHNlYXJjaGVzIHRoZSBsb2NhbCBtYWNoaW5lIGZvciBjYWNoZWQgZm9yIGdyb3Vwcy54bWwsIHNjaGVkdWxlZHRhc2tzLnhtbCwgc2VydmljZXMueG1sIGFuZA0KZGF0YXNvdXJjZXMueG1sIGZpbGVzIGFuZCByZXR1cm5zIHBsYWludGV4dCBwYXNzd29yZHMuDQoNCi5FWEFNUExFDQoNCkdldC1DYWNoZWRHUFBQYXNzd29yZA0KDQpOZXdOYW1lICAgOiBbQkxBTktdDQpDaGFuZ2VkICAgOiB7MjAxMy0wNC0yNSAxODozNjowN30NClBhc3N3b3JkcyA6IHtTdXBlciEhIVBhc3N3b3JkfQ0KVXNlck5hbWVzIDoge1N1cGVyU2VjcmV0QmFja2Rvb3J9DQpGaWxlICAgICAgOiBDOlxQcm9ncmFtRGF0YVxNaWNyb3NvZnRcR3JvdXAgUG9saWN5XEhpc3RvcnlcezMyQzRDODlGLTcNCiAgICAgICAgICAgIEMzQS00MjI3LUE2MUQtOEVGNzJCNUI5RTQyfVxNYWNoaW5lXFByZWZlcmVuY2VzXEdyb3Vwc1xHcg0KICAgICAgICAgICAgb3Vwcy54bWwNCg0KLkxJTksNCg0KaHR0cDovL3d3dy5vYnNjdXJlc2VjdXJpdHkuYmxvZ3Nwb3QuY29tLzIwMTIvMDUvZ3BwLXBhc3N3b3JkLXJldHJpZXZhbC13aXRoLXBvd2Vyc2hlbGwuaHRtbA0KaHR0cHM6Ly9naXRodWIuY29tL21hdHRpZmVzdGF0aW9uL1Bvd2VyU3Bsb2l0L2Jsb2IvbWFzdGVyL1JlY29uL0dldC1HUFBQYXNzd29yZC5wczENCmh0dHBzOi8vZ2l0aHViLmNvbS9yYXBpZDcvbWV0YXNwbG9pdC1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvbW9kdWxlcy9wb3N0L3dpbmRvd3MvZ2F0aGVyL2NyZWRlbnRpYWxzL2dwcC5yYg0KaHR0cDovL2VzZWMtcGVudGVzdC5zb2dldGkuY29tL2V4cGxvaXRpbmctd2luZG93cy0yMDA4LWdyb3VwLXBvbGljeS1wcmVmZXJlbmNlcw0KaHR0cDovL3Jld3RkYW5jZS5ibG9nc3BvdC5jb20vMjAxMi8wNi9leHBsb2l0aW5nLXdpbmRvd3MtMjAwOC1ncm91cC1wb2xpY3kuaHRtbA0KIz4NCg0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oKQ0KDQogICAgIyBTb21lIFhNTCBpc3N1ZXMgYmV0d2VlbiB2ZXJzaW9ucw0KICAgIFNldC1TdHJpY3RNb2RlIC1WZXJzaW9uIDINCg0KICAgICMgbWFrZSBzdXJlIHRoZSBhcHByb3ByaWF0ZSBhc3NlbWJsaWVzIGFyZSBsb2FkZWQNCiAgICBBZGQtVHlwZSAtQXNzZW1ibHkgU3lzdGVtLlNlY3VyaXR5DQogICAgQWRkLVR5cGUgLUFzc2VtYmx5IFN5c3RlbS5Db3JlDQoNCiAgICAjIGhlbHBlciB0aGF0IGRlY29kZXMgYW5kIGRlY3J5cHRzIHBhc3N3b3JkDQogICAgZnVuY3Rpb24gbG9jYWw6R2V0LURlY3J5cHRlZENwYXNzd29yZCB7DQogICAgICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU0F2b2lkVXNpbmdQbGFpblRleHRGb3JQYXNzd29yZCcsICcnKV0NCiAgICAgICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICAgICAgUGFyYW0oDQogICAgICAgICAgICBbc3RyaW5nXSAkQ3Bhc3N3b3JkDQogICAgICAgICkNCg0KICAgICAgICB0cnkgew0KICAgICAgICAgICAgIyBBcHBlbmQgYXBwcm9wcmlhdGUgcGFkZGluZyBiYXNlZCBvbiBzdHJpbmcgbGVuZ3RoDQogICAgICAgICAgICAkTW9kID0gKCRDcGFzc3dvcmQubGVuZ3RoICUgNCkNCg0KICAgICAgICAgICAgc3dpdGNoICgkTW9kKSB7DQogICAgICAgICAgICAgICAgJzEnIHskQ3Bhc3N3b3JkID0gJENwYXNzd29yZC5TdWJzdHJpbmcoMCwkQ3Bhc3N3b3JkLkxlbmd0aCAtMSl9DQogICAgICAgICAgICAgICAgJzInIHskQ3Bhc3N3b3JkICs9ICgnPScgKiAoNCAtICRNb2QpKX0NCiAgICAgICAgICAgICAgICAnMycgeyRDcGFzc3dvcmQgKz0gKCc9JyAqICg0IC0gJE1vZCkpfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAkQmFzZTY0RGVjb2RlZCA9IFtDb252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZygkQ3Bhc3N3b3JkKQ0KDQogICAgICAgICAgICAjIENyZWF0ZSBhIG5ldyBBRVMgLk5FVCBDcnlwdG8gT2JqZWN0DQogICAgICAgICAgICAkQWVzT2JqZWN0ID0gTmV3LU9iamVjdCBTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LkFlc0NyeXB0b1NlcnZpY2VQcm92aWRlcg0KICAgICAgICAgICAgW0J5dGVbXV0gJEFlc0tleSA9IEAoMHg0ZSwweDk5LDB4MDYsMHhlOCwweGZjLDB4YjYsMHg2YywweGM5LDB4ZmEsMHhmNCwweDkzLDB4MTAsMHg2MiwweDBmLDB4ZmUsMHhlOCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4ZjQsMHg5NiwweGU4LDB4MDYsMHhjYywweDA1LDB4NzksMHg5MCwweDIwLDB4OWIsMHgwOSwweGE0LDB4MzMsMHhiNiwweDZjLDB4MWIpDQoNCiAgICAgICAgICAgICMgU2V0IElWIHRvIGFsbCBudWxscyB0byBwcmV2ZW50IGR5bmFtaWMgZ2VuZXJhdGlvbiBvZiBJViB2YWx1ZQ0KICAgICAgICAgICAgJEFlc0lWID0gTmV3LU9iamVjdCBCeXRlW10oJEFlc09iamVjdC5JVi5MZW5ndGgpDQogICAgICAgICAgICAkQWVzT2JqZWN0LklWID0gJEFlc0lWDQogICAgICAgICAgICAkQWVzT2JqZWN0LktleSA9ICRBZXNLZXkNCiAgICAgICAgICAgICREZWNyeXB0b3JPYmplY3QgPSAkQWVzT2JqZWN0LkNyZWF0ZURlY3J5cHRvcigpDQogICAgICAgICAgICBbQnl0ZVtdXSAkT3V0QmxvY2sgPSAkRGVjcnlwdG9yT2JqZWN0LlRyYW5zZm9ybUZpbmFsQmxvY2soJEJhc2U2NERlY29kZWQsIDAsICRCYXNlNjREZWNvZGVkLmxlbmd0aCkNCg0KICAgICAgICAgICAgcmV0dXJuIFtTeXN0ZW0uVGV4dC5Vbmljb2RlRW5jb2RpbmddOjpVbmljb2RlLkdldFN0cmluZygkT3V0QmxvY2spDQogICAgICAgIH0NCg0KICAgICAgICBjYXRjaCB7DQogICAgICAgICAgICBXcml0ZS1FcnJvciAkRXJyb3JbMF0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgICMgaGVscGVyIHRoYXQgcGFyc2VzIGZpZWxkcyBmcm9tIHRoZSBmb3VuZCB4bWwgcHJlZmVyZW5jZSBmaWxlcw0KICAgIGZ1bmN0aW9uIGxvY2FsOkdldC1HUFBJbm5lckZpZWxkIHsNCiAgICAgICAgW0RpYWdub3N0aWNzLkNvZGVBbmFseXNpcy5TdXBwcmVzc01lc3NhZ2VBdHRyaWJ1dGUoJ1BTU2hvdWxkUHJvY2VzcycsICcnKV0NCiAgICAgICAgW0NtZGxldEJpbmRpbmcoKV0NCiAgICAgICAgUGFyYW0oDQogICAgICAgICAgICAkRmlsZQ0KICAgICAgICApDQoNCiAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICRGaWxlbmFtZSA9IFNwbGl0LVBhdGggJEZpbGUgLUxlYWYNCiAgICAgICAgICAgIFtYTUxdICRYbWwgPSBHZXQtQ29udGVudCAoJEZpbGUpDQoNCiAgICAgICAgICAgICRDcGFzc3dvcmQgPSBAKCkNCiAgICAgICAgICAgICRVc2VyTmFtZSA9IEAoKQ0KICAgICAgICAgICAgJE5ld05hbWUgPSBAKCkNCiAgICAgICAgICAgICRDaGFuZ2VkID0gQCgpDQogICAgICAgICAgICAkUGFzc3dvcmQgPSBAKCkNCg0KICAgICAgICAgICAgIyBjaGVjayBmb3IgcGFzc3dvcmQgZmllbGQNCiAgICAgICAgICAgIGlmICgkWG1sLmlubmVyeG1sIC1saWtlICIqY3Bhc3N3b3JkKiIpew0KDQogICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiUG90ZW50aWFsIHBhc3N3b3JkIGluICRGaWxlIg0KDQogICAgICAgICAgICAgICAgc3dpdGNoICgkRmlsZW5hbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgJ0dyb3Vwcy54bWwnIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICRDcGFzc3dvcmQgKz0gLCAkWG1sIHwgU2VsZWN0LVhtbCAiL0dyb3Vwcy9Vc2VyL1Byb3BlcnRpZXMvQGNwYXNzd29yZCIgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmQgTm9kZSB8IEZvckVhY2gtT2JqZWN0IHskXy5WYWx1ZX0NCiAgICAgICAgICAgICAgICAgICAgICAgICRVc2VyTmFtZSArPSAsICRYbWwgfCBTZWxlY3QtWG1sICIvR3JvdXBzL1VzZXIvUHJvcGVydGllcy9AdXNlck5hbWUiIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kIE5vZGUgfCBGb3JFYWNoLU9iamVjdCB7JF8uVmFsdWV9DQogICAgICAgICAgICAgICAgICAgICAgICAkTmV3TmFtZSArPSAsICRYbWwgfCBTZWxlY3QtWG1sICIvR3JvdXBzL1VzZXIvUHJvcGVydGllcy9AbmV3TmFtZSIgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmQgTm9kZSB8IEZvckVhY2gtT2JqZWN0IHskXy5WYWx1ZX0NCiAgICAgICAgICAgICAgICAgICAgICAgICRDaGFuZ2VkICs9ICwgJFhtbCB8IFNlbGVjdC1YbWwgIi9Hcm91cHMvVXNlci9AY2hhbmdlZCIgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmQgTm9kZSB8IEZvckVhY2gtT2JqZWN0IHskXy5WYWx1ZX0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICdTZXJ2aWNlcy54bWwnIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICRDcGFzc3dvcmQgKz0gLCAkWG1sIHwgU2VsZWN0LVhtbCAiL05UU2VydmljZXMvTlRTZXJ2aWNlL1Byb3BlcnRpZXMvQGNwYXNzd29yZCIgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmQgTm9kZSB8IEZvckVhY2gtT2JqZWN0IHskXy5WYWx1ZX0NCiAgICAgICAgICAgICAgICAgICAgICAgICRVc2VyTmFtZSArPSAsICRYbWwgfCBTZWxlY3QtWG1sICIvTlRTZXJ2aWNlcy9OVFNlcnZpY2UvUHJvcGVydGllcy9AYWNjb3VudE5hbWUiIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kIE5vZGUgfCBGb3JFYWNoLU9iamVjdCB7JF8uVmFsdWV9DQogICAgICAgICAgICAgICAgICAgICAgICAkQ2hhbmdlZCArPSAsICRYbWwgfCBTZWxlY3QtWG1sICIvTlRTZXJ2aWNlcy9OVFNlcnZpY2UvQGNoYW5nZWQiIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kIE5vZGUgfCBGb3JFYWNoLU9iamVjdCB7JF8uVmFsdWV9DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAnU2NoZWR1bGVkdGFza3MueG1sJyB7DQogICAgICAgICAgICAgICAgICAgICAgICAkQ3Bhc3N3b3JkICs9ICwgJFhtbCB8IFNlbGVjdC1YbWwgIi9TY2hlZHVsZWRUYXNrcy9UYXNrL1Byb3BlcnRpZXMvQGNwYXNzd29yZCIgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmQgTm9kZSB8IEZvckVhY2gtT2JqZWN0IHskXy5WYWx1ZX0NCiAgICAgICAgICAgICAgICAgICAgICAgICRVc2VyTmFtZSArPSAsICRYbWwgfCBTZWxlY3QtWG1sICIvU2NoZWR1bGVkVGFza3MvVGFzay9Qcm9wZXJ0aWVzL0BydW5BcyIgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmQgTm9kZSB8IEZvckVhY2gtT2JqZWN0IHskXy5WYWx1ZX0NCiAgICAgICAgICAgICAgICAgICAgICAgICRDaGFuZ2VkICs9ICwgJFhtbCB8IFNlbGVjdC1YbWwgIi9TY2hlZHVsZWRUYXNrcy9UYXNrL0BjaGFuZ2VkIiB8IFNlbGVjdC1PYmplY3QgLUV4cGFuZCBOb2RlIHwgRm9yRWFjaC1PYmplY3QgeyRfLlZhbHVlfQ0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgJ0RhdGFTb3VyY2VzLnhtbCcgew0KICAgICAgICAgICAgICAgICAgICAgICAgJENwYXNzd29yZCArPSAsICRYbWwgfCBTZWxlY3QtWG1sICIvRGF0YVNvdXJjZXMvRGF0YVNvdXJjZS9Qcm9wZXJ0aWVzL0BjcGFzc3dvcmQiIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kIE5vZGUgfCBGb3JFYWNoLU9iamVjdCB7JF8uVmFsdWV9DQogICAgICAgICAgICAgICAgICAgICAgICAkVXNlck5hbWUgKz0gLCAkWG1sIHwgU2VsZWN0LVhtbCAiL0RhdGFTb3VyY2VzL0RhdGFTb3VyY2UvUHJvcGVydGllcy9AdXNlcm5hbWUiIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kIE5vZGUgfCBGb3JFYWNoLU9iamVjdCB7JF8uVmFsdWV9DQogICAgICAgICAgICAgICAgICAgICAgICAkQ2hhbmdlZCArPSAsICRYbWwgfCBTZWxlY3QtWG1sICIvRGF0YVNvdXJjZXMvRGF0YVNvdXJjZS9AY2hhbmdlZCIgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmQgTm9kZSB8IEZvckVhY2gtT2JqZWN0IHskXy5WYWx1ZX0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICdQcmludGVycy54bWwnIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICRDcGFzc3dvcmQgKz0gLCAkWG1sIHwgU2VsZWN0LVhtbCAiL1ByaW50ZXJzL1NoYXJlZFByaW50ZXIvUHJvcGVydGllcy9AY3Bhc3N3b3JkIiB8IFNlbGVjdC1PYmplY3QgLUV4cGFuZCBOb2RlIHwgRm9yRWFjaC1PYmplY3QgeyRfLlZhbHVlfQ0KICAgICAgICAgICAgICAgICAgICAgICAgJFVzZXJOYW1lICs9ICwgJFhtbCB8IFNlbGVjdC1YbWwgIi9QcmludGVycy9TaGFyZWRQcmludGVyL1Byb3BlcnRpZXMvQHVzZXJuYW1lIiB8IFNlbGVjdC1PYmplY3QgLUV4cGFuZCBOb2RlIHwgRm9yRWFjaC1PYmplY3QgeyRfLlZhbHVlfQ0KICAgICAgICAgICAgICAgICAgICAgICAgJENoYW5nZWQgKz0gLCAkWG1sIHwgU2VsZWN0LVhtbCAiL1ByaW50ZXJzL1NoYXJlZFByaW50ZXIvQGNoYW5nZWQiIHwgU2VsZWN0LU9iamVjdCAtRXhwYW5kIE5vZGUgfCBGb3JFYWNoLU9iamVjdCB7JF8uVmFsdWV9DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAnRHJpdmVzLnhtbCcgew0KICAgICAgICAgICAgICAgICAgICAgICAgJENwYXNzd29yZCArPSAsICRYbWwgfCBTZWxlY3QtWG1sICIvRHJpdmVzL0RyaXZlL1Byb3BlcnRpZXMvQGNwYXNzd29yZCIgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmQgTm9kZSB8IEZvckVhY2gtT2JqZWN0IHskXy5WYWx1ZX0NCiAgICAgICAgICAgICAgICAgICAgICAgICRVc2VyTmFtZSArPSAsICRYbWwgfCBTZWxlY3QtWG1sICIvRHJpdmVzL0RyaXZlL1Byb3BlcnRpZXMvQHVzZXJuYW1lIiB8IFNlbGVjdC1PYmplY3QgLUV4cGFuZCBOb2RlIHwgRm9yRWFjaC1PYmplY3QgeyRfLlZhbHVlfQ0KICAgICAgICAgICAgICAgICAgICAgICAgJENoYW5nZWQgKz0gLCAkWG1sIHwgU2VsZWN0LVhtbCAiL0RyaXZlcy9Ecml2ZS9AY2hhbmdlZCIgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmQgTm9kZSB8IEZvckVhY2gtT2JqZWN0IHskXy5WYWx1ZX0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgfQ0KDQogICAgICAgICAgIEZvckVhY2ggKCRQYXNzIGluICRDcGFzc3dvcmQpIHsNCiAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkRlY3J5cHRpbmcgJFBhc3MiDQogICAgICAgICAgICAgICAkRGVjcnlwdGVkUGFzc3dvcmQgPSBHZXQtRGVjcnlwdGVkQ3Bhc3N3b3JkICRQYXNzDQogICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJEZWNyeXB0ZWQgYSBwYXNzd29yZCBvZiAkRGVjcnlwdGVkUGFzc3dvcmQiDQogICAgICAgICAgICAgICAjYXBwZW5kIGFueSBuZXcgcGFzc3dvcmRzIHRvIGFycmF5DQogICAgICAgICAgICAgICAkUGFzc3dvcmQgKz0gLCAkRGVjcnlwdGVkUGFzc3dvcmQNCiAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjIHB1dCBbQkxBTktdIGluIHZhcmlhYmxlcw0KICAgICAgICAgICAgaWYgKC1ub3QgJFBhc3N3b3JkKSB7JFBhc3N3b3JkID0gJ1tCTEFOS10nfQ0KICAgICAgICAgICAgaWYgKC1ub3QgJFVzZXJOYW1lKSB7JFVzZXJOYW1lID0gJ1tCTEFOS10nfQ0KICAgICAgICAgICAgaWYgKC1ub3QgJENoYW5nZWQpICB7JENoYW5nZWQgPSAnW0JMQU5LXSd9DQogICAgICAgICAgICBpZiAoLW5vdCAkTmV3TmFtZSkgIHskTmV3TmFtZSA9ICdbQkxBTktdJ30NCg0KICAgICAgICAgICAgIyBDcmVhdGUgY3VzdG9tIG9iamVjdCB0byBvdXRwdXQgcmVzdWx0cw0KICAgICAgICAgICAgJE9iamVjdFByb3BlcnRpZXMgPSBAeydQYXNzd29yZHMnID0gJFBhc3N3b3JkOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdVc2VyTmFtZXMnID0gJFVzZXJOYW1lOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdDaGFuZ2VkJyA9ICRDaGFuZ2VkOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdOZXdOYW1lJyA9ICROZXdOYW1lOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdGaWxlJyA9ICRGaWxlfQ0KDQogICAgICAgICAgICAkUmVzdWx0c09iamVjdCA9IE5ldy1PYmplY3QgLVR5cGVOYW1lIFBTT2JqZWN0IC1Qcm9wZXJ0eSAkT2JqZWN0UHJvcGVydGllcw0KICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiVGhlIHBhc3N3b3JkIGlzIGJldHdlZW4ge30gYW5kIG1heSBiZSBtb3JlIHRoYW4gb25lIHZhbHVlLiINCiAgICAgICAgICAgIGlmICgkUmVzdWx0c09iamVjdCkgeyBSZXR1cm4gJFJlc3VsdHNPYmplY3QgfQ0KICAgICAgICB9DQoNCiAgICAgICAgY2F0Y2gge1dyaXRlLUVycm9yICRFcnJvclswXX0NCiAgICB9DQoNCiAgICB0cnkgew0KICAgICAgICAkQWxsVXNlcnMgPSAkRW52OkFMTFVTRVJTUFJPRklMRQ0KDQogICAgICAgIGlmICgkQWxsVXNlcnMgLW5vdG1hdGNoICdQcm9ncmFtRGF0YScpIHsNCiAgICAgICAgICAgICRBbGxVc2VycyA9ICIkQWxsVXNlcnNcQXBwbGljYXRpb24gRGF0YSINCiAgICAgICAgfQ0KDQogICAgICAgICMgZGlzY292ZXIgYW55IGxvY2FsbHkgY2FjaGVkIEdQUCAueG1sIGZpbGVzDQogICAgICAgICRYTWxGaWxlcyA9IEdldC1DaGlsZEl0ZW0gLVBhdGggJEFsbFVzZXJzIC1SZWN1cnNlIC1JbmNsdWRlICdHcm91cHMueG1sJywnU2VydmljZXMueG1sJywnU2NoZWR1bGVkdGFza3MueG1sJywnRGF0YVNvdXJjZXMueG1sJywnUHJpbnRlcnMueG1sJywnRHJpdmVzLnhtbCcgLUZvcmNlIC1FcnJvckFjdGlvbiBTaWxlbnRseUNvbnRpbnVlDQoNCiAgICAgICAgaWYgKCAtbm90ICRYTWxGaWxlcyApIHsNCiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgJ05vIHByZWZlcmVuY2UgZmlsZXMgZm91bmQuJw0KICAgICAgICB9DQogICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiRm91bmQgJCgkWE1MRmlsZXMgfCBNZWFzdXJlLU9iamVjdCB8IFNlbGVjdC1PYmplY3QgLUV4cGFuZFByb3BlcnR5IENvdW50KSBmaWxlcyB0aGF0IGNvdWxkIGNvbnRhaW4gcGFzc3dvcmRzLiINCg0KICAgICAgICAgICAgRm9yRWFjaCAoJEZpbGUgaW4gJFhNTEZpbGVzKSB7DQogICAgICAgICAgICAgICAgR2V0LUdwcElubmVyRmllbGQgJEZpbGUuRnVsbG5hbWUNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGNhdGNoIHsNCiAgICAgICAgV3JpdGUtRXJyb3IgJEVycm9yWzBdDQogICAgfQ0KfQ0KDQoNCmZ1bmN0aW9uIFdyaXRlLVVzZXJBZGRNU0kgew0KPCMNCi5TWU5PUFNJUw0KDQpXcml0ZXMgb3V0IGEgcHJlY29tcGlsZWQgTVNJIGluc3RhbGxlciB0aGF0IHByb21wdHMgZm9yIGEgdXNlci9ncm91cCBhZGRpdGlvbi4NClRoaXMgZnVuY3Rpb24gY2FuIGJlIHVzZWQgdG8gYWJ1c2UgR2V0LVJlZ2lzdHJ5QWx3YXlzSW5zdGFsbEVsZXZhdGVkLg0KDQpBdXRob3I6IFdpbGwgU2Nocm9lZGVyIChAaGFybWoweSkgIA0KTGljZW5zZTogQlNEIDMtQ2xhdXNlICANClJlcXVpcmVkIERlcGVuZGVuY2llczogTm9uZSAgDQoNCi5ERVNDUklQVElPTg0KDQpXcml0ZXMgb3V0IGEgcHJlY29tcGlsZWQgTVNJIGluc3RhbGxlciB0aGF0IHByb21wdHMgZm9yIGEgdXNlci9ncm91cCBhZGRpdGlvbi4NClRoaXMgZnVuY3Rpb24gY2FuIGJlIHVzZWQgdG8gYWJ1c2UgR2V0LVJlZ2lzdHJ5QWx3YXlzSW5zdGFsbEVsZXZhdGVkLg0KDQouRVhBTVBMRQ0KDQpXcml0ZS1Vc2VyQWRkTVNJDQoNCldyaXRlcyB0aGUgdXNlciBhZGQgTVNJIHRvIHRoZSBsb2NhbCBkaXJlY3RvcnkuDQoNCi5PVVRQVVRTDQoNClBvd2VyVXAuVXNlckFkZE1TSQ0KIz4NCg0KICAgIFtEaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlKCdQU1Nob3VsZFByb2Nlc3MnLCAnJyldDQogICAgW091dHB1dFR5cGUoJ1NlcnZpY2VQcm9jZXNzLlVzZXJBZGRNU0knKV0NCiAgICBbQ21kbGV0QmluZGluZygpXQ0KICAgIFBhcmFtKA0KICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgVmFsdWVGcm9tUGlwZWxpbmUgPSAkVHJ1ZSwgVmFsdWVGcm9tUGlwZWxpbmVCeVByb3BlcnR5TmFtZSA9ICRUcnVlKV0NCiAgICAgICAgW0FsaWFzKCdTZXJ2aWNlTmFtZScpXQ0KICAgICAgICBbU3RyaW5nXQ0KICAgICAgICBbVmFsaWRhdGVOb3ROdWxsT3JFbXB0eSgpXQ0KICAgICAgICAkUGF0aCA9ICdVc2VyQWRkLm1zaScNCiAgICApDQoNCiAgICAkQmluYXJ5ID0gJzBNOFI0S0d4R3VFQUFBQUFBQUFBQUFBQUFBQUFBQUFBUGdBRUFQNy9EQUFHQUFBQUFBQUFBQUVBQUFBQkFBQUFBUUFBQUFBQUFBQUFFQUFBQWdBQUFBRUFBQUQrLy8vL0FBQUFBQUFBQUFELy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyy8vLy8rLy8vLy92Ly8veThBQUFBRkFBQUFCZ0FBQVA3Ly8vOElBQUFBQ1FBQUFBb0FBQUFMQUFBQURBQUFBQTBBQUFBT0FBQUFEd0FBQUJBQUFBQVJBQUFBRWdBQUFCTUFBQUFVQUFBQUZRQUFBQ3dBQUFBWUFBQUFGZ0FBQUJrQUFBQWFBQUFBR3dBQUFCd0FBQUFkQUFBQUhnQUFBQjhBQUFBZ0FBQUFJUUFBQUNJQUFBQWpBQUFBSkFBQUFDVUFBQUFtQUFBQUp3QUFBQ2dBQUFBcEFBQUFLZ0FBQUNzQUFBRCsvLy8vTFFBQUFDNEFBQUF3QUFBQS92Ly8vekVBQUFEKy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vOVNBRzhBYndCMEFDQUFSUUJ1QUhRQWNnQjVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFGZ0FGQVAvLy8vLy8vLy8vQWdBQUFJUVFEQUFBQUFBQXdBQUFBQUFBQUVZQUFBQUFBQUFBQUFBQUFBQlFTSmFUNjJMUEFRTUFBQUJBRndBQUFBQUFBQVVBVXdCMUFHMEFiUUJoQUhJQWVRQkpBRzRBWmdCdkFISUFiUUJoQUhRQWFRQnZBRzRBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFvQUFJQkVBQUFBQmtBQUFELy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU5nQkFBQUFBQUFBUUVqL1ArUkQ3RUhrUmF4RU1VZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFnRVZBQUFBQXdBQUFQLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFKQUFBQUVBZ0FBQUFBQUFCQVNNcEJNRU94T3p0Q0prWTNRaHhDTkVab1JDWkNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUdBQUNBUVFBQUFBQkFBQUEvLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNvQUFBQXdBQUFBQUFBQUFFQkl5a0V3UTdFL0VqOG9SVGhDc1VFb1NBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVVBQUlCRWdBQUFBMEFBQUQvLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUt3QUFBQmdBQUFBQUFBQUFRRWpLUWZsRnprYW9RZmhGS0Q4b1JUaENzVUVvU0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQmdBQWdILy8vLy8vLy8vLy8vLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXNBQUFBS2dBQUFBQUFBQUJBU0F0RE1VRTFSd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ2dBQ0FSTUFBQUFXQUFBQS8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRmtBQUFBSUFBQUFBQUFBQUVCSWZ6OWtRUzlDTmtnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBTUFBSUJCZ0FBQUF3QUFBRC8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBV2dBQUFDWUFBQUFBQUFBQUMwTXhRVFZIZmtHOVJ3eEc5a1V5UklwQk4wTnlSTTFETDBnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCd0FBZ0gvLy8vL0R3QUFBUC8vLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBWEFBQUFBRmdCQUFBQUFBQkFTSXhFOEVSeVJHaEVOMGdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEZ0FDQVAvLy8vLy8vLy8vLy8vLy93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDNEFBQUFNQUFBQUFBQUFBRUJJREViMlJUSkVpa0UzUTNKRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFJQS8vLy8vLy8vLy8vLy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFMd0FBQUR3QUFBQUFBQUFBUUVnTlF6VkM1a1Z5UlR4SUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUE0QUFnRU9BQUFBR0FBQUFQLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF3QUFBQUVnQUFBQUFBQUFCQVNBOUM1RVY0UlNoSUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQURBQUNBUC8vLy8vLy8vLy8vLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQURFQUFBQVFBQUFBQUFBQUFFQklEMExrUlhoRktEc3lSTE5FTVVMeFJUWklBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVdBQUlCLy8vLy94RUFBQUQvLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU1nQUFBQVFBQUFBQUFBQUFRRWhaUmZKRWFFVTNSd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXdBQWdFVUFBQUEvLy8vLy8vLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQlhBQUFBV0FBQUFBQUFBQUFMUXpGQk5VZCtRYjFIWUVYa1JETkNKei9vUmZoRVdVV3lRalZCTUVnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUFBQ0FQLy8vLy8vLy8vLy8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWNBQUFBQU9BRUFBQUFBQUVCSVVrVDJSZVJEcnpzN1FpWkdOMEljUWpSR2FFUW1RZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBYUFBSUFCUUFBQUFnQUFBRC8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBTkFBQUFKWUFBQUFBQUFBQVFFaFNSUFpGNUVPdlB4SS9LRVU0UXJGQktFZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCWUFBZ0QvLy8vLy8vLy8vLy8vLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBM0FBQUFNQUFBQUFBQUFBQkFTQlZCZUVUbVFveEU4VUhzUmF4RU1VZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFGQUFDQVFvQUFBRC8vLy8vLy8vLy93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEZ0FBQUFFQUFBQUFBQUFBRUJJRmtJblF5UklBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLQUFJQS8vLy8vLy8vLy8vLy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFPUUFBQUE0QUFBQUFBQUFBUUVqZVJHcEY1RUVvU0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF3QUFnRC8vLy8vLy8vLy8vLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJXQUFBQUlBQUFBQUFBQUFCQVNCdENLa1AyUlRWSEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQURBQUNBUWNBQUFBTEFBQUEvLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUR3QUFBQThBQUFBQUFBQUFFQklQenZ5UXpoRXNVVUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU1BQUlBLy8vLy8vLy8vLy8vLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVN3QUFBS0FDQUFBQUFBQUFRRWcvUDNkRmJFUnFQckpFTDBnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkFBQWdELy8vLy8vLy8vLy8vLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXRBQUFBU0FRQUFBQUFBQUJBU0Q4L2QwVnNSR283NUVVa1NBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQ0FRa0FBQUFYQUFBQS8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVFBQUFBUElBQUFBQUFBQUFVQVJBQnZBR01BZFFCdEFHVUFiZ0IwQUZNQWRRQnRBRzBBWVFCeUFIa0FTUUJ1QUdZQWJ3QnlBRzBBWVFCMEFHa0Fid0J1QUFBQUFBQUFBQUFBQUFBNEFBSUEvLy8vLy8vLy8vLy8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBV3dBQUFJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUgvLy8vLy8vLy8vLy8vLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEKy8vLy9CaUVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVAvLy8vLy8vLy8vLy8vLy93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQS8vLy8vLy8vLy8vLy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRC8vLy8vLy8vLy8vLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUC8vLy8vLy8vLy8vLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBLy8vLy8vLy8vLy8vLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFBQUFJQUFBQURBQUFBQkFBQUFBVUFBQUFHQUFBQUJ3QUFBUDcvLy8vLy8vLy9DZ0FBQUFzQUFBQU1BQUFBRFFBQUFBNEFBQUFQQUFBQUVBQUFBQkVBQUFBU0FBQUFFd0FBQUJRQUFBQVZBQUFBRmdBQUFCY0FBQUFZQUFBQUdRQUFBQm9BQUFBYkFBQUFIQUFBQUIwQUFBQWVBQUFBSHdBQUFDQUFBQUFoQUFBQUlnQUFBQ01BQUFBa0FBQUFKUUFBQUNZQUFBQW5BQUFBS0FBQUFDa0FBQUQrLy8vLy92Ly8vLzcvLy8vKy8vLy9Nd0FBQVA3Ly8vLysvLy8vL3YvLy8vNy8vLy8rLy8vL09nQUFBRFVBQUFBMkFBQUEvdi8vLy83Ly8vLysvLy8vL3YvLy96c0FBQUE5QUFBQS92Ly8vejRBQUFBL0FBQUFRQUFBQUVFQUFBQkNBQUFBUXdBQUFFUUFBQUJGQUFBQVJnQUFBRWNBQUFCSUFBQUFTUUFBQUVvQUFBRCsvLy8vVEFBQUFFMEFBQUJPQUFBQVR3QUFBRkFBQUFCUkFBQUFVZ0FBQUZNQUFBQlVBQUFBVlFBQUFQNy8vLy8rLy8vL1dBQUFBUDcvLy8vKy8vLy8vdi8vLzF3QUFBRCsvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLzcvQUFBR0FRSUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQURnaFoveStVOW9FS3VSQ0FBcko3UFpNQUFBQUtnQkFBQU9BQUFBQVFBQUFIZ0FBQUFDQUFBQWtBRUFBQU1BQUFDQUFRQUFCQUFBQUhBQkFBQUZBQUFBZ0FBQUFBWUFBQUFvQVFBQUJ3QUFBSlFBQUFBSkFBQUFxQUFBQUF3QUFBRFlBQUFBRFFBQUFPUUFBQUFPQUFBQThBQUFBQThBQUFENEFBQUFFZ0FBQUFnQkFBQVRBQUFBQUFFQUFBSUFBQURrQkFBQUhnQUFBQW9BQUFCSmJuTjBZV3hzWlhJQUFBQWVBQUFBQ3dBQUFFbHVkR1ZzT3pFd016TUFBQjRBQUFBbkFBQUFlMEV3TkRsRk16RkdMVGMzTURFdE5FTTBRUzFCUTBKRExVSXlOakJGUWpBNFFrSTBRMzBBQUVBQUFBQUFMZlIxUVRqUEFVQUFBQUFBTGZSMVFUalBBUU1BQUFESUFBQUFBd0FBQUFJQUFBQURBQUFBQWdBQUFCNEFBQUFYQUFBQVRWTkpJRmR5WVhCd1pYSWdLRFF1TVM0MU5DNHdLUUFBSGdBQUFFQUFBQUJKYm5OMFlXeHNaWElnZDNKaGNIQmxaQ0JpZVNCTlUwa2dWM0poY0hCbGNpQW9OQzR4TGpVMExqQXBJR1p5YjIwZ2QzZDNMbVY0WlcxemFTNWpiMjBBSGdBQUFBZ0FBQUJRYjNkbGNsVndBQjRBQUFBSUFBQUFWWE5sY2tGa1pBQWVBQUFBRUFBQUFGVnpaWEpCWkdRZ01TNHdMakF1TUFCQk9NOEJBd0FBQU1nQUFBQURBQUFBQWdBQUFCNEFBQUFyQUFBQVYybHVaRzkzY3lCSmJuTjBZV3hzWlhJZ1dFMU1JRlJ2YjJ4elpYUWdLRE11T0M0eE1USTRMakFwQUFBREFBQUFBZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVlBQmdBR0FBWUFCZ0FHQUFZQUJnQUdBQVlBQ2dBS0FDSUFJZ0FpQUNrQUtRQXBBQ29BS2dBcUFDc0FLd0F2QUM4QUx3QXZBQzhBTHdBMUFEVUFOUUE5QUQwQVBRQTlBRDBBVFFCTkFFMEFUUUJOQUUwQVRRQk5BRndBWEFCaEFHRUFZUUJoQUdFQVlRQmhBR0VBYndCdkFISUFjZ0J5QUhNQWN3QnpBSFFBZEFCM0FIY0Fkd0IzQUhjQWR3Q0NBSUlBaGdDR0FJWUFoZ0NHQUlZQWtBQ1FBSkFBa0FDUUFKQUFrQUFDQUFVQUN3QU1BQTBBRGdBUEFCQUFFUUFTQUFjQUNRQWpBQ1VBSndBakFDVUFKd0FqQUNVQUp3QUJBQzBBSlFBdkFERUFOQUEzQURvQU5RQkpBRXNBQkFBakFFQUFRd0JHQUFzQU5BQTNBRTBBVHdCUkFGUUFWZ0JkQUY4QUp3QTNBRjhBWVFCa0FHY0FhUUJyQUFFQUxRQWpBQ1VBSndBakFDVUFKd0FMQUNVQVFBQjRBSG9BZkFCK0FJQUFCd0NDQUFFQUJ3QmZBSVlBaUFDS0FEY0Fhd0NSQUpNQWxRQ1pBSnNBQ0FBSUFCZ0FHQUFZQUJnQUdBQUlBQmdBR0FBSUFBZ0FDQUFZQUJnQUNBQVlBQmdBQ0FBWUFCZ0FDQUFJQUJnQUNBQVlBQWdBQ0FBWUFBZ0FHQUFJQUFnQUNBQVlBQmdBR0FBWUFCZ0FDQUFJQUJnQUdBQVlBQWdBQ0FBSUFBZ0FHQUFJQUFnQUNBQUlBQmdBR0FBSUFBZ0FDQUFZQUJnQUNBQVlBQmdBQ0FBSUFCZ0FDQUFJQUJnQUdBQVlBQWdBQ0FBWUFCZ0FDQUFJQUFnQUNBQUlBQmdBQ0FBWUFCZ0FHQUFJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFnQUVBQUFBQUFBQUFBQUFBQUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQS9QLy9md0FBQUFBQUFBQUEvUC8vZndBQUFBQUFBQUFBL1AvL2Z3QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFnQUFBQUFBQUFBQUFBQUFBQUFBQUFJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ0FBQUFBZ0FBQUFBQUFBQUFBQVFBQWdBQUFBSUFBQUFBQUFBQUFBQUFBQUFBQUFBQ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQS9QLy9md0FBQUFBQUFBQUEvUC8vZndBQUFBQUFBQUFBQUFBQUFBRUFBSUFBQUFDQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQS8vLy9md0FBQUFBQUFBQ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdBQUNBLy8vLy93QUFBQUFBQUFBQS8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBRC9md0NBQUFBQUFBQUFBQUQvZndDQUFBQUFBQUFBQUFEL2Z3Q0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRC9md0NBQUFBQUFBQUFBQUFBQUFBQS8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFQOS9BSUQvZndDQUFBQUFBQUFBQUFELy8vLy8vMzhBZ0FBQUFBQUFBQUFBQUFBQUFQLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRC9md0NBQUFBQUFBQUFBQUQvZndDQUFBQUFBQUFBQUFBQUFBQUEvMzhBZ1AvLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQURBQUNBQUFBQUFQLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU5RQUFBRHNBQUFBMUFBQUFBQUFBQUFBQUFBQUFBQUFBTlFBQUFBQUFUUUFBQUFBQUFBQk5BQzhBQUFBQUFDOEFBQUFBQUFBQVlRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBdkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBR0FBQUFCZ0FBQUFZQUFBQUFBQUFBQUFBQUFBQUFBQUFHQUFBQUFBQUdBQUFBQUFBQUFBWUFCZ0FBQUFBQUJnQUFBQUFBQUFBR0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFZQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQk1BRXdBZkFCOEFBQUFBQUFBQUFBQVRBQUFBQUFBQUFCTUFKUUFBQUJNQUpRQUFBQk1BSlFBQUFCTUFLd0FsQUJNQU1nQVRBQUFBRXdBVEFCTUFTd0FBQUJNQVFRQkVBQUFBSHdCWUFBQUFFd0FUQUI4QUFBQUFBQk1BRXdBQUFBQUFFd0FUQUdVQUFBQnBBR3NBRXdBckFCTUFKUUFBQUJNQUpRQUFBRVFBSlFDQ0FBQUFBQUFmQUg0QUh3QWZBQk1BUkFCRUFCTUFFd0FBQUlzQUFBQnJBRElBSHdBZkFFUUFXQUFBQUFBQUFBQUFBQjBBQUFBQUFCWUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQmFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRkFBVkFDRUFJQUFlQUJ3QUdnQVhBQnNBR1FBQUFBQUFKQUFtQUNnQUpBQW1BQ2dBSkFBbUFDZ0FMQUF1QURrQU1BQXpBRFlBT0FBOEFFZ0FTZ0JNQUQ4QVBnQkNBRVVBUndCVEFGa0FXd0JPQUZBQVVnQlZBRmNBWGdCZ0FHNEFiUUJqQUdJQVpnQm9BR29BYkFCd0FIRUFKQUFtQUNnQUpBQW1BQ2dBZGdCMUFJTUFlUUI3QUgwQWZ3Q0JBSVVBaEFDTkFJNEFqd0NIQUlrQWpBQ1lBSmNBa2dDVUFKWUFtZ0NjQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFKMEFuZ0NmQUtBQW9RQ2lBS01BcEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUlPRWcraURlSVhjaFR5UG9JL0ltUUFBQUFBQUFBQUFBQUFBQUFBQUFBQ2RBSjRBbndDbEFBQUFBQUFBQUFBQUlJT0VnK2lERklVQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFuUUNmQUtBQW9RQ2tBS1lBcHdBQUFBQUFBQUFBQUFBQUFBQUFBQ0NENklONGhkeUZ5Sm1jbUFDWkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBWUFCUUFDQUFBQUFBQUVBQUlBQmdBQ0FBc0FGUUFGQUFVQUFRQXNBQW9BQVFBVEFBSUFDd0FHQUFNQUFnQUlBQUlBQ1FBQ0FBZ0FBZ0NxQUtzQXJBQUVnQUFBclFETklWUm9hWE1nY0hKdlozSmhiU0JqWVc1dWIzUWdZbVVnY25WdUlHbHVJRVJQVXlCdGIyUmxMZzBOQ2lRQUFBQUFBQUFBcmdDdkFMRUFzd0MyQURPQUFZd0JnQUtNQVlDdkFLa0FxUUNvQUtrQXNBQzFBTElBdEFDM0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF1bUxNeUt3QXVBQzZBTGdBdWdBQUFMa0F1d0M4QUYzSTBHTE15RkpwWTJqUllzeklBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVVFVUFBRXdCQlFDOUFBQUF2Z0FBQUFLQUFZQUFBQUNBQ3dFSkFBRG1BQUFBYmdBQUFBQUFBSmRFQUFBQUVBQUFBQUFCQUFBQUFCQUFFQUFBQUFJQUFBVUFBQUFBQUFBQXZRQ3FBQUFBQUFBQXNBRUFBQVFBQUovQ0FRQUNBRUFCQUFBUUFBQVFBQUFBQUJBQUFCQUFBQUFBQUFBUUFBQUFjRDhCQUpvQUFBRHNOZ0VBakFBQUFBZ0FBZ0FJQUFJQUNBQUNBQW9BR1FBTkFBRUFEZ0FCQUFNQUFRQWVBQUVBQVFBcUFCVUFBUUFWQUFFQU5nQUJBQ1FBQVFEMUFBRUFEd0FCQUFRQUNRQ2RBSjRBbndDZ0FLRUFvd0NrQUtZQXB3Q3VBSzhBc1FDekFMWUF3QURCQU1JQXd3REVBTVVBeGdESEFNZ0F5UURLQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU1zQXl3RExBTXNBekFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFJSU9FZytpRGVJWGNoYUNQeUptY21BQ1oyNFdqajZHUG9vK2tqeG1BWklDOGdyQ0VRSVlJaHlpS2lKTndsOVNYZVlXcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFkQUo0QW53Q2xBTUFBd1FEQ0FNTUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDQ0RoSVBvZ3hTRkdZQmtnTHlDc0lSM2QzZDNoM2VIaDRlSGlJaUJhcWdBelFET0FBZHdCM0IzZUhoNGh4cWxBS29JSlNVbEp3UW5kSWlJaUlocXFBY0hCd2R3Y0hBSGNIZDNkM2Q0R3FZQUFBQUhBSEJ3QUFjSGNIZDNkMnFvQUFHQUFBQUFnQUFBQUFBQUFBQUFxQWQzQjNkM2QzQUhjSGVIZDRkM2FxZ0FBQUFBQUFBQUFBQUFBQUFBY0lxb0FHb0loSU5Jb0FTbmVFaUloSGVLcUFjZ0FBRUFGUUFCQUJRQUJ3QUdBQXdBUWdBRkFBa0FGUUNmQUFVQUNBQU1BRzhBQlFBUEFBY0FFd0FIQUFZQUJ3QW5BQUVBQkFBRUFCd0FBUUFKQUJJQU93QUJBQXNBQWdBRUFBSUFQZ0FCQUFvQUJBQUpBQXdBMGdBQkFBb0FDQUFuQUFFQTZBQUJBQWNBQWdBY0FBRUE0d0FCQUF3QUN3QlRBQUVBWGdBQkFLMEFBZ0VGQVFnQkN3RUNnQUtBQW9BQ2dBS0Evd0QvQVA4QS93RC9BQUFCQXdFR0FRa0JEQUVCQVFRQkJ3RUtBUTBCcWdDcUFLb0FxZ0NxQUtxcXFxb0dBQVFBREFBQkFDNEFBUUFHQUFJQUNRQUZBRG9BQVFBTUFBSUFWd0FCQUlZQUFRQVFBQUlBcGdBQkFBb0FBd0FwQUFFQUJ3QVZBRGtBQVFBT0FBSUFsQUFCQUFVQUFnQXVBQUVBT2dBQkFBY0FBZ0ErQUFFQUJRQUNBSUVBQVFBSkFBSUFhd0FCQUZFQUFRQVNBQUVBRVFBRkFBZ0FBZ0FmQUFFQUNnQUdBQ0VBQVFBRUFCUUFjd0FCQURrQUFRQUlBQUlBQ0FBQkFHTUFBUUFJQUFJQUpRQUJBQWNBQXdCQkFBRUFDQUFHQUQ4QUFRQjJBQUVBU2dBQkFBUUFCUUJPWVcxbFZHRmliR1ZVZVhCbFEyOXNkVzF1WDFaaGJHbGtZWFJwYjI1V1lXeDFaVTVRY205d1pYSjBlVWxrWDFOMWJXMWhjbmxKYm1admNtMWhkR2x2YmtSbGMyTnlhWEIwYVc5dVUyVjBRMkYwWldkdmNubExaWGxEYjJ4MWJXNU5ZWGhXWVd4MVpVNTFiR3hoWW14bFMyVjVWR0ZpYkdWTmFXNVdZV3gxWlVsa1pXNTBhV1pwWlhKT1lXMWxJRzltSUhSaFlteGxUbUZ0WlNCdlppQmpiMngxYlc1Wk8wNVhhR1YwYUdWeUlIUm9aU0JqYjJ4MWJXNGdhWE1nYm5Wc2JHRmliR1ZaVFdsdWFXMTFiU0IyWVd4MVpTQmhiR3h2ZDJWa1RXRjRhVzExYlNCMllXeDFaU0JoYkd4dmQyVmtSbTl5SUdadmNtVnBaMjRnYTJWNUxDQk9ZVzFsSUc5bUlIUmhZbXhsSUhSdklIZG9hV05vSUdSaGRHRWdiWFZ6ZENCc2FXNXJRMjlzZFcxdUlIUnZJSGRvYVdOb0lHWnZjbVZwWjI0Z2EyVjVJR052Ym01bFkzUnpWR1Y0ZER0R2IzSnRZWFIwWldRN1ZHVnRjR3hoZEdVN1EyOXVaR2wwYVc5dU8wZDFhV1E3VUdGMGFEdFdaWEp6YVc5dU8weGhibWQxWVdkbE8wbGtaVzUwYVdacFpYSTdRbWx1WVhKNU8xVndjR1Z5UTJGelpUdE1iM2RsY2tOaGMyVTdSbWxzWlc1aGJXVTdVR0YwYUhNN1FXNTVVR0YwYUR0WGFXeGtRMkZ5WkVacGJHVnVZVzFsTzFKbFoxQmhkR2c3UTNWemRHOXRVMjkxY21ObE8xQnliM0JsY25SNU8wTmhZbWx1WlhRN1UyaHZjblJqZFhRN1JtOXliV0YwZEdWa1UwUkVURlJsZUhRN1NXNTBaV2RsY2p0RWIzVmliR1ZKYm5SbFoyVnlPMVJwYldWRVlYUmxPMFJsWm1GMWJIUkVhWEpUZEhKcGJtY2dZMkYwWldkdmNubFVaWGgwVTJWMElHOW1JSFpoYkhWbGN5QjBhR0YwSUdGeVpTQndaWEp0YVhSMFpXUkVaWE5qY21sd2RHbHZiaUJ2WmlCamIyeDFiVzVCWkcxcGJrVjRaV04xZEdWVFpYRjFaVzVqWlVGamRHbHZiazVoYldVZ2IyWWdZV04wYVc5dUlIUnZJR2x1ZG05clpTd2daV2wwYUdWeUlHbHVJSFJvWlNCbGJtZHBibVVnYjNJZ2RHaGxJR2hoYm1Sc1pYSWdSRXhNTGtOdmJtUnBkR2x2Yms5d2RHbHZibUZzSUdWNGNISmxjM05wYjI0Z2QyaHBZMmdnYzJ0cGNITWdkR2hsSUdGamRHbHZiaUJwWmlCbGRtRnNkV0YwWlhNZ2RHOGdaWGh3Um1Gc2MyVXVTV1lnZEdobElHVjRjSEpsYzNOcGIyNGdjM2x1ZEdGNElHbHpJR2x1ZG1Gc2FXUXNJSFJvWlNCbGJtZHBibVVnZDJsc2JDQjBaWEp0YVc1aGRHVXNJSEpsZEhWeWJtbHVaeUJwWlhOQ1lXUkJZM1JwYjI1RVlYUmhMbE5sY1hWbGJtTmxUblZ0WW1WeUlIUm9ZWFFnWkdWMFpYSnRhVzVsY3lCMGFHVWdjMjl5ZENCdmNtUmxjaUJwYmlCM2FHbGphQ0IwYUdVZ1lXTjBhVzl1Y3lCaGNtVWdkRzhnWW1VZ1pYaGxZM1YwWldRdUlDQk1aV0YyWlNCaWJHRnVheUIwYnlCemRYQndjbVZ6Y3lCaFkzUnBiMjR1UVdSdGFXNVZTVk5sY1hWbGJtTmxRV1IyZEVWNFpXTjFkR1ZUWlhGMVpXNWpaVUpwYm1GeWVWVnVhWEYxWlNCclpYa2dhV1JsYm5ScFpubHBibWNnZEdobElHSnBibUZ5ZVNCa1lYUmhMa1JoZEdGVWFHVWdkVzVtYjNKdFlYUjBaV1FnWW1sdVlYSjVJR1JoZEdFdVEyOXRjRzl1Wlc1MFVISnBiV0Z5ZVNCclpYa2dkWE5sWkNCMGJ5QnBaR1Z1ZEdsbWVTQmhJSEJoY25ScFkzVnNZWElnWTI5dGNHOXVaVzUwSUhKbFkyOXlaQzVEYjIxd2IyNWxiblJKWkVkMWFXUkJJSE4wY21sdVp5QkhWVWxFSUhWdWFYRjFaU0IwYnlCMGFHbHpJR052YlhCdmJtVnVkQ3dnZG1WeWMybHZiaXdnWVc1a0lHeGhibWQxWVdkbExrUnBjbVZqZEc5eWVWOUVhWEpsWTNSdmNubFNaWEYxYVhKbFpDQnJaWGtnYjJZZ1lTQkVhWEpsWTNSdmNua2dkR0ZpYkdVZ2NtVmpiM0prTGlCVWFHbHpJR2x6SUdGamRIVmhiR3g1SUdFZ2NISnZjR1Z5ZEhrZ2JtRnRaU0IzYUc5elpTQjJZV3gxWlNCamIyNTBZV2x1Y3lCMGFHVWdZV04wZFdGc0lIQmhkR2dzSUhObGRDQmxhWFJvWlhJZ1lua2dkR2hsSUVGd2NGTmxZWEpqYUNCaFkzUnBiMjRnYjNJZ2QybDBhQ0IwYUdVZ1pHVm1ZWFZzZENCelpYUjBhVzVuSUc5aWRHRnBibVZrSUdaeWIyMGdkR2hsSUVScGNtVmpkRzl5ZVNCMFlXSnNaUzVCZEhSeWFXSjFkR1Z6VW1WdGIzUmxJR1Y0WldOMWRHbHZiaUJ2Y0hScGIyNHNJRzl1WlNCdlppQnBjbk5GYm5WdFFTQmpiMjVrYVhScGIyNWhiQ0J6ZEdGMFpXMWxiblFnZEdoaGRDQjNhV3hzSUdScGMyRmliR1VnZEdocGN5QmpiMjF3YjI1bGJuUWdhV1lnZEdobElITndaV05wWm1sbFpDQmpiMjVrYVhScGIyNGdaWFpoYkhWaGRHVnpJSFJ2SUhSb1pTQW5WSEoxWlNjZ2MzUmhkR1V1SUVsbUlHRWdZMjl0Y0c5dVpXNTBJR2x6SUdScGMyRmliR1ZrTENCcGRDQjNhV3hzSUc1dmRDQmlaU0JwYm5OMFlXeHNaV1FzSUhKbFoyRnlaR3hsYzNNZ2IyWWdkR2hsSUNkQlkzUnBiMjRuSUhOMFlYUmxJR0Z6YzI5amFXRjBaV1FnZDJsMGFDQjBhR1VnWTI5dGNHOXVaVzUwTGt0bGVWQmhkR2hHYVd4bE8xSmxaMmx6ZEhKNU8wOUVRa05FWVhSaFUyOTFjbU5sUldsMGFHVnlJSFJvWlNCd2NtbHRZWEo1SUd0bGVTQnBiblJ2SUhSb1pTQkdhV3hsSUhSaFlteGxMQ0JTWldkcGMzUnllU0IwWVdKc1pTd2diM0lnVDBSQ1EwUmhkR0ZUYjNWeVkyVWdkR0ZpYkdVdUlGUm9hWE1nWlhoMGNtRmpkQ0J3WVhSb0lHbHpJSE4wYjNKbFpDQjNhR1Z1SUhSb1pTQmpiMjF3YjI1bGJuUWdhWE1nYVc1emRHRnNiR1ZrTENCaGJtUWdhWE1nZFhObFpDQjBieUJrWlhSbFkzUWdkR2hsSUhCeVpYTmxibU5sSUc5bUlIUm9aU0JqYjIxd2IyNWxiblFnWVc1a0lIUnZJSEpsZEhWeWJpQjBhR1VnY0dGMGFDQjBieUJwZEM1RGRYTjBiMjFCWTNScGIyNVFjbWx0WVhKNUlHdGxlU3dnYm1GdFpTQnZaaUJoWTNScGIyNHNJRzV2Y20xaGJHeDVJR0Z3Y0dWaGNuTWdhVzRnYzJWeGRXVnVZMlVnZEdGaWJHVWdkVzVzWlhOeklIQnlhWFpoZEdVZ2RYTmxMbFJvWlNCdWRXMWxjbWxqSUdOMWMzUnZiU0JoWTNScGIyNGdkSGx3WlN3Z1kyOXVjMmx6ZEdsdVp5QnZaaUJ6YjNWeVkyVWdiRzlqWVhScGIyNHNJR052WkdVZ2RIbHdaU3dnWlc1MGNua3NJRzl3ZEdsdmJpQm1iR0ZuY3k1VGIzVnlZMlZEZFhOMGIyMVRiM1Z5WTJWVWFHVWdkR0ZpYkdVZ2NtVm1aWEpsYm1ObElHOW1JSFJvWlNCemIzVnlZMlVnYjJZZ2RHaGxJR052WkdVdVZHRnlaMlYwUm05eWJXRjBkR1ZrUlhoalpXTjFkR2x2YmlCd1lYSmhiV1YwWlhJc0lHUmxjR1Z1WkhNZ2IyNGdkR2hsSUhSNWNHVWdiMllnWTNWemRHOXRJR0ZqZEdsdmJrVjRkR1Z1WkdWa1ZIbHdaVUVnYm5WdFpYSnBZeUJqZFhOMGIyMGdZV04wYVc5dUlIUjVjR1VnZEdoaGRDQmxlSFJsYm1SeklHTnZaR1VnZEhsd1pTQnZjaUJ2Y0hScGIyNGdabXhoWjNNZ2IyWWdkR2hsSUZSNWNHVWdZMjlzZFcxdUxsVnVhWEYxWlNCcFpHVnVkR2xtYVdWeUlHWnZjaUJrYVhKbFkzUnZjbmtnWlc1MGNua3NJSEJ5YVcxaGNua2dhMlY1TGlCSlppQmhJSEJ5YjNCbGNuUjVJR0o1SUhSb2FYTWdibUZ0WlNCcGN5QmtaV1pwYm1Wa0xDQnBkQ0JqYjI1MFlXbHVjeUIwYUdVZ1puVnNiQ0J3WVhSb0lIUnZJSFJvWlNCa2FYSmxZM1J2Y25rdVJHbHlaV04wYjNKNVgxQmhjbVZ1ZEZKbFptVnlaVzVqWlNCMGJ5QjBhR1VnWlc1MGNua2dhVzRnZEdocGN5QjBZV0pzWlNCemNHVmphV1o1YVc1bklIUm9aU0JrWldaaGRXeDBJSEJoY21WdWRDQmthWEpsWTNSdmNua3VJRUVnY21WamIzSmtJSEJoY21WdWRHVmtJSFJ2SUdsMGMyVnNaaUJ2Y2lCM2FYUm9JR0VnVG5Wc2JDQndZWEpsYm5RZ2NtVndjbVZ6Wlc1MGN5QmhJSEp2YjNRZ2IyWWdkR2hsSUdsdWMzUmhiR3dnZEhKbFpTNUVaV1poZFd4MFJHbHlWR2hsSUdSbFptRjFiSFFnYzNWaUxYQmhkR2dnZFc1a1pYSWdjR0Z5Wlc1MEozTWdjR0YwYUM1R1pXRjBkWEpsVUhKcGJXRnllU0JyWlhrZ2RYTmxaQ0IwYnlCcFpHVnVkR2xtZVNCaElIQmhjblJwWTNWc1lYSWdabVZoZEhWeVpTQnlaV052Y21RdVJtVmhkSFZ5WlY5UVlYSmxiblJQY0hScGIyNWhiQ0JyWlhrZ2IyWWdZU0J3WVhKbGJuUWdjbVZqYjNKa0lHbHVJSFJvWlNCellXMWxJSFJoWW14bExpQkpaaUIwYUdVZ2NHRnlaVzUwSUdseklHNXZkQ0J6Wld4bFkzUmxaQ3dnZEdobGJpQjBhR1VnY21WamIzSmtJSGRwYkd3Z2JtOTBJR0psSUdsdWMzUmhiR3hsWkM0Z1RuVnNiQ0JwYm1ScFkyRjBaWE1nWVNCeWIyOTBJR2wwWlcwdVZHbDBiR1ZUYUc5eWRDQjBaWGgwSUdsa1pXNTBhV1o1YVc1bklHRWdkbWx6YVdKc1pTQm1aV0YwZFhKbElHbDBaVzB1VEc5dVoyVnlJR1JsYzJOeWFYQjBhWFpsSUhSbGVIUWdaR1Z6WTNKcFltbHVaeUJoSUhacGMybGliR1VnWm1WaGRIVnlaU0JwZEdWdExrUnBjM0JzWVhsT2RXMWxjbWxqSUhOdmNuUWdiM0prWlhJc0lIVnpaV1FnZEc4Z1ptOXlZMlVnWVNCemNHVmphV1pwWXlCa2FYTndiR0Y1SUc5eVpHVnlhVzVuTGt4bGRtVnNWR2hsSUdsdWMzUmhiR3dnYkdWMlpXd2dZWFFnZDJocFkyZ2djbVZqYjNKa0lIZHBiR3dnWW1VZ2FXNXBkR2xoYkd4NUlITmxiR1ZqZEdWa0xpQkJiaUJwYm5OMFlXeHNJR3hsZG1Wc0lHOW1JREFnZDJsc2JDQmthWE5oWW14bElHRnVJR2wwWlcwZ1lXNWtJSEJ5WlhabGJuUWdhWFJ6SUdScGMzQnNZWGt1VlhCd1pYSkRZWE5sVkdobElHNWhiV1VnYjJZZ2RHaGxJRVJwY21WamRHOXllU0IwYUdGMElHTmhiaUJpWlNCamIyNW1hV2QxY21Wa0lHSjVJSFJvWlNCVlNTNGdRU0J1YjI0dGJuVnNiQ0IyWVd4MVpTQjNhV3hzSUdWdVlXSnNaU0IwYUdVZ1luSnZkM05sSUdKMWRIUnZiaTR3T3pFN01qczBPelU3TmpzNE96azdNVEE3TVRZN01UYzdNVGc3TWpBN01qRTdNakk3TWpRN01qVTdNalk3TXpJN016TTdNelE3TXpZN016YzdNemc3TkRnN05EazdOVEE3TlRJN05UTTdOVFJHWldGMGRYSmxJR0YwZEhKcFluVjBaWE5HWldGMGRYSmxRMjl0Y0c5dVpXNTBjMFpsWVhSMWNtVmZSbTl5WldsbmJpQnJaWGtnYVc1MGJ5QkdaV0YwZFhKbElIUmhZbXhsTGtOdmJYQnZibVZ1ZEY5R2IzSmxhV2R1SUd0bGVTQnBiblJ2SUVOdmJYQnZibVZ1ZENCMFlXSnNaUzVHYVd4bFVISnBiV0Z5ZVNCclpYa3NJRzV2Ymkxc2IyTmhiR2w2WldRZ2RHOXJaVzRzSUcxMWMzUWdiV0YwWTJnZ2FXUmxiblJwWm1sbGNpQnBiaUJqWVdKcGJtVjBMaUFnUm05eUlIVnVZMjl0Y0hKbGMzTmxaQ0JtYVd4bGN5d2dkR2hwY3lCbWFXVnNaQ0JwY3lCcFoyNXZjbVZrTGtadmNtVnBaMjRnYTJWNUlISmxabVZ5Wlc1amFXNW5JRU52YlhCdmJtVnVkQ0IwYUdGMElHTnZiblJ5YjJ4eklIUm9aU0JtYVd4bExrWnBiR1ZPWVcxbFJtbHNaVzVoYldWR2FXeGxJRzVoYldVZ2RYTmxaQ0JtYjNJZ2FXNXpkR0ZzYkdGMGFXOXVMQ0J0WVhrZ1ltVWdiRzlqWVd4cGVtVmtMaUFnVkdocGN5QnRZWGtnWTI5dWRHRnBiaUJoSUNKemFHOXlkQ0J1WVcxbGZHeHZibWNnYm1GdFpTSWdjR0ZwY2k1R2FXeGxVMmw2WlZOcGVtVWdiMllnWm1sc1pTQnBiaUJpZVhSbGN5QW9iRzl1WnlCcGJuUmxaMlZ5S1M1V1pYSnphVzl1Vm1WeWMybHZiaUJ6ZEhKcGJtY2dabTl5SUhabGNuTnBiMjVsWkNCbWFXeGxjenNnSUVKc1lXNXJJR1p2Y2lCMWJuWmxjbk5wYjI1bFpDQm1hV3hsY3k1TVlXNW5kV0ZuWlV4cGMzUWdiMllnWkdWamFXMWhiQ0JzWVc1bmRXRm5aU0JKWkhNc0lHTnZiVzFoTFhObGNHRnlZWFJsWkNCcFppQnRiM0psSUhSb1lXNGdiMjVsTGtsdWRHVm5aWElnWTI5dWRHRnBibWx1WnlCaWFYUWdabXhoWjNNZ2NtVndjbVZ6Wlc1MGFXNW5JR1pwYkdVZ1lYUjBjbWxpZFhSbGN5QW9kMmwwYUNCMGFHVWdaR1ZqYVcxaGJDQjJZV3gxWlNCdlppQmxZV05vSUdKcGRDQndiM05wZEdsdmJpQnBiaUJ3WVhKbGJuUm9aWE5sY3lsVFpYRjFaVzVqWlNCM2FYUm9JSEpsYzNCbFkzUWdkRzhnZEdobElHMWxaR2xoSUdsdFlXZGxjenNnYjNKa1pYSWdiWFZ6ZENCMGNtRmpheUJqWVdKcGJtVjBJRzl5WkdWeUxrbGpiMjVRY21sdFlYSjVJR3RsZVM0Z1RtRnRaU0J2WmlCMGFHVWdhV052YmlCbWFXeGxMa0pwYm1GeWVTQnpkSEpsWVcwdUlGUm9aU0JpYVc1aGNua2dhV052YmlCa1lYUmhJR2x1SUZCRklDZ3VSRXhNSUc5eUlDNUZXRVVwSUc5eUlHbGpiMjRnS0M1SlEwOHBJR1p2Y20xaGRDNUpibk4wWVd4c1JYaGxZM1YwWlZObGNYVmxibU5sU1c1emRHRnNiRlZKVTJWeGRXVnVZMlZNWVhWdVkyaERiMjVrYVhScGIyNUZlSEJ5WlhOemFXOXVJSGRvYVdOb0lHMTFjM1FnWlhaaGJIVmhkR1VnZEc4Z1ZGSlZSU0JwYmlCdmNtUmxjaUJtYjNJZ2FXNXpkR0ZzYkNCMGJ5QmpiMjF0Wlc1alpTNU1iMk5oYkdsNllXSnNaU0IwWlhoMElIUnZJR1JwYzNCc1lYa2dkMmhsYmlCamIyNWthWFJwYjI0Z1ptRnBiSE1nWVc1a0lHbHVjM1JoYkd3Z2JYVnpkQ0JoWW05eWRDNU5aV1JwWVVScGMydEpaRkJ5YVcxaGNua2dhMlY1TENCcGJuUmxaMlZ5SUhSdklHUmxkR1Z5YldsdVpTQnpiM0owSUc5eVpHVnlJR1p2Y2lCMFlXSnNaUzVNWVhOMFUyVnhkV1Z1WTJWR2FXeGxJSE5sY1hWbGJtTmxJRzUxYldKbGNpQm1iM0lnZEdobElHeGhjM1FnWm1sc1pTQm1iM0lnZEdocGN5QnRaV1JwWVM1RWFYTnJVSEp2YlhCMFJHbHpheUJ1WVcxbE9pQjBhR1VnZG1semFXSnNaU0IwWlhoMElHRmpkSFZoYkd4NUlIQnlhVzUwWldRZ2IyNGdkR2hsSUdScGMyc3VJQ0JVYUdseklIZHBiR3dnWW1VZ2RYTmxaQ0IwYnlCd2NtOXRjSFFnZEdobElIVnpaWElnZDJobGJpQjBhR2x6SUdScGMyc2dibVZsWkhNZ2RHOGdZbVVnYVc1elpYSjBaV1F1UTJGaWFXNWxkRWxtSUhOdmJXVWdiM0lnWVd4c0lHOW1JSFJvWlNCbWFXeGxjeUJ6ZEc5eVpXUWdiMjRnZEdobElHMWxaR2xoSUdGeVpTQmpiMjF3Y21WemMyVmtJR2x1SUdFZ1kyRmlhVzVsZEN3Z2RHaGxJRzVoYldVZ2IyWWdkR2hoZENCallXSnBibVYwTGxadmJIVnRaVXhoWW1Wc1ZHaGxJR3hoWW1Wc0lHRjBkSEpwWW5WMFpXUWdkRzhnZEdobElIWnZiSFZ0WlM1UWNtOXdaWEowZVZSb1pTQndjbTl3WlhKMGVTQmtaV1pwYm1sdVp5QjBhR1VnYkc5allYUnBiMjRnYjJZZ2RHaGxJR05oWW1sdVpYUWdabWxzWlM1T1lXMWxJRzltSUhCeWIzQmxjblI1TENCMWNIQmxjbU5oYzJVZ2FXWWdjMlYwZEdGaWJHVWdZbmtnYkdGMWJtTm9aWElnYjNJZ2JHOWhaR1Z5TGxOMGNtbHVaeUIyWVd4MVpTQm1iM0lnY0hKdmNHVnlkSGt1SUNCT1pYWmxjaUJ1ZFd4c0lHOXlJR1Z0Y0hSNUxsSmxaMmx6ZEhKNVVISnBiV0Z5ZVNCclpYa3NJRzV2Ymkxc2IyTmhiR2w2WldRZ2RHOXJaVzR1VW05dmRGUm9aU0J3Y21Wa1pXWnBibVZrSUhKdmIzUWdhMlY1SUdadmNpQjBhR1VnY21WbmFYTjBjbmtnZG1Gc2RXVXNJRzl1WlNCdlppQnljbXRGYm5WdExrdGxlVkpsWjFCaGRHaFVhR1VnYTJWNUlHWnZjaUIwYUdVZ2NtVm5hWE4wY25rZ2RtRnNkV1V1VkdobElISmxaMmx6ZEhKNUlIWmhiSFZsSUc1aGJXVXVWR2hsSUhKbFoybHpkSEo1SUhaaGJIVmxMa1p2Y21WcFoyNGdhMlY1SUdsdWRHOGdkR2hsSUVOdmJYQnZibVZ1ZENCMFlXSnNaU0J5WldabGNtVnVZMmx1WnlCamIyMXdiMjVsYm5RZ2RHaGhkQ0JqYjI1MGNtOXNjeUIwYUdVZ2FXNXpkR0ZzYkdsdVp5QnZaaUIwYUdVZ2NtVm5hWE4wY25rZ2RtRnNkV1V1VlhCbmNtRmtaVlZ3WjNKaFpHVkRiMlJsVkdobElGVndaM0poWkdWRGIyUmxJRWRWU1VRZ1ltVnNiMjVuYVc1bklIUnZJSFJvWlNCd2NtOWtkV04wY3lCcGJpQjBhR2x6SUhObGRDNVdaWEp6YVc5dVRXbHVWR2hsSUcxcGJtbHRkVzBnVUhKdlpIVmpkRlpsY25OcGIyNGdiMllnZEdobElIQnliMlIxWTNSeklHbHVJSFJvYVhNZ2MyVjBMaUFnVkdobElITmxkQ0J0WVhrZ2IzSWdiV0Y1SUc1dmRDQnBibU5zZFdSbElIQnliMlIxWTNSeklIZHBkR2dnZEdocGN5QndZWEowYVdOMWJHRnlJSFpsY25OcGIyNHVWbVZ5YzJsdmJrMWhlRlJvWlNCdFlYaHBiWFZ0SUZCeWIyUjFZM1JXWlhKemFXOXVJRzltSUhSb1pTQndjbTlrZFdOMGN5QnBiaUIwYUdseklITmxkQzRnSUZSb1pTQnpaWFFnYldGNUlHOXlJRzFoZVNCdWIzUWdhVzVqYkhWa1pTQndjbTlrZFdOMGN5QjNhWFJvSUhSb2FYTWdjR0Z5ZEdsamRXeGhjaUIyWlhKemFXOXVMa0VnWTI5dGJXRXRjMlZ3WVhKaGRHVmtJR3hwYzNRZ2IyWWdiR0Z1WjNWaFoyVnpJR1p2Y2lCbGFYUm9aWElnY0hKdlpIVmpkSE1nYVc0Z2RHaHBjeUJ6WlhRZ2IzSWdjSEp2WkhWamRITWdibTkwSUdsdUlIUm9hWE1nYzJWMExsUm9aU0JoZEhSeWFXSjFkR1Z6SUc5bUlIUm9hWE1nY0hKdlpIVmpkQ0J6WlhRdVVtVnRiM1psVkdobElHeHBjM1FnYjJZZ1ptVmhkSFZ5WlhNZ2RHOGdjbVZ0YjNabElIZG9aVzRnZFc1cGJuTjBZV3hzYVc1bklHRWdjSEp2WkhWamRDQm1jbTl0SUhSb2FYTWdjMlYwTGlBZ1ZHaGxJR1JsWm1GMWJIUWdhWE1nSWtGTVRDSXVRV04wYVc5dVVISnZjR1Z5ZEhsVWFHVWdjSEp2Y0dWeWRIa2dkRzhnYzJWMElIZG9aVzRnWVNCd2NtOWtkV04wSUdsdUlIUm9hWE1nYzJWMElHbHpJR1p2ZFc1a0xrTnZjM1JKYm1sMGFXRnNhWHBsUm1sc1pVTnZjM1JEYjNOMFJtbHVZV3hwZW1WSmJuTjBZV3hzVm1Gc2FXUmhkR1ZKYm5OMFlXeHNTVzVwZEdsaGJHbDZaVWx1YzNSaGJHeEJaRzFwYmxCaFkydGhaMlZKYm5OMFlXeHNSbWxzWlhOSmJuTjBZV3hzUm1sdVlXeHBlbVZGZUdWamRYUmxRV04wYVc5dVVIVmliR2x6YUVabFlYUjFjbVZ6VUhWaWJHbHphRkJ5YjJSMVkzUmllaTVYY21Gd2NHVmtVMlYwZFhCUWNtOW5jbUZ0WW5vdVEzVnpkRzl0UVdOMGFXOXVSR3hzWW5vdVVISnZaSFZqZEVOdmJYQnZibVZ1ZEh0RlJFVXhNRVkyUXkwek1FWTBMVFF5UTBFdFFqVkROeTFCUkVJNU1EVkZORFZDUmtOOVFsb3VTVTVUVkVGTVRFWlBURVJGVW5KbFp6bERRVVUxTjBGR04wSTVSa0kwUlVZeU56QTJSamsxUWpSQ09ETkNOREU1VTJWMFVISnZjR1Z5ZEhsR2IzSkVaV1psY25KbFpHSjZMazF2WkdsbWVWSmxaMmx6ZEhKNVcwSmFMbGRTUVZCUVJVUmZRVkJRU1VSZFlub3VVM1ZpYzNSWGNtRndjR1ZrUVhKbmRXMWxiblJ6WDFOMVluTjBWM0poY0hCbFpFRnlaM1Z0Wlc1MGMwQTBZbm91VW5WdVYzSmhjSEJsWkZObGRIVndXMko2TGxObGRIVndVMmw2WlYwZ0lsdFRiM1Z5WTJWRWFYSmRYQzRpSUZ0Q1dpNUpUbE5VUVV4TVgxTlZRME5GVTFOZlEwOUVSVk5kSUNwYlFsb3VSa2xZUlVSZlNVNVRWRUZNVEY5QlVrZFZUVVZPVkZOZFcxZFNRVkJRUlVSZlFWSkhWVTFGVGxSVFhWOU5iMlJwWm5sU1pXZHBjM1J5ZVVBMFlub3VWVzVwYm5OMFlXeHNWM0poY0hCbFpGOVZibWx1YzNSaGJHeFhjbUZ3Y0dWa1FEUlFjbTluY21GdFJtbHNaWE5HYjJ4a1pYSmllR3AyYVd4M04zeGJRbG91UTA5TlVFRk9XVTVCVFVWZFZFRlNSMFZVUkVsU0xsTnZkWEpqWlVScGNsQnliMlIxWTNSR1pXRjBkWEpsVFdGcGJpQkdaV0YwZFhKbFJtbHVaRkpsYkdGMFpXUlFjbTlrZFdOMGMweGhkVzVqYUVOdmJtUnBkR2x2Ym5OV1lXeHBaR0YwWlZCeWIyUjFZM1JKUkUxcFozSmhkR1ZHWldGMGRYSmxVM1JoZEdWelVISnZZMlZ6YzBOdmJYQnZibVZ1ZEhOVmJuQjFZbXhwYzJoR1pXRjBkWEpsYzFKbGJXOTJaVkpsWjJsemRISjVWbUZzZFdWelYzSnBkR1ZTWldkcGMzUnllVlpoYkhWbGMxSmxaMmx6ZEdWeVZYTmxjbEpsWjJsemRHVnlVSEp2WkhWamRGSmxiVzkyWlVWNGFYTjBhVzVuVUhKdlpIVmpkSE5PVDFRZ1VrVk5UMVpGSUg0OUlrRk1UQ0lnUVU1RUlFNVBWQ0JWVUVkU1FVUkZVRkpQUkZWRFZFTlBSRVZTUlUxUFZrVWdmajBnSWtGTVRDSWdRVTVFSUU1UFZDQlZVRWRTUVVSSlRrZFFVazlFVlVOVVEwOUVSVTVQVkNCWFNWaGZSRTlYVGtkU1FVUkZYMFJGVkVWRFZFVkVSRzkzYm1keVlXUmxjeUJoY21VZ2JtOTBJR0ZzYkc5M1pXUXVRVXhNVlZORlVsTXhRVkpRVGs5U1JWQkJTVkpCVWxCT1QwMVBSRWxHV1VKYUxsWkZVa1pDV2k1RFQwMVFRVTVaVGtGTlJVVllSVTFUU1M1RFQwMUNXaTVKVGxOVVFVeE1YMU5WUTBORlUxTmZRMDlFUlZNd1Fsb3VWVWxPVDA1RlgwbE9VMVJCVEV4ZlFWSkhWVTFGVGxSVElFSmFMbFZKUWtGVFNVTmZTVTVUVkVGTVRGOUJVa2RWVFVWT1ZGTkNXaTVWU1ZKRlJGVkRSVVJmU1U1VFZFRk1URjlCVWtkVlRVVk9WRk5DV2k1VlNVWlZURXhmU1U1VFZFRk1URjlCVWtkVlRVVk9WRk5DV2k1VlNVNVBUa1ZmVlU1SlRsTlVRVXhNWDBGU1IxVk5SVTVVVTBKYUxsVkpRa0ZUU1VOZlZVNUpUbE5VUVV4TVgwRlNSMVZOUlU1VVUwSmFMbFZKVWtWRVZVTkZSRjlWVGtsT1UxUkJURXhmUVZKSFZVMUZUbFJUUWxvdVZVbEdWVXhNWDFWT1NVNVRWRUZNVEY5QlVrZFZUVVZPVkZOaWVpNVRaWFIxY0ZOcGVtVTVOekk0VFdGdWRXWmhZM1IxY21WeVVISnZaSFZqZEVOdlpHVjdSRGd5UVVZMk9EQXROMEZEUVMwMFFUUTRMVUZGTlRndFFVTkNPRVZGTkRBd1JEUXlmVkJ5YjJSMVkzUk1ZVzVuZFdGblpURXdNek5RY205a2RXTjBUbUZ0WlZWelpYSkJaR1FnS0ZkeVlYQndaV1FnZFhOcGJtY2dUVk5KSUZkeVlYQndaWElnWm5KdmJTQjNkM2N1WlhobGJYTnBMbU52YlNsUWNtOWtkV04wVm1WeWMybHZiakV1TUM0d0xqQlhTVmhmVlZCSFVrRkVSVjlFUlZSRlExUkZSRk5sWTNWeVpVTjFjM1J2YlZCeWIzQmxjblJwWlhOWFNWaGZSRTlYVGtkU1FVUkZYMFJGVkVWRFZFVkVPMWRKV0Y5VlVFZFNRVVJGWDBSRlZFVkRWRVZFVTA5R1ZGZEJVa1ZjVzBKYUxrTlBUVkJCVGxsT1FVMUZYVnhOVTBrZ1YzSmhjSEJsY2x4SmJuTjBZV3hzWldSY1cwSmFMbGRTUVZCUVJVUmZRVkJRU1VSZFRHOW5iMjVWYzJWeVcweHZaMjl1VlhObGNsMXlaV2N3TkRrek56WkVSVE0xTVRZME1qWTJRVFpHTTBGRE5EWXhRamd4TTBaQk5WVlRSVkpPUVUxRlcxVlRSVkpPUVUxRlhYSmxaMEZHT0RoRk1UTXpOalpCTVRjNVF6UkZRa1pHTnpZelJVVkJNMFJCTWpBM1JHRjBaVnRFWVhSbFhYSmxaemxDUmpCR1F6QXhRVU14UVROQlJERXpRVGt6TUVJd05qWXlSVFF5TXpNMFZHbHRaVnRVYVcxbFhYSmxaelJFUkRBNE56ZEROalJFTjBaR09UazFPVUkwT0VKRE5VSXdPVGcxUlVSRlYxSkJVRkJGUkY5QlVrZFZUVVZPVkZOYlYxSkJVRkJGUkY5QlVrZFZUVVZPVkZOZFYwbFlYMFJQVjA1SFVrRkVSVjlFUlZSRlExUkZSRkJ2ZDJWeVZYQjdNVGs1TVdSbVlXRXROV00xTWkwMFlUUmlMV0l5WVdNdE5tTmtOMkkyWkRrNFpUa3hmWVBFRkRoZDlIUUhpMFh3ZzJCdy9UUEE2YVFCQUFBNVhSUjBESU45RkFKOHlvTjlGQ1IveEZZUHR6ZUpYZnlEeHdMckJRKzNOMGRIalVYb1VHb0lWdWhIV0FBQWc4UU1oY0IxNkdhRC9pMTFCb05OR0FMckJtYUQvaXQxQlErM04wZEhPVjBVZFROVzZFTldBQUJaaGNCMENjZEZGQW9BQUFEclJnKzNCMmFEK0hoMEQyYUQrRmgwQ2NkRkZBZ0FBQURyTHNkRkZCQUFBQUNEZlJRUWRTRlc2QXBXQUFCWmhjQjFGZyszQjJhRCtIaDBCbWFEK0ZoMUIwZEhEN2MzUjBlRHlQOHowdmQxRklsVitJdllWdWpjVlFBQVdZUDQvM1VwYWtGWVpqdkdkd1ptZy81YWRnbU5ScDltZy9nWmR6R05ScDltZy9nWkQ3Zkdkd09ENkNDRHdNazdSUlJ6R29OTkdBZzVYZnh5S1hVRk8wWDRkaUtEVFJnRWczMFFBSFVraTBVWVQwK29DSFVpZzMwUUFIUURpMzBNZzJYOEFPdGRpMDM4RDY5TkZBUElpVTM4RDdjM1IwZnJnYjcvLy85L3FBUjFHNmdCZFQyRDRBSjBDWUY5L0FBQUFJQjNDWVhBZFNzNWRmeDJKdWo0K2YvLzlrVVlBY2NBSWdBQUFIUUdnMDM4LytzUDlrVVlBbW9BV0ErVndBUEdpVVg4aTBVUVhvWEFkQUtKT1BaRkdBSjBBL2RkL0lCOTlBQjBCNHRGOElOZ2NQMkxSZnhmVzhuRGkvOVZpK3d6d0ZEL2RSRC9kUXovZFFnNUJjUW9RUUIxQjJnd0hFRUE2d0ZRNk9EOS8vK0R4QlJkdzdpQUVVRUF3NkhBUEVFQVZtb1VYb1hBZFFlNEFBSUFBT3NHTzhaOUI0dkdvOEE4UVFCcUJGRG9rRVVBQUZsWm83d3NRUUNGd0hVZWFnUldpVFhBUEVFQTZIZEZBQUJaV2FPOExFRUFoY0IxQldvYVdGN0RNOUs1Z0JGQkFPc0ZvYndzUVFDSkRBS0R3U0NEd2dTQitRQVVRUUI4Nm1yK1hqUFN1WkFSUVFCWGk4TEIrQVdMQklXZ0swRUFpL3FENXgvQjV3YUxCQWVEK1A5MENEdkdkQVNGd0hVQ2lUR0R3U0JDZ2Zud0VVRUFmTTVmTThCZXcrZzRDd0FBZ0Qxa0kwRUFBSFFGNktKV0FBRC9OYndzUVFEb0tDRUFBRm5EaS85VmkreFdpM1VJdUlBUlFRQTc4SElpZ2Y3Z0UwRUFkeHFMeml2SXdma0ZnOEVRVWVpR1dBQUFnVTRNQUlBQUFGbnJDb1BHSUZiL0ZWVGdRQUJlWGNPTC8xV0w3SXRGQ0lQNEZIMFdnOEFRVU9oWldBQUFpMFVNZ1VnTUFJQUFBRmxkdzR0RkRJUEFJRkQvRlZUZ1FBQmR3NHYvVll2c2kwVUl1WUFSUVFBN3dYSWZQZUFUUVFCM0dJRmdEUDkvLy84cndjSDRCWVBBRUZEb05sY0FBRmxkdzRQQUlGRC9GVmpnUUFCZHc0di9WWXZzaTAwSWcva1VpMFVNZlJPQllBei9mLy8vZzhFUVVlZ0hWd0FBV1YzRGc4QWdVUDhWV09CQUFGM0RpLzlWaSt5RDdCQ2hRQ3BCQUZOV2kzVU1WelAvaVVYOGlYMzBpWDM0aVgzdzZ3SkdSbWFEUGlCMCtBKzNCb1A0WVhRNGcvaHlkQ3VEK0hkMEgraU85Ly8vVjFkWFYxZkhBQllBQUFEb0Z2Zi8vNFBFRkRQQTZWTUNBQUM3QVFNQUFPc05NOXVEVGZ3QjZ3bTdDUUVBQUlOTi9BSXp5VUZHUmcrM0JtWTd4dytFMndFQUFMb0FRQUFBTzg4UGhDQUJBQUFQdDhDRCtGTVBqNW9BQUFBUGhJTUFBQUNENkNBUGhQY0FBQUNENkF0MFZraDBSNFBvR0hReGcrZ0tkQ0dENkFRUGhYWC8vLzg1ZmZnUGhjMEFBQURIUmZnQkFBQUFnOHNRNmNRQUFBQ0J5NEFBQUFEcHVRQUFBUGJEUUErRnFnQUFBSVBMUU9tb0FBQUF4MFh3QVFBQUFPbVdBQUFBOXNNQ0Q0V05BQUFBaTBYOGcrUCtnK0Q4ZzhzQ0RZQUFBQUNKUmZ6cmZUbDkrSFZ5eDBYNEFRQUFBSVBMSU90c2craFVkRmlENkE1MFEwaDBMNFBvQzNRVmcrZ0dENFhxL3YvLzk4TUF3QUFBZFVNTDJ1dEZPWDMwZFRxQlpmei92Ly8veDBYMEFRQUFBT3N3T1gzMGRTVUpWZnpIUmZRQkFBQUE2eC8zd3dEQUFBQjFFWUhMQUlBQUFPc1B1QUFRQUFDRjJIUUVNOG5yQWd2WVJrWVB0d1ptTzhjUGhkaisvLzg1ZmZBUGhLVUFBQURyQWtaR1pvTStJSFQ0YWdOV2FNVGhRQURvNnVqLy80UEVESVhBRDRWZy92Ly9haUNEeGdaWTZ3SkdSbVk1Qm5UNVpvTStQUStGUi83Ly8wWkdaamtHZFBscUJXak00VUFBVnVqeFhnQUFnOFFNaGNCMUM0UEdDb0hMQUFBRUFPdEVhZ2hvMk9GQUFGYm8wbDRBQUlQRURJWEFkUXVEeGhDQnl3QUFBZ0RySldvSGFPemhRQUJXNkxOZUFBQ0R4QXlGd0ErRjZ2My8vNFBHRG9ITEFBQUJBT3NDUmtabWd6NGdkUGhtT1Q0UGhjNzkvLzlvZ0FFQUFQOTFFSTFGREZQL2RRaFE2RzFkQUFDRHhCU0Z3QStGeHYzLy80dEZGUDhGT0NOQkFJdE4vSWxJREl0TkRJbDRCSWs0aVhnSWlYZ2NpVWdRWDE1YnljTnFFR2hZK2tBQTZDOEJBQUF6MnpQL2lYM2thZ0hvQkZVQUFGbUpYZnd6OW9sMTREczF3RHhCQUErTnp3QUFBS0c4TEVFQWpRU3dPUmgwVzRzQWkwQU1xSU4xU0trQWdBQUFkVUdOUnYyRCtCQjNFbzFHRUZEby8xTUFBRm1Gd0ErRW1RQUFBS0c4TEVFQS96U3dWdWc4L1AvL1dWbWh2Q3hCQUlzRXNQWkFESU4wREZCVzZKUDgvLzlaV1VicmtZdjRpWDNrNjJqQjVnSnFPT2h2UUFBQVdZc052Q3hCQUlrRURxRzhMRUVBQThZNUdIUkphS0FQQUFDTEFJUEFJRkRvTjE0QUFGbFpoY0NodkN4QkFIVVQvelFHNkx3Y0FBQlpvYndzUVFDSkhBYnJHNHNFQm9QQUlGRC9GVlRnUUFDaHZDeEJBSXM4Qm9sOTVJbGZERHY3ZEJhQlp3d0FnQUFBaVY4RWlWOElpUitKWHh5RFR4RC94MFg4L3YvLy8rZ0xBQUFBaThmb1ZRQUFBTU9MZmVScUFlZ09Vd0FBV2NQTXpNeG9BRFJBQUdUL05RQUFBQUNMUkNRUWlXd2tFSTFzSkJBcjRGTldWNkVFRUVFQU1VWDhNOFZRaVdYby8zWDRpMFg4eDBYOC92Ly8vNGxGK0kxRjhHU2pBQUFBQU1PTFRmQmtpUTBBQUFBQVdWOWZYbHVMNVYxUnc4ek16TXpNek16TXpNek1pLzlWaSt5RDdCaFRpMTBNVm90ekNETTFCQkJCQUZlTEJzWkYvd0RIUmZRQkFBQUFqWHNRZy9qK2RBMkxUZ1FEenpNTU9PaUg1UC8vaTA0TWkwWUlBODh6RERqb2QrVC8vNHRGQ1BaQUJHWVBoUllCQUFDTFRSQ05WZWlKVS95TFd3eUpSZWlKVGV5RCsvNTBYNDFKQUkwRVc0dE1oaFNOUklZUWlVWHdpd0NKUmZpRnlYUVVpOWZvOEFFQUFNWkYvd0dGd0h4QWYwZUxSZmlMMklQNC9uWE9nSDMvQUhRa2l3YUQrUDUwRFl0T0JBUFBNd3c0NkFUay8vK0xUZ3lMVmdnRHp6TU1PdWowNC8vL2kwWDBYMTViaStWZHc4ZEY5QUFBQUFEcnlZdE5DSUU1WTNOdDRIVXBnejI0TEVFQUFIUWdhTGdzUVFEb1UxMEFBSVBFQklYQWRBK0xWUWhxQVZML0ZiZ3NRUUNEeEFpTFRRem9rd0VBQUl0RkREbFlESFFTYUFRUVFRQlhpOU9MeU9pV0FRQUFpMFVNaTAzNGlVZ01pd2FEK1A1MERZdE9CQVBQTXd3NDZISGovLytMVGd5TFZnZ0R6ek1NT3VoaDQvLy9pMFh3aTBnSWk5Zm9LUUVBQUxyKy8vLy9PVk1NRDRSUy8vLy9hQVFRUVFCWGk4dm9RUUVBQU9rYy8vLy9VMVpYaTFRa0VJdEVKQlNMVENRWVZWSlFVVkZvSERaQUFHVC9OUUFBQUFDaEJCQkJBRFBFaVVRa0NHU0pKUUFBQUFDTFJDUXdpMWdJaTB3a0xETVppM0FNZy83K2REdUxWQ1EwZy9yK2RBUTc4bll1alRSMmpWeXpFSXNMaVVnTWczc0VBSFhNYUFFQkFBQ0xRd2pvSmw0QUFMa0JBQUFBaTBNSTZEaGVBQURyc0dTUEJRQUFBQUNEeEJoZlhsdkRpMHdrQlBkQkJBWUFBQUM0QVFBQUFIUXppMFFrQ0l0SUNEUEk2SVRpLy85VmkyZ1kvM0FNLzNBUS8zQVU2RDcvLy8rRHhBeGRpMFFrQ0l0VUpCQ0pBcmdEQUFBQXcxV0xUQ1FJaXluL2NSei9jUmovY1Nqb0ZmLy8vNFBFREYzQ0JBQlZWbGRUaStvendEUGJNOUl6OWpQLy85RmJYMTVkdzR2cWkvR0x3V29CNklOZEFBQXp3RFBiTThrejBqUC8vK1pWaSt4VFZsZHFBR29BYU1NMlFBQlI2TXVaQUFCZlhsdGR3MVdMYkNRSVVsSC9kQ1FVNkxUKy8vK0R4QXhkd2dnQWkvOVZpK3hXaTNVSVZ1aGdYZ0FBV1lQNC8zVVE2SVR3Ly8vSEFBa0FBQUNEeVAvclRWZi9kUkJxQVA5MURGRC9GV0RnUUFDTCtJUC8vM1VJL3hVWTRFQUE2d0l6d0lYQWRBeFE2SFR3Ly85Wmc4ai82eHVMeHNINEJZc0VoYUFyUVFDRDVoL0I1Z2FOUkRBRWdDRDlpOGRmWGwzRGFoQm9lUHBBQU9nOC9QLy9pMFVJZy9qK2RSdm9JL0QvLzRNZ0FPZ0k4UC8veHdBSkFBQUFnOGovNlowQUFBQXovenZIZkFnN0JZZ3JRUUJ5SWVqNjcvLy9pVGpvNE8vLy84Y0FDUUFBQUZkWFYxZFg2R2p2Ly8rRHhCVHJ5WXZJd2ZrRmpSeU5vQ3RCQUl2d2crWWZ3ZVlHaXdzUHZrd3hCSVBoQVhTL1VPanRYUUFBV1lsOS9Jc0Q5a1F3QkFGMEZ2OTFFUDkxRFA5MUNPanMvdi8vZzhRTWlVWGs2eGJvZmUvLy84Y0FDUUFBQU9pRjcvLy9pVGlEVGVUL3gwWDgvdi8vLytnSkFBQUFpMFhrNkx6Ny8vL0QvM1VJNkRkZUFBQlp3NHYvVll2c2kwVUlWalAyTzhaMUhlZzU3Ly8vVmxaV1ZsYkhBQllBQUFEb3dlNy8vNFBFRklQSS8rc0RpMEFRWGwzRGkvOVZpK3hUVm90MUNJdEdESXZJZ09FRE05dUErUUoxUUtrSUFRQUFkRG1MUmdoWGl6NHIrSVgvZml4WFVGYm9tdi8vLzFsUTZCQVRBQUNEeEF3N3gzVVBpMFlNaE1CNUQ0UGcvWWxHRE9zSGcwNE1JSVBMLzErTFJnaURaZ1FBaVFaZWk4TmJYY09MLzFXTDdGYUxkUWlGOW5VSlZ1ZzFBQUFBV2VzdlZ1aDgvLy8vV1lYQWRBV0R5UC9ySC9kR0RBQkFBQUIwRkZib01mLy8vMURvSVY4QUFGbjMyRmtid09zQ004QmVYY05xRkdpWStrQUE2SDc2Ly84ei80bDk1SWw5M0dvQjZGSk9BQUJaaVgzOE0vYUpkZUE3TmNBOFFRQVBqWU1BQUFDaHZDeEJBSTBFc0RrNGRGNkxBUFpBRElOMFZsQlc2TFAxLy85WldUUFNRb2xWL0tHOExFRUFpd1N3aTBnTTlzR0RkQzg1VlFoMUVWRG9Tdi8vLzFtRCtQOTBIdjlGNU9zWk9YMElkUlQyd1FKMEQxRG9MLy8vLzFtRCtQOTFBd2xGM0lsOS9PZ0lBQUFBUnV1RU0vK0xkZUNodkN4QkFQODBzRmJvdlBYLy8xbFp3OGRGL1A3Ly8vL29FZ0FBQUlOOUNBR0xSZVIwQTR0RjNPai8rZi8vdzJvQjZMdE1BQUJadzJvQjZCLy8vLzladzR2L1ZZdnNnK3dNVTFlTGZRZ3oyenY3ZFNEb2NPMy8vMU5UVTFOVHh3QVdBQUFBNlBqcy8vK0R4QlNEeVAvcFpnRUFBRmZvQXY3Ly96bGZCRm1KUmZ4OUE0bGZCR29CVTFEb0VmMy8vNFBFRER2RGlVWDRmTk9MVnd6M3dnZ0JBQUIxQ0N0SEJPa3VBUUFBaXdlTFR3aFdpL0FyOFlsMTlQYkNBM1JCaTFYOGkzWDh3Zm9GaXhTVm9DdEJBSVBtSDhIbUJ2WkVNZ1NBZEJlTDBUdlFjeEdMOElBNkNuVUYvMFgwTTl0Q085Wnk4VGxkK0hVY2kwWDA2ZG9BQUFDRTBuanY2TUhzLy8vSEFCWUFBQURwaHdBQUFQWkhEQUVQaExRQUFBQ0xWd1E3MDNVSWlWMzA2YVVBQUFDTFhmeUxkZndyd1FQQ3dmc0ZnK1lmalJ5ZG9DdEJBSWxGQ0lzRHdlWUc5a1F3QklCMGVXb0NhZ0QvZGZ6b1F2ei8vNFBFRER0RitIVWdpMGNJaTAwSUE4anJDWUE0Q25VRC8wVUlRRHZCY3ZQM1J3d0FJQUFBNjBCcUFQOTErUDkxL09nTi9QLy9nOFFNaGNCOUJZUEkvK3M2dUFBQ0FBQTVSUWgzRUl0UERQYkJDSFFJOThFQUJBQUFkQU9MUnhpSlJRaUxBL1pFTUFRRWRBUC9SUWlMUlFncFJmaUxSZlNMVGZnRHdWNWZXOG5EaS85VmkreFdpM1VJVnpQL08vZDFIZWpXNi8vL1YxZFhWMWZIQUJZQUFBRG9YdXYvLzRQRUZPbjNBQUFBaTBZTXFJTVBoT3dBQUFDb1FBK0Y1QUFBQUtnQ2RBdUR5Q0NKUmd6cDFRQUFBSVBJQVlsR0RLa01BUUFBZFFsVzZCOHJBQUJaNndXTFJnaUpCdjkyR1A5TldwQUFBd0FBQUFRQUFBRC8vd0FBdUFBQUFBQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQURvQUFBQURoKzZEZ0MwQ2MwaHVBRk16U0ZVYUdseklIQnliMmR5WVcwZ1kyRnVibTkwSUdKbElISjFiaUJwYmlCRVQxTWdiVzlrWlM0TkRRb2tBQUFBQUFBQUFLbFYxY0R0Tkx1VDdUUzdrKzAwdTVQa1REK1R5elM3aytSTUxwUDlOTHVUNUV3NGs1WTB1NVBrVENpVDVEUzdrKzAwdXBPUE5MdVQ1RXd4ays4MHU1UGtUQ3FUN0RTN2sxSnBZMmp0Tkx1VEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBVUVVQUFFd0JCUUFCelJaVEFBQUFBQUFBQUFEZ0FBSUJDd0VKQUFEQ0FBQUFUQUFBQUFBQUFNNGtBQUFBRUFBQUFPQUFBQUFBUUFBQUVBQUFBQUlBQUFVQUFBQUFBQUFBQlFBQUFBQUFBQUFBY0FFQUFBUUFBTGE0QVFBQ0FFQ0JBQUFRQUFBUUFBQUFBQkFBQUJBQUFBQUFBQUFRQUFBQUFBQUFBQUFBQUFCVS9nQUFaQUFBQUFCQUFRQzBBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJRQVFCa0NRQUFvT0VBQUJ3QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFESStBQUFRQUFBQUFBQUFBQUFBQUFBQU9BQUFGZ0JBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXVkR1Y0ZEFBQUFKVEFBQUFBRUFBQUFNSUFBQUFFQUFBQUFBQUFBQUFBQUFBQUFBQWdBQUJnTG5Ka1lYUmhBQUFHSmdBQUFPQUFBQUFvQUFBQXhnQUFBQUFBQUFBQUFBQUFBQUFBUUFBQVFDNWtZWFJoQUFBQXlDd0FBQUFRQVFBQUVBQUFBTzRBQUFBQUFBQUFBQUFBQUFBQUFFQUFBTUF1Y25OeVl3QUFBTFFCQUFBQVFBRUFBQUlBQUFEK0FBQUFBQUFBQUFBQUFBQUFBQUJBQUFCQUxuSmxiRzlqQUFDQ0VBQUFBRkFCQUFBU0FBQUFBQUVBQUFBQUFBQUFBQUFBQUFBQVFBQUFRZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBVll2c2dleWdDQUFBb1FRUVFRQXp4WWxGL0ZOV1YyakVBQUFBallVNC8vLy9hZ0MvTEFBQUFGQ0w4WW05TlAvLy8raktNd0FBaTFVSWFncHFZbzJOTnYvLy8xRlM2SHNKQUFCb0xQUkFBSTJGTlAvLy8ycGtVT2lQQ1FBQWFNd0hBQUNOaldqMy8vOXFBRkdKdldUMy8vL29pak1BQUZhTmxXVDMvLzlvNkFNQUFGTG9aQWtBQUlQRVFHZ3M5RUFBallWazkvLy9hT2dEQUFCUTZFc0pBQUNOaFRULy8vK0R4QXlOVUFLTlNRQm1pd2lEd0FKbWhjbDE5U3ZDMGZpTDJJMkZaUGYvL3pQMmpWQUNqV1FrQUdhTENJUEFBbWFGeVhYMUs4TFIrSFJDamIxazkvLy9VNDJOTlAvLy8xZFI2SFFKQUFDRHhBeUZ3SFE2allWazkvLy9Sb1BIQW8xUUFvMmtKQUFBQUFCbWl3aUR3QUptaGNsMTlTdkMwZmc3OEhMRVgxNHl3RnVMVGZ3enplaU9Cd0FBaStWZHc0dE4vRjllTTgyd0FWdm9ld2NBQUl2bFhjUE16TXpNek16TVZZdnN1T1RIQUFEb0k0b0FBS0VFRUVFQU04V0pSZnhXaXpVRTRFQUFWNDJGYkRqLy8xRC8xbEQvRlVEaFFBQ0wrSW05Y0RqLy80WC9kU3BxRUdnTTlFQUFhREQwUUFCUS94VlE0VUFBWDdnZUp3QUFYb3ROL0RQTjZCRUhBQUNMNVYzQ0VBQ0xoV3c0Ly8rRCtBUjlSMUJvYlBSQUFJMk54SzMvLzJnUUp3QUFVZWpKQ0FBQWc4UVFhaEJvRFBSQUFJMlZ4SzMvLzFKcUFQOFZVT0ZBQUYrNEVTY0FBRjZMVGZ3enplaS9CZ0FBaStWZHdoQUFVLy9XaS9CV2FLajBRQUNOaGNTdC8vOW9FQ2NBQUZEb2ZRZ0FBSXNIVUdqYzlFQUFqWTNFcmYvL2FCQW5BQUJSaVlWb09QLy82RjRJQUFDTFZ3UlM2SE1JQUFDTDJJUEVKSVhiZjBoVGFPajBRQUNOaGNTdC8vOW9FQ2NBQUZEb05RZ0FBSVBFRUdvUWFBejBRQUNOamNTdC8vOVJhZ0QvRlZEaFFBQmJYN2dTSndBQVhvdE4vRFBONkNvR0FBQ0w1VjNDRUFDTFJ3aFFhQ2oxUUFDTmxjU3QvLzlvRUNjQUFGS0poWXc0Ly8vbzVBY0FBSXVGakRqLy80UEVFRkQvRlFEZ1FBQ0QrUDkwQktnUWRRckhoWXc0Ly84QUFBQUFpMzhNVjJoSTlVQUFqWTNFcmYvL2FCQW5BQUJSaWIxa09QLy82S0VIQUFDTHhvUEVFRFBTalhnQ2phUWtBQUFBQUdhTENJUEFBbWFGeVhYMUs4ZlIrSFFyWm9NOFZpcDBIWXZHUW8xNEFvdi9ab3NJZzhBQ1pvWEpkZlVyeDlINE85QnkzdXNIalVJQmhjQjFNbE5vY1BWQUFJMlZ4SzMvLzJnUUp3QUFVdWc5QndBQWc4UVFXMSs0SENjQUFGNkxUZnd6emVoSUJRQUFpK1Zkd2hBQWpUeEdWMmkwOVVBQWpZWEVyZi8vYUJBbkFBQlE2QWdIQUFDRHhCQ05qZVQ3Ly85UmFBVUJBQUQvRlFqZ1FBQ0Z3SFVyYWhCb0RQUkFBR2pzOVVBQVVQOFZVT0ZBQUZ0ZnVCTW5BQUJlaTAzOE04M282Z1FBQUl2bFhjSVFBSTJWOFAzLy8xSnFBR2djOWtBQWpZWGsrLy8vVVA4VkRPQkFBSVhBZFN0cUVHZ005RUFBYUNUMlFBQlEveFZRNFVBQVcxKzRGQ2NBQUY2TFRmd3p6ZWlnQkFBQWkrVmR3aEFBaTQxb09QLy9hR0QyUUFCUmpaV1FPUC8vVXVoY0J3QUFnOFFNaGNCMFNGQm9hUFpBQUkyRnhLMy8vMmdRSndBQVVPaEVCZ0FBZzhRUWFoQm9EUFJBQUkyTnhLMy8vMUZxQVA4VlVPRkFBRnRmdUJVbkFBQmVpMDM4TTgzb09RUUFBSXZsWGNJUUFHakE5a0FBalpYdy9mLy9VbzJGaERqLy8xRG85UVlBQUlQRURJWEFkRWhRYU1qMlFBQ05qY1N0Ly85b0VDY0FBRkhvM1FVQUFJUEVFR29RYUF6MFFBQ05sY1N0Ly85U2FnRC9GVkRoUUFCYlg3Z1ZKd0FBWG90Ti9EUE42TklEQUFDTDVWM0NFQUNMaFpBNC8vOXFBdmZiVTFEb2NnY0FBSVBFRElYQWZTeHFFR2dNOUVBQWFDRDNRQUJxQVA4VlVPRkFBRnRmdUJjbkFBQmVpMDM4TTgzb2pnTUFBSXZsWGNJUUFJdU5rRGovLzFIb3VBY0FBSVBFQklYQWRXenJBNDFKQUl1VmtEai8vMUpvRUNjQUFJMkZsRGovLzJvQlVPaWFDZ0FBaTQyUU9QLy9VWXZ3NkxnSEFBQ0R4QlNGd0ErRnF3RUFBSXVWaERqLy8xSldqWVdVT1AvL2FnRlE2T29MQUFDRHhCQTc4QStGdGdFQUFJdU5rRGovLzFIb1RBY0FBSVBFQklYQWRKbUxsWkE0Ly85UzZMa01BQUNMaFlRNC8vOVE2SzBNQUFBendHcEVVSTJOSERqLy8xR0poWFE0Ly8rSmhYZzQvLytKaFh3NC8vK0poWUE0Ly8vb0NDNEFBSVBFRkdvQXg0VWNPUC8vUkFBQUFQOFZFT0JBQURQU2FCNU9BQUJTallXbVgvLy9VR2FKbGFSZi8vL28yQzBBQUdqYzkwQUFqWTJrWC8vL2FCQW5BQUJSNks0REFBQ05sZkQ5Ly85U2pZV2tYLy8vYUJBbkFBQlE2SllEQUFCbzRQZEFBSTJOcEYvLy8yZ1FKd0FBVWVpQUF3QUFWNDJWcEYvLy8yZ1FKd0FBVXVodUF3QUFqWVdrWC8vL1VHam85MEFBalkzRXJmLy9hQkFuQUFCUjZBVUVBQUNMall3NC8vK0R4RXlObFhRNC8vOVNqWVVjT1AvL1VGRnFBR29BYWdCcUFHb0FqWldrWC8vL1Vtb0EveFVVNEVBQWhjQVBoYklBQUFDTE5SamdRQUQvMWxELzFsQ05oYVJmLy85UWFBRDRRQUNOamNTdC8vOW9FQ2NBQUZIb293TUFBSVBFR0dvUWFBejBRQUNObGNTdC8vOVNhZ0QvRlZEaFFBQmJYN2diSndBQVhvdE4vRFBONkpnQkFBQ0w1VjNDRUFCcUVHZ005RUFBYUd6M1FBQnFBUDhWVU9GQUFGdGZ1QmduQUFCZWkwMzhNODNvYkFFQUFJdmxYY0lRQUdvUWFBejBRQUJvb1BkQUFHb0EveFZRNFVBQVcxKzRHU2NBQUY2TFRmd3p6ZWhBQVFBQWkrVmR3aEFBaTRWME9QLy9hdjlRL3hVYzRFQUFpNVYwT1AvL2pZMklPUC8vVVZMSGhZZzQvLzhBQUFBQS94VWc0RUFBaGNCMUsyb1FhQXowUUFCb1VQaEFBRkQvRlZEaFFBQmJYN2dkSndBQVhvdE4vRFBONk9RQUFBQ0w1VjNDRUFDTGhYUTQvLytMTlNUZ1FBQlEvOWFMalhnNC8vOVIvOWFMSFVqaFFBQ0xQU2pnUUFBejl1c0dqWnNBQUFBQWpaWHcvZi8vVXVqY0NnQUFnOFFFallYdy9mLy9VUC9UaGNCMERXam9Bd0FBLzlkR2cvNTRmTmVOamZEOS8vOVIvOU9Gd0hRc2FoQm9EUFJBQUdpSStFQUFhZ0QvRlZEaFFBQmJYN2dhSndBQVhvdE4vRFBONkZRQUFBQ0w1VjNDRUFDTGxZZzQvLytMaldRNC8vOVM2SHozLy8rRHhBU0V3SFVSaTdXSU9QLy9oZloxQ2I0Zkp3QUE2d0l6OW91RmNEai8vMUQvRlN6Z1FBQ0xUZnhiWDR2R004MWU2QVlBQUFDTDVWM0NFQUE3RFFRUVFRQjFBdlBENlFrTUFBQ0wvMVdMN0ZGVFZvdndNOXM3ODNVZTZKa09BQUJxRmw1VFUxTlRVNGt3NkNJT0FBQ0R4QlNMeHVuQ0FBQUFWemxkREhjZTZIVU9BQUJxRmw1VFUxTlRVNGt3NlA0TkFBQ0R4QlNMeHVtZEFBQUFNOEE1WFJSbWlRWVBsY0JBT1VVTWR3bm9SZzRBQUdvaTY4K0xSUkNEd1A2RCtDSjN2WWxkL0l2T09WMFVkQlAzWFFocUxWaG1pUWFOVGdMSFJmd0JBQUFBaS9tTFJRZ3owdmQxRUlsRkNJUDZDWFlGZzhKWDZ3T0R3akNMUmZ4bWlSRkJRVUF6MjRsRi9EbGRDSFlGTzBVTWN0QTdSUXh5QnpQQVpva0c2NUV6d0dhSkFVbEpab3NYRDdjQlpva1JTV2FKQjBsSFJ6djVjdXd6d0Y5ZVc4bkNFQUNMLzFXTDdEUEFnMzBVQ25VR09VVUlmUUZBVVA5MUZJdEZEUDkxRVA5MUNPamwvdi8vWGNPTC8xV0w3SXRWQ0ZOV1Z6UC9POWQwQjR0ZEREdmZkeDdvZEEwQUFHb1dYb2t3VjFkWFYxZm8vUXdBQUlQRUZJdkdYMTViWGNPTGRSQTc5M1VITThCbWlRTHIxSXZLWmprNWRBVkJRVXQxOWp2ZmRPa1B0d1ptaVFGQlFVWkdaanZIZEFOTGRlNHp3RHZmZGNWbWlRTG9IUTBBQUdvaVdZa0lpL0hycFl2L1ZZdnNnMzBRQUhVRU04QmR3NHRWREl0TkNQOU5FSFFURDdjQlpvWEFkQXRtT3dKMUJrRkJRa0xyNkErM0FRKzNDaXZCWGNPTC8xV0w3STFGRkZCcUFQOTFFUDkxRFA5MUNPaVBFQUFBZzhRVVhjT0wvMVdMN0dvS2FnRC9kUWpvL2hJQUFJUEVERjNEYWd4b2tQbEFBT2k4R0FBQU0vYUpkZVF6d0l0ZENEdmVENVhBTzhaMUhPaUZEQUFBeHdBV0FBQUFWbFpXVmxib0RRd0FBSVBFRkRQQTYzc3p3SXQ5RER2K0Q1WEFPOFowMWpQQVpqazNENVhBTzhaMHl1Z3pGd0FBaVVVSU84WjFEZWhEREFBQXh3QVlBQUFBNjhtSmRmeG1PVE4xSU9ndURBQUF4d0FXQUFBQWF2Nk5SZkJRYUFRUVFRRG9KeG9BQUlQRURPdWhVUDkxRUZkVDZEZ1VBQUNEeEJDSlJlVEhSZnorLy8vLzZBa0FBQUNMUmVUb1VoZ0FBTVAvZFFqb3FoTUFBRm5EaS85VmkreFdWNHQ5Q0RQMk8vNTFHK2pPQ3dBQWFoWmZWbFpXVmxhSk9PaFhDd0FBZzhRVWk4ZnJKR2lBQUFBQS8zVVEvM1VNNlAvKy8vK0R4QXlKQnp2R2RBUXp3T3NINkpZTEFBQ0xBRjllWGNPTC8xV0w3RmFMZFFpTFJneW9nM1VRNkhzTEFBREhBQllBQUFDRHlQL3JaNFBnNzROOUVBR0pSZ3gxRGxibzFoMEFBQUZGRElObEVBQlpWdWcxSEFBQWkwWU1XWVRBZVFpRDRQeUpSZ3pyRnFnQmRCS29DSFFPcVFBRUFBQjFCOGRHR0FBQ0FBRC9kUkQvZFF4VzZORWJBQUJaVU9qdUdnQUFNOG1EeEF5RCtQOFBsY0ZKaThGZVhjTnFER2l3K1VBQTZCa1hBQUF6d0RQMk9YVUlENVhBTzhaMUhlam5DZ0FBeHdBV0FBQUFWbFpXVmxib2J3b0FBSVBFRklQSS8rcytpMzBRTy81MENvUC9BWFFGZy84Q2RkTC9kUWpvQ0JJQUFGbUpkZnhYLzNVTS8zVUk2QmIvLy8rRHhBeUpSZVRIUmZ6Ky8vLy82QWtBQUFDTFJlVG84QllBQU1QL2RRam9TQklBQUZuRGkvOVZpK3lMUlFoV00vWTd4blVjNkcwS0FBQldWbFpXVnNjQUZnQUFBT2oxQ1FBQWc4UVVNOERyQm90QURJUGdFRjVkdzR2L1ZZdnNpMFVJVmpQMk84WjFIT2c1Q2dBQVZsWldWbGJIQUJZQUFBRG93UWtBQUlQRUZEUEE2d2FMUUF5RDRDQmVYY09MLzFXTDdJUHNFSXROQ0ZPTFhReFdWelAvaVUzNGlWMzhPWDBRZENFNWZSUjBIRHZQZFIvbzdRa0FBRmRYVjFmSEFCWUFBQUJYNkhVSkFBQ0R4QlF6d0Y5ZVc4bkRpM1VZTy9kMERZUEkvelBTOTNVUU9VVVVkaUdEKy85MEMxTlhVZWcxSmdBQWc4UU1PL2QwdVlQSS96UFM5M1VRT1VVVWQ2eUxmUkFQcjMwVTkwWU1EQUVBQUlsOThJdmZkQWlMUmhpSlJmVHJCOGRGOUFBUUFBQ0YvdytFNmdBQUFQZEdEQXdCQUFCMFJJdEdCSVhBZEQwUGpEVUJBQUNMK3p2WWNnS0wrRHQ5L0ErSHl3QUFBRmYvTnY5MS9QOTErT2c4SlFBQUtYNEVBVDRCZmZncjM0UEVFQ2w5L0l0OThPbVZBQUFBTzEzMGNtaURmZlFBZEIrNS8vLy9melBTTzlsMkNZdkI5M1gwaThIckI0dkQ5M1gwaThNcnd1c0x1UC8vLzM4NzJIY0NpOE03UmZ3UGg1TUFBQUJRLzNYNFZ1aVFHUUFBV1ZEbzJDTUFBSVBFRElYQUQ0UzJBQUFBZy9qL0Q0U2JBQUFBQVVYNEs5Z3BSZnpyS0Zib3h4d0FBRm1EK1A4UGhJVUFBQUNEZmZ3QWRFNkxUZmovUmZpSUFZdEdHRXYvVGZ5SlJmU0YydytGRnYvLy80dEZGT21vL3YvL00vYURmUXovZEEvL2RReFcvM1VJNk84a0FBQ0R4QXpvWkFnQUFGWldWbGJIQUNJQUFBQlc2WEwrLy8rRGZRei9kQkQvZFF4cUFQOTFDT2pFSkFBQWc4UU02RGtJQUFESEFDSUFBQUF6d0ZCUVVGQlE2VVgrLy8rRFRnd2dpOGNyd3pQUzkzVVE2VDMrLy8rRFRnd1E2K3hxREdqUStVQUE2Q0lVQUFBejlvbDE1RGwxRUhRM09YVVVkREk1ZFJoMU5ZTjlEUDkwRC85MURGYi9kUWpvWUNRQUFJUEVET2pWQndBQXh3QVdBQUFBVmxaV1ZsYm9YUWNBQUlQRUZEUEE2QjhVQUFERC8zVVk2QVFQQUFCWmlYWDgvM1VZLzNVVS8zVVEvM1VNLzNVSTZJSDkvLytEeEJTSlJlVEhSZnorLy8vLzZBVUFBQUNMUmVUcncvOTFHT2hBRHdBQVdjT0wvMVdMN1A5MUZQOTFFUDkxREdyLy8zVUk2RkwvLy8rRHhCUmR3NHYvVll2c2crd01VMVpYTS84NWZReDBKRGw5RUhRZmkzVVVPL2QxSCtnNUJ3QUFWMWRYVjFmSEFCWUFBQURvd1FZQUFJUEVGRFBBWDE1YnljT0xUUWc3ejNUYWc4ai9NOUwzZFF3NVJSQjN6WXQ5REErdmZSRDNSZ3dNQVFBQWlVMzhpWDMwaTk5MENJdEdHSWxGK09zSHgwWDRBQkFBQUlYL0Q0Uy9BQUFBaTA0TWdlRUlBUUFBZEMrTFJnU0Z3SFFvRDR5dkFBQUFpL3M3MkhJQ2kvaFgvM1g4L3pib3hDc0FBQ2wrQkFFK2c4UU1LOThCZmZ6clR6dGQrSEpQaGNsMEMxYm9lQmNBQUZtRndIVjlnMzM0QUl2N2RBa3owb3ZEOTNYNEsvcFgvM1g4VnVnbUZ3QUFXVkRvbkNvQUFJUEVESVA0LzNSaGk4ODd4M2NDaThnQlRmd3IyVHZIY2xDTGZmVHJLWXRGL0ErK0FGWlE2Q2tIQUFCWldZUDQvM1FwLzBYOGkwWVlTNGxGK0lYQWZ3ZkhSZmdCQUFBQWhkc1BoVUgvLy8rTFJSRHA4ZjcvLzROT0RDQ0x4eXZETTlMM2RRenAzLzcvLzROT0RDQ0xSZlRyNjJvTWFQRDVRQURvRFJJQUFEUDJPWFVNZENrNWRSQjBKRFBBT1hVVUQ1WEFPOFoxSU9qUkJRQUF4d0FXQUFBQVZsWldWbGJvV1FVQUFJUEVGRFBBNkJzU0FBREQvM1VVNkFBTkFBQlppWFg4LzNVVS8zVVEvM1VNLzNVSTZEMysvLytEeEJDSlJlVEhSZnorLy8vLzZBVUFBQUNMUmVUcnh2OTFGT2cvRFFBQVdjT0wvMVdMN0ZOV2kzVUlWelAvZzh2L08vZDFIT2hmQlFBQVYxZFhWMWZIQUJZQUFBRG81d1FBQUlQRUZBdkQ2MEwyUmd5RGREZFc2Q0VXQUFCV2k5am9veThBQUZibzRSVUFBRkRveWk0QUFJUEVFSVhBZlFXRHkvL3JFWXRHSER2SGRBcFE2SWN0QUFCWmlYNGNpWDRNaThOZlhsdGR3Mm9NYUJENlFBRG9GQkVBQUlOTjVQOHp3SXQxQ0RQL08vY1BsY0E3eDNVZDZOd0VBQURIQUJZQUFBQlhWMWRYVitoa0JBQUFnOFFVZzhqLzZ3ejJSZ3hBZEF5SmZneUxSZVRvRnhFQUFNTlc2UDRMQUFCWmlYMzhWdWdxLy8vL1dZbEY1TWRGL1A3Ly8vL29CUUFBQU92VmkzVUlWdWhNREFBQVdjT0wvMVdMN1A5MUNQOFZPT0JBQUlYQWRRai9GUmpnUUFEckFqUEFoY0IwREZEb2hRUUFBRm1EeVA5ZHd6UEFYY09MLzFXTDdJTTlDQ0JCQUFGMUJlZ1ZOQUFBLzNVSTZHSXlBQUJvL3dBQUFPaWtMd0FBV1ZsZHcycFlhREQ2UUFEb1B4QUFBRFAyaVhYOGpVV1lVUDhWUE9CQUFHcitYNGw5L0xoTldnQUFaamtGQUFCQUFIVTRvVHdBUUFDQnVBQUFRQUJRUlFBQWRTZTVDd0VBQUdZNWlCZ0FRQUIxR1lPNGRBQkFBQTUyRURQSk9iRG9BRUFBRDVYQmlVM2s2d09KZGVRejIwTlQ2T05BQUFCWmhjQjFDR29jNkZqLy8vOVo2RVEvQUFDRndIVUlhaERvUi8vLy8xbm8xem9BQUlsZC9PaDdPQUFBaGNCOUNHb2I2S011QUFCWjZHUTRBQUNqeER4QkFPZ0RPQUFBb3dRZ1FRRG9TemNBQUlYQWZRaHFDT2grTGdBQVdlZ0xOUUFBaGNCOUNHb0o2RzB1QUFCWlUrZ2xMd0FBV1R2R2RBZFE2RnN1QUFCWjZLSTBBQUNFWGNSMEJnKzNUY2pyQTJvS1dWRlFWbWdBQUVBQTZPM3MvLytKUmVBNWRlUjFCbERvbkRBQUFPakRNQUFBaVgzODZ6V0xSZXlMQ0lzSmlVM2NVRkhvL2pJQUFGbFp3NHRsNkl0RjNJbEY0SU45NUFCMUJsRG9mekFBQU9pZk1BQUF4MFg4L3YvLy80dEY0T3NUTThCQXc0dGw2TWRGL1A3Ly8vKzQvd0FBQU9nVUR3QUF3K2dFUUFBQTZYbisvLytMLzFXTDdJSHNLQU1BQUtNWUlVRUFpUTBVSVVFQWlSVVFJVUVBaVIwTUlVRUFpVFVJSVVFQWlUMEVJVUVBWm93Vk1DRkJBR2FNRFNRaFFRQm1qQjBBSVVFQVpvd0YvQ0JCQUdhTUpmZ2dRUUJtakMzMElFRUFuSThGS0NGQkFJdEZBS01jSVVFQWkwVUVveUFoUVFDTlJRaWpMQ0ZCQUl1RjRQei8vOGNGYUNCQkFBRUFBUUNoSUNGQkFLTWNJRUVBeHdVUUlFRUFDUVFBd01jRkZDQkJBQUVBQUFDaEJCQkJBSW1GMlB6Ly82RUlFRUVBaVlYYy9QLy8veFZRNEVBQW8yQWdRUUJxQWVqSVB3QUFXV29BL3hWTTRFQUFhTHpoUUFEL0ZVamdRQUNEUFdBZ1FRQUFkUWhxQWVpa1B3QUFXV2dKQkFEQS94VkU0RUFBVVA4VlFPQkFBTW5EaS85VmkreUxSUWlqTkNOQkFGM0RpLzlWaSt5QjdDZ0RBQUNoQkJCQkFEUEZpVVg4ZzZYWS9QLy9BRk5xVEkyRjNQei8vMm9BVU9qbUhRQUFqWVhZL1AvL2lZVW8vZi8vallVdy9mLy9nOFFNaVlVcy9mLy9pWVhnL2YvL2lZM2MvZi8vaVpYWS9mLy9pWjNVL2YvL2liWFEvZi8vaWIzTS9mLy9ab3lWK1AzLy8yYU1qZXo5Ly85bWpKM0kvZi8vWm95RnhQMy8vMmFNcGNEOS8vOW1qSzI4L2YvL25JK0Y4UDMvLzR0RkJJMU5CTWVGTVAzLy93RUFBUUNKaGVqOS8vK0pqZlQ5Ly8rTFNmeUpqZVQ5Ly8vSGhkajgvLzhYQkFEQXg0WGMvUC8vQVFBQUFJbUY1UHovLy84VlVPQkFBR29BaTlqL0ZVemdRQUNOaFNqOS8vOVEveFZJNEVBQWhjQjFESVhiZFFocUF1aDRQZ0FBV1dnWEJBREEveFZFNEVBQVVQOFZRT0JBQUl0Ti9EUE5XK2l0OGYvL3ljT0wvMVdMN1A4MU5DTkJBT2hnT0FBQVdZWEFkQU5kLytCcUF1ZzVQZ0FBV1YzcHN2Ny8vNHYvVll2c2kwVUlNOGs3Qk0wUUVFRUFkQk5CZy9rdGN2R05TTzJEK1JGM0Rtb05XRjNEaXdUTkZCQkJBRjNEQlVULy8vOXFEbGs3eUJ2QUk4R0R3QWhkdytqV09RQUFoY0IxQnJoNEVVRUF3NFBBQ01Qb3d6a0FBSVhBZFFhNGZCRkJBTU9Ed0F6RGkvOVZpK3hXNk9MLy8vK0xUUWhSaVFqb2d2Ly8vMW1MOE9pOC8vLy9pVEJlWGNQTXpNek16TXpNek16TVZvdEVKQlFMd0hVb2kwd2tFSXRFSkF3ejB2ZnhpOWlMUkNRSTkvR0w4SXZEOTJRa0VJdklpOGIzWkNRUUE5SHJSNHZJaTF3a0VJdFVKQXlMUkNRSTBlblIyOUhxMGRnTHlYWDA5L09MOFBka0pCU0x5SXRFSkJEMzVnUFJjZzQ3VkNRTWR3aHlEenRFSkFoMkNVNHJSQ1FRRzFRa0ZEUGJLMFFrQ0J0VUpBejMydmZZZzlvQWk4cUwwNHZaaThpTHhsN0NFQUNMLzFXTDdGRldpM1VNVnVpN0R3QUFpVVVNaTBZTVdhaUNkUmZvK1A3Ly84Y0FDUUFBQUlOT0RDQ0R5UC9wTHdFQUFLaEFkQTNvM2Y3Ly84Y0FJZ0FBQU92alV6UGJxQUYwRm9sZUJLZ1FENFNIQUFBQWkwNElnK0QraVE2SlJneUxSZ3lENE8rRHlBS0pSZ3lKWGdTSlhmeXBEQUVBQUhVczZCVUZBQUNEd0NBNzhIUU02QWtGQUFDRHdFQTc4SFVOLzNVTTZGNCtBQUJaaGNCMUIxYm9DajRBQUZuM1Jnd0lBUUFBVncrRWdBQUFBSXRHQ0lzK2pVZ0JpUTZMVGhncitFazcrNGxPQkg0ZFYxRC9kUXpvZENJQUFJUEVESWxGL090Tmc4Z2dpVVlNZzhqLzYzbUxUUXlEK2Y5MEc0UDUvblFXaThHRDRCK0wwY0g2QmNIZ0JnTUVsYUFyUVFEckJialFGVUVBOWtBRUlIUVVhZ0pUVTFIb2Rqd0FBQ1BDZzhRUWcvai9kQ1dMUmdpS1RRaUlDT3NXTS85SFY0MUZDRkQvZFF6b0JTSUFBSVBFRElsRi9EbDkvSFFKZzA0TUlJUEkvK3NJaTBVSUpmOEFBQUJmVzE3Snc0di9WWXZzaTBVSVZvdnh4a1lNQUlYQWRXUG84RGNBQUlsR0NJdEliSWtPaTBob2lVNEVpdzQ3RFNnY1FRQjBFb3NOUkJ0QkFJVkljSFVINkVsSEFBQ0pCb3RHQkRzRlNCcEJBSFFXaTBZSWl3MUVHMEVBaFVod2RRam92VDhBQUlsR0JJdEdDUFpBY0FKMUZJTkljQUxHUmd3QjZ3cUxDSWtPaTBBRWlVWUVpOFplWGNJRUFJdi9WWXZzZyt3Z1V6UGJPVjBVZFNEb0dQMy8vMU5UVTFOVHh3QVdBQUFBNktEOC8vK0R4QlNEeVAvcHhRQUFBRmFMZFF4WGkzMFFPL3QwSkR2emRTRG82UHovLzFOVFUxTlR4d0FXQUFBQTZIRDgvLytEeEJTRHlQL3Brd0FBQU1kRjdFSUFBQUNKZGVpSmRlQ0IvLy8vL3o5MkNjZEY1UC8vLzMvckJvMEVQNGxGNVA5MUhJMUY0UDkxR1A5MUZGRC9WUWlEeEJDSlJSUTc4M1JWTzhOOFF2OU41SGdLaTBYZ2lCai9SZURyRVkxRjRGQlQ2RnI5Ly85WldZUDQvM1FpLzAza2VBZUxSZUNJR09zUmpVWGdVRlBvUGYzLy8xbFpnL2ovZEFXTFJSVHJEelBBT1Yza1pvbEVmdjRQbmNCSVNGOWVXOG5EaS85VmkreFdNL1k1ZFJCMUhlZ2ovUC8vVmxaV1ZsYkhBQllBQUFEb3Evdi8vNFBFRklQSS8rdGVWNHQ5Q0R2K2RBVTVkUXgzRGVqNSsvLy94d0FXQUFBQTZ6UC9kUmovZFJUL2RSRC9kUXhYYUI5M1FBRG9yZjcvLzRQRUdEdkdmUVV6eVdhSkQ0UDQvblViNk1UNy8vL0hBQ0lBQUFCV1ZsWldWdWhNKy8vL2c4UVVnOGovWDE1ZHc0di9WWXZzZyt3WVUxZi9kUWlOVGVqbzRmMy8vNHRGRUl0OUREUGJPOE4wQW9rNE8vdDFLK2grKy8vL1UxTlRVMVBIQUJZQUFBRG9CdnYvLzRQRUZEaGQ5SFFIaTBYd2cyQncvVFBBNmFRQkFBQTVYUlIwRElOOUZBSjh5b045RkNSL3hGWVB0emVKWGZ5RHh3THJCUSszTjBkSGpVWG9VR29JVnVoSFdBQUFnOFFNaGNCMTZHYUQvaTExQm9OTkdBTHJCbWFEL2l0MUJRKzNOMGRIT1YwVWRUTlc2RU5XQUFCWmhjQjBDY2RGRkFvQUFBRHJSZyszQjJhRCtIaDBEMmFEK0ZoMENjZEZGQWdBQUFEckxzZEZGQkFBQUFDRGZSUVFkU0ZXNkFwV0FBQlpoY0IxRmcrM0IyYUQrSGgwQm1hRCtGaDFCMGRIRDdjM1IwZUR5UDh6MHZkMUZJbFYrSXZZVnVqY1ZRQUFXWVA0LzNVcGFrRllaanZHZHdabWcvNWFkZ21OUnA5bWcvZ1pkekdOUnA5bWcvZ1pEN2ZHZHdPRDZDQ0R3TWs3UlJSekdvTk5HQWc1WGZ4eUtYVUZPMFg0ZGlLRFRSZ0VnMzBRQUhVa2kwVVlUMCtvQ0hVaWczMFFBSFFEaTMwTWcyWDhBT3RkaTAzOEQ2OU5GQVBJaVUzOEQ3YzNSMGZyZ2I3Ly8vOS9xQVIxRzZnQmRUMkQ0QUowQ1lGOS9BQUFBSUIzQ1lYQWRTczVkZngySnVqNCtmLy85a1VZQWNjQUlnQUFBSFFHZzAzOC8rc1A5a1VZQW1vQVdBK1Z3QVBHaVVYOGkwVVFYb1hBZEFLSk9QWkZHQUowQS9kZC9JQjk5QUIwQjR0RjhJTmdjUDJMUmZ4Zlc4bkRpLzlWaSt3endGRC9kUkQvZFF6L2RRZzVCY1FvUVFCMUIyZ3dIRUVBNndGUTZPRDkvLytEeEJSZHc3aUFFVUVBdzZIQVBFRUFWbW9VWG9YQWRRZTRBQUlBQU9zR084WjlCNHZHbzhBOFFRQnFCRkRva0VVQUFGbFpvN3dzUVFDRndIVWVhZ1JXaVRYQVBFRUE2SGRGQUFCWldhTzhMRUVBaGNCMUJXb2FXRjdETTlLNWdCRkJBT3NGb2J3c1FRQ0pEQUtEd1NDRHdnU0IrUUFVUVFCODZtcitYalBTdVpBUlFRQlhpOExCK0FXTEJJV2dLMEVBaS9xRDV4L0I1d2FMQkFlRCtQOTBDRHZHZEFTRndIVUNpVEdEd1NCQ2dmbndFVUVBZk01Zk04QmV3K2c0Q3dBQWdEMWtJMEVBQUhRRjZLSldBQUQvTmJ3c1FRRG9LQ0VBQUZuRGkvOVZpK3hXaTNVSXVJQVJRUUE3OEhJaWdmN2dFMEVBZHhxTHppdkl3ZmtGZzhFUVVlaUdXQUFBZ1U0TUFJQUFBRm5yQ29QR0lGYi9GVlRnUUFCZVhjT0wvMVdMN0l0RkNJUDRGSDBXZzhBUVVPaFpXQUFBaTBVTWdVZ01BSUFBQUZsZHc0dEZESVBBSUZEL0ZWVGdRQUJkdzR2L1ZZdnNpMFVJdVlBUlFRQTd3WElmUGVBVFFRQjNHSUZnRFA5Ly8vOHJ3Y0g0QllQQUVGRG9ObGNBQUZsZHc0UEFJRkQvRlZqZ1FBQmR3NHYvVll2c2kwMElnL2tVaTBVTWZST0JZQXovZi8vL2c4RVFVZWdIVndBQVdWM0RnOEFnVVA4VldPQkFBRjNEaS85VmkreUQ3QkNoUUNwQkFGTldpM1VNVnpQL2lVWDhpWDMwaVgzNGlYM3c2d0pHUm1hRFBpQjArQSszQm9QNFlYUTRnL2h5ZEN1RCtIZDBIK2lPOS8vL1YxZFhWMWZIQUJZQUFBRG9GdmYvLzRQRUZEUEE2Vk1DQUFDN0FRTUFBT3NOTTl1RFRmd0I2d203Q1FFQUFJTk4vQUl6eVVGR1JnKzNCbVk3eHcrRTJ3RUFBTG9BUUFBQU84OFBoQ0FCQUFBUHQ4Q0QrRk1QajVvQUFBQVBoSU1BQUFDRDZDQVBoUGNBQUFDRDZBdDBWa2gwUjRQb0dIUXhnK2dLZENHRDZBUVBoWFgvLy84NWZmZ1BoYzBBQUFESFJmZ0JBQUFBZzhzUTZjUUFBQUNCeTRBQUFBRHB1UUFBQVBiRFFBK0ZxZ0FBQUlQTFFPbW9BQUFBeDBYd0FRQUFBT21XQUFBQTlzTUNENFdOQUFBQWkwWDhnK1ArZytEOGc4c0NEWUFBQUFDSlJmenJmVGw5K0hWeXgwWDRBUUFBQUlQTElPdHNnK2hVZEZpRDZBNTBRMGgwTDRQb0MzUVZnK2dHRDRYcS92Ly85OE1Bd0FBQWRVTUwydXRGT1gzMGRUcUJaZnovdi8vL3gwWDBBUUFBQU9zd09YMzBkU1VKVmZ6SFJmUUJBQUFBNngvM3d3REFBQUIxRVlITEFJQUFBT3NQdUFBUUFBQ0YySFFFTThuckFndllSa1lQdHdabU84Y1BoZGorLy84NWZmQVBoS1VBQUFEckFrWkdab00rSUhUNGFnTldhTVRoUUFEbzZ1ai8vNFBFRElYQUQ0Vmcvdi8vYWlDRHhnWlk2d0pHUm1ZNUJuVDVab00rUFErRlIvNy8vMFpHWmprR2RQbHFCV2pNNFVBQVZ1anhYZ0FBZzhRTWhjQjFDNFBHQ29ITEFBQUVBT3RFYWdobzJPRkFBRmJvMGw0QUFJUEVESVhBZFF1RHhoQ0J5d0FBQWdEckpXb0hhT3poUUFCVzZMTmVBQUNEeEF5RndBK0Y2djMvLzRQR0RvSExBQUFCQU9zQ1JrWm1nejRnZFBobU9UNFBoYzc5Ly85b2dBRUFBUDkxRUkxRkRGUC9kUWhRNkcxZEFBQ0R4QlNGd0ErRnh2My8vNHRGRlA4Rk9DTkJBSXROL0lsSURJdE5ESWw0QklrNGlYZ0lpWGdjaVVnUVgxNWJ5Y05xRUdoWStrQUE2QzhCQUFBejJ6UC9pWDNrYWdIb0JGVUFBRm1KWGZ3ejlvbDE0RHMxd0R4QkFBK056d0FBQUtHOExFRUFqUVN3T1JoMFc0c0FpMEFNcUlOMVNLa0FnQUFBZFVHTlJ2MkQrQkIzRW8xR0VGRG8vMU1BQUZtRndBK0VtUUFBQUtHOExFRUEvelN3VnVnOC9QLy9XVm1odkN4QkFJc0VzUFpBRElOMERGQlc2SlA4Ly85WldVYnJrWXY0aVgzazYyakI1Z0pxT09odlFBQUFXWXNOdkN4QkFJa0VEcUc4TEVFQUE4WTVHSFJKYUtBUEFBQ0xBSVBBSUZEb04xNEFBRmxaaGNDaHZDeEJBSFVUL3pRRzZMd2NBQUJab2J3c1FRQ0pIQWJyRzRzRUJvUEFJRkQvRlZUZ1FBQ2h2Q3hCQUlzOEJvbDk1SWxmRER2N2RCYUJad3dBZ0FBQWlWOEVpVjhJaVIrSlh4eURUeEQveDBYOC92Ly8vK2dMQUFBQWk4Zm9WUUFBQU1PTGZlUnFBZWdPVXdBQVdjUE16TXhvQURSQUFHVC9OUUFBQUFDTFJDUVFpV3drRUkxc0pCQXI0Rk5XVjZFRUVFRUFNVVg4TThWUWlXWG8vM1g0aTBYOHgwWDgvdi8vLzRsRitJMUY4R1NqQUFBQUFNT0xUZkJraVEwQUFBQUFXVjlmWGx1TDVWMVJ3OHpNek16TXpNek16TXpNaS85VmkreUQ3QmhUaTEwTVZvdHpDRE0xQkJCQkFGZUxCc1pGL3dESFJmUUJBQUFBalhzUWcvaitkQTJMVGdRRHp6TU1PT2lINVAvL2kwNE1pMFlJQTg4ekREam9kK1QvLzR0RkNQWkFCR1lQaFJZQkFBQ0xUUkNOVmVpSlUveUxXd3lKUmVpSlRleUQrLzUwWDQxSkFJMEVXNHRNaGhTTlJJWVFpVVh3aXdDSlJmaUZ5WFFVaTlmbzhBRUFBTVpGL3dHRndIeEFmMGVMUmZpTDJJUDQvblhPZ0gzL0FIUWtpd2FEK1A1MERZdE9CQVBQTXd3NDZBVGsvLytMVGd5TFZnZ0R6ek1NT3VqMDQvLy9pMFgwWDE1YmkrVmR3OGRGOUFBQUFBRHJ5WXROQ0lFNVkzTnQ0SFVwZ3oyNExFRUFBSFFnYUxnc1FRRG9VMTBBQUlQRUJJWEFkQStMVlFocUFWTC9GYmdzUVFDRHhBaUxUUXpva3dFQUFJdEZERGxZREhRU2FBUVFRUUJYaTlPTHlPaVdBUUFBaTBVTWkwMzRpVWdNaXdhRCtQNTBEWXRPQkFQUE13dzQ2SEhqLy8rTFRneUxWZ2dEenpNTU91aGg0Ly8vaTBYd2kwZ0lpOWZvS1FFQUFMcisvLy8vT1ZNTUQ0UlMvLy8vYUFRUVFRQlhpOHZvUVFFQUFPa2MvLy8vVTFaWGkxUWtFSXRFSkJTTFRDUVlWVkpRVVZGb0hEWkFBR1QvTlFBQUFBQ2hCQkJCQURQRWlVUWtDR1NKSlFBQUFBQ0xSQ1F3aTFnSWkwd2tMRE1aaTNBTWcvNytkRHVMVkNRMGcvcitkQVE3OG5ZdWpUUjJqVnl6RUlzTGlVZ01nM3NFQUhYTWFBRUJBQUNMUXdqb0psNEFBTGtCQUFBQWkwTUk2RGhlQUFEcnNHU1BCUUFBQUFDRHhCaGZYbHZEaTB3a0JQZEJCQVlBQUFDNEFRQUFBSFF6aTBRa0NJdElDRFBJNklUaS8vOVZpMmdZLzNBTS8zQVEvM0FVNkQ3Ly8vK0R4QXhkaTBRa0NJdFVKQkNKQXJnREFBQUF3MVdMVENRSWl5bi9jUnovY1JqL2NTam9GZi8vLzRQRURGM0NCQUJWVmxkVGkrb3p3RFBiTTlJejlqUC8vOUZiWDE1ZHc0dnFpL0dMd1dvQjZJTmRBQUF6d0RQYk04a3owalAvLytaVmkreFRWbGRxQUdvQWFNTTJRQUJSNk11WkFBQmZYbHRkdzFXTGJDUUlVbEgvZENRVTZMVCsvLytEeEF4ZHdnZ0FpLzlWaSt4V2kzVUlWdWhnWGdBQVdZUDQvM1VRNklUdy8vL0hBQWtBQUFDRHlQL3JUVmYvZFJCcUFQOTFERkQvRldEZ1FBQ0wrSVAvLzNVSS94VVk0RUFBNndJendJWEFkQXhRNkhUdy8vOVpnOGovNnh1THhzSDRCWXNFaGFBclFRQ0Q1aC9CNWdhTlJEQUVnQ0Q5aThkZlhsM0RhaEJvZVBwQUFPZzgvUC8vaTBVSWcvaitkUnZvSS9ELy80TWdBT2dJOFAvL3h3QUpBQUFBZzhqLzZaMEFBQUF6L3p2SGZBZzdCWWdyUVFCeUllajY3Ly8vaVRqbzRPLy8vOGNBQ1FBQUFGZFhWMWRYNkdqdi8vK0R4QlRyeVl2SXdma0ZqUnlOb0N0QkFJdndnK1lmd2VZR2l3c1B2a3d4QklQaEFYUy9VT2p0WFFBQVdZbDkvSXNEOWtRd0JBRjBGdjkxRVA5MURQOTFDT2pzL3YvL2c4UU1pVVhrNnhib2ZlLy8vOGNBQ1FBQUFPaUY3Ly8vaVRpRFRlVC94MFg4L3YvLy8rZ0pBQUFBaTBYazZMejcvLy9ELzNVSTZEZGVBQUJadzR2L1ZZdnNpMFVJVmpQMk84WjFIZWc1Ny8vL1ZsWldWbGJIQUJZQUFBRG93ZTcvLzRQRUZJUEkvK3NEaTBBUVhsM0RpLzlWaSt4VFZvdDFDSXRHREl2SWdPRURNOXVBK1FKMVFLa0lBUUFBZERtTFJnaFhpejRyK0lYL2ZpeFhVRmJvbXYvLy8xbFE2QkFUQUFDRHhBdzd4M1VQaTBZTWhNQjVENFBnL1lsR0RPc0hnMDRNSUlQTC8xK0xSZ2lEWmdRQWlRWmVpOE5iWGNPTC8xV0w3RmFMZFFpRjluVUpWdWcxQUFBQVdlc3ZWdWg4Ly8vL1dZWEFkQVdEeVAvckgvZEdEQUJBQUFCMEZGYm9NZi8vLzFEb0lWOEFBRm4zMkZrYndPc0NNOEJlWGNOcUZHaVkra0FBNkg3Ni8vOHovNGw5NUlsOTNHb0I2RkpPQUFCWmlYMzhNL2FKZGVBN05jQThRUUFQallNQUFBQ2h2Q3hCQUkwRXNEazRkRjZMQVBaQURJTjBWbEJXNkxQMS8vOVpXVFBTUW9sVi9LRzhMRUVBaXdTd2kwZ005c0dEZEM4NVZRaDFFVkRvU3YvLy8xbUQrUDkwSHY5RjVPc1pPWDBJZFJUMndRSjBEMURvTC8vLy8xbUQrUDkxQXdsRjNJbDkvT2dJQUFBQVJ1dUVNLytMZGVDaHZDeEJBUDgwc0Zib3ZQWC8vMWxadzhkRi9QNy8vLy9vRWdBQUFJTjlDQUdMUmVSMEE0dEYzT2ovK2YvL3cyb0I2THRNQUFCWncyb0I2Qi8vLy85Wnc0di9WWXZzZyt3TVUxZUxmUWd6Mnp2N2RTRG9jTzMvLzFOVFUxTlR4d0FXQUFBQTZQanMvLytEeEJTRHlQL3BaZ0VBQUZmb0F2Ny8vemxmQkZtSlJmeDlBNGxmQkdvQlUxRG9FZjMvLzRQRUREdkRpVVg0Zk5PTFZ3ejN3Z2dCQUFCMUNDdEhCT2t1QVFBQWl3ZUxUd2hXaS9BcjhZbDE5UGJDQTNSQmkxWDhpM1g4d2ZvRml4U1ZvQ3RCQUlQbUg4SG1CdlpFTWdTQWRCZUwwVHZRY3hHTDhJQTZDblVGLzBYME05dENPOVp5OFRsZCtIVWNpMFgwNmRvQUFBQ0Uwbmp2Nk1Icy8vL0hBQllBQUFEcGh3QUFBUFpIREFFUGhMUUFBQUNMVndRNzAzVUlpVjMwNmFVQUFBQ0xYZnlMZGZ3cndRUEN3ZnNGZytZZmpSeWRvQ3RCQUlsRkNJc0R3ZVlHOWtRd0JJQjBlV29DYWdEL2Rmem9RdnovLzRQRUREdEYrSFVnaTBjSWkwMElBOGpyQ1lBNENuVUQvMFVJUUR2QmN2UDNSd3dBSUFBQTYwQnFBUDkxK1A5MS9PZ04vUC8vZzhRTWhjQjlCWVBJLytzNnVBQUNBQUE1UlFoM0VJdFBEUGJCQ0hRSTk4RUFCQUFBZEFPTFJ4aUpSUWlMQS9aRU1BUUVkQVAvUlFpTFJRZ3BSZmlMUmZTTFRmZ0R3VjVmVzhuRGkvOVZpK3hXaTNVSVZ6UC9PL2QxSGVqVzYvLy9WMWRYVjFmSEFCWUFBQURvWHV2Ly80UEVGT24zQUFBQWkwWU1xSU1QaE93QUFBQ29RQStGNUFBQUFLZ0NkQXVEeUNDSlJnenAxUUFBQUlQSUFZbEdES2tNQVFBQWRRbFc2QjhyQUFCWjZ3V0xSZ2lKQnY5MkdQOTJDRmJvS1B6Ly8xbFE2SEFHQUFDRHhBeUpSZ1E3eHcrRWlRQUFBSVA0L3crRWdBQUFBUFpHRElKMVQxYm8vdnYvLzFtRCtQOTBMbGJvOHZ2Ly8xbUQrUDUwSWxibzV2di8vOEg0QlZhTlBJV2dLMEVBNk5iNy8vK0Q0Qjlad2VBR0F3ZFo2d1c0MEJWQkFJcEFCQ1NDUElKMUI0Rk9EQUFnQUFDQmZoZ0FBZ0FBZFJXTFJneW9DSFFPcVFBRUFBQjFCOGRHR0FBUUFBQ0xEdjlPQkErMkFVR0pEdXNUOTlnYndJUGdFSVBBRUFsR0RJbCtCSVBJLzE5ZVhjT0wvMVdMN0lQc0hJdFZFRmFMZFFocS9saUpSZXlKVmVRNzhIVWI2TExxLy8rRElBRG9sK3IvLzhjQUNRQUFBSVBJLyttSUJRQUFVelBiTy9OOENEczFpQ3RCQUhJbjZJanEvLytKR09odTZ2Ly9VMU5UVTFQSEFBa0FBQURvOXVuLy80UEVGSVBJLytsUkJRQUFpOGJCK0FWWGpUeUZvQ3RCQUlzSGcrWWZ3ZVlHQThhS1NBVDJ3UUYxRk9oQzZ2Ly9pUmpvS09yLy84Y0FDUUFBQU90cWdmci8vLzkvZDFDSlhmQTcwdytFQ0FVQUFQYkJBZytGL3dRQUFEbGRESFEzaWtBa0FzRFErSWhGL2crK3dFaHFCRmwwSEVoMURvdkM5OUNvQVhRWmcrTCtpVlVRaTBVTWlVWDA2WUVBQUFDTHd2ZlFxQUYxSWVqVzZmLy9pUmpvdk9uLy84Y0FGZ0FBQUZOVFUxTlQ2RVRwLy8rRHhCVHJOSXZDMGVpSlRSQTd3WElEaVVVUS8zVVE2SVExQUFCWmlVWDBPOE4xSHVpRTZmLy94d0FNQUFBQTZJenAvLy9IQUFnQUFBQ0R5UC9wYUFRQUFHb0JVMVAvZFFqb1Z5Y0FBSXNQaVVRT0tJdEY5SVBFRUlsVURpeUxEd1BPOWtFRVNIUjBpa2tGZ1BrS2RHdzVYUkIwWjRnSWl3OUEvMDBReDBYd0FRQUFBTVpFRGdVS09GMytkRTZMRDRwTURpV0ErUXAwUXpsZEVIUStpQWlMRDBEL1RSQ0FmZjRCeDBYd0FnQUFBTVpFRGlVS2RTU0xENHBNRGlhQStRcDBHVGxkRUhRVWlBaUxEMEQvVFJESFJmQURBQUFBeGtRT0pncFRqVTNvVWY5MUVGQ0xCLzgwQnY4VmFPQkFBSVhBRDRSN0F3QUFpMDNvTzhzUGpIQURBQUE3VFJBUGgyY0RBQUNMQndGTjhJMUVCZ1QyQUlBUGhPWUJBQUNBZmY0Q0Q0UVdBZ0FBTzh0MERZdE45SUE1Q25VRmdBZ0U2d09BSVB1TFhmU0xSZkFEdzRsZEVJbEY4RHZZRDRQUUFBQUFpMDBRaWdFOEdnK0VyZ0FBQUR3TmRBeUlBME5CaVUwUTZaQUFBQUNMUmZCSU84aHpGNDFCQVlBNENuVUtRVUdKVFJER0F3cnJkWWxGRU90dC8wVVFhZ0NOUmVoUWFnR05SZjlRaXdmL05BYi9GV2pnUUFDRndIVUsveFVZNEVBQWhjQjFSWU45NkFCMFA0c0g5a1FHQkVoMEZJQjkvd3AwdWNZRERZc0hpazMvaUV3R0Jlc2xPMTMwZFFhQWZmOEtkS0JxQVdyL2F2Ly9kUWpvc3lVQUFJUEVFSUI5L3dwMEJNWUREVU9MUmZBNVJSQVBna2YvLy8vckZZc0hqVVFHQlBZQVFIVUZnQWdDNndXS0FZZ0RRNHZESzBYMGdIMytBWWxGOEErRjBBQUFBSVhBRDRUSUFBQUFTNG9MaE1sNEJrUHBoZ0FBQURQQVFBKzJ5ZXNQZy9nRWZ4TTdYZlJ5RGtzUHRndEFnTGtBRkVFQUFIVG9paE1QdHNvUHZva0FGRUVBaGNsMURlZ3Y1Ly8veHdBcUFBQUE2M3BCTzhoMUJBUFk2MENMRHdQTzlrRUVTSFFrUTRQNEFvaFJCWHdKaWhPTEQ0aFVEaVZEZy9nRGRRbUtFNHNQaUZRT0prTXIyT3NTOTlpWmFnRlNVUDkxQ09qWkpBQUFnOFFRaTBYa0sxMzAwZWhRLzNVTVUvOTE5R29BYU9uOUFBRC9GV1RnUUFDSlJmQ0Z3SFUwL3hVWTRFQUFVT2pVNXYvL1dZTk43UCtMUmZRN1JReDBCMURvRXc4QUFGbUxSZXlEK1A0UGhZc0JBQUNMUmZEcGd3RUFBSXRGOElzWE04azd3dytWd1FQQWlVWHdpVXdXTU92R084dDBEb3ROOUdhRE9RcDFCWUFJQk9zRGdDRDdpMTMwaTBYd0E4T0pYUkNKUmZBNzJBK0Qvd0FBQUl0RkVBKzNDR2FEK1JvUGhOY0FBQUJtZy9rTmRBOW1pUXREUTBCQWlVVVE2YlFBQUFDTFRmQ0R3ZjQ3d1hNZWpVZ0Nab001Q25VTmc4QUVpVVVRYWdycGpnQUFBSWxORU9tRUFBQUFnMFVRQW1vQWpVWG9VR29DalVYNFVJc0gvelFHL3hWbzRFQUFoY0IxQ3Y4VkdPQkFBSVhBZFZ1RGZlZ0FkRldMQi9aRUJnUklkQ2htZzMzNENuU3lhZzFZWm9rRGl3ZUtUZmlJVEFZRml3ZUtUZm1JVEFZbGl3ZkdSQVltQ3VzcU8xMzBkUWRtZzMzNENuU0ZhZ0ZxLzJyKy8zVUk2SFVqQUFDRHhCQm1nMzM0Q25RSWFnMVlab2tEUTBPTFJmQTVSUkFQZ2h2Ly8vL3JHSXNQalhRT0JQWUdRSFVGZ0E0QzZ3aG1pd0JtaVFORFF5dGQ5SWxkOE9tUi92Ly8veFVZNEVBQWFnVmVPOFoxRitnbzVmLy94d0FKQUFBQTZERGwvLytKTU9scC92Ly9nL2h0RDRWWi92Ly9pVjNzNlZ6Ky8vOHp3RjliWHNuRGFoQm93UHBBQU9nUjhmLy9pMFVJZy9qK2RSdm8rT1QvLzRNZ0FPamQ1UC8veHdBSkFBQUFnOGovNmI0QUFBQXo5anZHZkFnN0JZZ3JRUUJ5SWVqUDVQLy9pVERvdGVULy84Y0FDUUFBQUZaV1ZsWlc2RDNrLy8rRHhCVHJ5WXZJd2ZrRmpSeU5vQ3RCQUl2NGcrY2Z3ZWNHaXdzUHZrdzVCSVBoQVhTL3VmLy8vMzg3VFJBYnlVRjFGT2lCNVAvL2lURG9aK1QvLzhjQUZnQUFBT3V3VU9paFVnQUFXWWwxL0lzRDlrUTRCQUYwRnY5MUVQOTFEUDkxQ09oKytmLy9nOFFNaVVYazZ4Ym9NZVQvLzhjQUNRQUFBT2c1NVAvL2lUQ0RUZVQveDBYOC92Ly8vK2dKQUFBQWkwWGs2SER3Ly8vRC8zVUk2T3RTQUFCWnc0di9WWXZzVm90MUZGY3ovenYzZFFRendPdGxPWDBJZFJ2bzQrUC8vMm9XWG9rd1YxZFhWMWZvYk9QLy80UEVGSXZHNjBVNWZSQjBGamwxREhJUlZ2OTFFUDkxQ09qS0NBQUFnOFFNNjhIL2RReFgvM1VJNkNrQUFBQ0R4QXc1ZlJCMHRqbDFESE1PNkpUai8vOXFJbG1KQ0l2eDY2MXFGbGhmWGwzRHpNek16TXpNekl0VUpBeUxUQ1FFaGRKMGFUUEFpa1FrQ0lUQWRSYUIrZ0FCQUFCeURvTTlmQ3RCQUFCMEJla3lWUUFBVjR2NWcvb0VjakgzMllQaEEzUU1LOUdJQjRQSEFZUHBBWFgyaThqQjRBZ0R3WXZJd2VBUUE4R0x5b1BpQThIcEFuUUc4NnVGMG5RS2lBZUR4d0dENmdGMTlvdEVKQWhmdzR0RUpBVERpLzlWaSt5NDVCb0FBT2ozVmdBQW9RUVFRUUF6eFlsRi9JdEZERll6OW9tRk5PWC8vNG0xT09YLy80bTFNT1gvL3psMUVIVUhNOERwNlFZQUFEdkdkU2ZvME9MLy80a3c2TGJpLy85V1ZsWldWc2NBRmdBQUFPZys0di8vZzhRVWc4ai82YjRHQUFCVFY0dDlDSXZId2ZnRmpUU0ZvQ3RCQUlzR2crY2Z3ZWNHQThlS1dDUUMyOUQ3aWJVbzVmLy9pSjBuNWYvL2dQc0NkQVdBK3dGMU1JdE5FUGZSOXNFQmRTYm9aK0wvL3pQMmlURG9TK0wvLzFaV1ZsWld4d0FXQUFBQTZOUGgvLytEeEJUcFF3WUFBUFpBQkNCMEVXb0NhZ0JxQVA5MUNPZ1hJQUFBZzhRUS8zVUk2UE1oQUFCWmhjQVBoSjBDQUFDTEJ2WkVCd1NBRDRTUUFnQUE2RTBjQUFDTFFHd3p5VGxJRkkyRkhPWC8vdytVd1ZDTEJ2ODBCNG1OSU9YLy8vOFZlT0JBQUlYQUQ0UmdBZ0FBTThrNWpTRGwvLzkwQ0lUYkQ0UlFBZ0FBL3hWMDRFQUFpNTAwNWYvL2lZVWM1Zi8vTThDSmhUemwvLzg1UlJBUGhrSUZBQUNKaFVUbC8vK0toU2ZsLy8rRXdBK0Zad0VBQUlvTGk3VW81Zi8vTThDQStRb1BsTUNKaFNEbC8vK0xCZ1BIZzNnNEFIUVZpbEEwaUZYMGlFMzFnMkE0QUdvQ2pVWDBVT3RMRDc3QlVPZ3VNQUFBV1lYQWREcUxqVFRsLy84cnl3Tk5FRFBBUUR2SUQ0YWxBUUFBYWdLTmhVRGwvLzlUVU9peUx3QUFnOFFNZy9qL0Q0U3hCQUFBUS8rRlJPWC8vK3NiYWdGVGpZVkE1Zi8vVU9pT0x3QUFnOFFNZy9qL0Q0U05CQUFBTThCUVVHb0ZqVTMwVVdvQmpZMUE1Zi8vVVZEL3RSemwvLzlELzRWRTVmLy8veFZ3NEVBQWkvQ0Y5ZytFWEFRQUFHb0FqWVU4NWYvL1VGYU5SZlJRaTRVbzVmLy9pd0QvTkFmL0ZXemdRQUNGd0ErRUtRUUFBSXVGUk9YLy80dU5NT1gvL3dQQk9iVTg1Zi8vaVlVNDVmLy9ENHdWQkFBQWc3MGc1Zi8vQUErRXpRQUFBR29BallVODVmLy9VR29CalVYMFVJdUZLT1gvLzRzQXhrWDBEZjgwQi84VmJPQkFBSVhBRDRUUUF3QUFnNzA4NWYvL0FRK016d01BQVArRk1PWC8vLytGT09YLy8rbURBQUFBUEFGMEJEd0NkU0VQdHpNenlXYUQvZ29QbE1GRFE0T0ZST1gvL3dLSnRVRGwvLytKalNEbC8vODhBWFFFUEFKMVV2KzFRT1gvLytnUlV3QUFXV1k3aFVEbC8vOFBoV2dEQUFDRGhUamwvLzhDZzcwZzVmLy9BSFFwYWcxWVVJbUZRT1gvLytqa1VnQUFXV1k3aFVEbC8vOFBoVHNEQUFEL2hUamwvLy8vaFREbC8vK0xSUkE1aFVUbC8vOFBndm45Ly8vcEp3TUFBSXNPaWhQL2hUamwvLytJVkE4MGl3NkpSQTg0NlE0REFBQXp5WXNHQThmMlFBU0FENFMvQWdBQWk0VTA1Zi8vaVkxQTVmLy9oTnNQaGNvQUFBQ0poVHpsLy84NVRSQVBoaUFEQUFEckJvdTFLT1gvLzR1TlBPWC8vNE9sUk9YLy93QXJqVFRsLy8rTmhVamwvLzg3VFJCek9ZdVZQT1gvLy8rRlBPWC8vNG9TUVlENkNuVVEvNFV3NWYvL3hnQU5RUCtGUk9YLy80Z1FRUCtGUk9YLy80RzlST1gvLy84VEFBQnl3b3ZZallWSTVmLy9LOWhxQUkyRkxPWC8vMUJUallWSTVmLy9VSXNHL3pRSC94VnM0RUFBaGNBUGhFSUNBQUNMaFN6bC8vOEJoVGpsLy84N3d3K01PZ0lBQUl1RlBPWC8veXVGTk9YLy96dEZFQStDVFAvLy8ra2dBZ0FBaVlWRTVmLy9nUHNDRDRYUkFBQUFPVTBRRDRaTkFnQUE2d2FMdFNqbC8vK0xqVVRsLy8rRHBUemwvLzhBSzQwMDVmLy9qWVZJNWYvL08wMFFjMGFMbFVUbC8vK0RoVVRsLy84Q0Q3Y1NRVUZtZy9vS2RSYURoVERsLy84Q2FnMWJab2tZUUVDRGhUemwvLzhDZzRVODVmLy9BbWFKRUVCQWdiMDg1Zi8vL2hNQUFISzFpOWlOaFVqbC8vOHIyR29BallVczVmLy9VRk9OaFVqbC8vOVFpd2IvTkFmL0ZXemdRQUNGd0ErRVlnRUFBSXVGTE9YLy93R0ZPT1gvL3p2REQ0eGFBUUFBaTRWRTVmLy9LNFUwNWYvL08wVVFENEkvLy8vLzZVQUJBQUE1VFJBUGhud0JBQUNMalVUbC8vK0RwVHpsLy84QUs0MDA1Zi8vYWdLTmhVajUvLzllTzAwUWN6eUxsVVRsLy84UHR4SUJ0VVRsLy84RHptYUQrZ3AxRG1vTlcyYUpHQVBHQWJVODVmLy9BYlU4NWYvL1pva1FBOGFCdlR6bC8vK29CZ0FBY3I4ejlsWldhRlVOQUFDTmpmRHIvLzlSalkxSStmLy9LOEdaSzhMUitGQ0x3VkJXYU9uOUFBRC9GWERnUUFDTDJEdmVENFNYQUFBQWFnQ05oU3psLy85UWk4TXJ4bENOaERYdzYvLy9VSXVGS09YLy80c0EvelFIL3hWczRFQUFoY0IwREFPMUxPWC8venZlZjh2ckRQOFZHT0JBQUltRlFPWC8venZlZjF5TGhVVGwvLzhyaFRUbC8vK0poVGpsLy84N1JSQVBnZ3IvLy8vclAyb0FqWTBzNWYvL1VmOTFFUCsxTk9YLy8vOHcveFZzNEVBQWhjQjBGWXVGTE9YLy80T2xRT1gvL3dDSmhUamwvLy9yRFA4VkdPQkFBSW1GUU9YLy80TzlPT1gvL3dCMWJJTzlRT1gvL3dCMExXb0ZYam0xUU9YLy8zVVU2RDdjLy8vSEFBa0FBQURvUnR6Ly80a3c2ei8vdFVEbC8vL29TdHovLzFuck1ZdTFLT1gvLzRzRzlrUUhCRUIwRDR1Rk5PWC8vNEE0R25VRU04RHJKT2orMi8vL3h3QWNBQUFBNkFiYy8vK0RJQUNEeVAvckRJdUZPT1gvL3l1Rk1PWC8vMTliaTAzOE04MWU2QlhOLy8vSncyb1FhT0Q2UUFEbzQrZi8vNHRGQ0lQNC9uVWI2TXJiLy8rRElBRG9yOXYvLzhjQUNRQUFBSVBJLyttZEFBQUFNLzg3eDN3SU93V0lLMEVBY2lIb29kdi8vNGs0NklmYi8vL0hBQWtBQUFCWFYxZFhWK2dQMi8vL2c4UVU2OG1MeU1INUJZMGNqYUFyUVFDTDhJUG1IOEhtQm9zTEQ3NU1NUVNENFFGMHYxRG9sRWtBQUZtSmZmeUxBL1pFTUFRQmRCYi9kUkQvZFF6L2RRam9MdmovLzRQRURJbEY1T3NXNkNUYi8vL0hBQWtBQUFEb0xOdi8vNGs0ZzAzay84ZEYvUDcvLy8vb0NRQUFBSXRGNU9oajUvLy93LzkxQ09qZVNRQUFXY1BNek16TXpNek1WWXZzVjFhTGRReUxUUkNMZlFpTHdZdlJBOFk3L25ZSU8vZ1BncVFCQUFDQitRQUJBQUJ5SDRNOWZDdEJBQUIwRmxkV2crY1BnK1lQTy81ZVgzVUlYbDlkNlZ0UEFBRDN4d01BQUFCMUZjSHBBb1BpQTRQNUNISXE4NlgvSkpVRVRrQUFrSXZIdWdNQUFBQ0Q2UVJ5RElQZ0F3UEkveVNGR0UxQUFQOGtqUlJPUUFDUS95U05tRTFBQUpBb1RVQUFWRTFBQUhoTlFBQWowWW9HaUFlS1JnR0lSd0dLUmdMQjZRS0lSd0tEeGdPRHh3T0QrUWh5elBPbC95U1ZCRTVBQUkxSkFDUFJpZ2FJQjRwR0FjSHBBb2hIQVlQR0FvUEhBb1A1Q0hLbTg2WC9KSlVFVGtBQWtDUFJpZ2FJQjRQR0FjSHBBb1BIQVlQNUNIS0k4NlgvSkpVRVRrQUFqVWtBKzAxQUFPaE5RQURnVFVBQTJFMUFBTkJOUUFESVRVQUF3RTFBQUxoTlFBQ0xSSTdraVVTUDVJdEVqdWlKUkkvb2kwU083SWxFait5TFJJN3dpVVNQOEl0RWp2U0pSSS8waTBTTytJbEVqL2lMUkk3OGlVU1AvSTBFalFBQUFBQUQ4QVA0L3lTVkJFNUFBSXYvRkU1QUFCeE9RQUFvVGtBQVBFNUFBSXRGQ0Y1ZnljT1FpZ2FJQjR0RkNGNWZ5Y09RaWdhSUI0cEdBWWhIQVl0RkNGNWZ5Y09OU1FDS0JvZ0hpa1lCaUVjQmlrWUNpRWNDaTBVSVhsL0p3NUNOZERIOGpYdzUvUGZIQXdBQUFIVWt3ZWtDZytJRGcva0ljZzM5ODZYOC95U1ZvRTlBQUl2Lzk5bi9KSTFRVDBBQWpVa0FpOGU2QXdBQUFJUDVCSElNZytBREs4ai9KSVdrVGtBQS95U05vRTlBQUpDMFRrQUEyRTVBQUFCUFFBQ0tSZ01qMFloSEE0UHVBY0hwQW9QdkFZUDVDSEt5L2ZPbC9QOGtsYUJQUUFDTlNRQ0tSZ01qMFloSEE0cEdBc0hwQW9oSEFvUHVBb1B2QW9QNUNIS0kvZk9sL1A4a2xhQlBRQUNRaWtZREk5R0lSd09LUmdLSVJ3S0tSZ0hCNlFLSVJ3R0Q3Z09EN3dPRCtRZ1BnbGIvLy8vOTg2WDgveVNWb0U5QUFJMUpBRlJQUUFCY1QwQUFaRTlBQUd4UFFBQjBUMEFBZkU5QUFJUlBRQUNYVDBBQWkwU09ISWxFanh5TFJJNFlpVVNQR0l0RWpoU0pSSThVaTBTT0VJbEVqeENMUkk0TWlVU1BESXRFamdpSlJJOElpMFNPQklsRWp3U05CSTBBQUFBQUEvQUQrUDhrbGFCUFFBQ0wvN0JQUUFDNFQwQUF5RTlBQU54UFFBQ0xSUWhlWDhuRGtJcEdBNGhIQTR0RkNGNWZ5Y09OU1FDS1JnT0lSd09LUmdLSVJ3S0xSUWhlWDhuRGtJcEdBNGhIQTRwR0FvaEhBb3BHQVloSEFZdEZDRjVmeWNOcURHZ0ErMEFBNkp2ai8vK0xkUWlGOW5SMWd6MkVLMEVBQTNWRGFnVG9aemNBQUZtRFpmd0FWdWp5VEFBQVdZbEY1SVhBZEFsV1VPZ1dUUUFBV1ZuSFJmeisvLy8vNkFzQUFBQ0RmZVFBZFRmL2RRanJDbW9FNkZNMkFBQlp3MVpxQVA4MXBDaEJBUDhWZk9CQUFJWEFkUmJvRWRmLy80dncveFVZNEVBQVVPakIxdi8vaVFaWjZGL2ovLy9EaS85VmkreFdpM1VJVjFib3UwUUFBRm1EK1A5MFVLR2dLMEVBZy80QmRRbjJnSVFBQUFBQmRRdUQvZ0oxSFBaQVJBRjBGbW9DNkpCRUFBQnFBWXY0NklkRUFBQlpXVHZIZEJ4VzZIdEVBQUJaVVA4VkpPQkFBSVhBZFFyL0ZSamdRQUNMK09zQ00vOVc2TmREQUFDTHhzSDRCWXNFaGFBclFRQ0Q1aC9CNWdaWnhrUXdCQUNGLzNRTVYraVExdi8vV1lQSS8rc0NNOEJmWGwzRGFoQm9JUHRBQU9oeDR2Ly9pMFVJZy9qK2RSdm9XTmIvLzRNZ0FPZzkxdi8veHdBSkFBQUFnOGovNlk0QUFBQXovenZIZkFnN0JZZ3JRUUJ5SWVndjF2Ly9pVGpvRmRiLy84Y0FDUUFBQUZkWFYxZFg2SjNWLy8rRHhCVHJ5WXZJd2ZrRmpSeU5vQ3RCQUl2d2crWWZ3ZVlHaXdzUHZrd3hCSVBoQVhTL1VPZ2lSQUFBV1lsOS9Jc0Q5a1F3QkFGMER2OTFDT2pML3YvL1dZbEY1T3NQNkxyVi8vL0hBQWtBQUFDRFRlVC94MFg4L3YvLy8rZ0pBQUFBaTBYazZBRGkvLy9ELzNVSTZIdEVBQUJadzR2L1ZZdnNWb3QxQ0l0R0RLaURkQjZvQ0hRYS8zWUk2TzM5Ly8rQlpnejMrLy8vTThCWmlRYUpSZ2lKUmdSZVhjT0wvMVdMN0l0RkNJc0FnVGhqYzIzZ2RTcURlQkFEZFNTTFFCUTlJQVdUR1hRVlBTRUZreGwwRGowaUJaTVpkQWM5QUVDWkFYVUY2SU5WQUFBendGM0NCQUJvSFZKQUFQOFZUT0JBQURQQXc0di9WWXZzVjcvb0F3QUFWLzhWS09CQUFQOTFDUDhWZ09CQUFJSEg2QU1BQUlIL1lPb0FBSGNFaGNCMDNsOWR3NHYvVll2czZLa0VBQUQvZFFqbzlnSUFBUDgxQUJWQkFPakxEQUFBYVA4QUFBRC8wSVBFREYzRGkvOVZpK3hvRE9KQUFQOFZnT0JBQUlYQWRCVm8vT0ZBQUZEL0ZZVGdRQUNGd0hRRi8zVUkvOUJkdzR2L1ZZdnMvM1VJNk1qLy8vOVovM1VJL3hXSTRFQUF6R29JNkc4MEFBQlp3Mm9JNkl3ekFBQlp3NHYvVll2c1Zvdnc2d3VMQm9YQWRBTC8wSVBHQkR0MUNITHdYbDNEaS85VmkreFdpM1VJTThEckQ0WEFkUkNMRG9YSmRBTC8wWVBHQkR0MURITHNYbDNEaS85VmkreURQYkFzUVFBQWRCbG9zQ3hCQU9qY1BnQUFXWVhBZEFyL2RRai9GYkFzUVFCWjZNY2ZBQUJvZU9GQUFHaGc0VUFBNktILy8vOVpXWVhBZFVKbzVGNUFBT2ltVlFBQXVGamhRQURIQkNSYzRVQUE2R1AvLy8rRFBiUXNRUUFBV1hRYmFMUXNRUURvaEQ0QUFGbUZ3SFFNYWdCcUFtb0EveFcwTEVFQU04QmR3Mm9ZYUVEN1FBRG9yOS8vLzJvSTZJc3pBQUJaZzJYOEFEUGJRemtkYkNOQkFBK0V4UUFBQUlrZGFDTkJBSXBGRUtKa0kwRUFnMzBNQUErRm5RQUFBUDgxcUN4QkFPaGFDd0FBV1l2NGlYM1loZjkwZVA4MXBDeEJBT2hGQ3dBQVdZdndpWFhjaVgza2lYWGdnKzRFaVhYY08vZHlWK2doQ3dBQU9RWjA3VHYzY2tyL051Z2JDd0FBaS9qb0N3c0FBSWtHLzlmL05hZ3NRUURvQlFzQUFJdjQveldrTEVFQTZQZ0tBQUNEeEF3NWZlUjFCVGxGNEhRT2lYM2tpWDNZaVVYZ2kvQ0pkZHlMZmRqcm4yaUk0VUFBdUh6aFFBRG9YLzcvLzFsb2tPRkFBTGlNNFVBQTZFLysvLzlaeDBYOC92Ly8vK2dmQUFBQWczMFFBSFVvaVIxc0kwRUFhZ2pvdVRFQUFGbi9kUWpvL1AzLy96UGJRNE45RUFCMENHb0k2S0F4QUFCWncralYzdi8vdzR2L1ZZdnNhZ0JxQVA5MUNPakQvdi8vZzhRTVhjT0wvMVdMN0dvQWFnSC9kUWpvcmY3Ly80UEVERjNEYWdGcUFHb0E2SjMrLy8rRHhBekRhZ0ZxQVdvQTZJNysvLytEeEF6RGkvOVc2QjBLQUFDTDhGYm9MVllBQUZibzRUc0FBRmJvYTlELy8xYm9ERllBQUZibzkxVUFBRmJvMzFNQUFGYm8vZ0VBQUZib2hGSUFBR2dqVlVBQTZHOEpBQUNEeENTakFCVkJBRjdEaS85VmkreFJVVk9MWFFoV1Z6UDJNLytKZmZ3N0hQMElGVUVBZEFsSGlYMzhnLzhYY3U2RC94Y1BnM2NCQUFCcUEranFXQUFBV1lQNEFRK0VOQUVBQUdvRDZObFlBQUJaaGNCMURZTTlBQkJCQUFFUGhCc0JBQUNCKy93QUFBQVBoRUVCQUFCb3lPZEFBTHNVQXdBQVU3OXdJMEVBVitnOVdBQUFnOFFNaGNCMERWWldWbFpXNkx6UC8vK0R4QlJvQkFFQUFMNkpJMEVBVm1vQXhnV05KRUVBQVA4VmtPQkFBSVhBZFNab3NPZEFBR2o3QWdBQVZ1ajdWd0FBZzhRTWhjQjBEelBBVUZCUVVGRG9lTS8vLzRQRUZGYm84aDBBQUVCWmcvZzhkamhXNk9VZEFBQ0Q3anNEeG1vRHVZUW1RUUJvck9kQUFDdklVVkRvQTFjQUFJUEVGSVhBZEJFejlsWldWbFpXNkRYUC8vK0R4QlRyQWpQMmFLam5RQUJUVitocFZnQUFnOFFNaGNCMERWWldWbFpXNkJIUC8vK0R4QlNMUmZ6L05NVU1GVUVBVTFmb1JGWUFBSVBFRElYQWRBMVdWbFpXVnVqc3p2Ly9nOFFVYUJBZ0FRQm9nT2RBQUZmb3QxUUFBSVBFRE9zeWF2VC9GWXpnUUFDTDJEdmVkQ1NEKy85MEgyb0FqVVg0VUkwMC9Rd1ZRUUQvTnVnd0hRQUFXVkQvTmxQL0ZXemdRQUJmWGx2Sncyb0Q2RzVYQUFCWmcvZ0JkQlZxQStoaFZ3QUFXWVhBZFIrRFBRQVFRUUFCZFJaby9BQUFBT2dwL3YvL2FQOEFBQURvSC83Ly8xbFp3OE9MLzFXTDdGRlJWdWpCQ1FBQWkvQ0Y5ZytFUmdFQUFJdFdYS0hNRlVFQVY0dDlDSXZLVXprNWRBNkwyR3ZiRElQQkRBUGFPOHR5N212QURBUENPOGh6Q0RrNWRRU0x3ZXNDTThDRndIUUtpMWdJaVYzOGhkdDFCelBBNmZzQUFBQ0Qrd1YxRElOZ0NBQXp3RURwNmdBQUFJUDdBUStFM2dBQUFJdE9ZSWxOK0l0TkRJbE9ZSXRJQklQNUNBK0Z1QUFBQUlzTndCVkJBSXM5eEJWQkFJdlJBL2s3MTMwa2E4a01pMzVjZzJRNUNBQ0xQY0FWUVFDTEhjUVZRUUJDQTkrRHdRdzcwM3ppaTEzOGl3Q0xmbVE5amdBQXdIVUp4MFprZ3dBQUFPdGVQWkFBQU1CMUNjZEdaSUVBQUFEclRqMlJBQURBZFFuSFJtU0VBQUFBNno0OWt3QUF3SFVKeDBaa2hRQUFBT3N1UFkwQUFNQjFDY2RHWklJQUFBRHJIajJQQUFEQWRRbkhSbVNHQUFBQTZ3NDlrZ0FBd0hVSHgwWmtpZ0FBQVA5MlpHb0kvOU5aaVg1azZ3ZURZQWdBVWYvVGkwWDRXWWxHWUlQSS8xdGZYc25Eb2NROFFRQXowb1hBZFFXNDJQZEFBQSszQ0dhRCtTQjNDV2FGeVhRbmhkSjBHMmFEK1NKMUNUUEpoZElQbE1HTDBVQkE2OXRtZy9rZ2R3cEFRQSszQ0dhRnlYWHd3NHYvVm9zMUJDQkJBRmN6LzRYMmRScUR5UC9wckFBQUFHYUQrRDEwQVVkVzZDcFdBQUJaalhSR0FnKzNCbWFGd0hYbVUyb0VSMWZvU1JvQUFJdllXVm1KSFZRalFRQ0YyM1VGZzhqLzYzU0xOUVFnUVFEclJGYm84bFVBQUl2NFIyYURQajFaZERGcUFsZm9GaG9BQUZsWmlRT0Z3SFJRVmxkUTZHRlZBQUNEeEF5RndIUVBNOEJRVUZCUVVPZ3J6UC8vZzhRVWc4TUVqVFIrWm9NK0FIVzIvelVFSUVFQTZCbjIvLytESlFRZ1FRQUFneU1BeHdXZ0xFRUFBUUFBQURQQVdWdGZYc1AvTlZRalFRRG84L1gvLzRNbFZDTkJBQUNEeVAvcjVJdi9WWXZzVVZZejBsZUxmUXlKRTR2eHh3Y0JBQUFBT1ZVSWRBbUxUUWlEUlFnRWlURm1nemdpZFJPTGZRd3p5WVhTRDVUQmFpSkFRSXZSV2VzWS93T0Y5blFJWm9zSVpva09Sa1lQdHdoQVFHYUZ5WFE4aGRKMXkyYUQrU0IwQm1hRCtRbDF2NFgyZEFZenlXYUpUdjZEWmZ3QU05Sm1PUkFQaE1NQUFBQVB0d2htZy9rZ2RBWm1nL2tKZFFoQVFPdnRTRWpyMm1ZNUVBK0Vvd0FBQURsVkNIUUppMDBJZzBVSUJJa3gvd2N6LzBjejB1c0RRRUJDWm9NNFhIVDNab000SW5VNDlzSUJkU0NEZmZ3QWRBMk5TQUptZ3praWRRU0x3ZXNOTThrei96bE4vQStVd1lsTi9OSHE2dzlLaGZaMENHcGNXV2FKRGtaRy93T0Ywblh0RDdjSVpvWEpkQ1E1VmZ4MURHYUQrU0IwR1dhRCtRbDBFNFgvZEF1RjluUUZab2tPUmtiL0EwQkE2NEtGOW5RSE04bG1pUTVHUnY4RGkzME02VEwvLy8rTFJRZzd3blFDaVJEL0IxOWV5Y09MLzFXTDdGRlJVMVpYYUFRQkFBQytpQ1pCQUZZendEUGJVMmFqa0NoQkFQOFZsT0JBQUtIRVBFRUFpVFZnSTBFQU84TjBCNHY0WmprWWRRS0wvbzFGL0ZCVGpWMzRNOG1MeCtoZy92Ly9pMTM4V1ZtQisvLy8vejl6U290TitJSDUvLy8vZjNNL2pRUlpBOEFEeVR2QmNqUlE2SmtYQUFDTDhGbUY5blFualVYOFVJME1ubGFOWGZpTHgrZ2Uvdi8vaTBYOFNGbWpRQ05CQUZtSk5VZ2pRUUF6d09zRGc4ai9YMTVieWNPTC8xYi9GWnpnUUFDTDhEUEpPL0YxQkRQQVhzTm1PUTUwRGtCQVpqa0lkZmxBUUdZNUNIWHlLOFpBVTBDTDJGZFQ2QzBYQUFDTCtGbUYvM1VOVnY4Vm1PQkFBSXZIWDF0ZXcxTldWK2d4OFAvL2c4UU02K2IvSlFUZ1FBQnFWR2hnKzBBQTZDYlgvLzh6LzRsOS9JMUZuRkQvRmFqZ1FBREhSZnorLy8vL2FrQnFJRjVXNkI0WEFBQlpXVHZIRDRRVUFnQUFvNkFyUVFDSk5ZZ3JRUUNOaUFBSUFBRHJNTVpBQkFDRENQL0dRQVVLaVhnSXhrQWtBTVpBSlFyR1FDWUtpWGc0eGtBMEFJUEFRSXNOb0N0QkFJSEJBQWdBQUR2QmNzeG1PWDNPRDRRS0FRQUFpMFhRTzhjUGhQOEFBQUNMT0kxWUJJMEVPNGxGNUw0QUNBQUFPLzU4QW92K3gwWGdBUUFBQU90YmFrQnFJT2lRRmdBQVdWbUZ3SFJXaTAzZ2pReU5vQ3RCQUlrQmd3V0lLMEVBSUkyUUFBZ0FBT3NxeGtBRUFJTUkvOFpBQlFxRFlBZ0FnR0FrZ01aQUpRckdRQ1lLZzJBNEFNWkFOQUNEd0VDTEVRUFdPOEp5MHY5RjREazlpQ3RCQUh5ZDZ3YUxQWWdyUVFDRFplQUFoZjkrYll0RjVJc0lnL24vZEZhRCtmNTBVWW9EcUFGMFM2Z0lkUXRSL3hXazRFQUFoY0IwUEl0MTRJdkd3ZmdGZytZZndlWUdBelNGb0N0QkFJdEY1SXNBaVFhS0E0aEdCR2lnRHdBQWpVWU1VT2g3TXdBQVdWbUZ3QStFeVFBQUFQOUdDUDlGNEVPRFJlUUVPWDNnZkpNejI0dnp3ZVlHQXpXZ0swRUFpd2FEK1A5MEM0UDQvblFHZ0U0RWdPdHl4a1lFZ1lYYmRRVnE5bGpyQ292RFNQZllHOENEd1BWUS94V000RUFBaS9pRC8vOTBRNFgvZEQ5WC94V2s0RUFBaGNCME5JaytKZjhBQUFDRCtBSjFCb0JPQkVEckNZUDRBM1VFZ0U0RUNHaWdEd0FBalVZTVVPamxNZ0FBV1ZtRndIUTMvMFlJNndxQVRnUkF4d2IrLy8vL1E0UDdBdytNWi8vLy8vODFpQ3RCQVA4Vm9PQkFBRFBBNnhFendFRERpMlhveDBYOC92Ly8vNFBJLytnazFmLy93NHYvVnJpQStVQUF2b0Q1UUFCWGkvZzd4bk1QaXdlRndIUUMvOUNEeHdRNy9uTHhYMTdEaS85V3VJajVRQUMraVBsQUFGZUwrRHZHY3crTEI0WEFkQUwvMElQSEJEditjdkZmWHNPTC8xV0w3RmIvTlJRV1FRQ0xOYkRnUUFELzFvWEFkQ0doRUJaQkFJUDQvM1FYVVA4MUZCWkJBUC9XLzlDRndIUUlpNEQ0QVFBQTZ5ZStjT2hBQUZiL0ZZRGdRQUNGd0hVTFZ1Z1U4Ly8vV1lYQWRCaG9ZT2hBQUZEL0ZZVGdRQUNGd0hRSS8zVUkvOUNKUlFpTFJRaGVYY05xQU9pSC8vLy9XY09MLzFXTDdGYi9OUlFXUVFDTE5iRGdRQUQvMW9YQWRDR2hFQlpCQUlQNC8zUVhVUDgxRkJaQkFQL1cvOUNGd0hRSWk0RDhBUUFBNnllK2NPaEFBRmIvRllEZ1FBQ0Z3SFVMVnVpWjh2Ly9XWVhBZEJob2pPaEFBRkQvRllUZ1FBQ0Z3SFFJLzNVSS85Q0pSUWlMUlFoZVhjUC9GYlRnUUFEQ0JBQ0wvMWIvTlJRV1FRRC9GYkRnUUFDTDhJWDJkUnYvTlpnb1FRRG9aZi8vLzFtTDhGYi9OUlFXUVFEL0ZiamdRQUNMeGw3RG9SQVdRUUNEK1A5MEZsRC9OYUFvUVFEb08vLy8vMW4vMElNTkVCWkJBUCtoRkJaQkFJUDQvM1FPVVA4VnZPQkFBSU1ORkJaQkFQL3AzU1VBQUdvTWFJRDdRQURvSDlQLy83NXc2RUFBVnY4VmdPQkFBSVhBZFFkVzZOcngvLzlaaVVYa2kzVUl4MFpjNk9kQUFEUC9SNGwrRklYQWRDUm9ZT2hBQUZDTEhZVGdRQUQvMDRtRytBRUFBR2lNNkVBQS8zWGsvOU9KaHZ3QkFBQ0pmbkRHaHNnQUFBQkR4b1pMQVFBQVE4ZEdhQ0FXUVFCcURlaVJKZ0FBV1lObC9BRC9kbWovRmNEZ1FBREhSZnorLy8vLzZENEFBQUJxRE9od0pnQUFXWWw5L0l0RkRJbEdiSVhBZFFpaEtCeEJBSWxHYlA5MmJPaS9EZ0FBV2NkRi9QNy8vLy9vRlFBQUFPaWkwdi8vd3pQL1I0dDFDR29ONkZnbEFBQlp3Mm9NNkU4bEFBQlp3NHYvVmxmL0ZSamdRQUQvTlJBV1FRQ0wrT2lSL3YvLy85Q0w4SVgyZFU1b0ZBSUFBR29CNkRJU0FBQ0w4RmxaaGZaME9sYi9OUkFXUVFEL05ad29RUURvNlAzLy8xbi8wSVhBZEJocUFGYm94ZjcvLzFsWi94WEU0RUFBZzA0RS80a0c2d2xXNkRQdS8vOVpNL1pYL3hVUTRFQUFYNHZHWHNPTC8xYm9mLy8vLzR2d2hmWjFDR29RNkxmdy8vOVppOFpldzJvSWFLajdRQURvcGRILy80dDFDSVgyRDRUNEFBQUFpMFlraGNCMEIxRG81dTMvLzFtTFJpeUZ3SFFIVU9qWTdmLy9XWXRHTklYQWRBZFE2TXJ0Ly85WmkwWThoY0IwQjFEb3ZPMy8vMW1MUmtDRndIUUhVT2l1N2YvL1dZdEdSSVhBZEFkUTZLRHQvLzlaaTBaSWhjQjBCMURva3UzLy8xbUxSbHc5Nk9kQUFIUUhVT2lCN2YvL1dXb042QU1sQUFCWmcyWDhBSXQrYUlYL2RCcFgveFhJNEVBQWhjQjFENEgvSUJaQkFIUUhWK2hVN2YvL1djZEYvUDcvLy8vb1Z3QUFBR29NNk1va0FBQlp4MFg4QVFBQUFJdCtiSVgvZENOWDZMRU5BQUJaT3owb0hFRUFkQlNCLzFBYlFRQjBESU0vQUhVSFYraTlDd0FBV2NkRi9QNy8vLy9vSGdBQUFGYm8vT3ovLzFubzR0RC8vOElFQUl0MUNHb042SmtqQUFCWnc0dDFDR29NNkkwakFBQlp3NHYvVmxlK2NPaEFBRmIvRllEZ1FBQ0Z3SFVIVnVnNTcvLy9XWXY0aGY4UGhGNEJBQUNMTllUZ1FBQm92T2hBQUZmLzFtaXc2RUFBVjZPVUtFRUEvOVpvcE9oQUFGZWptQ2hCQVAvV2FKem9RQUJYbzV3b1FRRC8xb005bENoQkFBQ0xOYmpnUUFDam9DaEJBSFFXZ3oyWUtFRUFBSFFOZ3oyY0tFRUFBSFFFaGNCMUpLR3c0RUFBbzVnb1FRQ2h2T0JBQU1jRmxDaEJBUGRmUUFDSk5ad29RUUNqb0NoQkFQOFZ0T0JBQUtNVUZrRUFnL2ovRDRUTUFBQUEveldZS0VFQVVQL1doY0FQaExzQUFBRG9hL0gvLy84MWxDaEJBT2dUKy8vLy96V1lLRUVBbzVRb1FRRG9BL3YvLy84MW5DaEJBS09ZS0VFQTZQUDYvLy8vTmFBb1FRQ2puQ2hCQU9qait2Ly9nOFFRbzZBb1FRRG96eUVBQUlYQWRHVm82MkZBQVA4MWxDaEJBT2c5Ky8vL1dmL1FveEFXUVFDRCtQOTBTR2dVQWdBQWFnSG9WQThBQUl2d1dWbUY5blEwVnY4MUVCWkJBUDgxbkNoQkFPZ0srLy8vV2YvUWhjQjBHMm9BVnVqbisvLy9XVm4vRmNUZ1FBQ0RUZ1QvaVFZendFRHJCK2lTKy8vL004QmZYc09MLzFXTDdEUEFPVVVJYWdBUGxNQm9BQkFBQUZEL0ZjemdRQUNqcENoQkFJWEFkUUpkd3pQQVFLT0VLMEVBWGNPTC8xV0w3SVBzRUtFRUVFRUFnMlg0QUlObC9BQlRWNzlPNWtDN3V3QUEvLzg3eDNRTmhjTjBDZmZRb3dnUVFRRHJZRmFOUmZoUS94WGc0RUFBaTNYOE0zWDQveFhjNEVBQU0vRC9GY1RnUUFBejhQOFYyT0JBQURQd2pVWHdVUDhWMU9CQUFJdEY5RE5GOERQd08vZDFCNzVQNWtDNzZ3dUY4M1VIaThiQjRCQUw4SWsxQkJCQkFQZldpVFVJRUVFQVhsOWJ5Y09ESllBclFRQUF3NHYvVll2c1VWR0xSUXhXaTNVSWlVWDRpMFVRVjFhSlJmem91eThBQUlQUC8xazd4M1VSNk4zQi8vL0hBQWtBQUFDTHg0dlg2MHIvZFJTTlRmeFIvM1g0VVA4VllPQkFBSWxGK0R2SGRSUC9GUmpnUUFDRndIUUpVT2pQd2YvL1dldlBpOGJCK0FXTEJJV2dLMEVBZytZZndlWUdqVVF3QklBZy9ZdEYrSXRWL0Y5ZXljTnFGR2pRKzBBQTZKYk4vLytEenYrSmRkeUpkZUNMUlFpRCtQNTFIT2gwd2YvL2d5QUE2Rm5CLy8vSEFBa0FBQUNMeG92VzZkQUFBQUF6L3p2SGZBZzdCWWdyUVFCeUllaEt3Zi8vaVRqb01NSC8vOGNBQ1FBQUFGZFhWMWRYNkxqQS8vK0R4QlRyeUl2SXdma0ZqUnlOb0N0QkFJdndnK1lmd2VZR2l3c1B2a3d4QklQaEFYVW02QW5CLy8rSk9PanZ3UC8veHdBSkFBQUFWMWRYVjFmb2Q4RC8vNFBFRklQSy80dkM2MXRRNkJjdkFBQlppWDM4aXdQMlJEQUVBWFFjLzNVVS8zVVEvM1VNLzNVSTZLbisvLytEeEJDSlJkeUpWZURyR3VpaHdQLy94d0FKQUFBQTZLbkEvLytKT0lOTjNQK0RUZUQveDBYOC92Ly8vK2dNQUFBQWkwWGNpMVhnNk5uTS8vL0QvM1VJNkZRdkFBQlp3NHYvVll2cy93VTRJMEVBYUFBUUFBRG9TQXdBQUZtTFRRaUpRUWlGd0hRTmcwa01DTWRCR0FBUUFBRHJFWU5KREFTTlFSU0pRUWpIUVJnQ0FBQUFpMEVJZzJFRUFJa0JYY09MLzFXTDdJdEZDSVA0L25VUDZBL0EvLy9IQUFrQUFBQXp3RjNEVmpQMk84WjhDRHNGaUN0QkFISWM2UEcvLy85V1ZsWldWc2NBQ1FBQUFPaDV2Ly8vZzhRVU04RHJHb3ZJZytBZndma0Zpd3lOb0N0QkFNSGdCZysrUkFFRWcrQkFYbDNETGFRREFBQjBJb1BvQkhRWGcrZ05kQXhJZEFNendNTzRCQVFBQU1PNEVnUUFBTU80QkFnQUFNTzRFUVFBQU1PTC8xWlhpL0JvQVFFQUFEUC9qVVljVjFEbyt0di8velBBRDdmSWk4R0pmZ1NKZmdpSmZnekI0UkFMd1kxK0VLdXJxN2tnRmtFQWc4UU1qVVljSzg2L0FRRUFBSW9VQVlnUVFFOTE5NDJHSFFFQUFMNEFBUUFBaWhRSWlCQkFUblgzWDE3RGkvOVZpK3lCN0J3RkFBQ2hCQkJCQURQRmlVWDhVMWVOaGVqNi8vOVEvM1lFL3hYazRFQUF2d0FCQUFDRndBK0Urd0FBQURQQWlJUUYvUDcvLzBBN3gzTDBpb1h1K3YvL3hvWDgvdi8vSUlUQWRDNk5uZS82Ly84UHRzZ1B0Z003eUhjV0s4RkFVSTJVRGZ6Ky8vOXFJRkxvTjl2Ly80UEVERU9LQTBPRXdIWFlhZ0QvZGd5TmhmejYvLy8vZGdSUVY0MkYvUDcvLzFCcUFXb0E2R3BNQUFBejIxUC9kZ1NOaGZ6OS8vOVhVRmVOaGZ6Ky8vOVFWLzkyREZQb1Mwb0FBSVBFUkZQL2RnU05oZno4Ly85WFVGZU5oZnorLy85UWFBQUNBQUQvZGd4VDZDWktBQUNEeENRendBKzNqRVg4K3YvLzlzRUJkQTZBVEFZZEVJcU1CZno5Ly8vckVmYkJBblFWZ0V3R0hTQ0tqQVg4L1AvL2lJd0dIUUVBQU9zSXhvUUdIUUVBQUFCQU84ZHl2dXRXallZZEFRQUF4NFhrK3YvL24vLy8velBKS1lYayt2Ly9pNVhrK3YvL2pZUU9IUUVBQUFQUWpWb2dnL3NaZHd5QVRBNGRFSXJSZ01JZzZ3K0QraGwzRG9CTURoMGdpdEdBNmlDSUVPc0R4Z0FBUVR2UGNzS0xUZnhmTTgxYjZOeXUvLy9KdzJvTWFQRDdRQURvcXNuLy8ramE5Ly8vaS9paFJCdEJBSVZIY0hRZGczOXNBSFFYaTNkb2hmWjFDR29nNkliby8vOVppOGJvd3NuLy84TnFEZWhZSFFBQVdZTmwvQUNMZDJpSmRlUTdOVWdhUVFCME5vWDJkQnBXL3hYSTRFQUFoY0IxRDRIK0lCWkJBSFFIVnVpZTVmLy9XYUZJR2tFQWlVZG9pelZJR2tFQWlYWGtWdjhWd09CQUFNZEYvUDcvLy8vb0JRQUFBT3VPaTNYa2FnM29IUndBQUZuRGkvOVZpK3lEN0JCVE05dFRqVTN3NkN1Ly8vK0pIYWdvUVFDRC92NTFIc2NGcUNoQkFBRUFBQUQvRmV6Z1FBQTRYZngwUll0TitJTmhjUDNyUElQKy9YVVN4d1dvS0VFQUFRQUFBUDhWNk9CQUFPdmJnLzc4ZFJLTFJmQ0xRQVRIQmFnb1FRQUJBQUFBNjhRNFhmeDBCNHRGK0lOZ2NQMkx4bHZKdzR2L1ZZdnNnK3dnb1FRUVFRQXp4WWxGL0ZPTFhReFdpM1VJVitoay8vLy9pL2d6OW9sOUNEditkUTZMdytpMy9QLy9NOERwblFFQUFJbDE1RFBBT2JoUUdrRUFENFNSQUFBQS8wWGtnOEF3UGZBQUFBQnk1NEgvNlAwQUFBK0VjQUVBQUlILzZmMEFBQStFWkFFQUFBKzN4MUQvRmZEZ1FBQ0Z3QStFVWdFQUFJMUY2RkJYL3hYazRFQUFoY0FQaERNQkFBQm9BUUVBQUkxREhGWlE2RmZZLy84ejBrS0R4QXlKZXdTSmN3dzVWZWdQaHZnQUFBQ0FmZTRBRDRUUEFBQUFqWFh2aWc2RXlRK0V3Z0FBQUErMlJ2OFB0c25wcGdBQUFHZ0JBUUFBalVNY1ZsRG9FTmovLzR0TjVJUEVER3ZKTUlsMTRJMnhZQnBCQUlsMTVPc3Fpa1lCaE1CMEtBKzJQZysyd09zU2kwWGdpb0JNR2tFQUNFUTdIUSsyUmdGSE8vaDI2b3Q5Q0VaR2dENEFkZEdMZGVUL1JlQ0R4Z2lEZmVBRWlYWGtjdW1MeDRsN0JNZERDQUVBQUFEb1ovdi8vMm9HaVVNTWpVTVFqWWxVR2tFQVdtYUxNVUZtaVRCQlFFQktkZk9MOCtqWCsvLy82YmYrLy8rQVRBTWRCRUE3d1hiMlJrYUFmdjhBRDRVMC8vLy9qVU1ldWY0QUFBQ0FDQWhBU1hYNWkwTUU2Qkw3Ly8rSlF3eUpVd2pyQTRsekNEUEFEN2ZJaThIQjRSQUx3WTE3RUt1cnErdW9PVFdvS0VFQUQ0Vlkvdi8vZzhqL2kwMzhYMTR6elZ2bzE2di8vOG5EYWhSb0VQeEFBT2lseHYvL2cwM2cvK2pSOVAvL2kvaUpmZHpvM1B6Ly80dGZhSXQxQ09oMS9mLy9pVVVJTzBNRUQ0UlhBUUFBYUNBQ0FBRG9SUVlBQUZtTDJJWGJENFJHQVFBQXVZZ0FBQUNMZDJpTCsvT2xneU1BVS85MUNPaTQvZi8vV1ZtSlJlQ0Z3QStGL0FBQUFJdDEzUDkyYVA4VnlPQkFBSVhBZFJHTFJtZzlJQlpCQUhRSFVPaDY0di8vV1lsZWFGT0xQY0RnUUFELzEvWkdjQUlQaGVvQUFBRDJCVVFiUVFBQkQ0WGRBQUFBYWczbzJSa0FBRm1EWmZ3QWkwTUVvN2dvUVFDTFF3aWp2Q2hCQUl0RERLUEFLRUVBTThDSlJlU0QrQVY5RUdhTFRFTVFab2tNUmF3b1FRQkE2K2d6d0lsRjVEMEJBUUFBZlEyS1RCZ2NpSWhBR0VFQVFPdnBNOENKUmVROUFBRUFBSDBRaW93WUhRRUFBSWlJU0JsQkFFRHI1djgxU0JwQkFQOFZ5T0JBQUlYQWRST2hTQnBCQUQwZ0ZrRUFkQWRRNk1IaC8vOVppUjFJR2tFQVUvL1h4MFg4L3YvLy8rZ0NBQUFBNnpCcURlaFNHQUFBV2NQckpZUDQvM1VnZ2ZzZ0ZrRUFkQWRUNkl2aC8vOVo2QTI1Ly8vSEFCWUFBQURyQklObDRBQ0xSZURvWGNYLy84T0RQYXdzUVFBQWRSSnEvZWhXL3YvL1djY0ZyQ3hCQUFFQUFBQXp3TU9MLzFXTDdGTldpM1VJaTRhOEFBQUFNOXRYTzhOMGJ6MTRIa0VBZEdpTGhyQUFBQUE3dzNSZU9SaDFXb3VHdUFBQUFEdkRkQmM1R0hVVFVPZ1M0Zi8vLzdhOEFBQUE2SXhJQUFCWldZdUd0QUFBQUR2RGRCYzVHSFVUVU9qeDRQLy8vN2E4QUFBQTZDWklBQUJaV2YrMnNBQUFBT2paNFAvLy83YThBQUFBNk03Zy8vOVpXWXVHd0FBQUFEdkRkRVE1R0hWQWk0YkVBQUFBTGY0QUFBQlE2SzNnLy8rTGhzd0FBQUMvZ0FBQUFDdkhVT2lhNFAvL2k0YlFBQUFBSzhkUTZJemcvLy8vdHNBQUFBRG9nZUQvLzRQRUVJMisxQUFBQUlzSFBiZ2RRUUIwRnptWXRBQUFBSFVQVU9nTVJnQUEvemZvV3VELy8xbFpqWDVReDBVSUJnQUFBSUYvK0VnYlFRQjBFWXNITzhOMEN6a1lkUWRRNkRYZy8vOVpPVi84ZEJLTFJ3UTd3M1FMT1JoMUIxRG9IdUQvLzFtRHh4RC9UUWgxeDFib0QrRC8vMWxmWGx0ZHc0di9WWXZzVTFhTE5jRGdRQUJYaTMwSVYvL1dpNGV3QUFBQWhjQjBBMUQvMW91SHVBQUFBSVhBZEFOUS85YUxoN1FBQUFDRndIUURVUC9XaTRmQUFBQUFoY0IwQTFELzFvMWZVTWRGQ0FZQUFBQ0JlL2hJRzBFQWRBbUxBNFhBZEFOUS85YURlL3dBZEFxTFF3U0Z3SFFEVVAvV2c4TVEvMDBJZGRhTGg5UUFBQUFGdEFBQUFGRC8xbDllVzEzRGkvOVZpK3hYaTMwSWhmOFBoSU1BQUFCVFZvczF5T0JBQUZmLzFvdUhzQUFBQUlYQWRBTlEvOWFMaDdnQUFBQ0Z3SFFEVVAvV2k0ZTBBQUFBaGNCMEExRC8xb3VId0FBQUFJWEFkQU5RLzlhTlgxREhSUWdHQUFBQWdYdjRTQnRCQUhRSml3T0Z3SFFEVVAvV2czdjhBSFFLaTBNRWhjQjBBMUQvMW9QREVQOU5DSFhXaTRmVUFBQUFCYlFBQUFCUS85WmVXNHZIWDEzRGhmOTBONFhBZEROV2l6QTc5M1FvVjRrNDZNSCsvLzlaaGZaMEcxYm9SZi8vLzRNK0FGbDFENEgrVUJ0QkFIUUhWdWhaL2YvL1dZdkhYc016d01OcURHZ3cvRUFBNkQ3Qy8vL29idkQvLzR2d29VUWJRUUNGUm5CMElvTitiQUIwSE9oWDhQLy9pM0JzaGZaMUNHb2c2QlhoLy85Wmk4Ym9VY0wvLzhOcURPam5GUUFBV1lObC9BQ05SbXlMUFNnY1FRRG9hZi8vLzRsRjVNZEYvUDcvLy8vb0FnQUFBT3ZCYWd6bzRoUUFBRm1MZGVURGkvOVZpK3lEN0JDaEJCQkJBRFBGaVVYOFUxYUxkUXoyUmd4QVZ3K0ZOZ0VBQUZib1FNYi8vMW03MEJWQkFJUDQvM1F1VnVndnh2Ly9XWVA0L25RaVZ1Z2p4di8vd2ZnRlZvMDhoYUFyUVFEb0U4Yi8vNFBnSDFuQjRBWURCMW5yQW92RGlrQWtKSDg4QWcrRTZBQUFBRmJvOHNYLy8xbUQrUDkwTGxibzVzWC8vMW1EK1A1MElsYm8yc1gvLzhINEJWYU5QSVdnSzBFQTZNckYvLytENEI5WndlQUdBd2RaNndLTHc0cEFKQ1IvUEFFUGhKOEFBQUJXNktuRi8vOVpnL2ovZEM1VzZKM0YvLzlaZy9qK2RDSlc2SkhGLy8vQitBVldqVHlGb0N0QkFPaUJ4Zi8vZytBZldjSGdCZ01IV2VzQ2k4UDJRQVNBZEYzL2RRaU5SZlJxQlZDTlJmQlE2RHRKQUFDRHhCQ0Z3SFFIdVAvL0FBRHJYVFAvT1gzd2ZqRC9UZ1I0RW9zR2lrdzk5SWdJaXc0UHRnRkJpUTdyRGcrK1JEMzBWbERvV0xYLy8xbFpnL2ovZE1oSE8zM3dmTkJtaTBVSTZ5Q0RSZ1QrZUEyTERvdEZDR2FKQVlNR0F1c05EN2RGQ0ZaUTZQSkZBQUJaV1l0Ti9GOWVNODFiNkhPbC8vL0p3NHYvVmxjei80MjNRQnhCQVA4MjZLanIvLytEeHdSWmlRYUQveWh5NkY5ZXc0di9WWXZzVmxjejl2OTFDT2dFU1FBQWkvaFpoZjkxSnprRjZDaEJBSFlmVnY4VktPQkFBSTJHNkFNQUFEc0Y2Q2hCQUhZRGc4ai9pL0NEK1A5MXlvdkhYMTVkdzR2L1ZZdnNWbGN6OW1vQS8zVU0vM1VJNklSSkFBQ0wrSVBFRElYL2RTYzVCZWdvUVFCMkgxYi9GU2pnUUFDTmh1Z0RBQUE3QmVnb1FRQjJBNFBJLzR2d2cvai9kY09MeDE5ZVhjT0wvMVdMN0ZaWE0vYi9kUXovZFFqb1dFb0FBSXY0V1ZtRi8zVXNPVVVNZENjNUJlZ29RUUIySDFiL0ZTamdRQUNOaHVnREFBQTdCZWdvUVFCMkE0UEkvNHZ3Zy9qL2RjR0x4MTllWGNPaEJCQkJBSVBJQVRQSk9RWHNLRUVBRDVUQmk4SER6TXpNek16TXpNek16TXlMVENRRTk4RURBQUFBZENTS0FZUEJBWVRBZEU3M3dRTUFBQUIxN3dVQUFBQUFqYVFrQUFBQUFJMmtKQUFBQUFDTEFici8vdjUrQTlDRDhQOHp3b1BCQktrQUFRR0JkT2lMUWZ5RXdIUXloT1IwSktrQUFQOEFkQk9wQUFBQS8zUUM2ODJOUWYrTFRDUUVLOEhEalVIK2kwd2tCQ3ZCdzQxQi9ZdE1KQVFyd2NPTlFmeUxUQ1FFSzhIRGkvOVZpK3lEN0JCVFZvdDFERFBiTy9OMEZUbGRFSFFRT0I1MUVvdEZDRHZEZEFVenlXYUpDRFBBWGx2SncvOTFGSTFOOE9pVnRQLy9pMFh3T1ZnVWRSK0xSUWc3dzNRSFpnKzJEbWFKQ0RoZC9IUUhpMFg0ZzJCdy9UUEFRT3ZLalVYd1VBKzJCbERveEFBQUFGbFpoY0IwZll0RjhJdUlyQUFBQUlQNUFYNGxPVTBRZkNBejBqbGRDQStWd2xML2RRaFJWbW9KLzNBRS94Vms0RUFBaGNDTFJmQjFFSXRORUR1SXJBQUFBSElnT0Y0QmRCdUxnS3dBQUFBNFhmd1BoR1gvLy8rTFRmaURZWEQ5NlZuLy8vL29yTEgvLzhjQUtnQUFBRGhkL0hRSGkwWDRnMkJ3L1lQSS8razYvLy8vTThBNVhRZ1BsY0JRLzNVSWkwWHdhZ0ZXYWduL2NBVC9GV1RnUUFDRndBK0ZPdi8vLyt1NmkvOVZpK3hxQVA5MUVQOTFEUDkxQ09qVS92Ly9nOFFRWGNPTC8xV0w3SVBzRVA5MURJMU44T2lLcy8vL0Q3WkZDSXROOEl1SnlBQUFBQSszQkVFbEFJQUFBSUI5L0FCMEI0dE4rSU5oY1AzSnc0di9WWXZzYWdEL2RRam91Zi8vLzFsWlhjT0wvMVdMN1BaQURFQjBCb040Q0FCMEdsRC9kUWpvTi92Ly8xbFp1Zi8vQUFCbU84RjFCWU1PLzEzRC93WmR3NHYvVll2c1Zvdnc2eFQvZFFpTFJSRC9UUXpvdWYvLy80TSsvMWwwQm9OOURBQi81bDVkdzR2L1ZZdnM5a2NNUUZOV2kvQ0wyWFEzZzM4SUFIVXhpMFVJQVFick1BKzNBLzlOQ0ZDTHgraCsvLy8vUTBPRFB2OVpkUlRvZDdELy80TTRLblVRYWorTHgraGovLy8vV1lOOUNBQi8wRjViWGNPTC8xV0w3SUhzZEFRQUFLRUVFRUVBTThXSlJmeFRpMTBVVm90MUNEUEFWLzkxRUl0OURJMk50UHYvLzRtMXhQdi8vNG1kNlB2Ly80bUZyUHYvLzRtRitQdi8vNG1GMVB2Ly80bUY5UHYvLzRtRjNQdi8vNG1Gc1B2Ly80bUYyUHYvLytoRHN2Ly9oZloxTmVqdXIvLy94d0FXQUFBQU04QlFVRkJRVU9oMHIvLy9nOFFVZ0wzQSsvLy9BSFFLaTRXOCsvLy9nMkJ3L1lQSS8rblBDZ0FBTS9ZNy9uVVM2TE92Ly85V1ZsWld4d0FXQUFBQVZ1dkZEN2NQaWJYZysvLy9pYlhzKy8vL2liWE0rLy8vaWJXbysvLy9pWTNrKy8vL1pqdk9ENFIwQ2dBQWFnSmFBL281dGVENy8vK0p2YUQ3Ly84UGpFZ0tBQUNOUWVCbWcvaFlkdzhQdDhFUHRvQkk4MEFBZytBUDZ3SXp3SXUxelB2Ly8ydkFDUSsyaERCbzgwQUFhZ2pCNkFSZWlZWE0rLy8vTzhZUGhEUC8vLytEK0FjUGg5MEpBQUQvSklXZmdrQUFNOENEamZUNy8vLy9pWVdrKy8vL2lZV3crLy8vaVlYVSsvLy9pWVhjKy8vL2lZWDQrLy8vaVlYWSsvLy82YkFKQUFBUHQ4R0Q2Q0IwU0lQb0EzUTBLOFowSkN2Q2RCU0Q2QU1QaFlZSkFBQUp0Zmo3Ly8vcGh3a0FBSU9OK1B2Ly93VHBld2tBQUlPTitQdi8vd0hwYndrQUFJR04rUHYvLzRBQUFBRHBZQWtBQUFtVitQdi8vK2xWQ1FBQVpvUDVLblVyaXdPRHd3U0puZWo3Ly8rSmhkVDcvLytGd0ErTk5na0FBSU9OK1B2Ly93VDNuZFQ3Ly8vcEpBa0FBSXVGMVB2Ly8ydkFDZyszeVkxRUNOQ0poZFQ3Ly8vcENRa0FBSU9sOVB2Ly93RHAvUWdBQUdhRCtTcDFKWXNEZzhNRWlaM28rLy8vaVlYMCsvLy9oY0FQamQ0SUFBQ0RqZlQ3Ly8vLzZkSUlBQUNMaGZUNy8vOXJ3QW9QdDhtTlJBalFpWVgwKy8vLzZiY0lBQUFQdDhHRCtFbDBVWVA0YUhSQWcvaHNkQmlEK0hjUGhad0lBQUNCamZqNy8vOEFDQUFBNlkwSUFBQm1nejlzZFJFRCtvR04rUHYvL3dBUUFBRHBkZ2dBQUlPTitQdi8veERwYWdnQUFJT04rUHYvL3lEcFhnZ0FBQSszQjJhRCtEWjFHV2FEZndJMGRSS0R4d1NCamZqNy8vOEFnQUFBNlR3SUFBQm1nL2d6ZFJsbWczOENNblVTZzhjRWdhWDQrLy8vLzMvLy8ra2RDQUFBWm9QNFpBK0VFd2dBQUdhRCtHa1BoQWtJQUFCbWcvaHZENFQvQndBQVpvUDRkUStFOVFjQUFHYUQrSGdQaE9zSEFBQm1nL2hZRDRUaEJ3QUFnNlhNKy8vL0FJdUZ4UHYvLzFHTnRlRDcvLy9IaGRqNy8vOEJBQUFBNk96Ny8vOVo2YmdIQUFBUHQ4R0QrR1FQanpBQ0FBQVBoTDBDQUFDRCtGTVBqeHNCQUFCMGZvUG9RWFFRSzhKMFdTdkNkQWdyd2crRjdBVUFBSVBCSU1lRnBQdi8vd0VBQUFDSmplVDcvLytEamZqNy8vOUFnNzMwKy8vL0FJMjEvUHYvLzdnQUFnQUFpYlh3Ky8vL2lZWHMrLy8vRDQyTkFnQUF4NFgwKy8vL0JnQUFBT25wQWdBQTk0WDQrLy8vTUFnQUFBK0Z5UUFBQUlPTitQdi8veURwdlFBQUFQZUYrUHYvL3pBSUFBQjFCNE9OK1B2Ly95Q0x2ZlQ3Ly8rRC8vOTFCYi8vLy85L2c4TUU5b1g0Ky8vL0lJbWQ2UHYvLzR0Yi9JbWQ4UHYvL3crRUJRVUFBSVhiZFF1aE9CeEJBSW1GOFB2Ly80T2w3UHYvL3dDTHRmRDcvLytGL3crT0hRVUFBSW9HaE1BUGhCTUZBQUNOamJUNy8vOFB0c0JSVU9pQSt2Ly9XVm1Gd0hRQlJrYi9oZXo3Ly84NXZlejcvLzk4ME9ub0JBQUFnK2hZRDRUd0FnQUFLOElQaEpVQUFBQ0Q2QWNQaFBYKy8vOHJ3ZytGeGdRQUFBKzNBNFBEQkRQMlJ2YUYrUHYvL3lDSnRkajcvLytKbmVqNy8vK0poWno3Ly85MFFvaUZ5UHYvLzQyRnRQdi8vMUNMaGJUNy8vL0doY243Ly84QS83Q3NBQUFBallYSSsvLy9VSTJGL1B2Ly8xRG91L2ovLzRQRUVJWEFmUStKdGJENy8vL3JCMmFKaGZ6Ny8vK05oZno3Ly8rSmhmRDcvLytKdGV6Ny8vL3BRZ1FBQUlzRGc4TUVpWjNvKy8vL2hjQjBPb3RJQklYSmREUDNoZmo3Ly84QUNBQUFENzhBaVkzdysvLy9kQktaSzhMSGhkajcvLzhCQUFBQTZmMERBQUNEcGRqNy8vOEE2Zk1EQUFDaE9CeEJBSW1GOFB2Ly8xRG9xZmYvLzFucDNBTUFBSVA0Y0ErUDlnRUFBQStFM2dFQUFJUDRaUStNeWdNQUFJUDRadytPNlAzLy80UDRhWFJ0Zy9odWRDU0QrRzhQaGE0REFBRDJoZmo3Ly8rQWliWGsrLy8vZEdHQmpmajcvLzhBQWdBQTYxV0xNNFBEQkltZDZQdi8vK2dqOS8vL2hjQVBoRmI2Ly8vMmhmajcvLzhnZEF4bWk0WGcrLy8vWm9rRzZ3aUxoZUQ3Ly8rSkJzZUZzUHYvL3dFQUFBRHB3UVFBQUlPTitQdi8vMERIaGVUNy8vOEtBQUFBOTRYNCsvLy9BSUFBQUErRXF3RUFBQVBlaTBQNGkxUDg2ZWNCQUFCMUVtYUQrV2QxWThlRjlQdi8vd0VBQUFEclZ6bUY5UHYvLzM0R2lZWDArLy8vZ2IzMCsvLy9vd0FBQUg0OWk3MzArLy8vZ2NkZEFRQUFWK2lpOWYvL1dZdU41UHYvLzRtRnFQdi8vNFhBZEJDSmhmRDcvLytKdmV6Ny8vK0w4T3NLeDRYMCsvLy9vd0FBQUlzRGc4TUlpWVdVKy8vL2kwUDhpWVdZKy8vL2pZVzArLy8vVVArMXBQdi8vdysrd2YrMTlQdi8vNG1kNlB2Ly8xRC90ZXo3Ly8rTmhaVDcvLzlXVVA4MVdCeEJBT2hDNGYvL1dmL1FpNTM0Ky8vL2c4UWNnZU9BQUFBQWRDR0R2ZlQ3Ly84QWRSaU5oYlQ3Ly85UVZ2ODFaQnhCQU9nUzRmLy9XZi9RV1ZsbWc3M2srLy8vWjNVY2hkdDFHSTJGdFB2Ly8xQlcvelZnSEVFQTZPemcvLzlaLzlCWldZQStMWFVSZ1kzNCsvLy9BQUVBQUVhSnRmRDcvLzlXNlFqKy8vK0p0ZlQ3Ly8vSGhhejcvLzhIQUFBQTZ5U0Q2SE1QaEdyOC8vOHJ3ZytFaXY3Ly80UG9BdytGeVFFQUFNZUZyUHYvL3ljQUFBRDJoZmo3Ly8rQXg0WGsrLy8vRUFBQUFBK0VhdjcvLzJvd1dHYUpoZEQ3Ly8rTGhhejcvLytEd0ZGbWlZWFMrLy8vaVpYYysvLy82VVgrLy8vM2hmajcvLzhBRUFBQUQ0VkYvdi8vZzhNRTlvWDQrLy8vSUhRYzlvWDQrLy8vUUltZDZQdi8vM1FHRDc5RC9Pc0VEN2REL0puckYvYUYrUHYvLzBDTFEveDBBNW5yQWpQU2laM28rLy8vOW9YNCsvLy9RSFFiaGRKL0Yzd0VoY0J6RWZmWWc5SUE5OXFCamZqNy8vOEFBUUFBOTRYNCsvLy9BSkFBQUl2YWkvaDFBalBiZzczMCsvLy9BSDBNeDRYMCsvLy9BUUFBQU9zYWc2WDQrLy8vOTdnQUFnQUFPWVgwKy8vL2ZnYUpoZlQ3Ly8rTHh3dkRkUVloaGR6Ny8vK050ZnY5Ly8rTGhmVDcvLy8vamZUNy8vK0Z3SDhHaThjTHczUXRpNFhrKy8vL21WSlFVMWZvdUtmLy80UEJNSVA1T1ltZGtQdi8vNHY0aTlwK0JnT05yUHYvLzRnT1R1dTlqWVg3L2YvL0s4Wkc5NFg0Ky8vL0FBSUFBSW1GN1B2Ly80bTE4UHYvLzNSWmhjQjBCNHZPZ0Rrd2RFNy9qZkQ3Ly8rTGpmRDcvLy9HQVRCQTZ6YUYyM1VMb1R3Y1FRQ0poZkQ3Ly8rTGhmRDcvLy9IaGRqNy8vOEJBQUFBNndsUFpvTTRBSFFHQThLRi8zWHpLNFh3Ky8vLzBmaUpoZXo3Ly8rRHZiRDcvLzhBRDRWbEFRQUFpNFg0Ky8vL3FFQjBLNmtBQVFBQWRBUnFMZXNPcUFGMEJHb3I2d2FvQW5RVWFpQllab21GMFB2Ly84ZUYzUHYvL3dFQUFBQ0xuZFQ3Ly8rTHRlejcvLzhyM2l1ZDNQdi8vL2FGK1B2Ly93eDFGLysxeFB2Ly80MkY0UHYvLzFOcUlPaUU5Zi8vZzhRTS83WGMrLy8vaTczRSsvLy9qWVhnKy8vL2pZM1ErLy8vNkl2MS8vLzJoZmo3Ly84SVdYUWI5b1g0Ky8vL0JIVVNWMU5xTUkyRjRQdi8vK2hDOWYvL2c4UU1nNzNZKy8vL0FIVjFoZlorY1l1OThQdi8vNG0xNVB2Ly8vK041UHYvLzQyRnRQdi8vMUNMaGJUNy8vLy9zS3dBQUFDTmhaejcvLzlYVU9oVjgvLy9nOFFRaVlXUSsvLy9oY0IrS2YrMW5Qdi8vNHVGeFB2Ly80MjE0UHYvLytpdDlQLy9BNzJRKy8vL2c3M2srLy8vQUZsL3B1c2NnNDNnKy8vLy8rc1RpNDN3Ky8vL1ZvMkY0UHYvLytqVzlQLy9XWU85NFB2Ly93QjhJUGFGK1B2Ly93UjBGLysxeFB2Ly80MkY0UHYvLzFOcUlPaUk5UC8vZzhRTWc3Mm8rLy8vQUhRVC83V28rLy8vNk1ETi8vK0RwYWo3Ly84QVdZdTlvUHYvLzR1ZDZQdi8vdyszQnpQMmlZWGsrLy8vWmp2R2RBZUx5T21oOWYvL09iWE0rLy8vZEEyRHZjejcvLzhIRDRWUTlmLy9nTDNBKy8vL0FIUUtpNFc4Ky8vL2cyQncvWXVGNFB2Ly80dE4vRjllTTgxYjZDV1cvLy9KdzR2L2IzcEFBR2Q0UUFDWmVFQUE5SGhBQUVCNVFBQk1lVUFBa25sQUFKRjZRQUNMLzFXTDdHYUxSUWhtZy9nd2N3ZTQvLy8vLzEzRFpvUDRPbk1JRDdmQWcrZ3dYY081RVA4QUFJdlJaanZDRDRPVUFRQUF1V0FHQUFDTDBXWTd3ZytDa2dFQUFJUENDbVk3d25NSEQ3ZkFLOEZkdzdud0JnQUFpOUZtTzhJUGduTUJBQUNEd2dwbU84Snk0YmxtQ1FBQWk5Rm1POElQZ2xzQkFBQ0R3Z3BtTzhKeXlibm1DUUFBaTlGbU84SVBna01CQUFDRHdncG1POEp5c2JsbUNnQUFpOUZtTzhJUGdpc0JBQUNEd2dwbU84SnltYm5tQ2dBQWk5Rm1POElQZ2hNQkFBQ0R3Z3BtTzhKeWdibG1Dd0FBaTlGbU84SVBndnNBQUFDRHdncG1POElQZ21YLy8vKzVaZ3dBQUl2UlpqdkNENExmQUFBQWc4SUtaanZDRDRKSi8vLy91ZVlNQUFDTDBXWTd3ZytDd3dBQUFJUENDbVk3d2crQ0xmLy8vN2xtRFFBQWk5Rm1POElQZ3FjQUFBQ0R3Z3BtTzhJUGdoSC8vLys1VUE0QUFJdlJaanZDRDRLTEFBQUFnOElLWmp2Q0Q0TDEvdi8vdWRBT0FBQ0wwV1k3d25Kemc4SUtaanZDRDRMZC92Ly9nOEZRaTlGbU84SnlYYm9xRHdBQVpqdkNENExGL3YvL3VVQVFBQUNMMFdZN3duSkRnOElLWmp2Q0Q0S3Qvdi8vdWVBWEFBQ0wwV1k3d25Jcmc4SUtaanZDRDRLVi92Ly9nOEV3aTlGbU84SnlGYm9hR0FBQTZ3VzZHdjhBQUdZN3dnK0NkdjcvLzRQSS8xM0RpLzlWaSt5NC8vOEFBSVBzRkdZNVJRaDFCb05sL0FEclpiZ0FBUUFBWmpsRkNITWFEN2RGQ0lzTnRCMUJBR2FMQkVGbUkwVU1EN2ZBaVVYODYwRC9kUkNOVGV6bzVxVC8vNHRGN1A5d0ZQOXdCSTFGL0ZCcUFZMUZDRkNOUmV4cUFWRG9oenNBQUlQRUhJWEFkUU1oUmZ5QWZmZ0FkQWVMUmZTRFlIRDlEN2RGL0ErM1RRd2p3Y25Eek16TXpNek16TXpNek16TWkwUWtDSXRNSkJBTHlJdE1KQXgxQ1l0RUpBVDM0Y0lRQUZQMzRZdllpMFFrQ1Bka0pCUUQySXRFSkFqMzRRUFRXOElRQUdvUWFGRDhRQURvTEs3Ly96UGJpVjNrYWdIb0F3SUFBRm1KWGZ4cUExK0pmZUE3UGNBOFFRQjlWNHYzd2VZQ29id3NRUUFEeGprWWRFU0xBUFpBRElOMEQxRG8wSnovLzFtRCtQOTBBLzlGNUlQL0ZId29vYndzUVFDTEJBYUR3Q0JRL3hXczRFQUFvYndzUVFEL05BYm9ITXIvLzFtaHZDeEJBSWtjQmtmcm5zZEYvUDcvLy8vb0NRQUFBSXRGNU9qb3JmLy93Mm9CNktRQUFBQlp3NHYvVmxjejlyL3dLRUVBZ3p6MWRCeEJBQUYxSG8wRTlYQWNRUUNKT0dpZ0R3QUEvekNEeHhqb0xRc0FBRmxaaGNCMERFYUQvaVI4MGpQQVFGOWV3NE1rOVhBY1FRQUFNOERyOFl2L1U0c2RyT0JBQUZhK2NCeEJBRmVMUG9YL2RCT0RmZ1FCZEExWC85Tlg2SUxKLy8rREpnQlpnOFlJZ2Y2UUhVRUFmTnkrY0J4QkFGK0xCb1hBZEFtRGZnUUJkUU5RLzlPRHhnaUIvcEFkUVFCODVsNWJ3NHYvVll2c2kwVUkvelRGY0J4QkFQOFZXT0JBQUYzRGFneG9jUHhBQU9qVXJQLy9NLzlIaVgza005czVIYVFvUVFCMUdPaHowUC8vYWg3b3djNy8vMmovQUFBQTZBUE0vLzlaV1l0MUNJMDA5WEFjUVFBNUhuUUVpOGZyYm1vWTZHZnMvLzlaaS9nNyszVVA2R2lnLy8vSEFBd0FBQUF6d090UmFncm9XUUFBQUZtSlhmdzVIblVzYUtBUEFBQlg2Q1FLQUFCWldZWEFkUmRYNkxESS8vOVo2REtnLy8vSEFBd0FBQUNKWGVUckM0ays2d2RYNkpYSS8vOVp4MFg4L3YvLy8rZ0pBQUFBaTBYazZHeXMvLy9EYWdyb0tQLy8vMW5EaS85VmkreUxSUWhXalRURmNCeEJBSU0rQUhVVFVPZ2kvLy8vV1lYQWRRaHFFZWozeXYvL1dmODIveFZVNEVBQVhsM0RpLzlWaSt5RDdEUlRNOXYyUlJDQVZsZUw4SWxkNEloZC9zZEZ6QXdBQUFDSlhkQjBDWWxkMU1aRi94RHJDc2RGMUFFQUFBQ0lYZitOUmVCUTZFVTdBQUJaaGNCMERWTlRVMU5UNk91ZC8vK0R4QlNMVFJDNEFJQUFBSVhJZFJIM3dRQkFCd0IxQlRsRjRIUUVnRTMvZ0l2QmcrQURLOE82QUFBQXdMOEFBQUNBZEVkSWRDNUlkQ2JvVUovLy80a1lndzcvNkRPZi8vOXFGbDVUVTFOVFU0a3c2THllLy8rRHhCVHBBUVVBQUlsVitPc1o5c0VJZEFqM3dRQUFCd0IxN3NkRitBQUFBRURyQTRsOStJdEZGR29RV1N2QmREY3J3WFFxSzhGMEhTdkJkQkNENkVCMW9UbDkrQStVd0lsRjhPc2V4MFh3QXdBQUFPc1Z4MFh3QWdBQUFPc014MFh3QVFBQUFPc0RpVjN3aTBVUXVnQUhBQUFqd3JrQUJBQUFPOEcvQUFFQUFIODdkREE3dzNRc084ZDBIejBBQWdBQUQ0U1VBQUFBUFFBREFBQVBoVUQvLy8vSFJld0NBQUFBNnkvSFJld0VBQUFBNnliSFJld0RBQUFBNngwOUFBVUFBSFFQUFFBR0FBQjBZRHZDRDRVUC8vLy94MFhzQVFBQUFJdEZFTWRGOUlBQUFBQ0Z4M1FXaXcwOEkwRUE5OUVqVFJpRXlYZ0h4MFgwQVFBQUFLaEFkQktCVGZRQUFBQUVnVTM0QUFBQkFJTk44QVNwQUJBQUFIUURDWDMwcUNCMEVvRk45QUFBQUFqckZNZEY3QVVBQUFEcnBxZ1FkQWVCVGZRQUFBQVE2TzhNQUFDSkJvUDQvM1VhNk9lZC8vK0pHSU1PLytqS25mLy94d0FZQUFBQTZZNEFBQUNMUlFpTFBmVGdRQUJULzNYMHh3QUJBQUFBLzNYc2pVWE1VUDkxOFA5MStQOTFEUC9YaVVYa2cvai9kVzJMVGZpNEFBQUF3Q1BJTzhoMUsvWkZFQUYwSllGbCtQLy8vMzlULzNYMGpVWE0vM1hzVVA5MThQOTErUDkxRFAvWGlVWGtnL2ovZFRTTE5vdkd3ZmdGaXdTRm9DdEJBSVBtSDhIbUJvMUVNQVNBSVA3L0ZSamdRQUJRNkZpZC8vOVo2Q3lkLy8rTEFPbDFCQUFBLzNYay94V2s0RUFBTzhOMVJJczJpOGJCK0FXTEJJV2dLMEVBZytZZndlWUdqVVF3QklBZy92OFZHT0JBQUl2d1Z1Z1ZuZi8vV2Y5MTVQOFZKT0JBQUR2emRiRG8zSnovLzhjQURRQUFBT3VqZy9nQ2RRYUFUZjlBNndtRCtBTjFCSUJOL3dqL2RlVC9OdWlBQ1FBQWl3YUwwSVBnSDhINkJZc1VsYUFyUVFCWndlQUdXWXBOLzRESkFZaE1BZ1NMQm92UWcrQWZ3Zm9GaXhTVm9DdEJBTUhnQm8xRUFpU0FJSUNJVGYyQVpmMUlpRTMvRDRXQkFBQUE5c0dBRDRTeUFnQUE5a1VRQW5SeWFnS0R6LzlYL3pib3Nhdi8vNFBFRElsRjZEdkhkUm5vVTV6Ly80RTRnd0FBQUhSTy96Ym9OOFgvLytuNi92Ly9hZ0dOUmR4US96YUpYZHpvWExILy80UEVESVhBZFJ0bWczM2NHblVVaTBYb21WSlEvemJvU2pVQUFJUEVERHZIZE1KVFUvODI2Rk9yLy8rRHhBdzd4M1N5OWtYL2dBK0VNQUlBQUw4QVFBY0F1UUJBQUFDRmZSQjFENHRGNENQSGRRVUpUUkRyQXdsRkVJdEZFQ1BITzhGMFJEMEFBQUVBZENrOUFFQUJBSFFpUFFBQUFnQjBLVDBBUUFJQWRDSTlBQUFFQUhRSFBRQkFCQUIxSGNaRi9nSHJGNHRORUxnQkF3QUFJOGc3eUhVSnhrWCtBdXNEaUYzKzkwVVFBQUFIQUErRXRRRUFBUFpGLzBDSlhlZ1BoYWdCQUFDTFJmaTVBQUFBd0NQQlBRQUFBRUFQaExjQUFBQTlBQUFBZ0hSM084RVBoWVFCQUFDTFJldzd3dytHZVFFQUFJUDRBbllPZy9nRWRqQ0QrQVVQaFdZQkFBQVB2a1grTS85SUQ0UW1BUUFBU0ErRlVnRUFBTWRGNlAvK0FBREhSZXdDQUFBQTZSb0JBQUJxQWxOVC96Ym8zTmovLzRQRUVBdkNkTWRUVTFQL051akwyUC8vSThLRHhCQ0QrUDhQaEkzKy8vOXFBNDFGNkZEL051ajRyLy8vZzhRTWcvai9ENFIwL3YvL2cvZ0NkR3VEK0FNUGhhMEFBQUNCZmVqdnU3OEFkVm5HUmY0QjZkd0FBQUNMUmV3N3d3K0cwUUFBQUlQNEFnK0dZdi8vLzRQNEJBK0hVUC8vLzJvQ1UxUC9OdWhjMlAvL2c4UVFDOElQaEVQLy8vOVRVMVAvTnVoSDJQLy9nOFFRSThLRCtQOFBoWkVBQUFEcEJQNy8vNHRGNkNYLy93QUFQZjcvQUFCMUdmODI2Q3pELy85WjZDQ2EvLzlxRmw2Sk1Jdkc2V1FCQUFBOS8vNEFBSFVjVTJvQy96Ym9aYW4vLzRQRURJUDQvdytFdi8zLy84WkYvZ0xyUVZOVC96Ym9TcW4vLzRQRURPdVp4MFhvNzd1L0FNZEY3QU1BQUFDTFJld3J4MUNOUkQzb1VQODI2UE85Ly8rRHhBeUQrUDhQaEgvOS8vOEQrRGw5N0gvYml3YUx5TUg1QllzTWphQXJRUUNENEIvQjRBYU5SQUVraWdneVRmNkE0WDh3Q0lzR2k4akIrUVdMREkyZ0swRUFnK0Fmd2VBR2pVUUJKSXRORUlvUXdla1F3T0VIZ09KL0NzcUlDRGhkL1hVaDlrVVFDSFFiaXdhTHlJUGdIOEg1QllzTWphQXJRUURCNEFhTlJBRUVnQWdnaTMzNHVBQUFBTUNMenlQSU84aDFmUFpGRUFGMGR2OTE1UDhWSk9CQUFGUC9kZlNOUmN4cUExRC9kZkNCNS8vLy8zOVgvM1VNL3hYMDRFQUFnL2ovZFRUL0ZSamdRQUJRNkJlWi8vK0xCb3ZJZytBZndma0Zpd3lOb0N0QkFNSGdCbzFFQVFTQUlQNy9OdWdhQmdBQVdlbVgrLy8vaXphTHpzSDVCWXNNamFBclFRQ0Q1aC9CNWdhSkJBNkx3MTllVzhuRGFoUm9rUHhBQU9pK3BQLy9NL2FKZGVRendJdDlHRHYrRDVYQU84WjFHK2lIbVAvL2FoWmZpVGhXVmxaV1Z1Z1FtUC8vZzhRVWk4ZnJXWU1QL3pQQU9YVUlENVhBTzhaMDFqbDFISFFQaTBVVUpYLysvLy8zMkJ2QVFIVENpWFg4LzNVVS8zVVEvM1VNLzNVSWpVWGtVSXZINkduNC8vK0R4QlNKUmVESFJmeisvLy8vNkJVQUFBQ0xSZUE3eG5RRGd3Ly82SGVrLy8vRE0vYUxmUmc1ZGVSMEtEbDE0SFFiaXdlTHlNSDVCWVBnSDhIZ0Jvc01qYUFyUVFDTlJBRUVnQ0QrL3pmb3lRWUFBRm5EaS85VmkreHFBZjkxQ1A5MUdQOTFGUDkxRVA5MURPZ1ovLy8vZzhRWVhjT0wvMVdMN0lQc0VGTldNL1l6d0ZjNWRSQVBoTTBBQUFDTFhRZzczblVpNkp1WC8vOVdWbFpXVnNjQUZnQUFBT2dqbC8vL2c4UVV1UC8vLzMvcHBBQUFBSXQ5RER2K2ROZi9kUlNOVGZEb3VKbi8vNHRGOERsd0ZIVS9EN2NEWm9QNFFYSUpab1A0V25jRGc4QWdEN2Z3RDdjSFpvUDRRWElKWm9QNFduY0RnOEFnUTBOSFIvOU5FQSszd0hSQ1pvWDJkRDFtTy9CMHcrczJqVVh3VUErM0ExRG9ERE1BQUErMzhJMUY4RkFQdHdkUTZQd3lBQUNEeEJCRFEwZEgvMDBRRDdmQWRBcG1oZlowQldZNzhIVEtEN2ZJRDdmR0s4R0FmZndBZEFlTFRmaURZWEQ5WDE1YnljT0wvMVdMN0ZZejlsYzVOY1FvUVFCMWZ6UEFPWFVRRDRTR0FBQUFpMzBJTy81MUgraXRsdi8vVmxaV1ZsYkhBQllBQUFEb05aYi8vNFBFRkxqLy8vOS82MkNMVlF3NzFuVGFEN2NIWm9QNFFYSUpab1A0V25jRGc4QWdEN2ZJRDdjQ1pvUDRRWElKWm9QNFduY0RnOEFnUjBkQ1F2OU5FQSszd0hRS1pqdk9kQVZtTzhoMHd3KzMwQSszd1N2QzZ4SlcvM1VRLzNVTS8zVUk2SGYrLy8rRHhCQmZYbDNEaS85VmkreUxSUWlqUkNwQkFGM0RhaEJvc1B4QUFPZ3pvdi8vZzJYOEFQOTFEUDkxQ1A4VitPQkFBSWxGNU9zdmkwWHNpd0NMQUlsRjREUEpQUmNBQU1BUGxNR0x3Y09MWmVpQmZlQVhBQURBZFFocUNQOFZFT0JBQUlObDVBREhSZnorLy8vL2kwWGs2Q1dpLy8vRHpNek1pLzlWaSt5TFRRaTRUVm9BQUdZNUFYUUVNOEJkdzR0QlBBUEJnVGhRUlFBQWRlOHowcmtMQVFBQVpqbElHQStVd292Q1hjUE16TXpNek16TXpNek16SXYvVll2c2kwVUlpMGc4QThnUHQwRVVVMVlQdDNFR005SlhqVVFJR0lYMmRodUxmUXlMU0F3NytYSUppMWdJQTlrNyszSUtRb1BBS0R2V2N1Z3p3RjllVzEzRHpNek16TXpNek16TXpNek1pLzlWaSt4cS9talEvRUFBYUFBMFFBQmtvUUFBQUFCUWcrd0lVMVpYb1FRUVFRQXhSZmd6eFZDTlJmQmtvd0FBQUFDSlplakhSZndBQUFBQWFBQUFRQURvS3YvLy80UEVCSVhBZEZXTFJRZ3RBQUJBQUZCb0FBQkFBT2hRLy8vL2c4UUloY0IwTzR0QUpNSG9IL2ZRZytBQngwWDgvdi8vLzR0TjhHU0pEUUFBQUFCWlgxNWJpK1ZkdzR0RjdJc0lpd0V6MGowRkFBREFENVRDaThMRGkyWG94MFg4L3YvLy96UEFpMDN3WklrTkFBQUFBRmxmWGx1TDVWM0R6TXpNVll2c1UxWlhWV29BYWdCb0tKTkFBUDkxQ09obVBRQUFYVjllVzR2bFhjT0xUQ1FFOTBFRUJnQUFBTGdCQUFBQWRES0xSQ1FVaTBqOE04am9jSVgvLzFXTGFCQ0xVQ2hTaTFBa1V1Z1VBQUFBZzhRSVhZdEVKQWlMVkNRUWlRSzRBd0FBQU1OVFZsZUxSQ1FRVlZCcS9tZ3drMEFBWlA4MUFBQUFBS0VFRUVFQU04UlFqVVFrQkdTakFBQUFBSXRFSkNpTFdBaUxjQXlEL3Y5ME9vTjhKQ3ovZEFZN2RDUXNkaTJOTkhhTERMT0pUQ1FNaVVnTWczeXpCQUIxRjJnQkFRQUFpMFN6Q09oSkFBQUFpMFN6Q09oZkFBQUE2N2VMVENRRVpJa05BQUFBQUlQRUdGOWVXOE16d0dTTERRQUFBQUNCZVFRd2swQUFkUkNMVVF5TFVndzVVUWgxQmJnQkFBQUF3MU5SdTVBZFFRRHJDMU5SdTVBZFFRQ0xUQ1FNaVVzSWlVTUVpV3NNVlZGUVdGbGRXVnZDQkFELzBNT0wvMVdMN0l0RkNGWlhoY0I4V1RzRmlDdEJBSE5SaThqQitRV0w4SVBtSDQwOGphQXJRUUNMRDhIbUJvTThEdjkxTllNOUFCQkJBQUZUaTEwTWRSNkQ2QUIwRUVoMENFaDFFMU5xOU9zSVUycjE2d05UYXZiL0ZmemdRQUNMQjRrY0JqUEFXK3NXNk1xUy8vL0hBQWtBQUFEbzBwTC8vNE1nQUlQSS8xOWVYY09MLzFXTDdJdE5DRk16Mnp2TFZsZDhXenNOaUN0QkFITlRpOEhCK0FXTDhZMDhoYUFyUVFDTEI0UG1IOEhtQmdQRzlrQUVBWFExZ3pqL2REQ0RQUUFRUVFBQmRSMHJ5M1FRU1hRSVNYVVRVMnIwNndoVGF2WHJBMU5xOXY4Vi9PQkFBSXNIZ3d3Ry96UEE2eFhvUkpMLy84Y0FDUUFBQU9oTWt2Ly9pUmlEeVA5ZlhsdGR3NHYvVll2c2kwVUlnL2orZFJqb01KTC8vNE1nQU9nVmt2Ly94d0FKQUFBQWc4ai9YY05XTS9ZN3hud2lPd1dJSzBFQWN4cUx5SVBnSDhINUJZc01qYUFyUVFEQjRBWUR3ZlpBQkFGMUpPanZrZi8vaVREbzFaSC8vMVpXVmxaV3h3QUpBQUFBNkYyUi8vK0R4QlNEeVAvckFvc0FYbDNEYWd4bzhQeEFBT2pMbmYvL2kzMElpOGZCK0FXTDk0UG1IOEhtQmdNMGhhQXJRUURIUmVRQkFBQUFNOXM1WGdoMU5tb0s2SUx4Ly85WmlWMzhPVjRJZFJwb29BOEFBSTFHREZEb1Nmdi8vMWxaaGNCMUE0bGQ1UDlHQ01kRi9QNy8vLy9vTUFBQUFEbGQ1SFFkaThmQitBV0Q1eC9CNXdhTEJJV2dLMEVBalVRNERGRC9GVlRnUUFDTFJlVG9pNTMvLzhNejI0dDlDR29LNkVMdy8vOVp3NHYvVll2c2kwVUlpOGlENEIvQitRV0xESTJnSzBFQXdlQUdqVVFCREZEL0ZWamdRQUJkdzJvWWFCRDlRQURvQkozLy80Tk41UDh6LzRsOTNHb0w2QlR3Ly85WmhjQjFDSVBJLytsaUFRQUFhZ3Zvdy9ELy8xbUpmZnlKZmRpRC8wQVBqVHdCQUFDTE5MMmdLMEVBaGZZUGhMb0FBQUNKZGVDTEJMMmdLMEVBQlFBSUFBQTc4QStEbHdBQUFQWkdCQUYxWElOK0NBQjFPV29LNkhydy8vOVpNOXREaVYzOGczNElBSFVjYUtBUEFBQ05SZ3hRNkQzNi8vOVpXWVhBZFFXSlhkenJBLzlHQ0lObC9BRG9LQUFBQUlOOTNBQjFGNDFlREZQL0ZWVGdRQUQyUmdRQmRCdFQveFZZNEVBQWc4WkE2NEtMZmRpTGRlQnFDdWcvNy8vL1djT0RmZHdBZGViR1JnUUJndzcvS3pTOW9DdEJBTUgrQm92SHdlQUZBL0NKZGVTRGZlVC9kWGxINlN2Ly8vOXFRR29nNkJmYy8vOVpXWWxGNElYQWRHR05ETDJnSzBFQWlRR0RCWWdyUVFBZ2l4R0J3Z0FJQUFBN3duTVh4a0FFQUlNSS84WkFCUXFEWUFnQWc4QkFpVVhnNjkzQjV3V0pmZVNMeDhINEJZdlBnK0Vmd2VFR2l3U0ZvQ3RCQU1aRUNBUUJWK2pHL2YvL1dZWEFkUVNEVGVUL3gwWDgvdi8vLytnSkFBQUFpMFhrNk1XYi8vL0RhZ3ZvZ2U3Ly8xbkRhaEJvT1AxQUFPaHFtLy8vaTBVSWcvaitkUlBvUG8vLy84Y0FDUUFBQUlQSS8rbXFBQUFBTTlzN3czd0lPd1dJSzBFQWNocm9IWS8vLzhjQUNRQUFBRk5UVTFOVDZLV08vLytEeEJUcjBJdkl3ZmtGalR5Tm9DdEJBSXZ3ZytZZndlWUdpdzhQdmt3T0JJUGhBWFRHVU9ncS9mLy9XWWxkL0lzSDlrUUdCQUYwTWY5MUNPaWUvUC8vV1ZEL0ZRRGhRQUNGd0hVTC94VVk0RUFBaVVYazZ3T0pYZVE1WGVSMEdlaThqdi8vaTAza2lRam9uNDcvLzhjQUNRQUFBSU5ONVAvSFJmeisvLy8vNkFrQUFBQ0xSZVRvNVpyLy84UC9kUWpvWVAzLy8xbkRWWXZzZyt3RWlYMzhpMzBJaTAwTXdla0haZy92d09zSWphUWtBQUFBQUpCbUQzOEhaZzkvUnhCbUQzOUhJR1lQZjBjd1pnOS9SMEJtRDM5SFVHWVBmMGRnWmc5L1IzQ052NEFBQUFCSmRkQ0xmZnlMNVYzRFZZdnNnK3dRaVgzOGkwVUltWXY0TS9vcitvUG5EelA2Sy9xRi8zVThpMDBRaTlHRDRuK0pWZlE3eW5RU0s4cFJVT2h6Ly8vL2c4UUlpMFVJaTFYMGhkSjBSUU5GRUN2Q2lVWDRNOENMZmZpTFRmVHpxb3RGQ09zdTk5K0R4eENKZmZBendJdDlDSXROOFBPcWkwWHdpMDBJaTFVUUE4Z3IwRkpxQUZIb2Z2Ly8vNFBFREl0RkNJdDkvSXZsWGNOcURHaFkvVUFBNktPWi8vK0RaZndBWmc4b3djZEY1QUVBQUFEckk0dEY3SXNBaXdBOUJRQUF3SFFLUFIwQUFNQjBBelBBd3pQQVFNT0xaZWlEWmVRQXgwWDgvdi8vLzR0RjVPaWxtZi8vdzR2L1ZZdnNnK3dZTThCVGlVWDhpVVgwaVVYNFU1eFlpOGcxQUFBZ0FGQ2RuRm9yMFhRZlVaMHp3QStpaVVYMGlWM29pVlhzaVUzd3VBRUFBQUFQb29sVi9JbEYrRnYzUmZ3QUFBQUVkQTdvWFAvLy80WEFkQVV6d0VEckFqUEFXOG5ENkpuLy8vK2pmQ3RCQURQQXc0di9WWXZzZyt3UW9RUVFRUUF6eFlsRi9GWXo5amsxb0IxQkFIUlBnejNFSGtFQS9uVUY2RThwQUFDaHhCNUJBSVA0LzNVSHVQLy9BQURyY0ZhTlRmQlJhZ0dOVFFoUlVQOFZET0ZBQUlYQWRXZURQYUFkUVFBQ2Rkci9GUmpnUUFDRCtIaDF6NGsxb0IxQkFGWldhZ1dOUmZSUWFnR05SUWhRVnY4VkNPRkFBRkQvRlhEZ1FBQ0xEY1FlUVFDRCtmOTBvbGFOVmZCU1VJMUY5RkJSL3hVRTRVQUFoY0IwaldhTFJRaUxUZnd6elY3b1hYMy8vOG5EeHdXZ0hVRUFBUUFBQU92anpNek16TXpNek16TXpNek16TXpNVVkxTUpBUXJ5QnZBOTlBanlJdkVKUUR3Ly84N3lISUtpOEZabElzQWlRUWt3eTBBRUFBQWhRRHI2VldMN0lQc0NJbDkvSWwxK0l0MURJdDlDSXRORU1IcEIrc0dqWnNBQUFBQVpnOXZCbVlQYjA0UVpnOXZWaUJtRDI5ZU1HWVBmd2RtRDM5UEVHWVBmMWNnWmc5L1h6Qm1EMjltUUdZUGIyNVFaZzl2ZG1CbUQyOStjR1lQZjJkQVpnOS9iMUJtRDM5M1lHWVBmMzl3amJhQUFBQUFqYitBQUFBQVNYV2ppM1g0aTMzOGkrVmR3MVdMN0lQc0hJbDk5SWwxK0lsZC9JdGRESXZEbVl2SWkwVUlNOG9yeW9QaER6UEtLOHFaaS9neitpdjZnK2NQTS9vcitvdlJDOWQxU290MUVJdk9nK0YvaVUzb08vRjBFeXZ4VmxOUTZDZi8vLytEeEF5TFJRaUxUZWlGeVhSM2kxMFFpMVVNQTlNcjBZbFY3QVBZSzltSlhmQ0xkZXlMZmZDTFRlanpwSXRGQ090VE84OTFOZmZaZzhFUWlVM2tpM1VNaTMwSWkwM2s4NlNMVFFnRFRlU0xWUXdEVmVTTFJSQXJSZVJRVWxIb1RQLy8vNFBFREl0RkNPc2FpM1VNaTMwSWkwMFFpOUhCNlFMenBZdktnK0VEODZTTFJRaUxYZnlMZGZpTGZmU0w1VjNEaS85VmkreUxEV1FyUVFDaGFDdEJBR3ZKRkFQSTZ4R0xWUWdyVUF5QitnQUFFQUJ5Q1lQQUZEdkJjdXN6d0YzRHpNek1pLzlWaSt5RDdCQ0xUUWlMUVJCV2kzVU1WNHYrSzNrTWc4Yjh3ZThQaTg5cHlRUUNBQUNOakFGRUFRQUFpVTN3aXc1SmlVMzg5c0VCRDRYVEFnQUFVNDBjTVlzVGlWWDBpMWI4aVZYNGkxWDBpVjBNOXNJQmRYVEIrZ1JLZy9vL2RnTnFQMXFMU3dRN1N3aDFRcnNBQUFDQWcvb2djeG1MeXRQcmpVd0NCUGZUSVZ5NFJQNEpkU09MVFFnaEdlc2NqVXJnMCt1TlRBSUU5OU1obkxqRUFBQUEvZ2wxQm90TkNDRlpCSXRkREl0VENJdGJCSXROL0FOTjlJbGFCSXRWREl0YUJJdFNDSWxUQ0lsTi9JdlJ3Zm9FU29QNlAzWURhajlhaTEzNGcrTUJpVjMwRDRXUEFBQUFLM1g0aTEzNHdmc0VhaitKZFF4TFhqdmVkZ0tMM2dOTitJdlJ3Zm9FU29sTi9EdldkZ0tMMWp2YWRGNkxUUXlMY1FRN2NRaDFPNzRBQUFDQWcvc2djeGVMeTlQdTk5WWhkTGhFL2t3REJIVWhpMDBJSVRIckdvMUw0TlB1OTlZaHRMakVBQUFBL2t3REJIVUdpMDBJSVhFRWkwME1pM0VJaTBrRWlVNEVpMDBNaTNFRWkwa0lpVTRJaTNVTTZ3T0xYUWlEZmZRQWRRZzcyZytFZ0FBQUFJdE44STBNMFl0WkJJbE9DSWxlQklseEJJdE9CSWx4Q0l0T0JEdE9DSFZnaWt3Q0JJaE5ELzdCaUV3Q0JJUDZJSE1sZ0gwUEFIVU9pOHE3QUFBQWdOUHJpMDBJQ1JtN0FBQUFnSXZLMCt1TlJMaEVDUmpyS1lCOUR3QjFFSTFLNExzQUFBQ0EwK3VMVFFnSldRU05TdUM2QUFBQWdOUHFqWVM0eEFBQUFBa1FpMFg4aVFhSlJERDhpMFh3L3dnUGhmTUFBQUNoU0NwQkFJWEFENFRZQUFBQWl3MTRLMEVBaXpYUTRFQUFhQUJBQUFEQjRROERTQXk3QUlBQUFGTlIvOWFMRFhnclFRQ2hTQ3BCQUxvQUFBQ0EwK29KVUFpaFNDcEJBSXRBRUlzTmVDdEJBSU9raU1RQUFBQUFvVWdxUVFDTFFCRCtTRU9oU0NwQkFJdElFSUI1UXdCMUNZTmdCUDZoU0NwQkFJTjRDUDkxWlZOcUFQOXdEUC9Xb1VncVFRRC9jQkJxQVA4MXBDaEJBUDhWZk9CQUFJc05aQ3RCQUtGSUtrRUFhOGtVaXhWb0swRUFLOGlOVEJIc1VZMUlGRkZRNkZja0FBQ0xSUWlEeEF6L0RXUXJRUUE3QlVncVFRQjJCSU50Q0JTaGFDdEJBS053SzBFQWkwVUlvMGdxUVFDSlBYZ3JRUUJiWDE3Snc2RjBLMEVBVm9zMVpDdEJBRmN6L3p2d2RUU0R3QkJyd0JSUS96Vm9LMEVBVi84MXBDaEJBUDhWR09GQUFEdkhkUVF6d090NGd3VjBLMEVBRUlzMVpDdEJBS05vSzBFQWEvWVVBelZvSzBFQWFNUkJBQUJxQ1A4MXBDaEJBUDhWRU9GQUFJbEdFRHZIZE1kcUJHZ0FJQUFBYUFBQUVBQlgveFVVNFVBQWlVWU1POGQxRXY5MkVGZi9OYVFvUVFEL0ZYemdRQURybTROT0NQK0pQb2wrQlA4RlpDdEJBSXRHRUlNSS80dkdYMTdEaS85VmkreFJVWXROQ0l0QkNGTldpM0VRVnpQYjZ3TUR3RU9Gd0gzNWk4TnB3QVFDQUFDTmhEQkVBUUFBYWorSlJmaGFpVUFJaVVBRWc4QUlTblgwYWdTTCsyZ0FFQUFBd2VjUEEza01hQUNBQUFCWC94VVU0VUFBaGNCMUNJUEkvK21kQUFBQWpaY0FjQUFBaVZYOE8vcDNRNHZLSzgvQjZReU5SeEJCZzBqNC80T0k3QThBQVArTmtQd1BBQUNKRUkyUS9PLy8vOGRBL1BBUEFBQ0pVQVRIZ09nUEFBRHdEd0FBQlFBUUFBQkpkY3VMVmZ5TFJmZ0YrQUVBQUkxUERJbElCSWxCQ0kxS0RJbElDSWxCQklOa25rUUFNLzlIaWJ5ZXhBQUFBSXBHUTRySS9zR0V3SXRGQ0loT1EzVURDWGdFdWdBQUFJQ0x5OVBxOTlJaFVBaUx3MTllVzhuRGkvOVZpK3lEN0F5TFRRaUxRUkJUVm90MUVGZUxmUXlMMXl0UkRJUEdGOEhxRDR2S2Fja0VBZ0FBall3QlJBRUFBSWxOOUl0UC9JUG04RWs3OFkxOE9meUxINGxORUlsZC9BK09WUUVBQVBiREFRK0ZSUUVBQUFQWk8vTVBqenNCQUFDTFRmekIrUVJKaVUzNGcvay9kZ1pxUDFtSlRmaUxYd1E3WHdoMVE3c0FBQUNBZy9rZ2N4clQ2NHROK0kxTUFRVDMweUZja0VUK0NYVW1pMDBJSVJuckg0UEI0TlByaTAzNGpVd0JCUGZUSVp5UXhBQUFBUDRKZFFhTFRRZ2hXUVNMVHdpTFh3U0pXUVNMVHdTTGZ3aUplUWlMVFJBcnpnRk4vSU45L0FBUGpxVUFBQUNMZmZ5TFRRekIvd1JQalV3eC9JUC9QM1lEYWo5ZmkxMzBqUno3aVYwUWkxc0VpVmtFaTEwUWlWa0lpVXNFaTFrRWlVc0lpMWtFTzFrSWRWZUtUQWNFaUUwVC9zR0lUQWNFZy84Z2N4eUFmUk1BZFE2THo3c0FBQUNBMCt1TFRRZ0pHWTFFa0VTTHorc2dnSDBUQUhVUWpVL2d1d0FBQUlEVDY0dE5DQWxaQkkyRWtNUUFBQUNOVCtDNkFBQUFnTlBxQ1JDTFZReUxUZnlOUkRMOGlRaUpUQUg4NndPTFZReU5SZ0dKUXZ5SlJETDQ2VHdCQUFBendPazRBUUFBRDQwdkFRQUFpMTBNS1hVUWpVNEJpVXY4alZ3ei9JdDFFTUgrQkU2SlhReUpTL3lEL2o5MkEyby9YdlpGL0FFUGhZQUFBQUNMZGZ6Qi9nUk9nLzQvZGdOcVAxNkxUd1E3VHdoMVFyc0FBQUNBZy80Z2N4bUx6dFByalhRR0JQZlRJVnlRUlA0T2RTT0xUUWdoR2VzY2pVN2cwK3VOVEFZRTk5TWhuSkRFQUFBQS9nbDFCb3ROQ0NGWkJJdGRESXRQQ0l0M0JJbHhCSXQzQ0l0UEJJbHhDSXQxRUFOMS9JbDFFTUgrQkU2RC9qOTJBMm8vWG90TjlJME04WXQ1QklsTENJbDdCSWxaQkl0TEJJbFpDSXRMQkR0TENIVlhpa3dHQkloTkQvN0JpRXdHQklQK0lITWNnSDBQQUhVT2k4Ni9BQUFBZ05QdmkwMElDVG1OUkpCRWk4N3JJSUI5RHdCMUVJMU80TDhBQUFDQTArK0xUUWdKZVFTTmhKREVBQUFBalU3Z3VnQUFBSURUNmdrUWkwVVFpUU9KUkJqOE04QkFYMTVieWNPTC8xV0w3SVBzRktGa0swRUFpMDBJYThBVUF3Vm9LMEVBZzhFWGcrSHdpVTN3d2ZrRVUwbUQrU0JXVjMwTGc4Ny8wKzZEVGZqLzZ3MkR3ZUNEeXY4ejl0UHFpVlg0aXcxd0swRUFpOW5yRVl0VEJJczdJMVg0SS80TDEzVUtnOE1VaVYwSU85aHk2RHZZZFgrTEhXZ3JRUURyRVl0VEJJczdJMVg0SS80TDEzVUtnOE1VaVYwSU85bHk2RHZaZFZ2ckRJTjdDQUIxQ29QREZJbGRDRHZZY3ZBNzJIVXhpeDFvSzBFQTZ3bURld2dBZFFxRHd4U0pYUWc3MlhMd085bDFGZWlnK3YvL2k5aUpYUWlGMjNVSE04RHBDUUlBQUZQb092di8vMW1MU3hDSkFZdERFSU00LzNUbGlSMXdLMEVBaTBNUWl4Q0pWZnlEK3Y5MEZJdU1rTVFBQUFDTGZKQkVJMDM0SS80THozVXBnMlg4QUl1UXhBQUFBSTFJUklzNUkxWDRJLzRMMTNVTy8wWDhpNUdFQUFBQWc4RUU2K2VMVmZ5THltbkpCQUlBQUkyTUFVUUJBQUNKVGZTTFRKQkVNLzhqem5VU2k0eVF4QUFBQUNOTitHb2dYK3NEQThsSGhjbDkrWXROOUl0VStRU0xDaXROOEl2eHdmNEVUb1ArUDRsTitINERhajllTy9jUGhBRUJBQUNMU2dRN1NnaDFYSVAvSUxzQUFBQ0FmU2FMejlQcmkwMzhqWHc0QlBmVGlWM3NJMXlJUklsY2lFVCtEM1V6aTAzc2kxMElJUXZyTEkxUDROUHJpMDM4all5SXhBQUFBSTE4T0FUMzB5RVovZytKWGV4MUM0dGRDSXRON0NGTEJPc0RpMTBJZzMzNEFJdEtDSXQ2QklsNUJJdEtCSXQ2Q0lsNUNBK0VqUUFBQUl0TjlJME04WXQ1QklsS0NJbDZCSWxSQkl0S0JJbFJDSXRLQkR0S0NIVmVpa3dHQkloTkMvN0JnLzRnaUV3R0JIMGpnSDBMQUhVTHZ3QUFBSUNMenRQdkNUdUx6cjhBQUFDQTArK0xUZndKZkloRTZ5bUFmUXNBZFEyTlR1Qy9BQUFBZ05QdkNYc0VpMDM4amJ5SXhBQUFBSTFPNEw0QUFBQ0EwKzRKTjR0TitJWEpkQXVKQ29sTUVmenJBNHROK0l0MThBUFJqVTRCaVFxSlRETDhpM1gwaXc2TmVRR0pQb1hKZFJvN0hVZ3FRUUIxRW90Ti9Ec05lQ3RCQUhVSGd5VklLa0VBQUl0Ti9Ja0lqVUlFWDE1YnljTnFDR2g0L1VBQTZMU0wvLy9vNUxuLy80dEFlSVhBZEJhRFpmd0EvOURyQnpQQVFNT0xaZWpIUmZ6Ky8vLy82TllmQUFEb3pZdi8vOE5vM0tkQUFPanJ0di8vV2FOTUtrRUF3NHYvVll2c1VWTldWLzgxcUN4QkFPaEx0Ly8vL3pXa0xFRUFpL2lKZmZ6b083Zi8vNHZ3V1ZrNzl3K0Nnd0FBQUl2ZUs5K05Rd1NEK0FSeWQxZm9sQ0FBQUl2NGpVTUVXVHY0YzBpNEFBZ0FBRHY0Y3dLTHh3UEhPOGR5RDFEL2Rmem9kY3YvLzFsWmhjQjFGbzFIRUR2SGNrQlEvM1g4NkYvTC8vOVpXWVhBZERIQit3SlFqVFNZNkZhMi8vOVpvNmdzUVFEL2RRam9TTGIvLzRrR2c4WUVWdWc5dHYvL1dhT2tMRUVBaTBVSVdlc0NNOEJmWGx2Snc0di9WbW9FYWlEb3ljci8vNHZ3VnVnV3R2Ly9nOFFNbzZnc1FRQ2pwQ3hCQUlYMmRRVnFHRmhldzRNbUFEUEFYc05xREdpWS9VQUE2SCtLLy8vbzU2bi8vNE5sL0FEL2RRam8rUDcvLzFtSlJlVEhSZnorLy8vLzZBa0FBQUNMUmVUb200ci8vOFBveHFuLy84T0wvMVdMN1A5MUNPaTMvLy8vOTlnYndQZllXVWhkdzR2L1ZZdnNpMFVJbzFBcVFRQ2pWQ3BCQUtOWUtrRUFvMXdxUVFCZHc0di9WWXZzaTBVSWl3M01GVUVBVmpsUUJIUVBpL0ZyOWd3RGRRaUR3QXc3eG5Mc2E4a01BMDBJWGp2QmN3VTVVQVIwQWpQQVhjUC9OVmdxUVFEb3diWC8vMW5EYWlCb3VQMUFBT2pLaWYvL00vK0pmZVNKZmRpTFhRaUQrd3QvVEhRVmk4TnFBbGtyd1hRaUs4RjBDQ3ZCZEdRcndYVkU2RnEzLy8rTCtJbDkySVgvZFJTRHlQL3BZUUVBQUw1UUtrRUFvVkFxUVFEcllQOTNYSXZUNkYzLy8vK0w4SVBHQ0lzRzYxcUx3NFBvRDNROGcrZ0dkQ3RJZEJ6b08zMy8vOGNBRmdBQUFEUEFVRkJRVUZEb3dYei8vNFBFRk91dXZsZ3FRUUNoV0NwQkFPc1d2bFFxUVFDaFZDcEJBT3NLdmx3cVFRQ2hYQ3BCQU1kRjVBRUFBQUJRNlAyMC8vK0pSZUJaTThDRGZlQUJENFRZQUFBQU9VWGdkUWRxQStoL3F2Ly9PVVhrZEFkUTZORGMvLzlaTThDSlJmeUQrd2gwQ29QN0MzUUZnL3NFZFJ1TFQyQ0pUZFNKUjJDRCt3aDFRSXRQWklsTjBNZEhaSXdBQUFDRCt3aDFMb3NOd0JWQkFJbE4zSXNOeEJWQkFJc1Z3QlZCQUFQS09VM2NmUm1MVGR4cnlReUxWMXlKUkJFSS8wWGM2OXZvWmJULy80a0d4MFg4L3YvLy8rZ1ZBQUFBZy9zSWRSLy9kMlJULzFYZ1dlc1ppMTBJaTMzWWczM2tBSFFJYWdEb1h0di8vMW5EVS85VjRGbUQrd2gwQ29QN0MzUUZnL3NFZFJHTFJkU0pSMkNEK3doMUJvdEYwSWxIWkRQQTZHeUkvLy9EaS85VmkreUxSUWlqWkNwQkFGM0RpLzlWaSt5TFJRaWpjQ3BCQUYzRGkvOVZpK3lMUlFpamRDcEJBRjNEaS85Vmkrei9OWFFxUVFEbzByUC8vMW1Gd0hRUC8zVUkvOUJaaGNCMEJUUEFRRjNETThCZHc0di9WWXZzZyt3VVUxWlg2S0d6Ly8rRFpmd0FnejE0S2tFQUFJdllENFdPQUFBQWFDRHFRQUQvRlJ6aFFBQ0wrSVgvRDRRcUFRQUFpeldFNEVBQWFCVHFRQUJYLzlhRndBK0VGQUVBQUZEbzY3TC8vOGNFSkFUcVFBQlhvM2dxUVFELzFsRG8xckwvLzhjRUpQRHBRQUJYbzN3cVFRRC8xbERvd2JMLy84Y0VKTlRwUUFCWG80QXFRUUQvMWxEb3JMTC8vMW1qaUNwQkFJWEFkQlJvdk9sQUFGZi8xbERvbExMLy8xbWpoQ3BCQUtHRUtrRUFPOE4wVHprZGlDcEJBSFJIVU9qeXN2Ly8veldJS2tFQWkvRG81YkwvLzFsWmkvaUY5blFzaGY5MEtQL1doY0IwR1kxTitGRnFESTFON0ZGcUFWRC8xNFhBZEFiMlJmUUJkUW1CVFJBQUFDQUE2em1oZkNwQkFEdkRkREJRNktLeS8vOVpoY0IwSmYvUWlVWDhoY0IwSEtHQUtrRUFPOE4wRTFEb2hiTC8vMW1Gd0hRSS8zWDgvOUNKUmZ6L05YZ3FRUURvYmJMLy8xbUZ3SFFRLzNVUS8zVU0vM1VJLzNYOC85RHJBalBBWDE1YnljT0wvMVdMN0l0RkNGTXoyMVpYTzhOMEI0dDlERHY3ZHh2b0xIci8vMm9XWG9rd1UxTlRVMVBvdFhuLy80UEVGSXZHNnp5TGRSQTc4M1VFaUJqcjJvdlFPQnAwQkVKUGRmZzcrM1R1aWc2SUNrSkdPc3QwQTA5MTh6djdkUkNJR09qbGVmLy9haUpaaVFpTDhldTFNOEJmWGx0ZHc0di9WWXZzVTFhTGRRZ3oyMWM1WFJSMUVEdnpkUkE1WFF4MUVqUEFYMTViWGNNNzgzUUhpMzBNTy90M0craWplZi8vYWhaZWlUQlRVMU5UVStnc2VmLy9nOFFVaThicjFUbGRGSFVFaUI3cnlvdFZFRHZUZFFTSUh1dlJnMzBVLzR2R2RRK0tDb2dJUUVJNnkzUWVUM1h6NnhtS0NvZ0lRRUk2eTNRSVQzUUYvMDBVZGU0NVhSUjFBb2dZTy90MWk0TjlGUDkxRDR0RkRHcFFpRndHLzFqcGVQLy8vNGdlNkNsNS8vOXFJbG1KQ0l2eDY0S0wvMVdMN0l0TkNGTXoyMVpYTzh0MEI0dDlERHY3ZHh2b0Ezbi8vMm9XWG9rd1UxTlRVMVBvakhqLy80UEVGSXZHNnpDTGRSQTc4M1VFaUJucjJvdlJpZ2FJQWtKR09zTjBBMDkxOHp2N2RSQ0lHZWpJZVAvL2FpSlppUWlMOGV2Qk04QmZYbHRkdzR2L1ZZdnNpMDBJVmpQMk84NThIb1A1QW40TWcva0RkUlNoQ0NCQkFPc29vUWdnUVFDSkRRZ2dRUURyRytpR2VQLy9WbFpXVmxiSEFCWUFBQURvRG5qLy80UEVGSVBJLzE1ZHc0di9WWXZzaTFVSVUxWlhNLzg3MTNRSGkxME1POTkzSHVoUWVQLy9haFplaVRCWFYxZFhWK2paZC8vL2c4UVVpOFpmWGx0ZHc0dDFFRHYzZFFjendHYUpBdXZVaThvUHR3Wm1pUUZCUVVaR1pqdkhkQU5MZGU0endEdmZkZE5taVFMb0Izai8vMm9pV1lrSWkvSHJzNHYvVll2c2kwVUlab3NJUUVCbWhjbDE5aXRGQ05INFNGM0RpLzlWaSt5TFJRaUZ3SFFTZytnSWdUamQzUUFBZFFkUTZEK2cvLzlaWGNQTWkvOVZpK3lEN0JTaEJCQkJBRFBGaVVYOFUxWXoyMWVMOFRrZGpDcEJBSFU0VTFNei8wZFhhQ3pxUUFCb0FBRUFBRlAvRlNUaFFBQ0Z3SFFJaVQyTUtrRUE2eFgvRlJqZ1FBQ0QrSGgxQ3NjRmpDcEJBQUlBQUFBNVhSUitJb3RORkl0RkVFazRHSFFJUUR2TGRmYUR5ZitMUlJRcndVZzdSUlI5QVVDSlJSU2hqQ3BCQUlQNEFnK0VyQUVBQUR2REQ0U2tBUUFBZy9nQkQ0WE1BUUFBaVYzNE9WMGdkUWlMQm90QUJJbEZJSXMxWk9CQUFEUEFPVjBrVTFQL2RSUVBsY0QvZFJDTkJNVUJBQUFBVVA5MUlQL1dpL2c3K3crRWp3RUFBSDVEYXVBejBsajM5NFA0QW5JM2pVUS9DRDBBQkFBQWR4UG83Qm9BQUl2RU84TjBITWNBek13QUFPc1JVT2k5Q3dBQVdUdkRkQW5IQU4zZEFBQ0R3QWlKUmZUckE0bGQ5RGxkOUErRVBnRUFBRmYvZGZUL2RSVC9kUkJxQWY5MUlQL1doY0FQaE9NQUFBQ0xOU1RoUUFCVFUxZi9kZlQvZFF6L2RRai8xb3ZJaVUzNE84c1BoTUlBQUFEM1JRd0FCQUFBZENrNVhSd1BoTEFBQUFBN1RSd1BqNmNBQUFEL2RSei9kUmhYLzNYMC8zVU0vM1VJLzlicGtBQUFBRHZMZmtWcTREUFNXUGZ4Zy9nQ2NqbU5SQWtJUFFBRUFBQjNGdWd0R2dBQWkvUTc4M1JxeHdiTXpBQUFnOFlJNnhwUTZQc0tBQUJaTzhOMENjY0EzZDBBQUlQQUNJdnc2d0l6OWp2emRFSC9kZmhXVi85MTlQOTFEUDkxQ1A4VkpPRkFBSVhBZENKVFV6bGRISFVFVTFQckJ2OTFIUDkxR1A5MStGWlQvM1VnL3hWdzRFQUFpVVg0VnVpMy9mLy9XZjkxOU9pdS9mLy9pMFg0V2VsWkFRQUFpVjMwaVYzd09WMElkUWlMQm90QUZJbEZDRGxkSUhVSWl3YUxRQVNKUlNEL2RRam9neGNBQUZtSlJleUQrUDkxQnpQQTZTRUJBQUE3UlNBUGhOc0FBQUJUVTQxTkZGSC9kUkJRLzNVZzZLRVhBQUNEeEJpSlJmUTd3M1RVaXpVZzRVQUFVMVAvZFJSUS8zVU0vM1VJLzlhSlJmZzd3M1VITS9icHR3QUFBSDQ5Zy9qZ2R6aUR3QWc5QUFRQUFIY1c2QmNaQUFDTC9EdjdkTjNIQjh6TUFBQ0R4d2pyR2xEbzVRa0FBRms3dzNRSnh3RGQzUUFBZzhBSWkvanJBalAvTy90MHRQOTErRk5YNkQ2Ui8vK0R4QXovZGZoWC8zVVUvM1gwLzNVTS8zVUkvOWFKUmZnN3czVUVNL2JySmY5MUhJMUYrUDkxR0ZCWC8zVWcvM1hzNlBBV0FBQ0w4SWwxOElQRUdQZmVHL1lqZGZoWDZJejgvLzlaNnhyL2RSei9kUmovZFJUL2RSRC9kUXovZFFqL0ZTRGhRQUNMOERsZDlIUUovM1gwNkw2Yy8vOVppMFh3TzhOMEREbEZHSFFIVU9pcm5QLy9XWXZHaldYZ1gxNWJpMDM4TTgzb1kyWC8vOG5EaS85VmkreUQ3QkQvZFFpTlRmRG9WM2IvLy85MUtJMU44UDkxSlA5MUlQOTFIUDkxR1A5MUZQOTFFUDkxRE9nby9QLy9nOFFnZ0gzOEFIUUhpMDM0ZzJGdy9jbkRpLzlWaSt4UlVhRUVFRUVBTThXSlJmeWhrQ3BCQUZOV005dFhpL2s3dzNVNmpVWDRVRFAyUmxab0xPcEFBRmIvRlN6aFFBQ0Z3SFFJaVRXUUtrRUE2elQvRlJqZ1FBQ0QrSGgxQ21vQ1dLT1FLa0VBNndXaGtDcEJBSVA0QWcrRXp3QUFBRHZERDRUSEFBQUFnL2dCRDRYb0FBQUFpVjM0T1YwWWRRaUxCNHRBQklsRkdJczFaT0JBQURQQU9WMGdVMVAvZFJBUGxjRC9kUXlOQk1VQkFBQUFVUDkxR1AvV2kvZzcrdytFcXdBQUFINDhnZi93Ly85L2R6U05SRDhJUFFBRUFBQjNFK2d3RndBQWk4UTd3M1FjeHdETXpBQUE2eEZRNkFFSUFBQlpPOE4wQ2NjQTNkMEFBSVBBQ0l2WWhkdDBhWTBFUDFCcUFGUG9YSS8vLzRQRURGZFQvM1VRLzNVTWFnSC9kUmovMW9YQWRCSC9kUlJRVS85MUNQOFZMT0ZBQUlsRitGUG95UHIvLzR0RitGbnJkVFAyT1YwY2RRaUxCNHRBRklsRkhEbGRHSFVJaXdlTFFBU0pSUmovZFJ6b3BCUUFBRm1EK1A5MUJEUEE2MGM3UlJoMEhsTlRqVTBRVWY5MURGRC9kUmpvekJRQUFJdndnOFFZTy9OMDNJbDFEUDkxRlA5MUVQOTFEUDkxQ1A5MUhQOFZLT0ZBQUl2NE8vTjBCMWJvckpyLy8xbUx4NDFsN0Y5ZVc0dE4vRFBONkdSai8vL0p3NHYvVll2c2crd1EvM1VJalUzdzZGaDAvLy8vZFNTTlRmRC9kU0QvZFJ6L2RSai9kUlQvZFJEL2RRem9GdjcvLzRQRUhJQjkvQUIwQjR0TitJTmhjUDNKdzR2L1ZZdnNWb3QxQ0lYMkQ0U0JBUUFBLzNZRTZEeWEvLy8vZGdqb05Kci8vLzkyRE9nc212Ly8vM1lRNkNTYS8vLy9kaFRvSEpyLy8vOTJHT2dVbXYvLy96Ym9EWnIvLy85MklPZ0Ztdi8vLzNZazZQMlovLy8vZGlqbzlabi8vLzkyTE9qdG1mLy8vM1l3Nk9XWi8vLy9kalRvM1puLy8vOTJIT2pWbWYvLy8zWTQ2TTJaLy8vL2Rqem94Wm4vLzRQRVFQOTJRT2k2bWYvLy8zWkU2TEtaLy8vL2Rram9xcG4vLy85MlRPaWltZi8vLzNaUTZKcVovLy8vZGxUb2twbi8vLzkyV09pS21mLy8vM1pjNklLWi8vLy9kbURvZXBuLy8vOTJaT2h5bWYvLy8zWm82R3FaLy8vL2Rtem9ZcG4vLy85MmNPaGFtZi8vLzNaMDZGS1ovLy8vZG5qb1Nwbi8vLzkyZk9oQ21mLy9nOFJBLzdhQUFBQUE2RFNaLy8vL3RvUUFBQURvS1puLy8vKzJpQUFBQU9nZW1mLy8vN2FNQUFBQTZCT1ovLy8vdHBBQUFBRG9DSm4vLy8rMmxBQUFBT2o5bVAvLy83YVlBQUFBNlBLWS8vLy90cHdBQUFEbzU1ai8vLysyb0FBQUFPamNtUC8vLzdha0FBQUE2TkdZLy8vL3RxZ0FBQURveHBqLy80UEVMRjVkdzR2L1ZZdnNWb3QxQ0lYMmREV0xCanNGZUI1QkFIUUhVT2lqbVAvL1dZdEdCRHNGZkI1QkFIUUhVT2lSbVAvL1dZdDJDRHMxZ0I1QkFIUUhWdWgvbVAvL1dWNWR3NHYvVll2c1ZvdDFDSVgyZEg2TFJndzdCWVFlUVFCMEIxRG9YWmovLzFtTFJoQTdCWWdlUVFCMEIxRG9TNWovLzFtTFJoUTdCWXdlUVFCMEIxRG9PWmovLzFtTFJoZzdCWkFlUVFCMEIxRG9KNWovLzFtTFJodzdCWlFlUVFCMEIxRG9GWmovLzFtTFJpQTdCWmdlUVFCMEIxRG9BNWovLzFtTGRpUTdOWndlUVFCMEIxYm84WmYvLzFsZVhjUE16TXpNek16TXpGV0w3Rll6d0ZCUVVGQlFVRkJRaTFVTWpVa0FpZ0lLd0hRSmc4SUJENnNFSk92eGkzVUlnOG4valVrQWc4RUJpZ1lLd0hRSmc4WUJENk1FSkhQdWk4R0R4Q0JleWNQTXpNek16TXpNek16TWkxUWtCSXRNSkFqM3dnTUFBQUIxUElzQ09nRjFMZ3JBZENZNllRRjFKUXJrZEIzQjZCQTZRUUoxR1FyQWRCRTZZUU4xRUlQQkJJUENCQXJrZGRLTC96UEF3NUFid05IZ2c4QUJ3L2ZDQVFBQUFIUVlpZ0tEd2dFNkFYWG5nOEVCQ3NCMDNQZkNBZ0FBQUhTa1pvc0NnOElDT2dGMXpnckFkTVk2WVFGMXhRcmtkTDJEd1FMcmlNek16TXpNek16TVZZdnNWalBBVUZCUVVGQlFVRkNMVlF5TlNRQ0tBZ3JBZEFtRHdnRVBxd1FrNi9HTGRRaUwvNG9HQ3NCMERJUEdBUStqQkNSejhZMUcvNFBFSUY3Snc0di9WWXZzVVZhTGRReFc2UEIrLy8rSlJReUxSZ3hacUlKMUdlZ3Ridi8veHdBSkFBQUFnMDRNSUxqLy93QUE2VDBCQUFDb1FIUU42QkJ1Ly8vSEFDSUFBQURyNGFnQmRCZURaZ1FBcUJBUGhJMEFBQUNMVGdpRDRQNkpEb2xHREl0R0RJTm1CQUNEWmZ3QVUyb0NnK0R2V3d2RGlVWU1xUXdCQUFCMUxPaEZkUC8vZzhBZ08vQjBET2c1ZFAvL2c4QkFPL0IxRGY5MURPaU9yZi8vV1lYQWRRZFc2RHF0Ly85WjkwWU1DQUVBQUZjUGhJTUFBQUNMUmdpTFBvMUlBb2tPaTA0WUsvZ3J5NGxPQklYL2ZoMVhVUDkxRE9pamtmLy9nOFFNaVVYODYwNkR5Q0NKUmd6cFBmLy8vNHRORElQNS8zUWJnL24rZEJhTHdZUGdINHZSd2ZvRndlQUdBd1NWb0N0QkFPc0Z1TkFWUVFEMlFBUWdkQlZUYWdCcUFGSG9wS3YvL3lQQ2c4UVFnL2ovZEMyTFJnaUxYUWhtaVJqckhXb0NqVVg4VVA5MURJdjdpMTBJWm9sZC9PZ3JrZi8vZzhRTWlVWDhPWDM4ZEF1RFRnd2d1UC8vQUFEckI0dkRKZi8vQUFCZlcxN0p3NHYvVll2c2crd1FVMWFMZFF3ejIxZUxmUkE3ODNVVU8vdDJFSXRGQ0R2RGRBS0pHRFBBNllNQUFBQ0xSUWc3dzNRRGd3ai9nZi8vLy85L2Rodm9sMnovLzJvV1hsTlRVMU5UaVREb0lHei8vNFBFRkl2RzYxYi9kUmlOVGZEb3dtNy8vNHRGOERsWUZBK0ZuQUFBQUdhTFJSUzUvd0FBQUdZN3dYWTJPL04wRHp2N2RndFhVMWJvejRqLy80UEVET2hFYlAvL3h3QXFBQUFBNkRscy8vK0xBRGhkL0hRSGkwMzRnMkZ3L1Y5ZVc4bkRPL04wTWp2N2R5em9HV3ovLzJvaVhsTlRVMU5UaVREb29tdi8vNFBFRkRoZC9BK0VlZi8vLzR0RitJTmdjUDNwYmYvLy80Z0dpMFVJTzhOMEJzY0FBUUFBQURoZC9BK0VKZi8vLzR0RitJTmdjUDNwR2YvLy80MU5ERkZUVjFacUFZMU5GRkZUaVYwTS8zQUUveFZ3NEVBQU84TjBGRGxkREErRlh2Ly8vNHROQ0R2TGRMMkpBZXU1L3hVWTRFQUFnL2g2RDRWRS8vLy9PL01QaEdmLy8vODcrdytHWC8vLy8xZFRWdWo0aC8vL2c4UU02VS8vLy8rTC8xV0w3R29BLzNVVS8zVVEvM1VNLzNVSTZIeisvLytEeEJSZHcyb0M2R21XLy85Wncyb01hTmo5UUFEb1duZi8vNE5sNUFDTGRRZzdOV3dyUVFCM0ltb0U2Q2ZMLy85WmcyWDhBRmJvbE9qLy8xbUpSZVRIUmZ6Ky8vLy82QWtBQUFDTFJlVG9abmYvLzhOcUJPZ2l5di8vV2NPTC8xV0w3RmFMZFFpRC91QVBoNkVBQUFCVFY0czlFT0ZBQUlNOXBDaEJBQUIxR09pam12Ly9haDdvOFpqLy8yai9BQUFBNkRPVy8vOVpXYUdFSzBFQWcvZ0JkUTZGOW5RRWk4YnJBelBBUUZEckhJUDRBM1VMVnVoVC8vLy9XWVhBZFJhRjluVUJSb1BHRDRQbThGWnFBUDgxcENoQkFQL1hpOWlGMjNVdWFneGVPUVZZSzBFQWRCWC9kUWpvak83Ly8xbUZ3SFFQaTNVSTZYdi8vLy9vVkdyLy80a3c2RTFxLy8rSk1GK0x3MXZyRkZib1plNy8vMW5vT1dyLy84Y0FEQUFBQURQQVhsM0RhZ3hvK1AxQUFPaEJkdi8vaTAwSU0vODd6M1l1YXVCWU05TDM4VHRGREJ2QVFIVWY2QVZxLy8vSEFBd0FBQUJYVjFkWFYraU5hZi8vZzhRVU04RHAxUUFBQUErdlRReUw4WWwxQ0R2M2RRTXo5a1l6MjRsZDVJUCs0SGRwZ3oyRUswRUFBM1ZMZzhZUGcrYndpWFVNaTBVSU93VnNLMEVBZHpkcUJPaXZ5Zi8vV1lsOS9QOTFDT2diNS8vL1dZbEY1TWRGL1A3Ly8vL29Yd0FBQUl0ZDVEdmZkQkgvZFFoWFUrZ0Rodi8vZzhRTU85OTFZVlpxQ1A4MXBDaEJBUDhWRU9GQUFJdllPOTkxVERrOVdDdEJBSFF6VnVoODdmLy9XWVhBRDRWeS8vLy9pMFVRTzhjUGhGRC8vLy9IQUF3QUFBRHBSZi8vL3pQL2kzVU1hZ1RvVThqLy8xbkRPOTkxRFl0RkVEdkhkQWJIQUF3QUFBQ0x3K2gxZGYvL3cyb1FhQmorUUFEb0kzWC8vNHRkQ0lYYmRRNy9kUXpvL2YzLy8xbnB6QUVBQUl0MURJWDJkUXhUNkZxUi8vOVo2YmNCQUFDRFBZUXJRUUFERDRXVEFRQUFNLytKZmVTRC91QVBoNG9CQUFCcUJPaTh5UC8vV1lsOS9GUG9TTjcvLzFtSlJlQTd4dytFbmdBQUFEczFiQ3RCQUhkSlZsTlE2QzNqLy8rRHhBeUZ3SFFGaVYzazZ6Vlc2UHpsLy85WmlVWGtPOGQwSjR0RC9FZzd4bklDaThaUVUvOTE1T2g1amYvL1UrajQzZi8vaVVYZ1UxRG9JZDcvLzRQRUdEbDk1SFZJTy9kMUJqUDJSb2wxRElQR0Q0UG04SWwxREZaWC96V2tLRUVBL3hVUTRVQUFpVVhrTzhkMElJdEQvRWc3eG5JQ2k4WlFVLzkxNU9nbGpmLy9VLzkxNE9qVTNmLy9nOFFVeDBYOC92Ly8vK2d1QUFBQWczM2dBSFV4aGZaMUFVYUR4ZytENXZDSmRReFdVMm9BL3pXa0tFRUEveFVZNFVBQWkvanJFb3QxREl0ZENHb0U2TzNHLy85Wnc0dDk1SVgvRDRXL0FBQUFPVDFZSzBFQWRDeFc2TkRyLy85WmhjQVBoZEwrLy8vb25HZi8vemw5NEhWc2kvRC9GUmpnUUFCUTZFZG4vLzlaaVFiclg0WC9ENFdEQUFBQTZIZG4vLzg1ZmVCMGFNY0FEQUFBQU90eGhmWjFBVVpXVTJvQS96V2tLRUVBL3hVWTRVQUFpL2lGLzNWV09RVllLMEVBZERSVzZHZnIvLzlaaGNCMEg0UCs0SGJOVnVoWDYvLy9XZWdyWi8vL3h3QU1BQUFBTThEb2duUC8vOFBvR0dmLy8rbDgvLy8vaGY5MUZ1Z0taLy8vaS9EL0ZSamdRQUJRNkxwbS8vK0pCbG1MeCt2U2kvOVZpK3lEN0JEL2RRaU5UZkRvTG1uLy80TjlGUDk5QkRQQTZ4TC9kUmovZFJUL2RSRC9kUXovRlN6aFFBQ0FmZndBZEFlTFRmaURZWEQ5eWNPTC8xV0w3SVBzR0ZOV1Z6UGJhZ0ZUVS85MUNJbGQ4SWxkOU9pUXBQLy9pVVhvSThLRHhCQ0pWZXlEK1A5MFdXb0NVMVAvZFFqb2RLVC8vNHZJSThxRHhCQ0QrZjkwUVl0MURJdDlFQ3Z3Ry9vUGlNWUFBQUIvQ0R2ekQ0YThBQUFBdXdBUUFBQlRhZ2ovRlRqaFFBQlEveFVRNFVBQWlVWDhoY0IxRitnMVp2Ly94d0FNQUFBQTZDcG0vLytMQUY5ZVc4bkRhQUNBQUFEL2RRam9GUUVBQUZsWmlVWDRoZjk4Q244RU8vTnlCSXZENndLTHhsRC9kZnovZFFqbzhvTC8vNFBFRElQNC8zUTJtU3Z3Ry9wNEJuL1RoZlozejR0MThQOTErUDkxQ09qUkFBQUFXVm4vZGZ4cUFQOFZPT0ZBQUZEL0ZYemdRQUF6MittR0FBQUE2TVZsLy8rRE9BVjFDK2lvWmYvL3h3QU5BQUFBZzg3L2lYWDA2NzA3KzM5eGZBUTc4M05yVS85MUVQOTFEUDkxQ09oNW8vLy9JOEtEeEJDRCtQOFBoRVQvLy8vL2RRam9QTlAvLzFsUS94VTA0VUFBOTlnYndQZllTSm1KUmZBandvbFY5SVA0LzNVcDZFbGwvLy9IQUEwQUFBRG9VV1gvLzR2dy94VVk0RUFBaVFhTGRmQWpkZlNEL3Y4UGhQYisvLzlULzNYcy8zWG8vM1VJNkE2ai8vOGp3b1BFRUlQNC93K0UyZjcvL3pQQTZkbisvLytMLzFXTDdGT0xYUXhXaTNVSWk4YkIrQVdORklXZ0swRUFpd0tENWgvQjVnYU5ERENLUVNRQ3dGY1B0bmtFRDc3QWdlZUFBQUFBMGZpQit3QkFBQUIwVUlIN0FJQUFBSFJDZ2ZzQUFBRUFkQ2FCK3dBQUFnQjBIb0g3QUFBRUFIVTlnRWtFZ0lzS2pVd3hKSW9SZ09LQmdNb0JpQkhySjRCSkJJQ0xDbzFNTVNTS0VZRGlnb0RLQXV2b2dHRUVmK3NOZ0VrRWdJc0tqVXd4SklBaGdJWC9YMTViZFFlNEFJQUFBRjNEOTlnYndDVUF3QUFBQlFCQUFBQmR3NHYvVll2c2kwVUlWalAyTzhaMUhlZ3haUC8vVmxaV1ZsYkhBQllBQUFEb3VXUC8vNFBFRkdvV1dPc0tpdzFjSzBFQWlRZ3p3RjVkdzR2L1ZZdnN1UC8vQUFDTHlJUHNGR1k1VFFnUGhKb0FBQUJULzNVTWpVM3M2RE5tLy8rTFRleUxVUlF6Mnp2VGRSU0xSUWlOU0w5bWcva1pkd09Ed0NBUHQ4RHJZVmE0QUFFQUFJdndaamwxQ0Y1ektZMUY3RkJxQWY5MUNPakh3UC8vZzhRTWhjQVB0MFVJZERtTFRleUxpY3dBQUFCbUQ3WUVBZXZELzNFRWpVMzhhZ0ZSYWdHTlRRaFJVRktOUmV4UTZEUUtBQUNEeENDRndBKzNSUWgwQkErM1JmdzRYZmgwQjR0TjlJTmhjUDFieWNNendGQlFhZ05RYWdOb0FBQUFRR2pFODBBQS94VTA0RUFBbzhRZVFRRERvY1FlUVFCV2l6VWs0RUFBZy9qL2RBaUQrUDUwQTFELzFxSEFIa0VBZy9qL2RBaUQrUDUwQTFELzFsN0R6TXpNek16TXpNek16TXpNek14VmkreFhWb3QxREl0TkVJdDlDSXZCaTlFRHhqditkZ2c3K0ErQ3BBRUFBSUg1QUFFQUFISWZnejE4SzBFQUFIUVdWMWFENXcrRDVnODcvbDVmZFFoZVgxM3BhOWYvLy9mSEF3QUFBSFVWd2VrQ2crSURnL2tJY2lyenBmOGtsZlRGUUFDUWk4ZTZBd0FBQUlQcEJISU1nK0FEQThqL0pJVUl4VUFBL3lTTkJNWkFBSkQvSkkySXhVQUFrQmpGUUFCRXhVQUFhTVZBQUNQUmlnYUlCNHBHQVloSEFZcEdBc0hwQW9oSEFvUEdBNFBIQTRQNUNITE04NlgvSkpYMHhVQUFqVWtBSTlHS0JvZ0hpa1lCd2VrQ2lFY0JnOFlDZzhjQ2cva0ljcWJ6cGY4a2xmVEZRQUNRSTlHS0JvZ0hnOFlCd2VrQ2c4Y0JnL2tJY29qenBmOGtsZlRGUUFDTlNRRHJ4VUFBMk1WQUFOREZRQURJeFVBQXdNVkFBTGpGUUFDd3hVQUFxTVZBQUl0RWp1U0pSSS9raTBTTzZJbEVqK2lMUkk3c2lVU1A3SXRFanZDSlJJL3dpMFNPOUlsRWovU0xSSTc0aVVTUCtJdEVqdnlKUkkvOGpRU05BQUFBQUFQd0Evai9KSlgweFVBQWkvOEV4a0FBRE1aQUFCakdRQUFzeGtBQWkwVUlYbC9KdzVDS0JvZ0hpMFVJWGwvSnc1Q0tCb2dIaWtZQmlFY0JpMFVJWGwvSnc0MUpBSW9HaUFlS1JnR0lSd0dLUmdLSVJ3S0xSUWhlWDhuRGtJMTBNZnlOZkRuODk4Y0RBQUFBZFNUQjZRS0Q0Z09EK1FoeURmM3pwZnovSkpXUXgwQUFpLy8zMmY4a2pVREhRQUNOU1FDTHg3b0RBQUFBZy9rRWNneUQ0QU1yeVA4a2haVEdRQUQvSkkyUXgwQUFrS1RHUUFESXhrQUE4TVpBQUlwR0F5UFJpRWNEZys0Qndla0NnKzhCZy9rSWNyTDk4Nlg4L3lTVmtNZEFBSTFKQUlwR0F5UFJpRWNEaWtZQ3dla0NpRWNDZys0Q2crOENnL2tJY29qOTg2WDgveVNWa01kQUFKQ0tSZ01qMFloSEE0cEdBb2hIQW9wR0FjSHBBb2hIQVlQdUE0UHZBNFA1Q0ErQ1Z2Ly8vLzN6cGZ6L0pKV1F4MEFBalVrQVJNZEFBRXpIUUFCVXgwQUFYTWRBQUdUSFFBQnN4MEFBZE1kQUFJZkhRQUNMUkk0Y2lVU1BISXRFamhpSlJJOFlpMFNPRklsRWp4U0xSSTRRaVVTUEVJdEVqZ3lKUkk4TWkwU09DSWxFandpTFJJNEVpVVNQQkkwRWpRQUFBQUFEOEFQNC95U1ZrTWRBQUl2L29NZEFBS2pIUUFDNHgwQUF6TWRBQUl0RkNGNWZ5Y09RaWtZRGlFY0RpMFVJWGwvSnc0MUpBSXBHQTRoSEE0cEdBb2hIQW90RkNGNWZ5Y09RaWtZRGlFY0Rpa1lDaUVjQ2lrWUJpRWNCaTBVSVhsL0p3NHYvVll2c2dld29Bd0FBb1FRUVFRQXp4WWxGL1BZRjBCNUJBQUZXZEFocUN1aWFqZi8vV2VpbzRmLy9oY0IwQ0dvVzZLcmgvLzlaOWdYUUhrRUFBZytFeWdBQUFJbUY0UDMvLzRtTjNQMy8vNG1WMlAzLy80bWQxUDMvLzRtMTBQMy8vNG05elAzLy8yYU1sZmo5Ly85bWpJM3MvZi8vWm95ZHlQMy8vMmFNaGNUOS8vOW1qS1hBL2YvL1pveXR2UDMvLzV5UGhmRDkvLytMZFFTTlJRU0poZlQ5Ly8vSGhURDkvLzhCQUFFQWliWG8vZi8vaTBEOGFsQ0poZVQ5Ly8rTmhkajgvLzlxQUZEb1RIdi8vNDJGMlB6Ly80UEVESW1GS1AzLy80MkZNUDMvLzJvQXg0WFkvUC8vRlFBQVFJbTE1UHovLzRtRkxQMy8vLzhWVE9CQUFJMkZLUDMvLzFEL0ZVamdRQUJxQStnb2pQLy96R29RYURqK1FBRG9sR3IvL3pQQWkxMElNLzg3M3crVndEdkhkUjNvWUY3Ly84Y0FGZ0FBQUZkWFYxZFg2T2hkLy8rRHhCU0R5UC9yVTRNOWhDdEJBQU4xT0dvRTZEcSsvLzlaaVgzOFUrakcwLy8vV1lsRjREdkhkQXVMYy95RDdnbUpkZVRyQTR0MTVNZEYvUDcvLy8vb0pRQUFBRGw5NEhVUVUxZi9OYVFvUVFEL0ZURGdRQUNMOEl2RzZGUnEvLy9ETS8rTFhRaUxkZVJxQk9nSXZmLy9XY09MLzFXTDdJUHNES0VFRUVFQU04V0pSZnhxQm8xRjlGQm9CQkFBQVA5MUNNWkYrZ0QvRlREaFFBQ0Z3SFVGZzhqLzZ3cU5SZlJRNlBFQkFBQlppMDM4TTgzbzJrNy8vOG5EaS85VmkreUQ3RFNoQkJCQkFEUEZpVVg4aTBVUWkwMFlpVVhZaTBVVVU0bEYwSXNBVm9sRjNJdEZDRmN6LzRsTnpJbDk0SWw5MUR0RkRBK0VYd0VBQUlzMTVPQkFBSTFONkZGUS85YUxIV1RnUUFDRndIUmVnMzNvQVhWWWpVWG9VUDkxRFAvV2hjQjBTNE45NkFGMVJZdDEzTWRGMUFFQUFBQ0QvdjkxRFA5MTJPZ0Jxdi8vaS9CWlJqdjNmbHVCL3ZELy8zOTNVNDFFTmdnOUFBUUFBSGN2NkJFQkFBQ0x4RHZIZERqSEFNek1BQURyTFZkWC8zWGMvM1hZYWdIL2RRai8wNHZ3Ty9kMXd6UEE2ZEVBQUFCUTZNYngvLzlaTzhkMENjY0EzZDBBQUlQQUNJbEY1T3NEaVgza09YM2tkTmlOQkRaUVYvOTE1T2daZWYvL2c4UU1WdjkxNVA5MTNQOTEyR29CLzNVSS85T0Z3SFIvaTEzTU85OTBIVmRYLzNVY1UxYi9kZVJYLzNVTS94Vnc0RUFBaGNCMFlJbGQ0T3RiaXgxdzRFQUFPWDNVZFJSWFYxZFhWdjkxNUZmL2RRei8wNHZ3Ty9kMFBGWnFBZWhycVAvL1dWbUpSZUE3eDNRclYxZFdVRmIvZGVSWC8zVU0vOU03eDNVTy8zWGc2SWlFLy85WmlYM2c2d3VEZmR6L2RBV0xUZENKQWY5MTVPZ1Q1UC8vV1l0RjRJMWx3RjllVzR0Ti9EUE42Q1pOLy8vSnc4ek16TXhSalV3a0NDdklnK0VQQThFYnlRdkJXZW5Lei8vL1VZMU1KQWdyeUlQaEJ3UEJHOGtMd1ZucHRNLy8vNHYvVll2c2FncHFBUDkxQ09nMEFnQUFnOFFNWGNPTC8xV0w3SVBzRkZaWC8zVUlqVTNzNk5KZC8vK0xSUkNMZFF3ei96dkhkQUtKTUR2M2RTem9iMXYvLzFkWFYxZFh4d0FXQUFBQTZQZGEvLytEeEJTQWZmZ0FkQWVMUmZTRFlIRDlNOERwMkFFQUFEbDlGSFFNZzMwVUFuekpnMzBVSkgvRGkwM3NVNG9laVgzOGpYNEJnN21zQUFBQUFYNFhqVVhzVUErMncyb0lVT2dwQWdBQWkwM3NnOFFNNnhDTGtjZ0FBQUFQdHNNUHR3UkNnK0FJaGNCMEJZb2ZSK3ZIZ1BzdGRRYURUUmdDNndXQSt5dDFBNG9mUjR0RkZJWEFENHhMQVFBQWcvZ0JENFJDQVFBQWcvZ2tENDg1QVFBQWhjQjFLb0Q3TUhRSngwVVVDZ0FBQU9zMGlnYzhlSFFOUEZoMENjZEZGQWdBQUFEckljZEZGQkFBQUFEckNvUDRFSFVUZ1Bzd2RRNktCeng0ZEFROFdIVUVSNG9mUjR1eHlBQUFBTGovLy8vL005TDNkUlFQdHNzUHR3eE85c0VFZEFnUHZzdUQ2VERyRy9mQkF3RUFBSFF4aXN1QTZXR0ErUmtQdnN0M0E0UHBJSVBCeVR0TkZITVpnMDBZQ0RsRi9ISW5kUVE3eW5ZaGcwMFlCSU45RUFCMUk0dEZHRStvQ0hVZ2czMFFBSFFEaTMwTWcyWDhBT3RiaTEzOEQ2OWRGQVBaaVYzOGloOUg2NHUrLy8vL2Y2Z0VkUnVvQVhVOWcrQUNkQW1CZmZ3QUFBQ0Fkd21Gd0hVck9YWDhkaWJvemxuLy8vWkZHQUhIQUNJQUFBQjBCb05OL1AvckQvWkZHQUpxQUZnUGxjQUR4b2xGL0l0RkVJWEFkQUtKT1BaRkdBSjBBL2RkL0lCOStBQjBCNHRGOUlOZ2NQMkxSZnpyR0l0RkVJWEFkQUtKTUlCOStBQjBCNHRGOUlOZ2NQMHp3RnRmWHNuRGkvOVZpK3d6d0ZEL2RSRC9kUXovZFFnNUJjUW9RUUIxQjJnd0hFRUE2d0ZRNkt2OS8vK0R4QlJkdzR2L1ZZdnNnK3dRLzNVSWpVM3c2SHBiLy8rTFJSaUZ3SDRZaTAwVWk5Qktab001QUhRSlFVR0Ywblh6ZzhyL0s4SkkvM1VnLzNVY1VQOTFGUDkxRVA5MURQOFZKT0ZBQUlCOS9BQjBCNHROK0lOaGNQM0p3NHYvVll2c2crd1lVLzkxRUkxTjZPZ2lXLy8vaTEwSWpVTUJQUUFCQUFCM0Q0dEY2SXVBeUFBQUFBKzNCRmpyZFlsZENNRjlDQWlOUmVoUWkwVUlKZjhBQUFCUTZGQ24vLzlaV1lYQWRCS0tSUWhxQW9oRitJaGQrY1pGK2dCWjZ3b3p5WWhkK01aRitRQkJpMFhvYWdIL2NCVC9jQVNOUmZ4UVVZMUYrRkNOUmVocUFWRG9RZWIvLzRQRUlJWEFkUkE0UmZSMEI0dEY4SU5nY1AwendPc1VEN2RGL0NORkRJQjk5QUIwQjR0TjhJTmhjUDFieWNQTXpNek16RldMN0ZkV1U0dE5FQXZKZEUyTGRRaUxmUXkzUWJOYXRpQ05TUUNLSmdya2lnZDBKd3JBZENPRHhnR0R4d0U2NTNJR091TjNBZ0xtT3NkeUJqckRkd0lDeGpyZ2RRdUQ2UUYxMFRQSk91QjBDYm4vLy8vL2NnTDMyWXZCVzE1ZnljUE16TXpNek16TXpNek16TXpNek15TlF2OWJ3NDJrSkFBQUFBQ05aQ1FBTThDS1JDUUlVNHZZd2VBSWkxUWtDUGZDQXdBQUFIUVZpZ3FEd2dFNnkzVFBoTWwwVWZmQ0F3QUFBSFhyQzloWGk4UEI0eEJXQzlpTENyLy8vdjUraThHTDl6UExBL0FEK1lQeC80UHcvelBQTThhRHdnU0I0UUFCQVlGMUhDVUFBUUdCZE5NbEFBRUJBWFVJZ2VZQUFBQ0FkY1JlWDFzendNT0xRdnc2dzNRMmhNQjA3enJqZENlRTVIVG53ZWdRT3NOMEZZVEFkTnc2NDNRR2hPUjAxT3VXWGwrTlF2OWJ3NDFDL2w1Zlc4T05RdjFlWDF2RGpVTDhYbDlidy84bFhPQknQUFRQklBQUVBWEFBQkFHd0FBUUIrQUFFQWpnQUJBS1FBQVFDNkFBRUF5QUFCQU5BQUFRRDZCUUVBN0FVQkFFUUJBUUJTQVFFQVpBRUJBSGdCQVFDTUFRRUFxQUVCQU1ZQkFRRGFBUUVBOGdFQkFBb0NBUUFXQWdFQUtBSUJBRDRDQVFCS0FnRUFWZ0lCQUd3Q0FRQjhBZ0VBamdJQkFKb0NBUUN1QWdFQXdBSUJBTTRDQVFEZUFnRUE5QUlCQUFvREFRQWtBd0VBUGdNQkFGQURBUUJlQXdFQWNBTUJBSWdEQVFDV0F3RUFvZ01CQUxBREFRQzZBd0VBMGdNQkFPZ0RBUUFBQkFFQURnUUJBQndFQVFBMkJBRUFSZ1FCQUZ3RUFRQjJCQUVBZ2dRQkFJd0VBUUNZQkFFQXFnUUJBTGdFQVFEZ0JBRUE4QVFCQUFRRkFRQVVCUUVBS2dVQkFEb0ZBUUJHQlFFQVZnVUJBR1FGQVFCMEJRRUFoQVVCQUpRRkFRQ21CUUVBdUFVQkFNb0ZBUURhQlFFQUFBQUFBQVFCQVFBQUFBQUFKZ0VCQUFBQUFBRHFBQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUDR0UUFDRmJrQUFuNXBBQU9Db1FBQmZVa0FBQUFBQUFBQUFBQUJGeEVBQXJ5NUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCelJaVEFBQUFBQUlBQUFCWEFBQUFFUGtBQUJEZkFBQVFJRUVBYUNCQkFHTUFZd0J6QUFBQVZRQlVBRVlBTFFBNEFBQUFWUUJVQUVZQUxRQXhBRFlBVEFCRkFBQUFBQUJWQUU0QVNRQkRBRThBUkFCRkFBQUFRMjl5UlhocGRGQnliMk5sYzNNQUFHMEFjd0JqQUc4QWNnQmxBR1VBTGdCa0FHd0FiQUFBQUhKMWJuUnBiV1VnWlhKeWIzSWdBQUFOQ2dBQVZFeFBVMU1nWlhKeWIzSU5DZ0FBQUZOSlRrY2daWEp5YjNJTkNnQUFBQUJFVDAxQlNVNGdaWEp5YjNJTkNnQUFVall3TXpRTkNrRnVJR0Z3Y0d4cFkyRjBhVzl1SUdoaGN5QnRZV1JsSUdGdUlHRjBkR1Z0Y0hRZ2RHOGdiRzloWkNCMGFHVWdReUJ5ZFc1MGFXMWxJR3hwWW5KaGNua2dhVzVqYjNKeVpXTjBiSGt1Q2xCc1pXRnpaU0JqYjI1MFlXTjBJSFJvWlNCaGNIQnNhV05oZEdsdmJpZHpJSE4xY0hCdmNuUWdkR1ZoYlNCbWIzSWdiVzl5WlNCcGJtWnZjbTFoZEdsdmJpNE5DZ0FBQUFBQUFGSTJNRE16RFFvdElFRjBkR1Z0Y0hRZ2RHOGdkWE5sSUUxVFNVd2dZMjlrWlNCbWNtOXRJSFJvYVhNZ1lYTnpaVzFpYkhrZ1pIVnlhVzVuSUc1aGRHbDJaU0JqYjJSbElHbHVhWFJwWVd4cGVtRjBhVzl1Q2xSb2FYTWdhVzVrYVdOaGRHVnpJR0VnWW5WbklHbHVJSGx2ZFhJZ1lYQndiR2xqWVhScGIyNHVJRWwwSUdseklHMXZjM1FnYkdsclpXeDVJSFJvWlNCeVpYTjFiSFFnYjJZZ1kyRnNiR2x1WnlCaGJpQk5VMGxNTFdOdmJYQnBiR1ZrSUNndlkyeHlLU0JtZFc1amRHbHZiaUJtY205dElHRWdibUYwYVhabElHTnZibk4wY25WamRHOXlJRzl5SUdaeWIyMGdSR3hzVFdGcGJpNE5DZ0FBVWpZd016SU5DaTBnYm05MElHVnViM1ZuYUNCemNHRmpaU0JtYjNJZ2JHOWpZV3hsSUdsdVptOXliV0YwYVc5dURRb0FBQUFBQUFCU05qQXpNUTBLTFNCQmRIUmxiWEIwSUhSdklHbHVhWFJwWVd4cGVtVWdkR2hsSUVOU1ZDQnRiM0psSUhSb1lXNGdiMjVqWlM0S1ZHaHBjeUJwYm1ScFkyRjBaWE1nWVNCaWRXY2dhVzRnZVc5MWNpQmhjSEJzYVdOaGRHbHZiaTROQ2dBQVVqWXdNekFOQ2kwZ1ExSlVJRzV2ZENCcGJtbDBhV0ZzYVhwbFpBMEtBQUJTTmpBeU9BMEtMU0IxYm1GaWJHVWdkRzhnYVc1cGRHbGhiR2w2WlNCb1pXRndEUW9BQUFBQVVqWXdNamNOQ2kwZ2JtOTBJR1Z1YjNWbmFDQnpjR0ZqWlNCbWIzSWdiRzkzYVc4Z2FXNXBkR2xoYkdsNllYUnBiMjROQ2dBQUFBQlNOakF5TmcwS0xTQnViM1FnWlc1dmRXZG9JSE53WVdObElHWnZjaUJ6ZEdScGJ5QnBibWwwYVdGc2FYcGhkR2x2YmcwS0FBQUFBRkkyTURJMURRb3RJSEIxY21VZ2RtbHlkSFZoYkNCbWRXNWpkR2x2YmlCallXeHNEUW9BQUFCU05qQXlOQTBLTFNCdWIzUWdaVzV2ZFdkb0lITndZV05sSUdadmNpQmZiMjVsZUdsMEwyRjBaWGhwZENCMFlXSnNaUTBLQUFBQUFGSTJNREU1RFFvdElIVnVZV0pzWlNCMGJ5QnZjR1Z1SUdOdmJuTnZiR1VnWkdWMmFXTmxEUW9BQUFBQVVqWXdNVGdOQ2kwZ2RXNWxlSEJsWTNSbFpDQm9aV0Z3SUdWeWNtOXlEUW9BQUFBQVVqWXdNVGNOQ2kwZ2RXNWxlSEJsWTNSbFpDQnRkV3gwYVhSb2NtVmhaQ0JzYjJOcklHVnljbTl5RFFvQUFBQUFVall3TVRZTkNpMGdibTkwSUdWdWIzVm5hQ0J6Y0dGalpTQm1iM0lnZEdoeVpXRmtJR1JoZEdFTkNnQU5DbFJvYVhNZ1lYQndiR2xqWVhScGIyNGdhR0Z6SUhKbGNYVmxjM1JsWkNCMGFHVWdVblZ1ZEdsdFpTQjBieUIwWlhKdGFXNWhkR1VnYVhRZ2FXNGdZVzRnZFc1MWMzVmhiQ0IzWVhrdUNsQnNaV0Z6WlNCamIyNTBZV04wSUhSb1pTQmhjSEJzYVdOaGRHbHZiaWR6SUhOMWNIQnZjblFnZEdWaGJTQm1iM0lnYlc5eVpTQnBibVp2Y20xaGRHbHZiaTROQ2dBQUFGSTJNREE1RFFvdElHNXZkQ0JsYm05MVoyZ2djM0JoWTJVZ1ptOXlJR1Z1ZG1seWIyNXRaVzUwRFFvQVVqWXdNRGdOQ2kwZ2JtOTBJR1Z1YjNWbmFDQnpjR0ZqWlNCbWIzSWdZWEpuZFcxbGJuUnpEUW9BQUFCU05qQXdNZzBLTFNCbWJHOWhkR2x1WnlCd2IybHVkQ0J6ZFhCd2IzSjBJRzV2ZENCc2IyRmtaV1FOQ2dBQUFBQk5hV055YjNOdlpuUWdWbWx6ZFdGc0lFTXJLeUJTZFc1MGFXMWxJRXhwWW5KaGNua0FBQUFBQ2dvQUFDNHVMZ0E4Y0hKdlozSmhiU0J1WVcxbElIVnVhMjV2ZDI0K0FBQlNkVzUwYVcxbElFVnljbTl5SVFvS1VISnZaM0poYlRvZ0FBQUFBQUFBQUFVQUFNQUxBQUFBQUFBQUFCMEFBTUFFQUFBQUFBQUFBSllBQU1BRUFBQUFBQUFBQUkwQUFNQUlBQUFBQUFBQUFJNEFBTUFJQUFBQUFBQUFBSThBQU1BSUFBQUFBQUFBQUpBQUFNQUlBQUFBQUFBQUFKRUFBTUFJQUFBQUFBQUFBSklBQU1BSUFBQUFBQUFBQUpNQUFNQUlBQUFBQUFBQUFFVnVZMjlrWlZCdmFXNTBaWElBQUFCTEFFVUFVZ0JPQUVVQVRBQXpBRElBTGdCRUFFd0FUQUFBQUFBQVJHVmpiMlJsVUc5cGJuUmxjZ0FBQUVac2MwWnlaV1VBUm14elUyVjBWbUZzZFdVQVJteHpSMlYwVm1Gc2RXVUFSbXh6UVd4c2IyTUFBQUFBQVFJREJBVUdCd2dKQ2dzTURRNFBFQkVTRXhRVkZoY1lHUm9iSEIwZUh5QWhJaU1rSlNZbktDa3FLeXd0TGk4d01USXpORFUyTnpnNU9qczhQVDQvUUVGQ1EwUkZSa2RJU1VwTFRFMU9UMUJSVWxOVVZWWlhXRmxhVzF4ZFhsOWdZV0pqWkdWbVoyaHBhbXRzYlc1dmNIRnljM1IxZG5kNGVYcDdmSDErZndBb0FHNEFkUUJzQUd3QUtRQUFBQUFBS0c1MWJHd3BBQUFHQUFBR0FBRUFBQkFBQXdZQUJnSVFCRVZGUlFVRkJRVUZOVEFBVUFBQUFBQW9JRGhRV0FjSUFEY3dNRmRRQndBQUlDQUlBQUFBQUFoZ2FHQmdZR0FBQUhod2VIaDRlQWdIQ0FBQUJ3QUlDQWdBQUFnQUNBQUhDQUFBQUVkbGRGQnliMk5sYzNOWGFXNWtiM2RUZEdGMGFXOXVBRWRsZEZWelpYSlBZbXBsWTNSSmJtWnZjbTFoZEdsdmJrRUFBQUJIWlhSTVlYTjBRV04wYVhabFVHOXdkWEFBQUVkbGRFRmpkR2wyWlZkcGJtUnZkd0JOWlhOellXZGxRbTk0UVFCVlUwVlNNekl1UkV4TUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDZ0FLQUFvQUNnQUtBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQklBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUlRQWhBQ0VBSVFBaEFDRUFJUUFoQUNFQUlRQUVBQVFBQkFBRUFBUUFCQUFFQUNCQUlFQWdRQ0JBSUVBZ1FBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFFQUFRQUJBQUVBQVFBQkFBZ2dDQ0FJSUFnZ0NDQUlJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQkFBRUFBUUFCQUFJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQm9BQ2dBS0FBb0FDZ0FJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFTQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFDRUFJUUFoQUNFQUlRQWhBQ0VBSVFBaEFDRUFCQUFFQUFRQUJBQUVBQVFBQkFBZ1FHQkFZRUJnUUdCQVlFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUkFBRUFBUUFCQUFFQUFRQUlJQmdnR0NBWUlCZ2dHQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VRQUJBQUVBQVFBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUVnQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJRQUZBQVFBQkFBRUFBUUFCQUFGQUFRQUJBQUVBQVFBQkFBRUFBQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkVBQUJBUUVCQVFFQkFRRUJBUUVCQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FSQUFBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRRUJBQUFBQUlDQmdvT0VoWWFIaUltS2k0eU5qbytRa1pLVGxKV1dsNWlabXB1Y25aNmZvS0dpbzZTbHBxZW9xYXFycksydXI3Q3hzck8wdGJhM3VMbTZ1N3k5dnIvQXdjTER4TVhHeDhqSnlzdk16YzdQME5IUzA5VFYxdGZZMmRyYjNOM2UzK0RoNHVQazVlYm42T25xNit6dDd1L3c4Zkx6OVBYMjkvajUrdnY4L2Y3L0FBRUNBd1FGQmdjSUNRb0xEQTBPRHhBUkVoTVVGUllYR0JrYUd4d2RIaDhnSVNJakpDVW1KeWdwS2lzc0xTNHZNREV5TXpRMU5qYzRPVG83UEQwK1AwQmhZbU5rWldabmFHbHFhMnh0Ym05d2NYSnpkSFYyZDNoNWVsdGNYVjVmWUdGaVkyUmxabWRvYVdwcmJHMXViM0J4Y25OMGRYWjNlSGw2ZTN4OWZuK0FnWUtEaElXR2g0aUppb3VNalk2UGtKR1NrNVNWbHBlWW1acWJuSjJlbjZDaG9xT2twYWFucUttcXE2eXRycSt3c2JLenRMVzJ0N2k1dXJ1OHZiNi93TUhDdzhURnhzZkl5Y3JMek0zT3o5RFIwdFBVMWRiWDJObmEyOXpkM3QvZzRlTGo1T1htNStqcDZ1dnM3ZTd2OFBIeTgvVDE5dmY0K2ZyNy9QMysvNENCZ29PRWhZYUhpSW1LaTR5TmpvK1FrWktUbEpXV2w1aVptcHVjblo2Zm9LR2lvNlNscHFlb3FhcXJySzJ1cjdDeHNyTzB0YmEzdUxtNnU3eTl2ci9Bd2NMRHhNWEd4OGpKeXN2TXpjN1AwTkhTMDlUVjF0ZlkyZHJiM04zZTMrRGg0dVBrNWVibjZPbnE2K3p0N3UvdzhmTHo5UFgyOS9qNSt2djgvZjcvQUFFQ0F3UUZCZ2NJQ1FvTERBME9EeEFSRWhNVUZSWVhHQmthR3h3ZEhoOGdJU0lqSkNVbUp5Z3BLaXNzTFM0dk1ERXlNelExTmpjNE9UbzdQRDArUDBCQlFrTkVSVVpIU0VsS1MweE5UazlRVVZKVFZGVldWMWhaV2x0Y1hWNWZZRUZDUTBSRlJrZElTVXBMVEUxT1QxQlJVbE5VVlZaWFdGbGFlM3g5Zm4rQWdZS0RoSVdHaDRpSmlvdU1qWTZQa0pHU2s1U1ZscGVZbVpxYm5KMmVuNkNob3FPa3BhYW5xS21xcTZ5dHJxK3dzYkt6dExXMnQ3aTV1cnU4dmI2L3dNSEN3OFRGeHNmSXljckx6TTNPejlEUjB0UFUxZGJYMk5uYTI5emQzdC9nNGVMajVPWG01K2pwNnV2czdlN3Y4UEh5OC9UMTl2ZjQrZnI3L1AzKy8waElPbTF0T25OekFBQUFBR1JrWkdRc0lFMU5UVTBnWkdRc0lIbDVlWGtBVFUwdlpHUXZlWGtBQUFBQVVFMEFBRUZOQUFCRVpXTmxiV0psY2dBQUFBQk9iM1psYldKbGNnQUFBQUJQWTNSdlltVnlBRk5sY0hSbGJXSmxjZ0FBQUVGMVozVnpkQUFBU25Wc2VRQUFBQUJLZFc1bEFBQUFBRUZ3Y21sc0FBQUFUV0Z5WTJnQUFBQkdaV0p5ZFdGeWVRQUFBQUJLWVc1MVlYSjVBRVJsWXdCT2IzWUFUMk4wQUZObGNBQkJkV2NBU25Wc0FFcDFiZ0JOWVhrQVFYQnlBRTFoY2dCR1pXSUFTbUZ1QUZOaGRIVnlaR0Y1QUFBQUFFWnlhV1JoZVFBQVZHaDFjbk5rWVhrQUFBQUFWMlZrYm1WelpHRjVBQUFBVkhWbGMyUmhlUUJOYjI1a1lYa0FBRk4xYm1SaGVRQUFVMkYwQUVaeWFRQlVhSFVBVjJWa0FGUjFaUUJOYjI0QVUzVnVBQUFBQUFBR2dJQ0dnSUdBQUFBUUE0YUFob0tBRkFVRlJVVkZoWVdGQlFBQU1EQ0FVSUNJQUFnQUtDYzRVRmVBQUFjQU56QXdVRkNJQUFBQUlDaUFpSUNBQUFBQVlHaGdhR2hvQ0FnSGVIQndkM0J3Q0FnQUFBZ0FDQUFIQ0FBQUFFTlBUazlWVkNRQVUzVnVUVzl1VkhWbFYyVmtWR2gxUm5KcFUyRjBBQUFBU21GdVJtVmlUV0Z5UVhCeVRXRjVTblZ1U25Wc1FYVm5VMlZ3VDJOMFRtOTJSR1ZqQUFBQUFFMEFVd0JKQUNBQVVBQnlBRzhBZUFCNUFDQUFSUUJ5QUhJQWJ3QnlBQUFBTEFBQUFGVUFiZ0JoQUdJQWJBQmxBQ0FBZEFCdkFDQUFjQUJoQUhJQWN3QmxBQ0FBWXdCdkFHMEFiUUJoQUc0QVpBQWdBR3dBYVFCdUFHVUFBQUFBQUVrQWJnQjJBR0VBYkFCcEFHUUFJQUJ3QUdFQWNnQmhBRzBBWlFCMEFHVUFjZ0FnQUdNQWJ3QjFBRzRBZEFBZ0FGc0FKUUJrQUYwQUxnQUFBRThBY2dCcEFHY0FhUUJ1QUdFQWJBQWdBR01BYndCdEFHMEFZUUJ1QUdRQUlBQnNBR2tBYmdCbEFEMEFKUUJ6QUFBQUFBQk5BR1VBUFFBbEFITUFBQUJKQUc0QWRnQmhBR3dBYVFCa0FDQUFjQUJoQUhJQVlRQnRBR1VBZEFCbEFISUFJQUJ2QUdZQVpnQnpBR1VBZEFBZ0FGc0FKUUJrQUYwQUxnQUFBQUFBVndCdkFISUFhd0JwQUc0QVp3QWdBRVFBYVFCeUFEMEFKUUJ6QUFBQUFBQlRBSFVBWXdCakFHVUFjd0J6QUNBQVF3QnZBR1FBWlFCekFEMEFKUUJ6QUFBQUFBQUFBQUFBVFFCaEFISUFhd0JsQUhJQUlBQnVBRzhBZEFBZ0FHWUFid0IxQUc0QVpBQWdBR2tBYmdBZ0FHTUFid0J0QUcwQVlRQnVBR1FBSUFCc0FHa0FiZ0JsQUM0QUFBQkZBRzBBWWdCbEFHUUFaQUJsQUdRQUlBQmpBRzhBYlFCdEFHRUFiZ0JrQUNBQWJBQnBBRzRBWlFBOUFGc0FKUUJ6QUYwQUFBQUFBRlVBYmdCaEFHSUFiQUJsQUNBQWRBQnZBQ0FBWndCbEFIUUFJQUIwQUdVQWJRQndBQ0FBWkFCcEFISUFMZ0FBQUUwQVV3QkpBQUFBVlFCdUFHRUFZZ0JzQUdVQUlBQjBBRzhBSUFCbkFHVUFkQUFnQUhRQVpRQnRBSEFBSUFCbUFHa0FiQUJsQUNBQWJnQmhBRzBBWlFBdUFBQUFjZ0JpQUFBQUFBQkZBSElBY2dCdkFISUFJQUJ2QUhBQVpRQnVBR2tBYmdCbkFDQUFhUUJ1QUhBQWRRQjBBQ0FBWmdCcEFHd0FaUUF1QUNBQVJRQnlBSElBYndCeUFDQUFiZ0IxQUcwQVlnQmxBSElBSUFBbEFHUUFMZ0FBQUFBQWR3QXJBR0lBQUFCRkFISUFjZ0J2QUhJQUlBQnZBSEFBWlFCdUFHa0FiZ0JuQUNBQWJ3QjFBSFFBY0FCMUFIUUFJQUJtQUdrQWJBQmxBQzRBSUFCRkFISUFjZ0J2QUhJQUlBQnVBSFVBYlFCaUFHVUFjZ0FnQUNVQVpBQXVBQUFBUlFCeUFISUFid0J5QUNBQWJRQnZBSFlBYVFCdUFHY0FJQUJtQUdrQWJBQmxBQ0FBY0FCdkFHa0FiZ0IwQUdVQWNnQWdBSFFBYndBZ0FHOEFaZ0JtQUhNQVpRQjBBQzRBQUFBQUFFVUFjZ0J5QUc4QWNnQWdBSElBWlFCaEFHUUFhUUJ1QUdjQUlBQnBBRzRBY0FCMUFIUUFJQUJtQUdrQWJBQmxBQzRBQUFCRkFISUFjZ0J2QUhJQUlBQjNBSElBYVFCMEFHa0FiZ0JuQUNBQWJ3QjFBSFFBY0FCMUFIUUFJQUJtQUdrQWJBQmxBQzRBQUFBQUFBQUFBQUFpQUFBQUlnQWdBQUFBQUFCU0FIVUFiZ0FnQUNjQUpRQnpBQ2NBTGdBQUFBQUFBQUJGQUhJQWNnQnZBSElBSUFCeUFIVUFiZ0J1QUdrQWJnQm5BQ0FBSndBbEFITUFKd0F1QUNBQVJRQnlBSElBYndCeUFDQUFKUUJzQUdRQUlBQW9BREFBZUFBbEFHd0FlQUFwQUM0QUFBQUFBRVVBY2dCeUFHOEFjZ0FnQUdjQVpRQjBBSFFBYVFCdUFHY0FJQUJsQUhnQWFRQjBBQ0FBWXdCdkFHUUFaUUF1QUFBQUFBQUFBQUFBUlFCeUFISUFid0J5QUNBQWNnQmxBRzBBYndCMkFHa0FiZ0JuQUNBQWRBQmxBRzBBY0FBZ0FHVUFlQUJsQUdNQWRRQjBBR0VBWWdCc0FHVUFMZ0FBQUVnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVFRUVFCdytVQUFBd0FBQUZKVFJGTUQzbC9xbE1qUlNJc1hZdFp0dnR4cEFRQUFBRU02WEhOek1seFFjbTlxWldOMGMxeE5jMmxYY21Gd2NHVnlYRTF6YVZkcGJsQnliM2g1WEZKbGJHVmhjMlZjVFhOcFYybHVVSEp2ZUhrdWNHUmlBQUFBQUFBQUFBQUFBQUEwQUFBY05nQUFNSk1BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQS92Ly8vd0FBQUFEVS8vLy9BQUFBQVA3Ly8vOEFBQUFBa0J0QUFBQUFBQUQrLy8vL0FBQUFBTlQvLy84QUFBQUEvdi8vL3dBQUFBRHlIRUFBQUFBQUFQNy8vLzhBQUFBQTFQLy8vd0FBQUFEKy8vLy9BQUFBQVBvZlFBQUFBQUFBL3YvLy93QUFBQURVLy8vL0FBQUFBUDcvLy84QUFBQUEreUZBQUFBQUFBRCsvLy8vQUFBQUFOVC8vLzhBQUFBQS92Ly8vd0FBQUFEdElrQUFBQUFBQVA3Ly8vOEFBQUFBaVAvLy93QUFBQUQrLy8vL3RTUkFBTGtrUUFEKy8vLy9leVJBQUk4a1FBRCsvLy8vQUFBQUFORC8vLzhBQUFBQS92Ly8vd0FBQUFDTk0wQUFBQUFBQVA3Ly8vOEFBQUFBMFAvLy93QUFBQUQrLy8vL0FBQUFBQ1k0UUFBQUFBQUEvdi8vL3dBQUFBRE0vLy8vQUFBQUFQNy8vLzhBQUFBQTR6bEFBQUFBQUFBQUFBQUFyemxBQVA3Ly8vOEFBQUFBMFAvLy93QUFBQUQrLy8vL0FBQUFBSEpEUUFBQUFBQUEvdi8vL3dBQUFBRFEvLy8vQUFBQUFQNy8vLzhBQUFBQWYweEFBQUFBQUFEKy8vLy9BQUFBQU5ULy8vOEFBQUFBL3YvLy93QUFBQUJMVUVBQUFBQUFBUDcvLy84QUFBQUEwUC8vL3dBQUFBRCsvLy8vQUFBQUFPSlJRQUFBQUFBQS92Ly8vd0FBQUFESS8vLy9BQUFBQVA3Ly8vOEFBQUFBOVZSQUFBQUFBQUQrLy8vL0FBQUFBSXovLy84QUFBQUEvdi8vLzZkZVFBQ3JYa0FBQUFBQUFQNy8vLzhBQUFBQTFQLy8vd0FBQUFEKy8vLy9BQUFBQUVCaFFBRCsvLy8vQUFBQUFFOWhRQUQrLy8vL0FBQUFBTmovLy84QUFBQUEvdi8vL3dBQUFBQUNZMEFBL3YvLy93QUFBQUFPWTBBQS92Ly8vd0FBQUFETS8vLy9BQUFBQVA3Ly8vOEFBQUFBQ1dkQUFBQUFBQUQrLy8vL0FBQUFBTlQvLy84QUFBQUEvdi8vL3dBQUFBQitha0FBQUFBQUFQNy8vLzhBQUFBQXpQLy8vd0FBQUFEKy8vLy9BQUFBQUV4dVFBQUFBQUFBL3YvLy93QUFBQURVLy8vL0FBQUFBUDcvLy84QUFBQUF2SEZBQUFBQUFBRCsvLy8vQUFBQUFORC8vLzhBQUFBQS92Ly8vd0FBQUFENmhVQUFBQUFBQVA3Ly8vOEFBQUFBMVAvLy93QUFBQUQrLy8vL0FBQUFBSGFIUUFBQUFBQUEvdi8vL3dBQUFBRE0vLy8vQUFBQUFQNy8vLzhBQUFBQWE0OUFBQUFBQUFEKy8vLy9BQUFBQU5ELy8vOEFBQUFBL3YvLy8zNlJRQUNWa1VBQUFBQUFBUDcvLy84QUFBQUEyUC8vL3dBQUFBRCsvLy8vMjVKQUFPK1NRQUFBQUFBQS92Ly8vd0FBQUFEVS8vLy9BQUFBQVA3Ly8vOEFBQUFBVjVaQUFBQUFBQUQrLy8vL0FBQUFBTWovLy84QUFBQUEvdi8vL3dBQUFBQWRtRUFBQUFBQUFBQUFBQUJabDBBQS92Ly8vd0FBQUFEUS8vLy9BQUFBQVA3Ly8vOEFBQUFBL1poQUFBQUFBQUQrLy8vL0FBQUFBTlQvLy84QUFBQUEvdi8vL3dxYVFBQW1ta0FBQUFBQUFQNy8vLzhBQUFBQTJQLy8vd0FBQUFEKy8vLy8vS2RBQUFDb1FBQUFBQUFBL3YvLy93QUFBQURVLy8vL0FBQUFBUDcvLy84QUFBQUFSNmxBQUFBQUFBRCsvLy8vQUFBQUFNRC8vLzhBQUFBQS92Ly8vd0FBQUFBMHEwQUFBQUFBQVA3Ly8vOEFBQUFBMVAvLy93QUFBQUQrLy8vL0FBQUFBSHk4UUFBQUFBQUEvdi8vL3dBQUFBRFUvLy8vQUFBQUFQNy8vLzhBQUFBQVJyNUFBQUFBQUFEKy8vLy9BQUFBQU5ELy8vOEFBQUFBL3YvLy93QUFBQUNydjBBQUFBQUFBUDcvLy84QUFBQUEwUC8vL3dBQUFBRCsvLy8vQUFBQUFJN0pRQUM0L2dBQUFBQUFBQUFBQUFEY0FBRUFBT0FBQUFnQUFRQUFBQUFBQUFBQUFQZ0FBUUJRNFFBQStQOEFBQUFBQUFBQUFBQUFHZ0VCQUVEaEFBQUFBQUVBQUFBQUFBQUFBQUE0QVFFQVNPRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQkFDWUFBUUE0QUFFQVNBQUJBRndBQVFCc0FBRUFmZ0FCQUk0QUFRQ2tBQUVBdWdBQkFNZ0FBUURRQUFFQStnVUJBT3dGQVFCRUFRRUFVZ0VCQUdRQkFRQjRBUUVBakFFQkFLZ0JBUURHQVFFQTJnRUJBUElCQVFBS0FnRUFGZ0lCQUNnQ0FRQStBZ0VBU2dJQkFGWUNBUUJzQWdFQWZBSUJBSTRDQVFDYUFnRUFyZ0lCQU1BQ0FRRE9BZ0VBM2dJQkFQUUNBUUFLQXdFQUpBTUJBRDREQVFCUUF3RUFYZ01CQUhBREFRQ0lBd0VBbGdNQkFLSURBUUN3QXdFQXVnTUJBTklEQVFEb0F3RUFBQVFCQUE0RUFRQWNCQUVBTmdRQkFFWUVBUUJjQkFFQWRnUUJBSUlFQVFDTUJBRUFtQVFCQUtvRUFRQzRCQUVBNEFRQkFQQUVBUUFFQlFFQUZBVUJBQ29GQVFBNkJRRUFSZ1VCQUZZRkFRQmtCUUVBZEFVQkFJUUZBUUNVQlFFQXBnVUJBTGdGQVFES0JRRUEyZ1VCQUFBQUFBQUVBUUVBQUFBQUFDWUJBUUFBQUFBQTZnQUJBQUFBQUFEcUFVZGxkRVpwYkdWQmRIUnlhV0oxZEdWelZ3QUFod0ZIWlhSRGIyMXRZVzVrVEdsdVpWY0FoUUpIWlhSVVpXMXdVR0YwYUZjQUFJTUNSMlYwVkdWdGNFWnBiR1ZPWVcxbFZ3QUFjd1JUWlhSTVlYTjBSWEp5YjNJQUFLZ0FRM0psWVhSbFVISnZZMlZ6YzFjQUFBSUNSMlYwVEdGemRFVnljbTl5QUFENUJGZGhhWFJHYjNKVGFXNW5iR1ZQWW1wbFkzUUEzd0ZIWlhSRmVHbDBRMjlrWlZCeWIyTmxjM01BQUZJQVEyeHZjMlZJWVc1a2JHVUFzZ1JUYkdWbGNBQklBMHh2WTJGc1JuSmxaUUJMUlZKT1JVd3pNaTVrYkd3QUFCVUNUV1Z6YzJGblpVSnZlRmNBVlZORlVqTXlMbVJzYkFBQUJnQkRiMjF0WVc1a1RHbHVaVlJ2UVhKbmRsY0FBRk5JUlV4TU16SXVaR3hzQUVVQVVHRjBhRVpwYkdWRmVHbHpkSE5YQUZOSVRGZEJVRWt1Wkd4c0FOWUFSR1ZzWlhSbFJtbHNaVmNBWXdKSFpYUlRkR0Z5ZEhWd1NXNW1iMWNBd0FSVVpYSnRhVzVoZEdWUWNtOWpaWE56QUFEQUFVZGxkRU4xY25KbGJuUlFjbTlqWlhOekFOTUVWVzVvWVc1a2JHVmtSWGhqWlhCMGFXOXVSbWxzZEdWeUFBQ2xCRk5sZEZWdWFHRnVaR3hsWkVWNFkyVndkR2x2YmtacGJIUmxjZ0FBQTBselJHVmlkV2RuWlhKUWNtVnpaVzUwQU80QVJXNTBaWEpEY21sMGFXTmhiRk5sWTNScGIyNEFBRGtEVEdWaGRtVkRjbWwwYVdOaGJGTmxZM1JwYjI0QUFCZ0VVblJzVlc1M2FXNWtBR1lFVTJWMFJtbHNaVkJ2YVc1MFpYSUFBR2NEVFhWc2RHbENlWFJsVkc5WGFXUmxRMmhoY2dEQUExSmxZV1JHYVd4bEFBQWxCVmR5YVhSbFJtbHNaUUFSQlZkcFpHVkRhR0Z5Vkc5TmRXeDBhVUo1ZEdVQW1nRkhaWFJEYjI1emIyeGxRMUFBQUt3QlIyVjBRMjl1YzI5c1pVMXZaR1VBQU04Q1NHVmhjRVp5WldVQUFCZ0NSMlYwVFc5a2RXeGxTR0Z1Wkd4bFZ3QUFSUUpIWlhSUWNtOWpRV1JrY21WemN3QUFHUUZGZUdsMFVISnZZMlZ6Y3dCa0FrZGxkRk4wWkVoaGJtUnNaUUFBRXdKSFpYUk5iMlIxYkdWR2FXeGxUbUZ0WlVFQUFCUUNSMlYwVFc5a2RXeGxSbWxzWlU1aGJXVlhBQUJoQVVaeVpXVkZiblpwY205dWJXVnVkRk4wY21sdVozTlhBTm9CUjJWMFJXNTJhWEp2Ym0xbGJuUlRkSEpwYm1kelZ3QUFid1JUWlhSSVlXNWtiR1ZEYjNWdWRBQUE4d0ZIWlhSR2FXeGxWSGx3WlFCaUFrZGxkRk4wWVhKMGRYQkpibVp2UVFEUkFFUmxiR1YwWlVOeWFYUnBZMkZzVTJWamRHbHZiZ0RIQkZSc2MwZGxkRlpoYkhWbEFNVUVWR3h6UVd4c2IyTUFBTWdFVkd4elUyVjBWbUZzZFdVQXhnUlViSE5HY21WbEFPOENTVzUwWlhKc2IyTnJaV1JKYm1OeVpXMWxiblFBQU1VQlIyVjBRM1Z5Y21WdWRGUm9jbVZoWkVsa0FBRHJBa2x1ZEdWeWJHOWphMlZrUkdWamNtVnRaVzUwQUFETkFraGxZWEJEY21WaGRHVUFBT3dFVm1seWRIVmhiRVp5WldVQXB3TlJkV1Z5ZVZCbGNtWnZjbTFoYm1ObFEyOTFiblJsY2dDVEFrZGxkRlJwWTJ0RGIzVnVkQUFBd1FGSFpYUkRkWEp5Wlc1MFVISnZZMlZ6YzBsa0FIa0NSMlYwVTNsemRHVnRWR2x0WlVGelJtbHNaVlJwYldVQWNnRkhaWFJEVUVsdVptOEFhQUZIWlhSQlExQUFBRGNDUjJWMFQwVk5RMUFBQUFvRFNYTldZV3hwWkVOdlpHVlFZV2RsQUk4QVEzSmxZWFJsUm1sc1pWY0E0d0pKYm1sMGFXRnNhWHBsUTNKcGRHbGpZV3hUWldOMGFXOXVRVzVrVTNCcGJrTnZkVzUwQUljRVUyVjBVM1JrU0dGdVpHeGxBQUJYQVVac2RYTm9SbWxzWlVKMVptWmxjbk1BQUJvRlYzSnBkR1ZEYjI1emIyeGxRUUN3QVVkbGRFTnZibk52YkdWUGRYUndkWFJEVUFBQUpBVlhjbWwwWlVOdmJuTnZiR1ZYQU1zQ1NHVmhjRUZzYkc5akFPa0VWbWx5ZEhWaGJFRnNiRzlqQUFEU0FraGxZWEJTWlVGc2JHOWpBRHdEVEc5aFpFeHBZbkpoY25sQkFBQXJBMHhEVFdGd1UzUnlhVzVuUVFBQUxRTk1RMDFoY0ZOMGNtbHVaMWNBQUdZQ1IyVjBVM1J5YVc1blZIbHdaVUVBQUdrQ1IyVjBVM1J5YVc1blZIbHdaVmNBQUFRQ1IyVjBURzlqWVd4bFNXNW1iMEVBQUZNRVUyVjBSVzVrVDJaR2FXeGxBQUJLQWtkbGRGQnliMk5sYzNOSVpXRndBQUNJQUVOeVpXRjBaVVpwYkdWQkFOUUNTR1ZoY0ZOcGVtdBQUFFN21RTHV4R2I5RUFBQUFBQUVBQUFBV0FBQUFBZ0FBQUFJQUFBQURBQUFBQWdBQUFBUUFBQUFZQUFBQUJRQUFBQTBBQUFBR0FBQUFDUUFBQUFjQUFBQU1BQUFBQ0FBQUFBd0FBQUFKQUFBQURBQUFBQW9BQUFBSEFBQUFDd0FBQUFnQUFBQU1BQUFBRmdBQUFBMEFBQUFXQUFBQUR3QUFBQUlBQUFBUUFBQUFEUUFBQUJFQUFBQVNBQUFBRWdBQUFBSUFBQUFoQUFBQURRQUFBRFVBQUFBQ0FBQUFRUUFBQUEwQUFBQkRBQUFBQWdBQUFGQUFBQUFSQUFBQVVnQUFBQTBBQUFCVEFBQUFEUUFBQUZjQUFBQVdBQUFBV1FBQUFBc0FBQUJzQUFBQURRQUFBRzBBQUFBZ0FBQUFjQUFBQUJ3QUFBQnlBQUFBQ1FBQUFBWUFBQUFXQUFBQWdBQUFBQW9BQUFDQkFBQUFDZ0FBQUlJQUFBQUpBQUFBZ3dBQUFCWUFBQUNFQUFBQURRQUFBSkVBQUFBcEFBQUFuZ0FBQUEwQUFBQ2hBQUFBQWdBQUFLUUFBQUFMQUFBQXB3QUFBQTBBQUFDM0FBQUFFUUFBQU00QUFBQUNBQUFBMXdBQUFBc0FBQUFZQndBQURBQUFBQXdBQUFBSUFBQUF3Q3hCQUFBQUFBREFMRUVBQVFFQUFBQUFBQUFBQUFBQUFCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFJQUFBQUNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQURZMlAvL2kwME1VZWhUOXYvL2c4UUVqWlhRMlAvL1VybmNHd0VRNkY4VEFBQ0puY0RZLy8rSm5jVFkvLzh6d01aRi9BS0QvaUIxQjdnQUFnQUE2d3FEL2tCMUJiZ0FBUUFBaTQyODJQLy9pNVhNMlAvL0RSa0FBZ0NMOEkyRjFOai8vMUJXYWdCUlVzZUYxTmovL3dBQUFBRC9GUVFBQVJDRndBK0Zzd0FBQUl1ZDFOai8vNEhtQUFNQUFJMkZ3TmovLzRtMXhOai8vMUNOdmN6WS8vK050ZHpZLy8rSm5jRFkvLy9IaGN6WS8vK0lFd0FBNkNiMS8vK0Z3SFZralkzVTJQLy9VWXZPNkxRU0FBQ0xWUXhTdWV3aEFSREdSZndENkhMMi8vK0xoZFRZLy8rRHhBU0R3UERva1IwQUFJdTF5TmovLzRQQUVJa0d4a1g4QW91RjFOai8vNFBBOEkxSURJUEsvL0FQd1JGS2hkSi9QNHNJaXhGUWkwSUUvOURyTTR0TkRGRy9HQ0lCRU9ndzlmLy9nOFFFaTFVTVVyOXdJZ0VRNkIvMS8vK0x0Y2pZLy8rRHhBUld1ZHdiQVJEb0t4SUFBSVhiZEFkVC94VUlBQUVReGtYOEFJdUYwTmovLzRQQThJUEsvNDFJRFBBUHdSRktoZEovQ29zSWl4RlFpMElFLzlESFJmei8vLy8vaTRYWTJQLy9nOER3ZzhyL2pVZ004QS9CRVVxRjBuOEtpd2lMRVZDTFFnVC8wSXZHaTAzMFpJa05BQUFBQUZsZlhsdUxUZXd6emVpTEh3QUFpK1Zkdzh6TXpGV0w3R3IvYUZqekFCQmtvUUFBQUFCUWcrd1FWbGVoSEZBQkVEUEZVSTFGOUdTakFBQUFBRFBBaVVYa2lVWG9pMDBNTS8rSlJmeUQrU0IxQjc4QUFnQUE2d3FEK1VCMUJiOEFBUUFBaTNVSWpVM3dVWUhQQmdBQ0FGZFFWbEtKUmZEL0ZRUUFBUkNGd0ErRmxBQUFBSXQxOEdvRWpVWHNVR29FYWdCb3dDY0JFSUhuQUFNQUFGYUpkZVNKZmVqSFJld0JBQUFBL3hVUUFBRVFoY0IwU0ZPL3NDSUJFT2ptOC8vL2kzVUlVN2tRSXdFUTZNajAvLzlUdnNBbkFSQzVSQ01CRU9pNDlQLy9nOFFNZzMwTVFGTy9mQ01CRUhRRnY3Z2pBUkRvci9QLy80dDE4SVBFQklYMmRFcFcveFVJQUFFUWkwMzBaSWtOQUFBQUFGbGZYb3ZsWGNOVHYvZ2pBUkRvZ3ZQLy8xTzVFQ01CRU9objlQLy9nOFFJZzMwTVFGTy9mQ01CRUhRRnY3Z2pBUkRvWHZQLy80UEVCSXROOUdTSkRRQUFBQUJaWDE2TDVWM0R6TXpNek16TXpNek16TXpNek16TXpNek16TXpNek16TXpNeFZpK3hxLzJnbzh3QVFaS0VBQUFBQVVJUHNERlpYb1J4UUFSQXp4VkNOUmZSa293QUFBQUNMOFRQSmlVM29pVTNzaTFVTU04Q0pUZnlEK2lCMUI3Z0FBZ0FBNndxRCtrQjFCYmdBQVFBQURRWUFBZ0NMK0kxRjhGQlhVWWxOOEl0TkNGWlIveFVFQUFFUWhjQVBoWUFBQUFDTFJmQm93Q2NCRUlIbkFBTUFBRkNKUmVpSmZlei9GUXdBQVJDRndIUkNVNzlRSkFFUTZKVHkvLzlUdWJna0FSRG9lZlAvLzFPK3dDY0JFTG5zSkFFUTZHbnovLytEeEF5RGZReEFVNzhrSlFFUWRBVy9ZQ1VCRU9oZzh2Ly9nOFFFaTBYd2hjQjBTbEQvRlFnQUFSQ0xUZlJraVEwQUFBQUFXVjllaStWZHcxTy9vQ1VCRU9nejh2Ly9VN200SkFFUTZCanovLytEeEFpRGZReEFVNzhrSlFFUWRBVy9ZQ1VCRU9nUDh2Ly9nOFFFaTAzMFpJa05BQUFBQUZsZlhvdmxYY1BNek16TXpNek16TXpNekZXTDdJUGsrSVBzRkZPTFhRaFdWMU8vL0NVQkVPalc4Zi8valVRa0hJUEVCRkM1TENZQkVPaDA4Ly8vaTB3a0hJUEVCSU41OUFCMUoxTy9VQ1lCRU9pczhmLy9pMFFrSElQQThJUEVCSTFRRElQSi8vQVB3UXBKaGNucFpBSUFBSTFNSkJCUnVhZ21BUkRvb1E0QUFJdEVKQmhRaTBEMGpWUWtGRkxvL3hZQUFJdEVKQkMvQVFBQUFEbDQvTDRnQUFBQWZoS0xRUFJRalV3a0ZGSG9MaGdBQUl0RUpCQlFqVlFrR0ZOU2k5YTVBZ0FBZ09pbitmLy9pMFFrSUlQRURJTjQ5QUIxWDR0RUpCQTVlUHkrUUFBQUFINFNpMGowVVkxVUpCUlM2TzRYQUFDTFJDUVFVSTFFSkNCVFVJdld1UUlBQUlEb1ovbi8vNFBFREkxOEpCVG9DeFlBQUl0RUpCeUR3UENOU0F5RHl2L3dEOEVSU29YU2Z3cUxDSXNSVUl0Q0JQL1FpMHdrRklONTlBQjFYWXRFSkJBejlvTjQvQUYrRW90UTlGS05SQ1FVVU9pSEZ3QUFpMFFrRUZDTlRDUWdVMUV6MHJrQkFBQ0E2QUQ1Ly8rRHhBeU5mQ1FVNktRVkFBQ0xSQ1FjZzhEd2pWQU1nOG4vOEEvQkNrbUZ5WDhLaXdpTEVWQ0xRZ1QvMEl0TUpCU0RlZlFBZFh4VHZ6Z25BUkRvVC9ELy80dEVKQmlEd1BDRHhBU05VQXlEeWYvd0Q4RUtTWVhKZndxTENJc1JVSXRDQlAvUWkwUWtFSVBBOEkxSURJUEsvL0FQd1JGS2hkSi9Db3NJaXhGUWkwSUUvOUNMUkNRWWc4RHdqVWdNZzhyLzhBL0JFVXFGMG44S2l3aUxFVkNMUWdULzBMaGJCZ0FBWDE1YmkrVmR3Z1FBaTBRa0VJWDJkU0dEZVB3QmZoS0xTUFJSalZRa0ZGTG9vaFlBQUl0RUpCQnFBTG9CQUFDQTZ4NkRlUHdCZmhLTFFQUlFqVXdrRkZIb2dSWUFBSXRFSkJCV3VnSUFBSUJRNkFINy8vK0R4QWhUditBbkFSRG9nKy8vLzR0RUpCaUR3UENEeEFTTlVBeUR5Zi93RDhFS1NZWEpmd3FMQ0lzUlVJdENCUC9RaTBRa0VJUEE4STFJRElQSy8vQVB3UkZLaGRKL0Nvc0lpeEZRaTBJRS85Q0xSQ1FZZzhEd2pVZ01nOHIvOEEvQkVVcUYwbjhLaXdpTEVWQ0xRZ1QvMEY5ZU04QmJpK1Zkd2dRQXpNek16TXhWaSt5QjdCZ0JBQUNoSEZBQkVEUEZpVVg4YUJRQkFBQ05oZWorLy85cUFGRG8yaUlBQUlQRURJMk42UDcvLzFISGhlaisvLzhVQVFBQS94VThBQUVRZzczNC92Ly9BblVaZzczcy92Ly9CbklRc0FHTFRmd3p6ZWltR1FBQWkrVmR3NHROL0RQTk1zRG9saGtBQUl2bFhjUE16TXpNek16TXpNek16TXpNekZXTDdJUGsrSVBzYkZOV2kzVUlWMWEvRENnQkVNZEVKRGdBQUFBQTZHN3UvLytOUkNRMGc4UUVVTGxBS0FFUWk5N29DdkQvLzR0RUpEU0R4QVNEZVBRQUQ0ODlDd0FBalV3a0xGRzViQ2dCRU9qcTcvLy9pMFFrTUlQRUJJTjQ5QUIxRllQQThJMVFESVBKLy9BUHdRcEpoY25wL0FvQUFJMU1KQ2hSdWVRZEFSRG91ZS8vLzQxVUpDaUR4QVJTdVpBb0FSRG9wKy8vLzRQRUJJMUVKQkJRdWFnbUFSRG9CUXNBQUl0RUpDeFFpMEQwalV3a0ZGSG9ZeE1BQUl0RUpCQzdBUUFBQURsWS9INFNpMUQwVW8xRUpCUlE2SmNVQUFDTFJDUVFWb3Z3dWRBb0FSRG9sdTcvLzR0RUpCU0R4QVE1V1B4K0VvdEk5RkdOVkNRVVV1aHNGQUFBaTBRa0VJdDFDRkNOUkNRUVZsQzZJQUFBQUxrQ0FBQ0E2Ti8xLy8rTFRDUVlnOFFNZzNuMEFBK0Z6UUFBQUl0RUpCQTVXUHgrRW90UTlGS05SQ1FVVU9nbkZBQUFpMFFrRUZDTlRDUThWbEc2UUFBQUFMa0NBQUNBNkozMS8vK0R4QXlOZkNRTTZFRVNBQUNMUkNRNGc4RHdqVkFNZzhuLzhBL0JDa21GeVg4S2l3aUxFVkNMUWdULzBJdE1KQXlEZWZRQWRWeUxSQ1FRT1ZqOGZoS0xVUFJTalVRa0ZGRG93Qk1BQUl0RUpCQlFqVXdrUEZaUk05SzVBUUFBZ09nNTlmLy9nOFFNalh3a0RPamRFUUFBaTBRa09JUEE4STFRRElQSi8vQVB3UXBKaGNsL0hvc0lpeEZRaTBJRS85RHJFc2RFSkRSQUFBQUE2d2pIUkNRMElBQUFBRmEvSUNrQkVPaCs3UC8vaTB3a0ZJUEVCSU44SkRRQWRTQTVXZngrRW90SjlGR05WQ1FVVXVnOUV3QUFpMHdrRUdvQWFBRUFBSURySVRsWi9INFNpMEgwVUkxTUpCUlI2QjBUQUFDTFRDUVFpMVFrTkZKb0FnQUFnSXZlNlBqNC8vK0R4QWlOWENRTTZCd1FBQUNMMk9pVkVBQUFqWHdrRE9nc0VRQUFpMFFrRElONDlBQjFFMWEva0NrQkVPajM2Ly8vZzhRRTZUOElBQUNEZVB3QmZoS0xTUFJSalZRa0VGTG91eElBQUl0RUpBeFdpL0M1OUNrQkVPaTY3UC8vaTB3a0VJUEVCSU41OUFCOEhHZzBLZ0VRVWVobEdBQUFpMHdrRklQRUNJWEFkQVlyd2RINGRFcFIveFZjQVFFUWhjQjBQNDFFSkRSUWpVd2tFT2hZRGdBQWc4UUVVSTFNSkR4UnV6UXFBUkRvWlEwQUFJUEVDSTE4SkF6b2lSQUFBSTFFSkRqb0lBa0FBSTFFSkRUb0Z3a0FBSTFVSkJoU3Vkd2JBUkRvYUFnQUFJMUVKQlJRdWR3YkFSRG9XUWdBQUl0TUpBeURlZlFBRDR6cEFBQUFhRFFxQVJCUjZOTVhBQUNMVENRVWc4UUloY0IwUEN2QjBmaDFOb041OUFFUGpoUUJBQUM1QVFBQUFMbzBLZ0VRalhRa0RPZ3lDd0FBaS9DRjlnK005d0FBQUkxTUpBeFJqVWIvdVFFQUFBRHJUSU41OUFBUGpJMEFBQUJvUUI4QkVGSG9keGNBQUl0TUpCU0R4QWlGd0hSM0s4SFIrSVhBZm0rNUFRQUFBTHBBSHdFUWpYUWtET2plQ2dBQWkvQ0Y5ZytNb3dBQUFJMVVKQXhTTThtTlZDUTg2QlFMQUFDTmZDUVk2SnNQQUFDTlJDUTQ2RElJQUFDTlRnR05kQ1E0alZRa0RPalNDZ0FBaTlqb1d3NEFBSXZZNk5RT0FBQ05mQ1FVNkdzUEFBQ0x4dWdFQ0FBQTYxR0xkQ1FZalVId2c4YndPOFowUTROK0RBQ05mZ3g4TElzUU94WjFKdWhBRWdBQWk5aUR5UC93RDhFSFNJWEFmd3FMRG9zUmkwSUVWdi9RZzhNUWlWd2tHT3NPaTFuMFVZMVVKQnhTNkdFUkFBQ0xSQ1FZdndFQUFBQTVlUHgrRG90QTlGQ05UQ1FjVWVpMUVBQUFpMTBJaTNRa0dGTzVPQ29CRU9pejZ2Ly9pM1FrR0lQRUJEbCsvSDRTaTFiMFVvMUVKQmhRNklrUUFBQ0xkQ1FVVTdsb0tnRVE2SXJxLy8rRHhBU05UQ1FjVWJuY0d3RVE2S2dHQUFDTlZDUWdVcm5VSFFFUTZDbnIvLytEeEFTTlJDUWdVTGxFSGdFUTZFY0hBQUNGd0hWQmpVd2tPRkc1b0NvQkVPZ0U2Ly8vZzhRRWpYd2tIT2hvRGdBQWkwUWtPSVBBOEkxUURJUEovL0FQd1FwSmhja1BqNEVBQUFDTENJc1JVSXRDQlAvUTYzV05UQ1FnVWJtQUhnRVE2UE1HQUFDRndIVU1qVlFrT0ZLNTNDb0JFT3M4alVRa0lGQzV3QjRCRU9qVUJnQUFoY0IxREkxTUpEaFJ1U0FyQVJEckhZMVVKQ0JTdVFRZkFSRG90UVlBQUlYQWRTU05SQ1E0VUxsa0t3RVE2SExxLy8rRHhBU05mQ1FjNk5ZTkFBQ05SQ1E0NkcwR0FBQ0xUQ1FvZzNuMEFINTlqWHdrS0l2TDZGanIvLytOVkNRVVVvdkhVSTFNSkR4UnUwQWZBUkRvY1FvQUFJMVVKRVNEeEFoU2k5am9zZ2tBQUlQRUNJMThKQlRvaGcwQUFJdEVKRGlEd1BDTlNBeUR5di93RDhFUlNvWFNmd3FMQ0lzUlVJdENCUC9RaTBRa05JUEE4STFJRElQSy8vQVB3UkZLaGRKL0Nvc0lpeEZRaTBJRS85Q0xUQ1FrZzNuMEFINStpMDBJalh3a0pPalE2di8valZRa0ZGS0x4MUNOVENROFVidEFId0VRNk9rSkFBQ05WQ1JFZzhRSVVvdlk2Q29KQUFDRHhBaU5mQ1FVNlA0TUFBQ0xSQ1E0ZzhEd2pVZ01nOHIvOEEvQkVVcUYwbjhLaXdpTEVWQ0xRZ1QvMEl0RUpEU0R3UENOU0F5RHl2L3dEOEVSU29YU2Z3cUxDSXNSVUl0Q0JQL1FpMHdrSElONTlBQitmb3ROQ0kxOEpCem9TT3IvLzQxVUpCUlNpOGRRalV3a1BGRzdRQjhCRU9oaENRQUFqVlFrUklQRUNGS0wyT2lpQ0FBQWc4UUlqWHdrRk9oMkRBQUFpMFFrT0lQQThJMUlESVBLLy9BUHdSRktoZEovQ29zSWl4RlFpMElFLzlDTFJDUTBnOER3alVnTWc4ci84QS9CRVVxRjBuOEtpd2lMRVZDTFFnVC8wSXROQ0ZHL29Dc0JFT2dJNS8vL2kzUWtITDhCQUFBQWc4UUVPWDc4ZmhLTFZ2UlNqVVFrSEZEb3lRMEFBSXQwSkJpTFhRaFR1ZlFyQVJEb3grZi8vNHQwSkJpRHhBUTVmdngrRW90TzlGR05WQ1FZVXVpZERRQUFpM1FrRkZPNUpDd0JFT2llNS8vL2c4UUVhand6OW8xRUpFQldVT2lNR2dBQWc4UU14MFFrUER3QUFBREhSQ1JBUUFBQUFJbDBKRVRvY1BmLy80VEFkQWpIUkNSSVhDd0JFSXRFSkJnNWVQeCtFb3RJOUZHTlZDUWNVdWc5VFZxUUFBTUFBQUFFQUFBQS8vOEFBTGdBQUFBQUFBQUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUErQUFBQUE0ZnVnNEF0QW5OSWJnQlRNMGhWR2hwY3lCd2NtOW5jbUZ0SUdOaGJtNXZkQ0JpWlNCeWRXNGdhVzRnUkU5VElHMXZaR1V1RFEwS0pBQUFBQUFBQUFDVkE2S2IwV0xNeU5GaXpNalJZc3pJenpCSXlOTml6TWpZR2tqSS9HTE15TmdhV2NqQVlzekkyQnBQeUxaaXpNallHbC9JM0dMTXlORml6Y2k2WXN6STJCcEd5Tkppek1qWUdsN0kwR0xNeU5nYVhjalFZc3pJVW1samFORml6TWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQlFSUUFBVEFFRkFBTE5GbE1BQUFBQUFBQUFBT0FBQWlFTEFRa0FBT1lBQUFCdUFBQUFBQUFBbDBRQUFBQVFBQUFBQUFFQUFBQUFFQUFRQUFBQUFnQUFCUUFBQUFBQUFBQUZBQUFBQUFBQUFBQ3dBUUFBQkFBQW44SUJBQUlBUUFFQUFCQUFBQkFBQUFBQUVBQUFFQUFBQUFBQUFCQUFBQUJ3UHdFQW1nQUFBT3cyQVFDTUFBQUFBSUFCQUxRQkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFKQUJBS3dNQUFEUUFRRUFIQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUEFzQVFCQUFBQUFBQUFBQUFBQUFBQUFBQUVBaUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUM1MFpYaDBBQUFBOHVRQUFBQVFBQUFBNWdBQUFBUUFBQUFBQUFBQUFBQUFBQUFBQUNBQUFHQXVjbVJoZEdFQUFBcEFBQUFBQUFFQUFFSUFBQURxQUFBQUFBQUFBQUFBQUFBQUFBQkFBQUJBTG1SaGRHRUFBQUE4TEFBQUFGQUJBQUFRQUFBQUxBRUFBQUFBQUFBQUFBQUFBQUFBUUFBQXdDNXljM0pqQUFBQXRBRUFBQUNBQVFBQUFnQUFBRHdCQUFBQUFBQUFBQUFBQUFBQUFFQUFBRUF1Y21Wc2IyTUFBRklZQUFBQWtBRUFBQm9BQUFBK0FRQUFBQUFBQUFBQUFBQUFBQUJBQUFCQ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBTGdCQUFBQXdnd0F6TXpNek16TXpNeUxBSVhBZEFaUTZCUXRBQUREek16TVZZdnNpMFVJYUpBekFSQ05UUWhSaVVVSTZPYVFBQURNek16TXpNek16TXhWaSt5TFJRaUQrRkIzSWcrMmlJd1FBQkQvSkkxOEVBQVFhQTRBQjREb3ZmLy8vMmhYQUFlQTZMUC8vLzlvQlVBQWdPaXAvLy8vWGNPTlNRQjNFQUFRV1JBQUVHTVFBQkJ0RUFBUUFBTURBd01EQXdNREF3TURBUU1EQXdNREF3TURBd0lEQXdNREF3TURBd01EQXdJREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNQXpNek1WWXZzVjR2NGkwVUlVMUQvRlNBQUFSQ0Z3SFVEWDEzRFZsRC9GU1FBQVJDTDhJWDJkQ2FMVFFoVFVmOFZLQUFCRUFQR2crY1BkaEE3OEhNUWcrOEJEN2NXalhSV0FuWHdPL0J5Qmw0endGOWR3dyszQnZmWUc4QWp4bDVmWGNQTVZZdnNVVk5XTTl0VHVYUnFBUkRvYTh3QUFJdnd4MFg4QVFBQUFJWDJkRWFGMjNWQ2k4ZkI2QVJBVXcrM3lGRnFCbGIvRlVnQUFSQ0wySVhiZEJGV2k4Zm9Xdi8vLzR2WWc4UUVoZHQxSDR0Vi9GSzVkR29CRU9naHpBQUEvMFg4aS9DRjluVzZYalBBVzR2bFhjT0x4bDViaStWZHc4ek16TXpNek16TXpNeUxCb1hBZEExUS94VUlBQUVReHdZQUFBQUF4MFlFQUFBQUFNUE16TXpNekZXTDdGR0xCNDFOL0ZGV0E4Q05WUWhTaVVYOGkwVUlhZ0RIQndBQUFBQ0xDR2dVSndFUVVmOFZBQUFCRUlYQWRUNkxSUWlEK0FGMEJZUDRBblViaTBYOGhmWjBKSVhBZEJ1b0FYVU1pOURSNm1hRGZGYitBSFFRdUEwQUFBQ0w1VjNDQkFBenlXYUpEdEhvaVFjendJdmxYY0lFQU16TXpNek16TXpNek16TVZZdnNhdjlvMFBJQUVHU2hBQUFBQUZDRDdBaFdvUnhRQVJBenhWQ05SZlJrb3dBQUFBQnFBdWlwS2dBQWkvQ0pkZXlOUmZCUXVlQWJBUkRIUmZ3QUFBQUE2TmtjQUFER1Jmd0JoZjkxQkRQQTZ4eUx4NDFRQXVzR2pac0FBQUFBWm9zSWc4QUNab1hKZGZVcnd0SDRWNDFOOEZIb0Z5VUFBSXRGOElONC9BRitFSXRROUZLTlJmQlE2RkVtQUFDTFJmQlFhZ0JXNkVFcUFBQ0xUUWhXYUFBQUFBUlI2RGdxQUFER1Jmd0FpMFh3ZzhEd2pWQU1nOG4vOEEvQkNrbUZ5WDhLaXdpTEVWQ0xRZ1QvMElYMmRBWlc2UGtwQUFDTFRmUmtpUTBBQUFBQVdWNkw1VjNEek16TXpNek16TXpNVll2c2F2OW8rUElBRUdTaEFBQUFBRkJSVjZFY1VBRVFNOFZRalVYMFpLTUFBQUFBalVYd1VPZ0RIQUFBeDBYOEFBQUFBSVgyZFFRendPc1VpOGFOVUFKbWl3aUR3QUptaGNsMTlTdkMwZmhXalUzd1VlaEdKQUFBaTMzd2czLzhBWDRRaTFmMFVvMUY4RkRvZ0NVQUFJdDk4SXROQ0ZIb2xQNy8vOGRGL1AvLy8vK0xSZkNEd1BDRHhBU05VQXlEeWYvd0Q4RUtTWVhKZndxTENJc1JVSXRDQlAvUWkwMzBaSWtOQUFBQUFGbGZpK1Zkdzh6TXpNek16TXpNek16TVZZdnNhdjlvK2ZNQUVHU2hBQUFBQUZDRDdBaFdWNkVjVUFFUU04VlFqVVgwWktNQUFBQUFpL0V6d0lsRi9JbEY3Rk81WEJ3QkVJbEY4T2dCLy8vL2c4UUVqVVh3VUdqY0d3RVFWbFBvN0NnQUFEM3FBQUFBZFRhTGZmQkhNOG1MeDdvQ0FBQUE5K0lQa01HSmZmRDMyUXZJVWVpQUtnQUFpL2lEeEFTRi8zUU9qVVh3VUZkV1UraXhLQUFBNnhscUF1aGlLZ0FBYU53YkFSQ0wrR29CVitqa0tRQUFnOFFRaTNVSVZvdlA2TDBhQUFESFJmd0FBQUFBVjhkRjdBRUFBQURvakNnQUFJc0dnK2dRZzhRRWczZ01BWDRLaTBnRVVWYm9VU1FBQUlzMlU3bUVIQUVRNkZUKy8vK0xSUWlEeEFTTFRmUmtpUTBBQUFBQVdWOWVpK1Zkdzh6TXpNek16TXpNek16TXpNeFZpK3hxLzJndzlBQVFaS0VBQUFBQVVJUHNDRk5Xb1J4UUFSQXp4VkNOUmZSa293QUFBQUNMMllzSGcrZ1FnM2dNQVg0S2kwQUVVRmZvNGlNQUFJczNVN21zSEFFUTZPWDkvLytOVGV4UnVkd2NBUkRvbC83Ly80MVY4Rks1OEJ3QkVNZEYvQUFBQUFEb2d2Ny8vNFBFRE1aRi9BR0xSZXhRYUJRZEFSQlg2T3dhQUFDTFRmQlJhQ3dkQVJCWDZOMGFBQUNMQjRQb0VJTjREQUYrQ290UUJGSlg2SGdqQUFDTE4xTzVWQjBCRU9oNy9mLy94a1g4QUl0RjhJUEE4SVBFQkkxSURJUEsvL0FQd1JGS2hkSi9Db3NJaXhGUWkwSUUvOURIUmZ6Ly8vLy9pMFhzZzhEd2pVZ01nOHIvOEEvQkVVcUYwbjhLaXdpTEVWQ0xRZ1QvMEl0TjlHU0pEUUFBQUFCWlhsdUw1VjNEek16TXpNek16TXpNek16TXpNeFZpK3lEN0J4VFZvdDFDRmRXdjRnZEFSRG9DZnovLzQxRjZGQzV4QjBCRUl2ZTZLbjkvLytOVGV4UnVkUWRBUkRvbS8zLy80MVYrRks1NUIwQkVPaU4vZi8vaTBYb2c4UVF1UWdlQVJDTC8yYUxFR1k3RVhVZVpvWFNkQlZtaTFBQ1pqdFJBblVQZzhBRWc4RUVab1hTZGQ0endPc0ZHOENEMlArRndBK0Y2UUlBQUkxRi9GQzUzQnNCRU9pdkdBQUFqVTMwVWJrTUhnRVE2REg5Ly8rTGZleUR4QVM1UkI0QkVJdkhqV1FrQUdhTEVHWTdFWFVlWm9YU2RCVm1pMUFDWmp0UkFuVVBnOEFFZzhFRVpvWFNkZDR6d09zRkc4Q0QyUCtGd0hVSHVVZ2VBUkRyZnJtQUhnRVFpOGVOU1FCbWl4Qm1PeEYxSG1hRjBuUVZab3RRQW1ZN1VRSjFENFBBQklQQkJHYUYwblhlTThEckJSdkFnOWovaGNCMUxvMU41Rkc1aEI0QkVPaWovUC8vZzhRRWpYMzg2QWdnQUFDTFJlU0R3UENOVUF5RHlmL3dEOEVLU1lYSjZ6Nk5UZXhSdWNBZUFSRG9wUmdBQUlYQWRUcTV4QjRCRUkxVjVGTG9ZL3ovLzRQRUJJMTkvT2pJSHdBQWkwWGtnOER3alVnTWc4ci84QS9CRVVxRjBuOC9pd2lMRVZDTFFnVC8wT3N6alUzc1Via0VId0VRNkZrWUFBQ0Z3SFVoalZYa1Vya0lId0VRNkJmOC8vK0R4QVNOZmZ6b2ZCOEFBSTFGNU9nVUdBQUFpMFg4ZzNqMEFINXRhRUFmQVJDTlRmUlJ1QUVBQUFEb3lCOEFBSXRGL0ZDTFFQU05WZlJTNkxnZkFBQ0xmZlNEZi93QmZoQ0xSL1JRalUzMFVlanlJQUFBaTMzMFZyNE1IZ0VRdVF3Y0FSRG83L3IvLzR0ZENGT0w5N2swSEFFUTZOLzYvLytEeEFoWGFBd2VBUkJUNk1na0FBQ0w4NHRWK0lONjlBQitWSTE5K0l2TzZJdjgvLytMZmZpRGYvd0JmaENMUi9SUWpVMzRVZWlWSUFBQWkzMzRWcjdrSFFFUXVRd2NBUkRva3ZyLy80dGRDRk9MOTdrMEhBRVE2SUw2Ly8rRHhBaFhhT1FkQVJCVDZHc2tBQUNMODQxVjhGSzVEQjRCRUl2ZTZDSDcvLytEeEFTTmZmQ0x6dWdrL1AvL2kzM3dnMy84QVg0UWkwZjBVSTFOOEZIb0xpQUFBSXQ5OEZhK0RCNEJFTGtNSEFFUTZDdjYvLytMWFFoVGkvZTVOQndCRU9nYit2Ly9nOFFJVjJnTUhnRVFVK2dFSkFBQWkwWHdnOER3alZBTWc4bi84QS9CQ2ttRnlYOEtpd2lMRVZDTFFnVC8wSXRGOUlQQThJMUlESVBLLy9BUHdSRktoZEovQ29zSWl4RlFpMElFLzlDTFJmeUR3UENOU0F5RHl2L3dEOEVSU29YU0Q0KzVBQUFBaXdpTEVWQ0xRZ1QvMEl2ejZhc0FBQUNOWGZqb3JCd0FBSXZZNkNVZEFBQ0xDSU41OUFBUGpwQUFBQUJXdnVRZEFSQzVEQndCRU9oNStmLy9pMzBJVjc1QUh3RVF1VFFjQVJEb1p2bi8vNFBFQ0ZabzVCMEJFRmZvVHlNQUFJdEY3TGxFSGdFUVpvc1FaanNSZFI1bWhkSjBGV2FMVUFKbU8xRUNkUStEd0FTRHdRUm1oZEoxM2pQQTZ3VWJ3SVBZLzRYQWRDU0wxMUsvU0I4QkVPZ2orUC8vZzhRRWFnQm91QjhCRUdqUUh3RVFhZ0QvRldRQkFSQ0xkUWhXdnpRaEFSRG8vdmYvLzR0RitJUEE4SVBFQkkxSURJUEsvL0FQd1JGS1gxNWJoZEovQ29zSWl4RlFpMElFLzlDTFJleUR3UENOU0F5RHl2L3dEOEVSU29YU2Z3cUxDSXNSVUl0Q0JQL1FpMFhvZzhEd2pVZ01nOHIvOEEvQkVVcUYwbjhLaXdpTEVWQ0xRZ1QvMERQQWkrVmR3Z1FBek16TVZZdnNhdjlvclBNQUVHU2hBQUFBQUZDNE9DY0FBT2kxc1FBQW9SeFFBUkF6eFlsRjdGTldWMUNOUmZSa293QUFBQUNMOG90RkNJdDlFSTJWMk5qLy80bU56TmovL3pQYlVybHdJUUVRaVlYSTJQLy9pYjI4MlAvL2laM1EyUC8vNkVzVUFBQ0pYZnc3KzNVRU04RHJGSXZIalZBQ1pvc0lnOEFDWmp2TGRmVXJ3dEg0VjQyTjJOai8vMUhvanh3QUFHaVVJUUVRalpYWTJQLy9VcmdNQUFBQTZIa2NBQUM0RkNjQkVJMVFBcEJtaXdpRHdBSm1POHQxOVN2Q2FCUW5BUkNOamRqWS8vL1IrRkhvVUJ3QUFJUCtJSFVSYUxBaEFSQ05sZGpZLy85U2pVYm82eWVEL2tCMUVZMkYyTmovLzJqRUlRRVFVSTFHeU9zUmFOZ2hBUkNOamRqWS8vOVJ1QWtBQUFEb0Rod0FBSXU5Mk5qLy80Ti8vQUYrRm90WDlGS05oZGpZLy85UTZFSWRBQUNMdlEwQUFJdEVKQmlKUkNSTWkwUWtGRGw0L0g0U2kwRDBVSTFNSkJoUjZCNE5BQUNMUkNRVWpWUWtQRktKUkNSVWlYUWtXTWRFSkZ3RkFBQUFpWFFrWVA4VlZBRUJFSVhBRDRXOUFRQUFvYmhxQVJDTFVBeTV1R29CRVAvU2c4QVFpVVFrTlA4VkhBQUJFRkJvYUN3QkVJMThKRHpvS0JBQUFJdDhKRHlEeEFpRGYvd0JmaEtMUi9SUWpVd2tPRkhvclF3QUFJdDhKRFJUNk1QbC8vK05SL0NEeEFTTlVBeUR5Zi93RDhFS1NZWEpmd3FMQ0lzUlVJdENCUC9RaTBRa0lJUEE4STFJRElQSy8vQVB3UkZLaGRKL0Nvc0lpeEZRaTBJRS85Q0xSQ1FjZzhEd2pVZ01nOHIvOEEvQkVVcUYwbjhLaXdpTEVWQ0xRZ1QvMEl0RUpCU0R3UENOU0F5RHl2L3dEOEVSU29YU2Z3cUxDSXNSVUl0Q0JQL1FpMFFrR0lQQThJMUlESVBLLy9BUHdSRktoZEovQ29zSWl4RlFpMElFLzlDTFJDUU1nOER3alVnTWc4ci84QS9CRVVxRjBuOEtpd2lMRVZDTFFnVC8wSXRFSkJDRHdQQ05TQXlEeXYvd0Q4RVJTb1hTZndxTENJc1JVSXRDQlAvUWkwUWtKSVBBOEkxSURJUEsvL0FQd1JGS2hkSi9Db3NJaXhGUWkwSUUvOUNMUkNRb2c4RHdqVWdNZzhyLzhBL0JFVXFGMG44S2l3aUxFVkNMUWdULzBJdEVKQ3lEd1BDTlNBeUR5di93RDhFUlNvWFNmd3FMQ0lzUlVJdENCUC9RaTBRa01JUEE4STFJRElQSy8vQVB3UkZLaGRKL0Nvc0lpeEZRaTBJRS85QzRXd1lBQUY5ZVc0dmxYY0lFQUl0TUpIUnEvMUgvRlRnQUFSQ0xWQ1IwVXY4Vk5BQUJFRk8vb0N3QkVPZ3o1UC8vaTBRa0pJUEE4SVBFQkkxSURJUEsvL0FQd1JGS2hkSi9Db3NJaXhGUWkwSUUvOUNMUkNRY2c4RHdqVWdNZzhyLzhBL0JFVXFGMG44S2l3aUxFVkNMUWdULzBJdEVKQlNEd1BDTlNBeUR5di93RDhFUlNvWFNmd3FMQ0lzUlVJdENCUC9RaTBRa0dJUEE4STFJRElQSy8vQVB3UkZLaGRKL0Nvc0lpeEZRaTBJRS85Q0xSQ1FNZzhEd2c4ci9qVWdNOEEvQkVVcUYwbjhLaXdpTEVWQ0xRZ1QvMEl0RUpCQ0R3UENEeXYrTlNBendEOEVSU29YU2Z3cUxDSXNSVUl0Q0JQL1FpMFFrSklQQThJUEsvNDFJRFBBUHdSRktoZEovQ29zSWl4RlFpMElFLzlDTFJDUW9nOER3ZzhyL2pVZ004QS9CRVVxRjBuOEtpd2lMRVZDTFFnVC8wSXRFSkN5RHdQQ0R5ditOU0F6d0Q4RVJTb1hTZndxTENJc1JVSXRDQlAvUWkwUWtNSVBBOElQSy80MUlEUEFQd1JGS2hkSi9Db3NJaXhGUWkwSUUvOUJmWGpQQVc0dmxYY0lFQU16TXpNek1WWXZzYXY5b21QSUFFR1NoQUFBQUFGQlRWbGVoSEZBQkVEUEZVSTFGOUdTakFBQUFBSXY1aTNVSW9iaHFBUkNMVUF5NXVHb0JFUC9TZzhBUWlRYkhSZndBQUFBQWhmOTBJUGZIQUFELy8zVWNEN2YvNkdmaC8vK0x5SVhKZEN0V2k4Zm9DUXNBQU9zaE04RHJGSXZIalZBQ1pvc0lnOEFDWm9YSmRmVXJ3dEg0VjFhTDJPakdDUUFBaThhTFRmUmtpUTBBQUFBQVdWOWVXNHZsWGNJRUFJc0FnK2dRalVnTWc4ci84QS9CRVVxRjBuOEtpd2lMRVZDTFFnVC8wTVBNVll2c2hjbDFDbWdGUUFDQTZNL2YvLytMUlFpTEFHYUxFR1k3RVhVZ1pvWFNkQlZtaTFBQ1pqdFJBblVSZzhBRWc4RUVab1hTZGQ0endGM0NCQUFid0lQWS8xM0NCQURNek16TXpNek16TXhWaSt5RDdDQlRpMTBNVnpQL085OTBHNHZEalZBQ1pvc0lnOEFDWmp2UGRmVXJ3dEg0aVVYNE84ZDFDbDh6d0Z1TDVWM0NEQUNMUlJBN3gzUVhqVkFDWm9zSWc4QUNaanZQZGZVcnd0SDRpVVg4NndPSmZmeUxSUWhXaXpDTFR2U05CRTZKUmV3NzhBK0RoUUVBQUl2L1UxYm9EQTRBQUlQRUNJWEFkQmVMLzR0VitJMDBVRk5XUitqMURRQUFnOFFJaGNCMTY0WDJkQmlMeG8xUUFvdi9ab3NJZzhBQ1pvWEpkZlVyd3RINDZ3SXp3STEwUmdJN2RleHl0SWw5N0lYL0Q0NHNBUUFBaTEzOEsxMzRpMFVJRDY5ZDdJc0FpM2owQTk4NzM0bDk5SWxkNUl2TGZ3S0x6NHQxQ0xvQkFBQUFLMUQ4aTBENEs4RUwwSDBIaThib2pBb0FBSXNHalF4NGlVWG9pVVh3aVUzZ084RVBnOEFBQUFDTm13QUFBQUNMVFF5TFZmQlJVdWhXRFFBQWkvQ0R4QWlGOW5SeWkxMzhBOXZyQTQxSkFJdFYrSXZHSzBYb2pRd3owZmdyK0N2NmpRUS9VSTBVVmxKUVVlajdDd0FBVU9oSzN2Ly9pMFVRVTFCVFZ1aHNDd0FBVU9nNDN2Ly9pMDM4QS9rclRmaU5CRE1CVGZTTFRReFJNOUpRaVVYd1pva1VmdWpxREFBQWkzMzBpL0NEeERDRjluV2JpMTNraTFYd2hkSjBGb3ZDalhBQ1pvc0lnOEFDWm9YSmRmVXJ4dEg0NndJendJMUVRZ0tKUmZBN1JlQVBna24vLy8rTGRRaUYyM3dnaXdZN1dQaC9HWXQ5N0lsWTlJc1dNOEJtaVFSYVhvdkhYMXVMNVYzQ0RBQm9Wd0FIZ09pSTNmLy96TXpNek16TXpNeUYwblFkaXdZN1NQUi9GbEtOQkVoUTZGNE1BQUNEeEFpRndIUUZLd2JSK01PRHlQL0R6TXpNek16TXpNek16TXhWaSt4Uml3S0xRUFJTSzhHTDFzZEYvQUFBQUFEb0JnQUFBSXZHaStWZHcxV0w3RkZUVm92WlY0dndpL3JIUmZ3QUFBQUFoZHQ5QWpQYmhmWjlBalAydVAvLy8zOHJ3enZHZkRtTFRRaUxDWXRCOUkwVU16dlFmZ1NMOEN2ek85aCtBalAyaGR0MUpqdndkU0tOUWZEb1BBY0FBSVBBRUlrSGk4ZGZYbHVMNVYzQ0JBQm9Wd0FIZ09qQzNQLy9pMG53aGNsMEM0c1JpMElRLzlDRndIVVFpeFc0YWdFUWkwSVF1YmhxQVJELzBJdE5DSXNSalJ4YWk4am9jUUlBQUl2SFgxNWJpK1Zkd2dRQXpNek16TXpNVll2c2F2OW9hZklBRUdTaEFBQUFBRkJSVmxlaEhGQUJFRFBGVUkxRjlHU2pBQUFBQUl0MUNEUC9pWDM4aVgzd2l3T0xTUEE3ejNRTGl4R0xRaEQvMER2SGRSQ0xGYmhxQVJDTFFoQzV1R29CRVAvUU04azd4dytWd1R2UGRRcG9CVUFBZ09nWDNQLy9peENMeUl0Q0RQL1FnOEFRaVFhTFRReUpmZnlMQ1l0NTlJc1RpMEwwVjFGU1ZzZEY4QUVBQUFEb2lRUUFBSVBFRUl2R2kwMzBaSWtOQUFBQUFGbGZYb3ZsWGNQTXpNeFZpK3hxLzJncDhnQVFaS0VBQUFBQVVGRldvUnhRQVJBenhWQ05SZlJrb3dBQUFBQ0xkUWlMUlF6SFJmd0FBQUFBeDBYd0FBQUFBSXNJaTBud2hjbDBDNHNSaTBJUS85Q0Z3SFVRaXhXNGFnRVFpMElRdWJocUFSRC8wRFBKaGNBUGxjR0Z5WFVLYUFWQUFJRG9YOXYvLzRzUWk4aUxRZ3ovMElQQUVJa0d4MFg4QUFBQUFNZEY4QUVBQUFDRjIzVUVNOUxySEl2RGpWQUNqWnNBQUFBQVpvc0lnOEFDWm9YSmRmVXJ3dEg0aTlDTFRReUxDWXRCOUZKVFVWYm9yZ01BQUlQRUVJdkdpMDMwWklrTkFBQUFBRmxlaStWZHc4ek16TXpNek16TXpGV0w3R3IvYU9ueEFCQmtvUUFBQUFCUVVWTldWNkVjVUFFUU04VlFqVVgwWktNQUFBQUFpL21MZFFnejI0bGQvSWxkOElzSGkwandPOHQwQzRzUmkwSVEvOUE3dzNVUWl4VzRhZ0VRaTBJUXViaHFBUkQvMERQSk84TVBsY0U3eTNVS2FBVkFBSURvaE5yLy80c1FpOGlMUWd6LzBJUEFFSWtHaVYzOGl3K0xlZlM0TkNvQkVNZEY4QUVBQUFDTldBSm1peENEd0FKbWhkSjE5VmRSSzhOb05Db0JFTkg0VnVqakFnQUFnOFFRaThhTFRmUmtpUTBBQUFBQVdWOWVXNHZsWGNQTXpNek16TXpNek16TXpNeUZ5WFVLYUFWQUFJRG9FdHIvLzRYYmRRNkY5blFLYUZjQUI0RG9BTnIvLzRzQml4QnFBbGIvMG9YQWRRWHBQZ1FBQUlQQUVJa0hoZlo4Mnp0dytIL1dpWEQwaXcrTkJEWlFNOUpUVUdhSkZBaUxCMURvRlFjQUFJUEVFSXZIdzh4V1Y0czdEN2NITS9abWhjQjBZb3YvRDdmQVVPak5DUUFBZzhRRWhjQjBDSVgyZFFhTDkrc0NNL1lQdDBjQ2c4Y0Nab1hBZGRxRjluUTJpd09MVVBncjhOSCt1UUVBQUFBclNQd3IxZ3ZLZlFtTHpvdkQ2R1lGQUFDRjlud1hpd003Y1BoL0VJbHc5SXNETThsbWlReHdYNHZEWHNOb1Z3QUhnT2hCMmYvL3pGYUxNdyszQmxEb1dna0FBSVBFQklYQWRCUVB0MFlDZzhZQ1VPaEdDUUFBZzhRRWhjQjE3SXNETy9CMFhZdEk5Q3Z3dWdFQUFBQXJVUHlMUVBncndkSCtDOUI5QjR2RDZQUUVBQUNMQTR0STlGZUwrU3YralZRL0FsS05GSEJTalV3SkFsRlE2S0VHQUFCUTZQRFkvLytEeEJTRi8zd1hpd003ZVBoL0VJbDQ5SXNUTThCbWlRUjZYNHZEWHNOb1Z3QUhnT2lvMlAvL3pNek16TXpNek14VmkreFJpd2hXaXplTlFmQ0Q3aEE3eG5SSmczNE1BRk9OWGd4OE5Jc1FPeFoxTHVqWUFnQUFpVVg4ZzhqLzhBL0JBMGlGd0g4S2l3NkxFWXRDQkZiLzBJdE4vSVBCRUZ1SkQ0dkhYb3ZsWGNPTFdmUlJWK2oxQVFBQVc0dkhYb3ZsWGNQTXpNek16TXpNek16TXpNek1WWXZzZyt3SVU0dllpMFVJaXdpTFJReFdpM0gwVjR2NEsvblIvNGwxK0lYYmZRcG9Wd0FIZ09nRDJQLy9oY0IwRm8xUUFvbFYvR2FMRUlQQUFtYUYwblgxSzBYODBmZzcySDRDaTlpNC8vLy9meXZETzhaOUNtaFhBQWVBNk03WC8vK0xRZmdEODdvQkFBQUFLMUg4SzhZTDBIMEtpMFVJaTg3b3NRTUFBSXROQ0l0VitJc0pPL3FOUEhsMkE0dDlESTBFRzFCWFVJMFVVVkxvM2dRQUFJUEVFSVgyRDR4NC8vLy9pMDBJaXdFN2NQZ1BqMnIvLy8rSmNQU0xBVFBKWDJhSkRIQmVXNHZsWGNJSUFNek16RldMN0ZPTFhRaFdpL0NMUlJSWGpUd0dpd09MVVBpRDZCQzVBUUFBQUN0SURDdlhDOHA5Q1l2UGk4UG9NQU1BQUl0RkRJc2JBL1pXVUZaVDZHNEVBQUNMUlJTTFRSQUR3RkJSVUFQelZ1aGJCQUFBZzhRZ2hmOThHb3ROQ0lzQk8zajRmeENKZVBTTEVUUEFab2tFZWw5ZVcxM0RhRmNBQjREbzR0Yi8vOHpNVll2c2kwVUlVMWFMTUl0TzhJc1JpMElRaTE3MGcrNFFWLy9RaTAwTWl4Q0xFbW9DVVl2SS85S0wrSVgvZFFYby9BQUFBSXRGRER2WWZRS0x3NDFFQUFKUWpWWVFVbzFQRUZCUmlVME02TnNEQUFDRHhCQ0pYd1NOUmd5RHlmL3dEOEVJU1lYSmZ3cUxEb3NSaTBJRVZ2L1FpMDBNaTFVSVgxNkpDbHRkd2dnQXpNek16TXpNek16TXpNek16TXpNVll2c1VWYUYyM1VQaTNVSTZOOEJBQUJlaStWZHdnZ0FWNHQ5RElYL2RRcG9Wd0FIZ09nbTF2Ly9pM1VJaXdhTFNQUXIrTG9CQUFBQUsxRDhpMEQ0SzhQUi93dlFpVTM4ZlFtTHk0dkc2UDBCQUFDTEJvdFErSTAwR3dQU1ZqdDkvSGNOalF4NFVWSlE2SzBEQUFEckM0dE5ERkZTVU9nakF3QUFnOFFRWDRYYmZKMkxUUWlMQVR0WStIK1RpVmowaXdFenlXYUpEQVplaStWZHdnZ0F6R2dPQUFlQTZLYlYvLy9Nek16TXpNeFdpL0NMRG9zQmkxQVFWLy9TZzM0TUFJMU9ESHdVT3daMUVJdit1QUVBQUFEd0Q4RUJpOGRmWHNPTFRnU0xFSXNTYWdKUmk4ai8wb3Y0aGY5MUJlaXQvLy8vaTBZRWlVY0VpMFlFalVRQUFsQ0R4aEJXVUkxUEVGSG9qd0lBQUlQRUVJdkhYMTdEek16TXpNek16TXpNVll2c1UxYUw4RmZCNkFTTCtVQVB0OGhxQmxGWC94VXNBQUVRaTlpRjIzUVJWNHZHNk1mVi8vK0w4SVBFQklYMmRRbGZYalBBVzEzQ0JBQ0xmUWlMQncrM0hvUG9FTG9CQUFBQUsxQU1pMEFJSzhNTDBIMEppOHVMeCtqUUFBQUFEN2NHalZZQ2cvai9kUldMd28xd0FtYUxDSVBBQW1hRnlYWDFLOGJSK0VDTkRBQ0xCMUZTalRRYlZsRG83UUVBQUZEb3VkVC8vNFBFRklYYmZCNkxCenRZK0g4WGlWajBpeGN6d0Y5bWlRUVdYcmdCQUFBQVcxM0NCQUJvVndBSGdPaHExUC8vek16TXpNek16TXpNeklzT2czbjBBSTFCOEZlTE9IUk5nM2dNQUkxUURIMGdnM240QUgwS2FGY0FCNERvT2RULy84ZEI5QUFBQUFDTEJqUEpab2tJWDhPRHlmL3dEOEVLU1lYSmZ3cUxDSXNSVUl0Q0JQL1FpeGVMUWd5THovL1FnOEFRaVFaZnc4ek16RmFMOElzR2kxRDBnK2dRTzlGK0FvdktnM2dNQVg0SlVWYm9BdjMvLzE3RGkwQUlPOEY5SDR2UWdmb0FCQUFBZmdpQndnQUVBQURyQWdQU085RjlBb3ZSNkFvQUFBQmV3OHpNek16TXpNek1pd2FMU1BDRDZCQTVVQWg5RllYU2ZoRlhpemxxQWxKUWkwY0kvOUJmaGNCMUJlalovZi8vZzhBUWlRYkR6TXpNVll2c1U0dGRDSTFGREZEb0VBQUFBRnRkdzh6TXpNek16TXpNek16TXpNeFZpK3lGMjNVS2FGY0FCNERvVDlQLy80dEZDRlpRVStqVUF3QUFpL0NMQjR0UStJUG9FTGtCQUFBQUswZ01LOWFEeEFnTHluMEppODZMeCtnZy8vLy9pMFVJaXhkUVU0MU9BVkZTNkQ0RkFBQ0R4QkNGOW55dml3YzdjUGgvcUlsdzlJc0hNOGxtaVF4d1hsM0NCQURNL3lXQUFRRVEveVY4QVFFUS95VjRBUUVRL3lWMEFRRVEveVZ3QVFFUS95VnNBUUVRT3cwY1VBRVFkUUx6dytsWEJ3QUFpLzlWaSt4ZDZWSUlBQUNMLzFXTDdGYUxkUlJYTS84NzkzVUVNOERyWlRsOUNIVWI2RWdPQUFCcUZsNkpNRmRYVjFkWDZORU5BQUNEeEJTTHh1dEZPWDBRZEJZNWRReHlFVmIvZFJEL2RRam9HQWtBQUlQRURPdkIvM1VNVi85MUNPaUhDQUFBZzhRTU9YMFFkTFk1ZFF4ekR1ajVEUUFBYWlKWmlRaUw4ZXV0YWhaWVgxNWR3NHYvVll2c2kwVVVWbGN6L3p2SGRFYzVmUWgxRytqUERRQUFhaFplaVRCWFYxZFhWK2hZRFFBQWc4UVVpOGJyS1RsOUVIVGdPVVVNY3c3b3FnMEFBR29pV1lrSWkvSHIxMUQvZFJEL2RRam80UTBBQUlQRUREUEFYMTVkdzR2L1VjY0JBQUlCRU9ndkVRQUFXY09MLzFXTDdGYUw4ZWpqLy8vLzlrVUlBWFFIVnVqeS92Ly9XWXZHWGwzQ0JBQ0wvMVdMN0l0RkNJUEJDVkdEd0FsUTZISVJBQUQzMkZrYndGbEFYY0lFQUl2L1ZZdnNpMVVJVTFaWE0vODcxM1FIaTEwTU85OTNIdWdlRFFBQWFoWmVpVEJYVjFkWFYraW5EQUFBZzhRVWk4WmZYbHRkdzR0MUVEdjNkUWN6d0dhSkF1dlVpOG9QdHdabWlRRkJRVVpHWmp2SGRBTkxkZTR6d0R2ZmRkTm1pUUxvMVF3QUFHb2lXWWtJaS9IcnM0di9WWXZzWGVuZkVRQUFpLzlWaSt5TFJRaFRpMTBNWm9NN0FGZUwrSFJFRDdjSVpvWEpkRG9QdDlFcnc0dE5ER2FGMG5RYkQ3Y1Jab1hTZENzUHR4d0lEN2ZTSzlwMUNFRkJaamtjQ0hYbFpvTTVBSFFTUjBjUHR4ZEFRR2FGMG5YTE04QmZXMTNEaThmcitJdi9WWXZzaTBVSVZvdnh4a1lNQUlYQWRXUG9taDRBQUlsR0NJdEliSWtPaTBob2lVNEVpdzQ3RGZoWEFSQjBFb3NORkZjQkVJVkljSFVINkRVYkFBQ0pCb3RHQkRzRkdGWUJFSFFXaTBZSWl3MFVWd0VRaFVod2RRam9xUk1BQUlsR0JJdEdDUFpBY0FKMUZJTkljQUxHUmd3QjZ3cUxDSWtPaTBBRWlVWUVpOFplWGNJRUFJdi9WWXZzZyt3US8zVU1qVTN3NkdiLy8vOFB0a1VJaTAzd2k0bklBQUFBRDdjRVFTVUFnQUFBZ0gzOEFIUUhpMDM0ZzJGdy9jbkRpLzlWaSt4cUFQOTFDT2k1Ly8vL1dWbGR3NHYvVll2c2Fnai9kUWpvbnlFQUFGbFpYY09MLzFXTDdJUHNJRll6OWpsMURIVWQ2R1lMQUFCV1ZsWldWc2NBRmdBQUFPanVDZ0FBZzhRVWc4ai82eWYvZFJTTlJlRC9kUkRIUmVULy8vOS8vM1VNeDBYc1FnQUFBRkNKZGVpSmRlRC9WUWlEeEJCZXljT0wvMVdMN1A5MURHb0EvM1VJYUhoa0FCRG9rdi8vLzRQRUVGM0RpLzlWaSt5RDdDQlRNOXM1WFJSMUlPanpDZ0FBVTFOVFUxUEhBQllBQUFEb2V3b0FBSVBFRklQSS8rbkZBQUFBVm90MURGZUxmUkE3KzNRa08vTjFJT2pEQ2dBQVUxTlRVMVBIQUJZQUFBRG9Td29BQUlQRUZJUEkvK21UQUFBQXgwWHNRZ0FBQUlsMTZJbDE0SUgvLy8vL1AzWUp4MFhrLy8vL2Yrc0dqUVEvaVVYay8zVWNqVVhnLzNVWS8zVVVVUDlWQ0lQRUVJbEZGRHZ6ZEZVN3czeEMvMDNrZUFxTFJlQ0lHUDlGNE9zUmpVWGdVRlBvNHlBQUFGbFpnL2ovZENML1RlUjRCNHRGNElnWTZ4R05SZUJRVStqR0lBQUFXVm1EK1A5MEJZdEZGT3NQTThBNVhlUm1pVVIrL2crZHdFaElYMTVieWNPTC8xV0w3Rll6OWpsMUVIVWQ2UDRKQUFCV1ZsWldWc2NBRmdBQUFPaUdDUUFBZzhRVWc4ai82MTVYaTMwSU8vNTBCVGwxREhjTjZOUUpBQURIQUJZQUFBRHJNLzkxR1A5MUZQOTFFUDkxREZkb0VIQUFFT2l0L3YvL2c4UVlPOFo5QlRQSlpva1BnL2orZFJ2b253a0FBTWNBSWdBQUFGWldWbFpXNkNjSkFBQ0R4QlNEeVA5ZlhsM0RpLzlWaSt6L2RSUnFBUDkxRVA5MURQOTFDT2hkLy8vL2c4UVVYY09MLzFXTDdJdEZERlpYZy9nQmRYeFE2SGxFQUFCWmhjQjFCelBBNlE0QkFBRG9TeDBBQUlYQWRRZm9qMFFBQU92cDZBeEVBQUQvRldBQUFSQ2pPSHdCRU9qRlFnQUFvOFJmQVJEbzVqd0FBSVhBZlFmb3hCa0FBT3ZQNlBCQkFBQ0Z3SHdnNkc4L0FBQ0Z3SHdYYWdEb25qb0FBRm1Gd0hVTC93WEFYd0VRNmFnQUFBRG9BVDhBQU92Sk0vODd4M1V4T1QzQVh3RVFmb0gvRGNCZkFSQTVQWmhqQVJCMUJlZ3RQQUFBT1gwUWRYdm8xRDRBQU9oaUdRQUE2UDVEQUFEcmFvUDRBblZaNkIwWkFBQm9GQUlBQUdvQjZMRTRBQUNMOEZsWk8vY1BoRGIvLy85Vy96VUlXQUVRL3pWZ1l3RVE2SGdZQUFCWi85Q0Z3SFFYVjFib1Zoa0FBRmxaL3hWY0FBRVFnMDRFLzRrRzZ4aFc2RG9DQUFCWjZmcisvLytEK0FOMUIxZm8yQnNBQUZrendFQmZYbDNDREFCcURHZ29Md0VRNkhORkFBQ0wrWXZ5aTEwSU04QkFpVVhraGZaMUREa1Z3RjhCRUErRXhRQUFBSU5sL0FBNzhIUUZnLzRDZFM2aEJBSUJFSVhBZEFoWFZsUC8wSWxGNUlOOTVBQVBoSllBQUFCWFZsUG9jdjcvLzRsRjVJWEFENFNEQUFBQVYxWlQ2UFBMLy8rSlJlU0QvZ0YxSklYQWRTQlhVRlBvMzh2Ly8xZHFBRlBvUXY3Ly82RUVBZ0VRaGNCMEJsZHFBRlAvMElYMmRBV0QvZ04xSmxkV1UrZ2kvdi8vaGNCMUF5RkY1SU45NUFCMEVhRUVBZ0VRaGNCMENGZFdVLy9RaVVYa3gwWDgvdi8vLzR0RjVPc2RpMFhzaXdpTENWQlI2SDFFQUFCWldjT0xaZWpIUmZ6Ky8vLy9NOERvejBRQUFNT0wvMVdMN0lOOURBRjFCZWhsUmdBQS8zVUlpMDBRaTFVTTZPeisvLzlaWGNJTUFJdi9WWXZzZ2V3b0F3QUFvK0JnQVJDSkRkeGdBUkNKRmRoZ0FSQ0pIZFJnQVJDSk5kQmdBUkNKUGN4Z0FSQm1qQlg0WUFFUVpvd043R0FCRUdhTUhjaGdBUkJtakFYRVlBRVFab3dsd0dBQkVHYU1MYnhnQVJDY2p3WHdZQUVRaTBVQW8rUmdBUkNMUlFTajZHQUJFSTFGQ0tQMFlBRVFpNFhnL1AvL3h3VXdZQUVRQVFBQkFLSG9ZQUVRbytSZkFSREhCZGhmQVJBSkJBREF4d1hjWHdFUUFRQUFBS0VjVUFFUWlZWFkvUC8vb1NCUUFSQ0poZHo4Ly8vL0ZYUUFBUkNqS0dBQkVHb0I2QnRHQUFCWmFnRC9GWEFBQVJCb0NBSUJFUDhWYkFBQkVJTTlLR0FCRUFCMUNHb0I2UGRGQUFCWmFBa0VBTUQvRldnQUFSQlEveFZrQUFFUXljTnFER2hJTHdFUTZGUkRBQUNMZFFpRjluUjFnejBFZXdFUUEzVkRhZ1RvUTBjQUFGbURaZndBVnVoclJ3QUFXWWxGNUlYQWRBbFdVT2lNUndBQVdWbkhSZnorLy8vLzZBc0FBQUNEZmVRQWRUZi9kUWpyQ21vRTZDOUdBQUJadzFacUFQODFyR1FCRVA4VmVBQUJFSVhBZFJib25RVUFBSXZ3L3hVY0FBRVFVT2hOQlFBQWlRWlo2QmhEQUFERHpNeUxWQ1FNaTB3a0JJWFNkR2t6d0lwRUpBaUV3SFVXZ2ZvQUFRQUFjZzZEUGVSNkFSQUFkQVhwK0ZFQUFGZUwrWVA2QkhJeDk5bUQ0UU4wREN2UmlBZUR4d0dENlFGMTlvdkl3ZUFJQThHTHlNSGdFQVBCaThxRDRnUEI2UUowQnZPcmhkSjBDb2dIZzhjQmcrb0JkZmFMUkNRSVg4T0xSQ1FFdzh6TXpNek16RldMN0ZkV2kzVU1pMDBRaTMwSWk4R0wwUVBHTy81MkNEdjRENEtrQVFBQWdma0FBUUFBY2grRFBlUjZBUkFBZEJaWFZvUG5ENFBtRHp2K1hsOTFDRjVmWGVreVV3QUE5OGNEQUFBQWRSWEI2UUtENGdPRCtRaHlLdk9sL3lTVlJFZ0FFSkNMeDdvREFBQUFnK2tFY2d5RDRBTUR5UDhraFZoSEFCRC9KSTFVU0FBUWtQOGtqZGhIQUJDUWFFY0FFSlJIQUJDNFJ3QVFJOUdLQm9nSGlrWUJpRWNCaWtZQ3dla0NpRWNDZzhZRGc4Y0RnL2tJY3N6enBmOGtsVVJJQUJDTlNRQWowWW9HaUFlS1JnSEI2UUtJUndHRHhnS0R4d0tEK1FoeXB2T2wveVNWUkVnQUVKQWowWW9HaUFlRHhnSEI2UUtEeHdHRCtRaHlpUE9sL3lTVlJFZ0FFSTFKQUR0SUFCQW9TQUFRSUVnQUVCaElBQkFRU0FBUUNFZ0FFQUJJQUJENFJ3QVFpMFNPNUlsRWorU0xSSTdvaVVTUDZJdEVqdXlKUkkvc2kwU084SWxFai9DTFJJNzBpVVNQOUl0RWp2aUpSSS80aTBTTy9JbEVqL3lOQkkwQUFBQUFBL0FEK1A4a2xVUklBQkNMLzFSSUFCQmNTQUFRYUVnQUVIeElBQkNMUlFoZVg4bkRrSW9HaUFlTFJRaGVYOG5Ea0lvR2lBZUtSZ0dJUndHTFJRaGVYOG5EalVrQWlnYUlCNHBHQVloSEFZcEdBb2hIQW90RkNGNWZ5Y09RalhReC9JMThPZnozeHdNQUFBQjFKTUhwQW9QaUE0UDVDSElOL2ZPbC9QOGtsZUJKQUJDTC8vZloveVNOa0VrQUVJMUpBSXZIdWdNQUFBQ0QrUVJ5RElQZ0F5dkkveVNGNUVnQUVQOGtqZUJKQUJDUTlFZ0FFQmhKQUJCQVNRQVFpa1lESTlHSVJ3T0Q3Z0hCNlFLRDd3R0QrUWh5c3YzenBmei9KSlhnU1FBUWpVa0Fpa1lESTlHSVJ3T0tSZ0xCNlFLSVJ3S0Q3Z0tEN3dLRCtRaHlpUDN6cGZ6L0pKWGdTUUFRa0lwR0F5UFJpRWNEaWtZQ2lFY0Npa1lCd2VrQ2lFY0JnKzREZys4RGcva0lENEpXLy8vLy9mT2wvUDhrbGVCSkFCQ05TUUNVU1FBUW5Fa0FFS1JKQUJDc1NRQVF0RWtBRUx4SkFCREVTUUFRMTBrQUVJdEVqaHlKUkk4Y2kwU09HSWxFanhpTFJJNFVpVVNQRkl0RWpoQ0pSSThRaTBTT0RJbEVqd3lMUkk0SWlVU1BDSXRFamdTSlJJOEVqUVNOQUFBQUFBUHdBL2ovSkpYZ1NRQVFpLy93U1FBUStFa0FFQWhLQUJBY1NnQVFpMFVJWGwvSnc1Q0tSZ09JUndPTFJRaGVYOG5EalVrQWlrWURpRWNEaWtZQ2lFY0NpMFVJWGwvSnc1Q0tSZ09JUndPS1JnS0lSd0tLUmdHSVJ3R0xSUWhlWDhuRGkvOVZpK3lMUlFpai9HSUJFRjNEaS85VmkreUI3Q2dEQUFDaEhGQUJFRFBGaVVYOGc2WFkvUC8vQUZOcVRJMkYzUHovLzJvQVVPamYrLy8vallYWS9QLy9pWVVvL2YvL2pZVXcvZi8vZzhRTWlZVXMvZi8vaVlYZy9mLy9pWTNjL2YvL2laWFkvZi8vaVozVS9mLy9pYlhRL2YvL2liM00vZi8vWm95VitQMy8vMmFNamV6OS8vOW1qSjNJL2YvL1pveUZ4UDMvLzJhTXBjRDkvLzltaksyOC9mLy9uSStGOFAzLy80dEZCSTFOQk1lRk1QMy8vd0VBQVFDSmhlajkvLytKamZUOS8vK0xTZnlKamVUOS8vL0hoZGo4Ly84WEJBREF4NFhjL1AvL0FRQUFBSW1GNVB6Ly8vOFZkQUFCRUdvQWk5ai9GWEFBQVJDTmhTajkvLzlRL3hWc0FBRVFoY0IxRElYYmRRaHFBdWhXUUFBQVdXZ1hCQURBL3hWb0FBRVFVUDhWWkFBQkVJdE4vRFBOVytqcThmLy95Y09MLzFXTDdQODEvR0lCRU9oZUVBQUFXWVhBZEFOZC8rQnFBdWdYUUFBQVdWM3BzdjcvLzR2L1ZZdnNpMFVJTThrN0JNMHdVQUVRZEJOQmcva3RjdkdOU08yRCtSRjNEbW9OV0YzRGl3VE5ORkFCRUYzREJVVC8vLzlxRGxrN3lCdkFJOEdEd0FoZHcralVFUUFBaGNCMUJyaVlVUUVRdzRQQUNNUG93UkVBQUlYQWRRYTRuRkVCRU1PRHdBekRpLzlWaSt4VzZPTC8vLytMVFFoUmlRam9ndi8vLzFtTDhPaTgvLy8vaVRCZVhjUE16TXhWaSt4WFZvdDFESXRORUl0OUNJdkJpOUVEeGp2K2RnZzcrQStDcEFFQUFJSDVBQUVBQUhJZmd6M2tlZ0VRQUhRV1YxYUQ1dytENWc4Ny9sNWZkUWhlWDEzcDRrMEFBUGZIQXdBQUFIVVZ3ZWtDZytJRGcva0ljaXJ6cGY4a2xaUk5BQkNRaThlNkF3QUFBSVBwQkhJTWcrQURBOGovSklXb1RBQVEveVNOcEUwQUVKRC9KSTBvVFFBUWtMaE1BQkRrVEFBUUNFMEFFQ1BSaWdhSUI0cEdBWWhIQVlwR0FzSHBBb2hIQW9QR0E0UEhBNFA1Q0hMTTg2WC9KSldVVFFBUWpVa0FJOUdLQm9nSGlrWUJ3ZWtDaUVjQmc4WUNnOGNDZy9rSWNxYnpwZjhrbFpSTkFCQ1FJOUdLQm9nSGc4WUJ3ZWtDZzhjQmcva0ljb2p6cGY4a2xaUk5BQkNOU1FDTFRRQVFlRTBBRUhCTkFCQm9UUUFRWUUwQUVGaE5BQkJRVFFBUVNFMEFFSXRFanVTSlJJL2tpMFNPNklsRWoraUxSSTdzaVVTUDdJdEVqdkNKUkkvd2kwU085SWxFai9TTFJJNzRpVVNQK0l0RWp2eUpSSS84alFTTkFBQUFBQVB3QS9qL0pKV1VUUUFRaS8ra1RRQVFyRTBBRUxoTkFCRE1UUUFRaTBVSVhsL0p3NUNLQm9nSGkwVUlYbC9KdzVDS0JvZ0hpa1lCaUVjQmkwVUlYbC9KdzQxSkFJb0dpQWVLUmdHSVJ3R0tSZ0tJUndLTFJRaGVYOG5Ea0kxME1meU5mRG44OThjREFBQUFkU1RCNlFLRDRnT0QrUWh5RGYzenBmei9KSlV3VHdBUWkvLzMyZjhramVCT0FCQ05TUUNMeDdvREFBQUFnL2tFY2d5RDRBTXJ5UDhraFRST0FCRC9KSTB3VHdBUWtFUk9BQkJvVGdBUWtFNEFFSXBHQXlQUmlFY0RnKzRCd2VrQ2crOEJnL2tJY3JMOTg2WDgveVNWTUU4QUVJMUpBSXBHQXlQUmlFY0Rpa1lDd2VrQ2lFY0NnKzRDZys4Q2cva0ljb2o5ODZYOC95U1ZNRThBRUpDS1JnTWowWWhIQTRwR0FvaEhBb3BHQWNIcEFvaEhBWVB1QTRQdkE0UDVDQStDVnYvLy8vM3pwZnovSkpVd1R3QVFqVWtBNUU0QUVPeE9BQkQwVGdBUS9FNEFFQVJQQUJBTVR3QVFGRThBRUNkUEFCQ0xSSTRjaVVTUEhJdEVqaGlKUkk4WWkwU09GSWxFanhTTFJJNFFpVVNQRUl0RWpneUpSSThNaTBTT0NJbEVqd2lMUkk0RWlVU1BCSTBFalFBQUFBQUQ4QVA0L3lTVk1FOEFFSXYvUUU4QUVFaFBBQkJZVHdBUWJFOEFFSXRGQ0Y1ZnljT1Fpa1lEaUVjRGkwVUlYbC9KdzQxSkFJcEdBNGhIQTRwR0FvaEhBb3RGQ0Y1ZnljT1Fpa1lEaUVjRGlrWUNpRWNDaWtZQmlFY0JpMFVJWGwvSncyb01hR2d2QVJEb2p6a0FBR29PNkk0OUFBQlpnMlg4QUl0MUNJdE9CSVhKZEMraEJHTUJFTG9BWXdFUWlVWGtoY0IwRVRrSWRTeUxTQVNKU2dSUTZQajEvLzlaLzNZRTZPLzEvLzlaZzJZRUFNZEYvUDcvLy8vb0NnQUFBT2grT1FBQXc0dlE2OFZxRHVoWlBBQUFXY1BNek16TXpNek16TXpNekl0VUpBU0xUQ1FJOThJREFBQUFkVHlMQWpvQmRTNEt3SFFtT21FQmRTVUs1SFFkd2VnUU9rRUNkUmtLd0hRUk9tRURkUkNEd1FTRHdnUUs1SFhTaS84endNT1FHOERSNElQQUFjUDN3Z0VBQUFCMEdJb0NnOElCT2dGMTU0UEJBUXJBZE56M3dnSUFBQUIwcEdhTEFvUENBam9CZGM0S3dIVEdPbUVCZGNVSzVIUzlnOEVDNjRpTC8xWnFBV2l3VVFFUWkvSG9VVTRBQU1jR0ZBSUJFSXZHWHNQSEFSUUNBUkRwdGs0QUFJdi9WWXZzVm92eHh3WVVBZ0VRNktOT0FBRDJSUWdCZEFkVzZKYnMvLzlaaThaZVhjSUVBSXYvVll2c1Z2OTFDSXZ4NkNKT0FBREhCaFFDQVJDTHhsNWR3Z1FBaS85VmkreUQ3QXpyRGY5MUNPanhUd0FBV1lYQWRBLy9kUWpvYVVzQUFGbUZ3SFRteWNQMkJSUmpBUkFCdmdoakFSQjFHWU1ORkdNQkVBR0x6dWhVLy8vL2FMLzBBQkRva1U4QUFGbFdqVTMwNkkzLy8vOW9oQzhCRUkxRjlGRG94MDhBQU13dHBBTUFBSFFpZytnRWRCZUQ2QTEwREVoMEF6UEF3N2dFQkFBQXc3Z1NCQUFBdzdnRUNBQUF3N2dSQkFBQXc0di9WbGVMOEdnQkFRQUFNLytOUmh4WFVPaXo5UC8vTThBUHQ4aUx3WWwrQklsK0NJbCtETUhoRUF2QmpYNFFxNnVydWZCUkFSQ0R4QXlOUmh3cnpyOEJBUUFBaWhRQmlCQkFUM1gzallZZEFRQUF2Z0FCQUFDS0ZBaUlFRUJPZGZkZlhzT0wvMVdMN0lIc0hBVUFBS0VjVUFFUU04V0pSZnhUVjQyRjZQci8vMUQvZGdUL0ZYd0FBUkMvQUFFQUFJWEFENFQ3QUFBQU04Q0loQVg4L3YvL1FEdkhjdlNLaGU3Ni8vL0doZnorLy84Z2hNQjBMbzJkNy9yLy93KzJ5QSsyQXp2SWR4WXJ3VUJRalpRTi9QNy8vMm9nVXVqdzgvLy9nOFFNUTRvRFE0VEFkZGhxQVA5MkRJMkYvUHIvLy85MkJGQlhqWVg4L3YvL1VHb0JhZ0Rvb2xRQUFEUGJVLzkyQkkyRi9QMy8vMWRRVjQyRi9QNy8vMUJYLzNZTVUraURVZ0FBZzhSRVUvOTJCSTJGL1B6Ly8xZFFWNDJGL1A3Ly8xQm9BQUlBQVA5MkRGUG9YbElBQUlQRUpEUEFEN2VNUmZ6Ni8vLzJ3UUYwRG9CTUJoMFFpb3dGL1AzLy8rc1I5c0VDZEJXQVRBWWRJSXFNQmZ6OC8vK0lqQVlkQVFBQTZ3akdoQVlkQVFBQUFFQTd4M0srNjFhTmhoMEJBQURIaGVUNi8vK2YvLy8vTThrcGhlVDYvLytMbGVUNi8vK05oQTRkQVFBQUE5Q05XaUNEK3hsM0RJQk1EaDBRaXRHQXdpRHJENFA2R1hjT2dFd09IU0NLMFlEcUlJZ1E2d1BHQUFCQk84OXl3b3ROL0Y4enpWdm8yZW4vLzhuRGFneG8yQzhCRU9pWE5RQUE2SmdLQUFDTCtLRVVWd0VRaFVkd2RCMkRmMndBZEJlTGQyaUY5blVJYWlEb0VTa0FBRm1MeHVpdk5RQUF3Mm9ONkdnNUFBQlpnMlg4QUl0M2FJbDE1RHMxR0ZZQkVIUTJoZlowR2xiL0ZZUUFBUkNGd0hVUGdmN3dVUUVRZEFkVzZOTHgvLzlab1JoV0FSQ0pSMmlMTlJoV0FSQ0pkZVJXL3hXQUFBRVF4MFg4L3YvLy8rZ0ZBQUFBNjQ2TGRlUnFEZWd0T0FBQVdjT0wvMVdMN0lQc0VGTXoyMU9OVGZEb1Ardi8vNGtkR0dNQkVJUCsvblVleHdVWVl3RVFBUUFBQVA4VmpBQUJFRGhkL0hSRmkwMzRnMkZ3L2VzOGcvNzlkUkxIQlJoakFSQUJBQUFBL3hXSUFBRVE2OXVEL3Z4MUVvdEY4SXRBQk1jRkdHTUJFQUVBQUFEcnhEaGQvSFFIaTBYNGcyQncvWXZHVzhuRGkvOVZpK3lEN0NDaEhGQUJFRFBGaVVYOFU0dGRERmFMZFFoWDZHVC8vLytMK0RQMmlYMElPLzUxRG92RDZMZjgvLzh6d09tZEFRQUFpWFhrTThBNXVDQldBUkFQaEpFQUFBRC9SZVNEd0RBOThBQUFBSExuZ2Yvby9RQUFENFJ3QVFBQWdmL3AvUUFBRDRSa0FRQUFEN2ZIVVA4VmtBQUJFSVhBRDRSU0FRQUFqVVhvVUZmL0ZYd0FBUkNGd0ErRU13RUFBR2dCQVFBQWpVTWNWbERvRVBILy96UFNRb1BFRElsN0JJbHpERGxWNkErRytBQUFBSUI5N2dBUGhNOEFBQUNOZGUrS0RvVEpENFRDQUFBQUQ3WkcvdysyeWVtbUFBQUFhQUVCQUFDTlF4eFdVT2pKOFAvL2kwM2tnOFFNYThrd2lYWGdqYkV3VmdFUWlYWGs2eXFLUmdHRXdIUW9EN1krRDdiQTZ4S0xSZUNLZ0J4V0FSQUlSRHNkRDdaR0FVYzcrSGJxaTMwSVJrYUFQZ0IxMFl0MTVQOUY0SVBHQ0lOOTRBU0pkZVJ5Nll2SGlYc0V4ME1JQVFBQUFPaG4rLy8vYWdhSlF3eU5ReENOaVNSV0FSQmFab3N4UVdhSk1FRkFRRXAxODR2ejZOZjcvLy9wdC83Ly80Qk1BeDBFUUR2QmR2WkdSb0IrL3dBUGhUVC8vLytOUXg2NS9nQUFBSUFJQ0VCSmRmbUxRd1RvRXZ2Ly80bERESWxUQ09zRGlYTUlNOEFQdDhpTHdjSGhFQXZCalhzUXE2dXI2Nmc1TlJoakFSQVBoVmorLy8rRHlQK0xUZnhmWGpQTlcralU1di8veWNOcUZHajRMd0VRNkpJeUFBQ0RUZUQvNkk4SEFBQ0wrSWw5M09qYy9QLy9pMTlvaTNVSTZIWDkvLytKUlFnN1F3UVBoRmNCQUFCb0lBSUFBT2p1SkFBQVdZdlloZHNQaEVZQkFBQzVpQUFBQUl0M2FJdjc4NldESXdCVC8zVUk2TGo5Ly85WldZbEY0SVhBRDRYOEFBQUFpM1hjLzNaby94V0VBQUVRaGNCMUVZdEdhRDN3VVFFUWRBZFE2Szd1Ly85WmlWNW9VNHM5Z0FBQkVQL1g5a1p3QWcrRjZnQUFBUFlGRkZjQkVBRVBoZDBBQUFCcURlanBOUUFBV1lObC9BQ0xRd1NqS0dNQkVJdERDS01zWXdFUWkwTU1vekJqQVJBendJbEY1SVA0QlgwUVpvdE1ReEJtaVF4RkhHTUJFRURyNkRQQWlVWGtQUUVCQUFCOURZcE1HQnlJaUJCVUFSQkE2K2t6d0lsRjVEMEFBUUFBZlJDS2pCZ2RBUUFBaUlnWVZRRVFRT3ZtL3pVWVZnRVEveFdFQUFFUWhjQjFFNkVZVmdFUVBmQlJBUkIwQjFEbzllMy8vMW1KSFJoV0FSQlQvOWZIUmZ6Ky8vLy82QUlBQUFEck1Hb042R0kwQUFCWncrc2xnL2ovZFNDQisvQlJBUkIwQjFQb3YrMy8vMW5vemZQLy84Y0FGZ0FBQU9zRWcyWGdBSXRGNE9oS01RQUF3NE05TEh3QkVBQjFFbXI5NkZiKy8vOVp4d1VzZkFFUUFRQUFBRFBBdzR2L1ZZdnNVMWFMZFFpTGhyd0FBQUF6MjFjN3czUnZQV0JhQVJCMGFJdUdzQUFBQUR2RGRGNDVHSFZhaTRhNEFBQUFPOE4wRnprWWRSTlE2RWJ0Ly8vL3Ryd0FBQURveEZBQUFGbFppNGEwQUFBQU84TjBGemtZZFJOUTZDWHQvLy8vdHJ3QUFBRG9YbEFBQUZsWi83YXdBQUFBNkEzdC8vLy90cndBQUFEb0F1My8vMWxaaTRiQUFBQUFPOE4wUkRrWWRVQ0xoc1FBQUFBdC9nQUFBRkRvNGV6Ly80dUd6QUFBQUwrQUFBQUFLOGRRNk03cy8vK0xodEFBQUFBcngxRG93T3ovLy8rMndBQUFBT2kxN1AvL2c4UVFqYjdVQUFBQWl3YzlvRmtCRUhRWE9aaTBBQUFBZFE5UTZFUk9BQUQvTitpTzdQLy9XVm1OZmxESFJRZ0dBQUFBZ1gvNEdGY0JFSFFSaXdjN3czUUxPUmgxQjFEb2Flei8vMWs1WC94MEVvdEhCRHZEZEFzNUdIVUhVT2hTN1AvL1dZUEhFUDlOQ0hYSFZ1aEQ3UC8vV1Y5ZVcxM0RpLzlWaSt4VFZvczFnQUFCRUZlTGZRaFgvOWFMaDdBQUFBQ0Z3SFFEVVAvV2k0ZTRBQUFBaGNCMEExRC8xb3VIdEFBQUFJWEFkQU5RLzlhTGg4QUFBQUNGd0hRRFVQL1dqVjlReDBVSUJnQUFBSUY3K0JoWEFSQjBDWXNEaGNCMEExRC8xb043L0FCMENvdERCSVhBZEFOUS85YUR3eEQvVFFoMTFvdUgxQUFBQUFXMEFBQUFVUC9XWDE1YlhjT0wvMVdMN0ZlTGZRaUYvdytFZ3dBQUFGTldpeldFQUFFUVYvL1dpNGV3QUFBQWhjQjBBMUQvMW91SHVBQUFBSVhBZEFOUS85YUxoN1FBQUFDRndIUURVUC9XaTRmQUFBQUFoY0IwQTFELzFvMWZVTWRGQ0FZQUFBQ0JlL2dZVndFUWRBbUxBNFhBZEFOUS85YURlL3dBZEFxTFF3U0Z3SFFEVVAvV2c4TVEvMDBJZGRhTGg5UUFBQUFGdEFBQUFGRC8xbDViaThkZlhjT0YvM1EzaGNCME0xYUxNRHYzZENoWGlUam93ZjcvLzFtRjluUWJWdWhGLy8vL2d6NEFXWFVQZ2Y0Z1Z3RVFkQWRXNkZuOS8vOVppOGRld3pQQXcyb01hQmd3QVJEb0t5NEFBT2dzQXdBQWkvQ2hGRmNCRUlWR2NIUWlnMzVzQUhRYzZCVURBQUNMY0d5RjluVUlhaURvb0NFQUFGbUx4dWcrTGdBQXcyb002UGN4QUFCWmcyWDhBSTFHYklzOStGY0JFT2hwLy8vL2lVWGt4MFg4L3YvLy8rZ0NBQUFBNjhGcURPanlNQUFBV1l0MTVNT0wvMVdMN0ZiL05ReFlBUkNMTlp3QUFSRC8xb1hBZENHaENGZ0JFSVA0LzNRWFVQODFERmdCRVAvVy85Q0Z3SFFJaTRENEFRQUE2eWUrdEFJQkVGYi9GWlFBQVJDRndIVUxWdWpoSUFBQVdZWEFkQmhvcEFJQkVGRC9GWmdBQVJDRndIUUkvM1VJLzlDSlJRaUxSUWhlWGNOcUFPaUgvLy8vV2NPTC8xV0w3RmIvTlF4WUFSQ0xOWndBQVJELzFvWEFkQ0doQ0ZnQkVJUDQvM1FYVVA4MURGZ0JFUC9XLzlDRndIUUlpNEQ4QVFBQTZ5ZSt0QUlCRUZiL0ZaUUFBUkNGd0hVTFZ1aG1JQUFBV1lYQWRCaG8wQUlCRUZEL0ZaZ0FBUkNGd0hRSS8zVUkvOUNKUlFpTFJRaGVYY1AvRmFBQUFSRENCQUNMLzFiL05ReFlBUkQvRlp3QUFSQ0w4SVgyZFJ2L05WeGpBUkRvWmYvLy8xbUw4RmIvTlF4WUFSRC9GYVFBQVJDTHhsN0RvUWhZQVJDRCtQOTBGbEQvTldSakFSRG9PLy8vLzFuLzBJTU5DRmdCRVAraERGZ0JFSVA0LzNRT1VQOFZxQUFCRUlNTkRGZ0JFUC9wTHk4QUFHb01hRGd3QVJEb1Rpd0FBTDYwQWdFUVZ2OFZsQUFCRUlYQWRRZFc2S2NmQUFCWmlVWGtpM1VJeDBaY09BTUJFRFAvUjRsK0ZJWEFkQ1JvcEFJQkVGQ0xIWmdBQVJELzA0bUcrQUVBQUdqUUFnRVEvM1hrLzlPSmh2d0JBQUNKZm5ER2hzZ0FBQUJEeG9aTEFRQUFROGRHYVBCUkFSQnFEZWpqTHdBQVdZTmwvQUQvZG1qL0ZZQUFBUkRIUmZ6Ky8vLy82RDRBQUFCcURPakNMd0FBV1lsOS9JdEZESWxHYklYQWRRaWgrRmNCRUlsR2JQOTJiT2dCL1AvL1djZEYvUDcvLy8vb0ZRQUFBT2pSS3dBQXd6UC9SNHQxQ0dvTjZLb3VBQUJadzJvTTZLRXVBQUJadzR2L1ZsZi9GUndBQVJEL05RaFlBUkNMK09pUi92Ly8vOUNMOElYMmRVNW9GQUlBQUdvQjZCMGVBQUNMOEZsWmhmWjBPbGIvTlFoWUFSRC9OV0JqQVJEbzZQMy8vMW4vMElYQWRCaHFBRmJveGY3Ly8xbFoveFZjQUFFUWcwNEUvNGtHNndsVzZLbm4vLzlaTS9aWC94V3NBQUVRWDR2R1hzT0wvMWJvZi8vLy80dndoZloxQ0dvUTZJUWVBQUJaaThaZXcyb0lhR0F3QVJEbzFDb0FBSXQxQ0lYMkQ0VDRBQUFBaTBZa2hjQjBCMURvWE9mLy8xbUxSaXlGd0hRSFVPaE81Ly8vV1l0R05JWEFkQWRRNkVEbi8vOVppMFk4aGNCMEIxRG9NdWYvLzFtTFJrQ0Z3SFFIVU9nazUvLy9XWXRHUklYQWRBZFE2QmJuLy85WmkwWkloY0IwQjFEb0NPZi8vMW1MUmx3OU9BTUJFSFFIVU9qMzV2Ly9XV29ONkZVdUFBQlpnMlg4QUl0K2FJWC9kQnBYL3hXRUFBRVFoY0IxRDRILzhGRUJFSFFIVitqSzV2Ly9XY2RGL1A3Ly8vL29Wd0FBQUdvTTZCd3VBQUJaeDBYOEFRQUFBSXQrYklYL2RDTlg2UFA2Ly85Wk96MzRWd0VRZEJTQi95QlhBUkIwRElNL0FIVUhWK2ovK1AvL1djZEYvUDcvLy8vb0hnQUFBRmJvY3ViLy8xbm9FU29BQU1JRUFJdDFDR29ONk9zc0FBQlp3NHQxQ0dvTTZOOHNBQUJadzR2L1ZZdnNnejBJV0FFUS8zUkxnMzBJQUhVblZ2ODFERmdCRUlzMW5BQUJFUC9XaGNCMEUvODFDRmdCRVA4MURGZ0JFUC9XLzlDSlJRaGVhZ0QvTlFoWUFSRC9OV0JqQVJEb0hmei8vMW4vMFA5MUNPaDQvdi8vb1F4WUFSQ0QrUDkwQ1dvQVVQOFZwQUFCRUYzRGkvOVdWNzYwQWdFUVZ2OFZsQUFCRUlYQWRRZFc2SmdjQUFCWmkvaUYvdytFWGdFQUFJczFtQUFCRUdnQUF3RVFWLy9XYVBRQ0FSQlhvMWhqQVJELzFtam9BZ0VRVjZOY1l3RVEvOVpvNEFJQkVGZWpZR01CRVAvV2d6MVlZd0VRQUlzMXBBQUJFS05rWXdFUWRCYURQVnhqQVJBQWRBMkRQV0JqQVJBQWRBU0Z3SFVrb1p3QUFSQ2pYR01CRUtHb0FBRVF4d1ZZWXdFUVRGd0FFSWsxWUdNQkVLTmtZd0VRL3hXZ0FBRVFvd3hZQVJDRCtQOFBoTXdBQUFEL05WeGpBUkJRLzlhRndBK0V1d0FBQU9pbEhnQUEvelZZWXdFUTZLWDYvLy8vTlZ4akFSQ2pXR01CRU9pVit2Ly8velZnWXdFUW8xeGpBUkRvaGZyLy8vODFaR01CRUtOZ1l3RVE2SFg2Ly8rRHhCQ2paR01CRU9pektnQUFoY0IwWldoQVhnQVEvelZZWXdFUTZNLzYvLzlaLzlDakNGZ0JFSVA0LzNSSWFCUUNBQUJxQWVqUkdnQUFpL0JaV1lYMmREUlcvelVJV0FFUS96VmdZd0VRNkp6Ni8vOVovOUNGd0hRYmFnQlc2SG43Ly85WldmOFZYQUFCRUlOT0JQK0pCalBBUU9zSDZDVDcvLzh6d0Y5ZXc0di9WWXZzdVAvL0FBQ0Q3QlJtT1VVSWRRYURaZndBNjJXNEFBRUFBR1k1UlFoekdnKzNSUWlMRFpoWkFSQm1pd1JCWmlORkRBKzN3SWxGL090QS8zVVFqVTNzNk1IZC8vK0xSZXovY0JUL2NBU05SZnhRYWdHTlJRaFFqVVhzYWdGUTZMOUpBQUNEeEJ5RndIVURJVVg4Z0gzNEFIUUhpMFgwZzJCdy9RKzNSZndQdDAwTUk4SEp3NHYvVll2c1Viai8vd0FBWmpsRkNIVUVNOERKdzdnQUFRQUFaamxGQ0hNV0Q3ZEZDSXNObUZrQkVBKzNCRUVQdDAwTUk4SEp3NE05TkdNQkVBQjFKZjgxTkZjQkVJMUYvUDgxSkZjQkVGQnFBWTFGQ0ZCcUFXZ0FXQUVRNkR0SkFBQ0R4QnhxQVA5MURQOTFDT2dGLy8vL2c4UU15Y09MLzFXTDdGRldpM1VNVnVoalZRQUFpVVVNaTBZTVdhaUNkUmZvU3VuLy84Y0FDUUFBQUlOT0RDQ0R5UC9wTHdFQUFLaEFkQTNvTCtuLy84Y0FJZ0FBQU92alV6UGJxQUYwRm9sZUJLZ1FENFNIQUFBQWkwNElnK0QraVE2SlJneUxSZ3lENE8rRHlBS0pSZ3lKWGdTSlhmeXBEQUVBQUhVczZFQlRBQUNEd0NBNzhIUU02RFJUQUFDRHdFQTc4SFVOLzNVTTZNRlNBQUJaaGNCMUIxYm9iVklBQUZuM1Jnd0lBUUFBVncrRWdBQUFBSXRHQ0lzK2pVZ0JpUTZMVGhncitFazcrNGxPQkg0ZFYxRC9kUXpvWVZFQUFJUEVESWxGL090Tmc4Z2dpVVlNZzhqLzYzbUxUUXlEK2Y5MEc0UDUvblFXaThHRDRCK0wwY0g2QmNIZ0JnTUVsU0I3QVJEckJiZ1lXQUVROWtBRUlIUVVhZ0pUVTFIb3lrZ0FBQ1BDZzhRUWcvai9kQ1dMUmdpS1RRaUlDT3NXTS85SFY0MUZDRkQvZFF6bzhsQUFBSVBFRElsRi9EbDkvSFFKZzA0TUlJUEkvK3NJaTBVSUpmOEFBQUJmVzE3Snc0di9WWXZzOWtBTVFIUUdnM2dJQUhRYVVQOTFDT2duVkFBQVdWbTUvLzhBQUdZN3dYVUZndzcvWGNQL0JsM0RpLzlWaSt4V2kvRHJGUDkxQ0l0RkVQOU5ET2k1Ly8vL2d6Ny9XWFFHZzMwTUFIL21YbDNEaS85VmkrejJSd3hBVTFhTDhJdlpkRGVEZndnQWRUR0xSUWdCQnVzd0Q3Y0QvMDBJVUl2SDZINy8vLzlEUTRNKy8xbDFGT2gzNS8vL2d6Z3FkUkJxUDR2SDZHUC8vLzlaZzMwSUFIL1FYbHRkdzh6TWkvOVZpK3lCN0hRRUFBQ2hIRkFCRURQRmlVWDhpMFVJVTR0ZEZGYUxkUXhYLzNVUU0vK05qYWo3Ly8rSmhkRDcvLytKbmVUNy8vK0p2Ymo3Ly8rSnZmajcvLytKdmRUNy8vK0p2ZlQ3Ly8rSnZkejcvLytKdmNUNy8vK0p2ZGo3Ly8vb2xkci8vem05MFB2Ly8zVXo2T2ptLy85WFYxZFh4d0FXQUFBQVYraHc1di8vZzhRVWdMMjArLy8vQUhRS2k0V3crLy8vZzJCdy9ZUEkvK25FQ2dBQU8vZDB5USszRmpQSmliM2crLy8vaWIzcysvLy9pYjI4Ky8vL2laWG8rLy8vWmp2WEQ0U0JDZ0FBYWdKZkEvZUR2ZUQ3Ly84QWliWEErLy8vRDR4cENnQUFqVUxnWm9QNFdIY1BEN2ZDRDc2QVFCUUJFSVBnRCtzQ004QVB2b1RCWUJRQkVHb0h3ZmdFV1ltRnBQdi8venZCRDRmMUNRQUEveVNGOEc4QUVEUEFnNDMwKy8vLy80bUZvUHYvLzRtRnhQdi8vNG1GMVB2Ly80bUYzUHYvLzRtRitQdi8vNG1GMlB2Ly8rbThDUUFBRDdmQ2crZ2dkRXFENkFOME5vUG9DSFFsSzhkMEZZUG9BdytGblFrQUFJT04rUHYvL3dqcGtRa0FBSU9OK1B2Ly93VHBoUWtBQUlPTitQdi8vd0hwZVFrQUFJR04rUHYvLzRBQUFBRHBhZ2tBQUFtOStQdi8vK2xmQ1FBQVpvUDZLblVzZzhNRWlaM2srLy8vaTF2OGlaM1UrLy8vaGRzUGpUOEpBQUNEamZqNy8vOEU5NTNVKy8vLzZTMEpBQUNMaGRUNy8vOXJ3QW9QdDhxTlJBalFpWVhVKy8vLzZSSUpBQUNEcGZUNy8vOEE2UVlKQUFCbWcvb3FkU2FEd3dTSm5lVDcvLytMVy95Sm5mVDcvLytGMncrTjVnZ0FBSU9OOVB2Ly8vL3AyZ2dBQUl1RjlQdi8vMnZBQ2crM3lvMUVDTkNKaGZUNy8vL3B2d2dBQUErM3dvUDRTWFJYZy9ob2RFYUQrR3gwR0lQNGR3K0ZwQWdBQUlHTitQdi8vd0FJQUFEcGxRZ0FBR2FEUG14MUZ3UDNnWTM0Ky8vL0FCQUFBSW0xd1B2Ly8rbDRDQUFBZzQzNCsvLy9FT2xzQ0FBQWc0MzQrLy8vSU9sZ0NBQUFEN2NHWm9QNE5uVWZab04rQWpSMUdJUEdCSUdOK1B2Ly93Q0FBQUNKdGNENy8vL3BPQWdBQUdhRCtETjFIMmFEZmdJeWRSaUR4Z1NCcGZqNy8vLy9mLy8vaWJYQSsvLy82Uk1JQUFCbWcvaGtENFFKQ0FBQVpvUDRhUStFL3djQUFHYUQrRzhQaFBVSEFBQm1nL2gxRDRUckJ3QUFab1A0ZUErRTRRY0FBR2FEK0ZnUGhOY0hBQUNEcGFUNy8vOEFpNFhRKy8vL1VvMjE0UHYvLzhlRjJQdi8vd0VBQUFEbysvdi8vK211QndBQUQ3ZkNnL2hrRDQ4dkFnQUFENFRBQWdBQWcvaFRENDhiQVFBQWRINkQ2RUYwRUN2SGRGa3J4M1FJSzhjUGhlOEZBQUNEd2lESGhhRDcvLzhCQUFBQWlaWG8rLy8vZzQzNCsvLy9RSU85OVB2Ly93Q050Zno3Ly8rNEFBSUFBSW0xOFB2Ly80bUY3UHYvL3crTmtBSUFBTWVGOVB2Ly93WUFBQURwN0FJQUFQZUYrUHYvL3pBSUFBQVBoY2dBQUFDRGpmajcvLzhnNmJ3QUFBRDNoZmo3Ly84d0NBQUFkUWVEamZqNy8vOGdpNzMwKy8vL2cvLy9kUVcvLy8vL2Y0UERCUGFGK1B2Ly95Q0puZVQ3Ly8rTFcveUpuZkQ3Ly84UGhBZ0ZBQUNGMjNVTG9TQmRBUkNKaGZENy8vK0RwZXo3Ly84QWk3WHcrLy8vaGY4UGppQUZBQUNLQm9UQUQ0UVdCUUFBalkybysvLy9EN2JBVVZEb0NOZi8vMWxaaGNCMEFVWkcvNFhzKy8vL09iM3MrLy8vZk5EcDZ3UUFBSVBvV0ErRTl3SUFBQ3ZIRDRTVUFBQUFLOEVQaFBiKy8vOHJ4dytGeWdRQUFBKzNBNFBEQkRQMlJ2YUYrUHYvL3lDSnRkajcvLytKbmVUNy8vK0poWno3Ly85MFFvaUZ6UHYvLzQyRnFQdi8vMUNMaGFqNy8vL0doYzM3Ly84QS83Q3NBQUFBallYTSsvLy9VSTJGL1B2Ly8xRG9SMUFBQUlQRUVJWEFmUStKdGNUNy8vL3JCMmFKaGZ6Ny8vK05oZno3Ly8rSmhmRDcvLytKdGV6Ny8vL3BSZ1FBQUlzRGc4TUVpWjNrKy8vL2hjQjBPb3RJQklYSmREUDNoZmo3Ly84QUNBQUFENzhBaVkzdysvLy9kQktaSzhMSGhkajcvLzhCQUFBQTZRRUVBQUNEcGRqNy8vOEE2ZmNEQUFDaElGMEJFSW1GOFB2Ly8xRG9rekVBQUZucDRBTUFBSVA0Y0ErUCtnRUFBQStFNGdFQUFJUDRaUStNemdNQUFJUDRadytPNmYzLy80UDRhWFJ4Zy9odWRDaUQrRzhQaGJJREFBRDJoZmo3Ly8rQXg0WG8rLy8vQ0FBQUFIUmhnWTM0Ky8vL0FBSUFBT3RWaXpPRHd3U0puZVQ3Ly8vb1FVOEFBSVhBRDRRd0JRQUE5b1g0Ky8vL0lIUU1ab3VGNFB2Ly8yYUpCdXNJaTRYZysvLy9pUWJIaGNUNy8vOEJBQUFBNmNFRUFBQ0RqZmo3Ly85QXg0WG8rLy8vQ2dBQUFQZUYrUHYvL3dDQUFBQVBoS3NCQUFDTEE0dFRCSVBEQ09ubkFRQUFkUkptZy9wbmRXUEhoZlQ3Ly84QkFBQUE2MWM1aGZUNy8vOStCb21GOVB2Ly80Rzk5UHYvLzZNQUFBQitQWXU5OVB2Ly80SEhYUUVBQUZmb21CQUFBSXVWNlB2Ly8xbUpoYno3Ly8rRndIUVFpWVh3Ky8vL2liM3MrLy8vaS9EckNzZUY5UHYvLzZNQUFBQ0xBNFBEQ0ltRmxQdi8vNHREL0ltRm1Qdi8vNDJGcVB2Ly8xRC90YUQ3Ly84UHZzTC90ZlQ3Ly8rSm5lVDcvLzlRLzdYcysvLy9qWVdVKy8vL1ZsRC9OVUJkQVJEb1RmRC8vMW4vMEl1ZCtQdi8vNFBFSElIamdBQUFBSFFoZzczMCsvLy9BSFVZallXbysvLy9VRmIvTlV4ZEFSRG9IZkQvLzFuLzBGbFpab085NlB2Ly8yZDFISVhiZFJpTmhhajcvLzlRVnY4MVNGMEJFT2ozNy8vL1dmL1FXVm1BUGkxMUVZR04rUHYvL3dBQkFBQkdpYlh3Ky8vL1Z1a0Uvdi8veDRYMCsvLy9DQUFBQUltTnVQdi8vK3NrZytoekQ0Um4vUC8vSzhjUGhJcisvLytENkFNUGhja0JBQURIaGJqNy8vOG5BQUFBOW9YNCsvLy9nTWVGNlB2Ly94QUFBQUFQaEdyKy8vOXFNRmhtaVlYSSsvLy9pNFc0Ky8vL2c4QlJab21GeXZ2Ly80bTkzUHYvLytsRi92Ly85NFg0Ky8vL0FCQUFBQStGUmY3Ly80UERCUGFGK1B2Ly95QjBIUGFGK1B2Ly8wQ0puZVQ3Ly85MEJnKy9RL3pyQkErM1EveVo2eGYyaGZqNy8vOUFpMFA4ZEFPWjZ3SXowb21kNVB2Ly8vYUYrUHYvLzBCMEc0WFNmeGQ4QklYQWN4SDMySVBTQVBmYWdZMzQrLy8vQUFFQUFQZUYrUHYvL3dDUUFBQ0wyb3Y0ZFFJejI0Tzk5UHYvL3dCOURNZUY5UHYvL3dFQUFBRHJHb09sK1B2Ly8vZTRBQUlBQURtRjlQdi8vMzRHaVlYMCsvLy9pOGNMdzNVR0lZWGMrLy8vamJYNy9mLy9pNFgwKy8vLy80MzArLy8vaGNCL0JvdkhDOE4wTFl1RjZQdi8vNWxTVUZOWDZKNU5BQUNEd1RDRCtUbUpuWkQ3Ly8rTCtJdmFmZ1lEamJqNy8vK0lEazdydlkyRisvMy8veXZHUnZlRitQdi8vd0FDQUFDSmhlejcvLytKdGZENy8vOTBXWVhBZEFlTHpvQTVNSFJPLzQzdysvLy9pNDN3Ky8vL3hnRXdRT3MyaGR0MUM2RWtYUUVRaVlYdysvLy9pNFh3Ky8vL3g0WFkrLy8vQVFBQUFPc0pUMmFET0FCMEJrQkFoZjkxOHl1RjhQdi8vOUg0aVlYcysvLy9nNzNFKy8vL0FBK0ZaUUVBQUl1RitQdi8vNmhBZEN1cEFBRUFBSFFFYWkzckRxZ0JkQVJxSytzR3FBSjBGR29nV0dhSmhjajcvLy9IaGR6Ny8vOEJBQUFBaTUzVSsvLy9pN1hzKy8vL0s5NHJuZHo3Ly8vMmhmajcvLzhNZFJmL3RkRDcvLytOaGVENy8vOVRhaURva2ZYLy80UEVEUCsxM1B2Ly80dTkwUHYvLzQyRjRQdi8vNDJOeVB2Ly8raVk5Zi8vOW9YNCsvLy9DRmwwRy9hRitQdi8vd1IxRWxkVGFqQ05oZUQ3Ly8vb1QvWC8vNFBFRElPOTJQdi8vd0IxZFlYMmZuR0x2ZkQ3Ly8rSnRlajcvLy8vamVqNy8vK05oYWo3Ly85UWk0V28rLy8vLzdDc0FBQUFqWVdjKy8vL1YxRG8zVW9BQUlQRUVJbUZrUHYvLzRYQWZpbi90Wno3Ly8rTGhkRDcvLytOdGVENy8vL291dlQvL3dPOWtQdi8vNE85NlB2Ly93QlpmNmJySElPTjRQdi8vLy9yRTR1TjhQdi8vMWFOaGVENy8vL280L1QvLzFtRHZlRDcvLzhBZkNEMmhmajcvLzhFZEJmL3RkRDcvLytOaGVENy8vOVRhaURvbGZULy80UEVESU85dlB2Ly93QjBFLysxdlB2Ly8raEIxdi8vZzZXOCsvLy9BRm1MdGNENy8vOFB0d2FKaGVqNy8vOW1oY0IwS291TnBQdi8vNHVkNVB2Ly80dlE2WmIxLy8vb0lkei8vOGNBRmdBQUFEUEFVRkJRVUZEcE12WC8vNEM5dFB2Ly93QjBDb3VGc1B2Ly80TmdjUDJMaGVENy8vK0xUZnhmWGpQTlcraHB6Zi8veWNPTlNRQzNad0FRbVdVQUVNdGxBQkFvWmdBUWRXWUFFSUZtQUJESVpnQVEyR2NBRUl2L1ZZdnNnZXgwQkFBQW9SeFFBUkF6eFlsRi9GT0xYUlJXaTNVSU04QlgvM1VRaTMwTWpZMjArLy8vaWJYRSsvLy9pWjNvKy8vL2lZV3MrLy8vaVlYNCsvLy9pWVhVKy8vL2lZWDArLy8vaVlYYysvLy9pWVd3Ky8vL2lZWFkrLy8vNlAzTy8vK0Y5blUxNkZUYi8vL0hBQllBQUFBendGQlFVRkJRNk5yYS8vK0R4QlNBdmNENy8vOEFkQXFMaGJ6Ny8vK0RZSEQ5ZzhqLzZjOEtBQUF6OWp2K2RSTG9HZHYvLzFaV1ZsYkhBQllBQUFCVzY4VVB0dytKdGVENy8vK0p0ZXo3Ly8rSnRjejcvLytKdGFqNy8vK0pqZVQ3Ly85bU84NFBoSFFLQUFCcUFsb0Qram0xNFB2Ly80bTlvUHYvL3crTVNBb0FBSTFCNEdhRCtGaDNEdyszd1ErMmdLQVVBUkNENEEvckFqUEFpN1hNKy8vL2E4QUpEN2FFTU1BVUFSQnFDTUhvQkY2SmhjejcvLzg3eGcrRU0vLy8vNFA0QncrSDNRa0FBUDhraFpCN0FCQXp3SU9OOVB2Ly8vK0poYVQ3Ly8rSmhiRDcvLytKaGRUNy8vK0poZHo3Ly8rSmhmajcvLytKaGRqNy8vL3BzQWtBQUErM3dZUG9JSFJJZytnRGREUXJ4blFrSzhKMEZJUG9BdytGaGdrQUFBbTErUHYvLyttSENRQUFnNDM0Ky8vL0JPbDdDUUFBZzQzNCsvLy9BZWx2Q1FBQWdZMzQrLy8vZ0FBQUFPbGdDUUFBQ1pYNCsvLy82VlVKQUFCbWcva3FkU3VMQTRQREJJbWQ2UHYvLzRtRjFQdi8vNFhBRDQwMkNRQUFnNDM0Ky8vL0JQZWQxUHYvLytra0NRQUFpNFhVKy8vL2E4QUtEN2ZKalVRSTBJbUYxUHYvLytrSkNRQUFnNlgwKy8vL0FPbjlDQUFBWm9QNUtuVWxpd09Ed3dTSm5lajcvLytKaGZUNy8vK0Z3QStOM2dnQUFJT045UHYvLy8vcDBnZ0FBSXVGOVB2Ly8ydkFDZyszeVkxRUNOQ0poZlQ3Ly8vcHR3Z0FBQSszd1lQNFNYUlJnL2hvZEVDRCtHeDBHSVA0ZHcrRm5BZ0FBSUdOK1B2Ly93QUlBQURwalFnQUFHYURQMngxRVFQNmdZMzQrLy8vQUJBQUFPbDJDQUFBZzQzNCsvLy9FT2xxQ0FBQWc0MzQrLy8vSU9sZUNBQUFEN2NIWm9QNE5uVVpab04vQWpSMUVvUEhCSUdOK1B2Ly93Q0FBQURwUEFnQUFHYUQrRE4xR1dhRGZ3SXlkUktEeHdTQnBmajcvLy8vZi8vLzZSMElBQUJtZy9oa0Q0UVRDQUFBWm9QNGFRK0VDUWdBQUdhRCtHOFBoUDhIQUFCbWcvaDFENFQxQndBQVpvUDRlQStFNndjQUFHYUQrRmdQaE9FSEFBQ0RwY3o3Ly84QWk0WEUrLy8vVVkyMTRQdi8vOGVGMlB2Ly93RUFBQURvVXZELy8xbnB1QWNBQUErM3dZUDRaQStQTUFJQUFBK0V2UUlBQUlQNFV3K1BHd0VBQUhSK2craEJkQkFyd25SWks4SjBDQ3ZDRDRYc0JRQUFnOEVneDRXaysvLy9BUUFBQUltTjVQdi8vNE9OK1B2Ly8wQ0R2ZlQ3Ly84QWpiWDgrLy8vdUFBQ0FBQ0p0ZkQ3Ly8rSmhlejcvLzhQalkwQ0FBREhoZlQ3Ly84R0FBQUE2ZWtDQUFEM2hmajcvLzh3Q0FBQUQ0WEpBQUFBZzQzNCsvLy9JT205QUFBQTk0WDQrLy8vTUFnQUFIVUhnNDM0Ky8vL0lJdTk5UHYvLzRQLy8zVUZ2Ly8vLzMrRHd3VDJoZmo3Ly84Z2laM28rLy8vaTF2OGlaM3crLy8vRDRRRkJRQUFoZHQxQzZFZ1hRRVFpWVh3Ky8vL2c2WHMrLy8vQUl1MThQdi8vNFgvRDQ0ZEJRQUFpZ2FFd0ErRUV3VUFBSTJOdFB2Ly93KzJ3RkZRNkY3TC8vOVpXWVhBZEFGR1J2K0Y3UHYvL3ptOTdQdi8vM3pRNmVnRUFBQ0Q2RmdQaFBBQ0FBQXJ3ZytFbFFBQUFJUG9CdytFOWY3Ly95dkNENFhHQkFBQUQ3Y0RnOE1FTS9aRzlvWDQrLy8vSUltMTJQdi8vNG1kNlB2Ly80bUZuUHYvLzNSQ2lJWEkrLy8vallXMCsvLy9VSXVGdFB2Ly84YUZ5ZnYvL3dEL3NLd0FBQUNOaGNqNy8vOVFqWVg4Ky8vL1VPaWNSQUFBZzhRUWhjQjlENG0xc1B2Ly8rc0hab21GL1B2Ly80MkYvUHYvLzRtRjhQdi8vNG0xN1B2Ly8rbENCQUFBaXdPRHd3U0puZWo3Ly8rRndIUTZpMGdFaGNsME0vZUYrUHYvL3dBSUFBQVB2d0NKamZENy8vOTBFcGtyd3NlRjJQdi8vd0VBQUFEcC9RTUFBSU9sMlB2Ly93RHA4d01BQUtFZ1hRRVFpWVh3Ky8vL1VPam9KUUFBV2VuY0F3QUFnL2h3RDQvMkFRQUFENFRlQVFBQWcvaGxENHpLQXdBQWcvaG5ENDdvL2YvL2cvaHBkRzJEK0c1MEpJUDRidytGcmdNQUFQYUYrUHYvLzRDSnRlVDcvLzkwWVlHTitQdi8vd0FDQUFEclZZc3pnOE1FaVozbysvLy82SnBEQUFDRndBK0VWdnIvLy9hRitQdi8veUIwREdhTGhlRDcvLzltaVFickNJdUY0UHYvLzRrR3g0V3crLy8vQVFBQUFPbkJCQUFBZzQzNCsvLy9RTWVGNVB2Ly93b0FBQUQzaGZqNy8vOEFnQUFBRDRTckFRQUFBOTZMUS9pTFUvenA1d0VBQUhVU1pvUDVaM1ZqeDRYMCsvLy9BUUFBQU90WE9ZWDArLy8vZmdhSmhmVDcvLytCdmZUNy8vK2pBQUFBZmoyTHZmVDcvLytCeDEwQkFBQlg2UEVFQUFCWmk0M2srLy8vaVlXbysvLy9oY0IwRUltRjhQdi8vNG05N1B2Ly80dnc2d3JIaGZUNy8vK2pBQUFBaXdPRHd3aUpoWlQ3Ly8rTFEveUpoWmo3Ly8rTmhiVDcvLzlRLzdXaysvLy9ENzdCLzdYMCsvLy9pWjNvKy8vL1VQKzE3UHYvLzQyRmxQdi8vMVpRL3pWQVhRRVE2S2JrLy85Wi85Q0xuZmo3Ly8rRHhCeUI0NEFBQUFCMElZTzk5UHYvL3dCMUdJMkZ0UHYvLzFCVy96Vk1YUUVRNkhiay8vOVovOUJaV1dhRHZlVDcvLzluZFJ5RjIzVVlqWVcwKy8vL1VGYi9OVWhkQVJEb1VPVC8vMW4vMEZsWmdENHRkUkdCamZqNy8vOEFBUUFBUm9tMThQdi8vMWJwQ1A3Ly80bTE5UHYvLzhlRnJQdi8vd2NBQUFEckpJUG9jdytFYXZ6Ly95dkNENFNLL3YvL2crZ0RENFhKQVFBQXg0V3MrLy8vSndBQUFQYUYrUHYvLzRESGhlVDcvLzhRQUFBQUQ0UnEvdi8vYWpCWVpvbUYwUHYvLzR1RnJQdi8vNFBBVVdhSmhkTDcvLytKbGR6Ny8vL3BSZjcvLy9lRitQdi8vd0FRQUFBUGhVWCsvLytEd3dUMmhmajcvLzhnZEJ6MmhmajcvLzlBaVozbysvLy9kQVlQdjBQODZ3UVB0MFA4bWVzWDlvWDQrLy8vUUl0RC9IUURtZXNDTTlLSm5lajcvLy8yaGZqNy8vOUFkQnVGMG44WGZBU0Z3SE1SOTlpRDBnRDMyb0dOK1B2Ly93QUJBQUQzaGZqNy8vOEFrQUFBaTlxTCtIVUNNOXVEdmZUNy8vOEFmUXpIaGZUNy8vOEJBQUFBNnhxRHBmajcvLy8zdUFBQ0FBQTVoZlQ3Ly85K0JvbUY5UHYvLzR2SEM4TjFCaUdGM1B2Ly80MjErLzMvLzR1RjlQdi8vLytOOVB2Ly80WEFmd2FMeHd2RGRDMkxoZVQ3Ly8rWlVsQlRWK2ozUVFBQWc4RXdnL2s1aVoyUSsvLy9pL2lMMm40R0E0MnMrLy8vaUE1TzY3Mk5oZnY5Ly84cnhrYjNoZmo3Ly84QUFnQUFpWVhzKy8vL2liWHcrLy8vZEZtRndIUUhpODZBT1RCMFR2K044UHYvLzR1TjhQdi8vOFlCTUVEck5vWGJkUXVoSkYwQkVJbUY4UHYvLzR1RjhQdi8vOGVGMlB2Ly93RUFBQURyQ1U5bWd6Z0FkQVlEd29YL2RmTXJoZkQ3Ly8vUitJbUY3UHYvLzRPOXNQdi8vd0FQaFdVQkFBQ0xoZmo3Ly8rb1FIUXJxUUFCQUFCMEJHb3Q2dzZvQVhRRWFpdnJCcWdDZEJScUlGaG1pWVhRKy8vL3g0WGMrLy8vQVFBQUFJdWQxUHYvLzR1MTdQdi8veXZlSzUzYysvLy85b1g0Ky8vL0RIVVgvN1hFKy8vL2pZWGcrLy8vVTJvZzZPcnAvLytEeEF6L3RkejcvLytMdmNUNy8vK05oZUQ3Ly8rTmpkRDcvLy9vOGVuLy8vYUYrUHYvL3doWmRCdjJoZmo3Ly84RWRSSlhVMm93allYZysvLy82S2pwLy8rRHhBeUR2ZGo3Ly84QWRYV0Y5bjV4aTczdysvLy9pYlhrKy8vLy80M2srLy8vallXMCsvLy9VSXVGdFB2Ly8vK3dyQUFBQUkyRm5Qdi8vMWRRNkRZL0FBQ0R4QkNKaFpENy8vK0Z3SDRwLzdXYysvLy9pNFhFKy8vL2piWGcrLy8vNkJQcC8vOER2WkQ3Ly8rRHZlVDcvLzhBV1grbTZ4eURqZUQ3Ly8vLzZ4T0xqZkQ3Ly85V2pZWGcrLy8vNkR6cC8vOVpnNzNnKy8vL0FId2c5b1g0Ky8vL0JIUVgvN1hFKy8vL2pZWGcrLy8vVTJvZzZPN28vLytEeEF5RHZhajcvLzhBZEJQL3RhajcvLy9vbXNyLy80T2xxUHYvL3dCWmk3MmcrLy8vaTUzbysvLy9EN2NITS9hSmhlVDcvLzltTzhaMEI0dkk2YUgxLy84NXRjejcvLzkwRFlPOXpQdi8vd2NQaFZEMS8vK0F2Y0Q3Ly84QWRBcUxoYno3Ly8rRFlIRDlpNFhnKy8vL2kwMzhYMTR6elZ2b3lNSC8vOG5EaS85Z2N3QVFXSEVBRUlweEFCRGxjUUFRTVhJQUVEMXlBQkNEY2dBUWduTUFFSXYvVll2c1ZsY3o5djkxQ09pNUlBQUFpL2haaGY5MUp6a0ZhR01CRUhZZlZ2OFZzQUFCRUkyRzZBTUFBRHNGYUdNQkVIWURnOGovaS9DRCtQOTF5b3ZIWDE1ZHc0di9WWXZzVmxjejltb0EvM1VNLzNVSTZJby9BQUNMK0lQRURJWC9kU2M1QldoakFSQjJIMWIvRmJBQUFSQ05odWdEQUFBN0JXaGpBUkIyQTRQSS80dndnL2ovZGNPTHgxOWVYY09MLzFXTDdGWlhNL2IvZFF6L2RRam9Ya0FBQUl2NFdWbUYvM1VzT1VVTWRDYzVCV2hqQVJCMkgxYi9GYkFBQVJDTmh1Z0RBQUE3QldoakFSQjJBNFBJLzR2d2cvai9kY0dMeDE5ZVhjT0wvMVdMN0ZlLzZBTUFBRmYvRmJBQUFSRC9kUWovRlpRQUFSQ0J4K2dEQUFDQi8yRHFBQUIzQklYQWRONWZYY09MLzFXTDdPaXdRd0FBLzNVSTZQMUJBQUQvTlJCWUFSRG8vdDcvLzJqL0FBQUEvOUNEeEF4ZHc0di9WWXZzYUJ3REFSRC9GWlFBQVJDRndIUVZhQXdEQVJCUS94V1lBQUVRaGNCMEJmOTFDUC9RWGNPTC8xV0w3UDkxQ09qSS8vLy9XZjkxQ1A4VnRBQUJFTXhxQ09qMER3QUFXY05xQ09nUkR3QUFXY09MLzFXTDdGYUw4T3NMaXdhRndIUUMvOUNEeGdRN2RRaHk4RjVkdzR2L1ZZdnNWb3QxQ0RQQTZ3K0Z3SFVRaXc2RnlYUUMvOUdEeGdRN2RReHk3RjVkdzR2L1ZZdnNnejB3ZkFFUUFIUVphREI4QVJEb3VrTUFBRm1Gd0hRSy8zVUkveFV3ZkFFUVdlanNPd0FBYUxBQkFSQm9uQUVCRU9paC8vLy9XVm1Gd0hWQ2FOU0dBQkRvQmlNQUFMaUlBUUVReHdRa21BRUJFT2hqLy8vL2d6MDBmQUVRQUZsMEcyZzBmQUVRNkdKREFBQlpoY0IwREdvQWFnSnFBUDhWTkh3QkVEUEFYY05xR0dpSU1BRVE2QkVMQUFCcUNPZ1FEd0FBV1lObC9BQXoyME01SFp4akFSQVBoTVVBQUFDSkhaaGpBUkNLUlJDaWxHTUJFSU45REFBUGhaMEFBQUQvTlNoOEFSRG9qZDMvLzFtTCtJbDkySVgvZEhqL05TUjhBUkRvZU4zLy8xbUw4SWwxM0lsOTVJbDE0SVB1QklsMTNEdjNjbGZvVk4zLy96a0dkTzA3OTNKSy96Ym9UdDMvLzR2NDZEN2QvLytKQnYvWC96VW9mQUVRNkRqZC8vK0wrUDgxSkh3QkVPZ3IzZi8vZzhRTU9YM2tkUVU1UmVCMERvbDk1SWw5MklsRjRJdndpWFhjaTMzWTY1OW93QUVCRUxpMEFRRVE2Ri8rLy85WmFNZ0JBUkM0eEFFQkVPaFAvdi8vV2NkRi9QNy8vLy9vSHdBQUFJTjlFQUIxS0lrZG5HTUJFR29JNkQ0TkFBQlovM1VJNlB6OS8vOHoyME9EZlJBQWRBaHFDT2dsRFFBQVdjUG9Od29BQU1PTC8xV0w3R29BYWdIL2RRam93LzcvLzRQRURGM0RhZ0ZxQUdvQTZMUCsvLytEeEF6RGkvOVc2SFhjLy8rTDhGYm9naUVBQUZib2FFVUFBRmJveGNyLy8xYm9UVVVBQUZib09FVUFBRmJvSUVNQUFGYm9GZ2dBQUZib0EwTUFBR2d2ZndBUTZNZmIvLytEeENTakVGZ0JFRjdEYWxSb3FEQUJFT2h5Q1FBQU0vK0pmZnlOUlp4US94Vk1BQUVReDBYOC92Ly8vMnBBYWlCZVZ1Z20vUC8vV1ZrN3h3K0VGQUlBQUtNZ2V3RVFpVFVJZXdFUWpZZ0FDQUFBNnpER1FBUUFnd2oveGtBRkNvbDRDTVpBSkFER1FDVUt4a0FtQ29sNE9NWkFOQUNEd0VDTERTQjdBUkNCd1FBSUFBQTd3WExNWmpsOXpnK0VDZ0VBQUl0RjBEdkhENFQvQUFBQWl6aU5XQVNOQkR1SlJlUytBQWdBQUR2K2ZBS0wvc2RGNEFFQUFBRHJXMnBBYWlEb21Qdi8vMWxaaGNCMFZvdE40STBNalNCN0FSQ0pBWU1GQ0hzQkVDQ05rQUFJQUFEcktzWkFCQUNEQ1AvR1FBVUtnMkFJQUlCZ0pJREdRQ1VLeGtBbUNvTmdPQURHUURRQWc4QkFpeEVEMWp2Q2N0TC9SZUE1UFFoN0FSQjhuZXNHaXowSWV3RVFnMlhnQUlYL2ZtMkxSZVNMQ0lQNS8zUldnL24rZEZHS0E2Z0JkRXVvQ0hVTFVmOFZ3QUFCRUlYQWREeUxkZUNMeHNINEJZUG1IOEhtQmdNMGhTQjdBUkNMUmVTTEFJa0dpZ09JUmdSb29BOEFBSTFHREZEb3gwTUFBRmxaaGNBUGhNa0FBQUQvUmdqL1JlQkRnMFhrQkRsOTRIeVRNOXVMODhIbUJnTTFJSHNCRUlzR2cvai9kQXVEK1A1MEJvQk9CSURyY3NaR0JJR0YyM1VGYXZaWTZ3cUx3MGozMkJ2QWc4RDFVUDhWdkFBQkVJdjRnLy8vZEVPRi8zUS9WLzhWd0FBQkVJWEFkRFNKUGlYL0FBQUFnL2dDZFFhQVRnUkE2d21EK0FOMUJJQk9CQWhvb0E4QUFJMUdERkRvTVVNQUFGbFpoY0IwTi85R0NPc0tnRTRFUU1jRy92Ly8vME9EK3dNUGpHZi8vLy8vTlFoN0FSRC9GYmdBQVJBendPc1JNOEJBdzR0bDZNZEYvUDcvLy8rRHlQL29jQWNBQU1PTC8xWlh2aUI3QVJDTFBvWC9kREdOaHdBSUFBRHJHb04vQ0FCMENvMUhERkQvRmNnQUFSQ0xCb1BIUUFVQUNBQUFPL2h5NHY4MjZJN0QvLytESmdCWmc4WUVnZjRnZkFFUWZMNWZYc09EUFN4OEFSQUFkUVhveXRYLy8xYUxOY1JmQVJCWE0vK0Y5blVZZzhqLzZhQUFBQUE4UFhRQlIxYm9MUmtBQUZtTmRBWUJpZ2FFd0hYcWFnUkhWK2h1K2YvL2kvaFpXWWs5ZkdNQkVJWC9kTXVMTmNSZkFSQlQ2MEpXNlB3WUFBQ0wyRU9BUGoxWmRERnFBVlBvUVBuLy8xbFppUWVGd0hST1ZsTlE2R2NZQUFDRHhBeUZ3SFFQTThCUVVGQlFVT2hzeC8vL2c4UVVnOGNFQS9PQVBnQjF1ZjgxeEY4QkVPalF3di8vZ3lYRVh3RVFBSU1uQU1jRklId0JFQUVBQUFBendGbGJYMTdEL3pWOFl3RVE2S3JDLy8rREpYeGpBUkFBZzhqLzYrU0wvMVdMN0ZHTFRSQlRNOEJXaVFlTDhvdFZETWNCQVFBQUFEbEZDSFFKaTEwSWcwVUlCSWtUaVVYOGdENGlkUkF6d0RsRi9MTWlENVRBUm9sRi9Pczgvd2VGMG5RSWlnYUlBa0tKVlF5S0hnKzJ3MUJHNkJoQ0FBQlpoY0IwRS84SGczME1BSFFLaTAwTWlnYi9SUXlJQVVhTFZReUxUUkNFMjNReWczMzhBSFdwZ1BzZ2RBV0Erd2wxbjRYU2RBVEdRdjhBZzJYOEFJQStBQStFNlFBQUFJb0dQQ0IwQkR3SmRRWkc2L05PNitPQVBnQVBoTkFBQUFDRGZRZ0FkQW1MUlFpRFJRZ0VpUkQvQVRQYlF6UEo2d0pHUVlBK1hIVDVnRDRpZFNiMndRRjFINE45L0FCMERJMUdBWUE0SW5VRWkvRHJEVFBBTTlzNVJmd1BsTUNKUmZ6UjZZWEpkQkpKaGRKMEJNWUNYRUwvQjRYSmRmR0pWUXlLQm9UQWRGV0RmZndBZFFnOElIUkxQQWwwUjRYYmREMFB2c0JRaGRKMEkrZ3pRUUFBV1lYQWRBMktCb3RORFA5RkRJZ0JSdjhIaTAwTWlnYi9SUXlJQWVzTjZCQkJBQUJaaGNCMEEwYi9CLzhIaTFVTVJ1bFcvLy8vaGRKMEI4WUNBRUtKVlF6L0I0dE5FT2tPLy8vL2kwVUlYbHVGd0hRRGd5QUEvd0hKdzR2L1ZZdnNnK3dNVXpQYlZsYzVIU3g4QVJCMUJlaEcwLy8vYUFRQkFBQytvR01CRUZaVGlCMmtaQUVRL3hYTUFBRVFvVGg4QVJDSk5ZeGpBUkE3dzNRSGlVWDhPQmgxQTRsMS9JdFYvSTFGK0ZCVFU0MTk5T2dLL3YvL2kwWDRnOFFNUGYvLy96OXpTb3ROOUlQNS8zTkNpL2pCNXdLTkJBODd3WEkyVU9oeDl2Ly9pL0JaTy9OMEtZdFYvSTFGK0ZBRC9sZFdqWDMwNk1uOS8vK0xSZmlEeEF4SW8zQmpBUkNKTlhSakFSQXp3T3NEZzhqL1gxNWJ5Y09MLzFXTDdLR29aQUVRZyt3TVUxYUxOZUFBQVJCWE05c3ovenZEZFM3LzFvdjRPL3QwRE1jRnFHUUJFQUVBQUFEckkvOFZIQUFCRUlQNGVIVUthZ0pZbzZoa0FSRHJCYUdvWkFFUWcvZ0JENFdCQUFBQU8vdDFELy9XaS9nNyszVUhNOERweWdBQUFJdkhaamtmZEE1QVFHWTVHSFg1UUVCbU9SaDE4b3MxM0FBQkVGTlRVeXZIVTlINFFGQlhVMU9KUmZULzFvbEYrRHZEZEM5UTZKZjEvLzlaaVVYOE84TjBJVk5ULzNYNFVQOTE5RmRUVS8vV2hjQjFEUDkxL09pRnYvLy9XWWxkL0l0ZC9GZi9GZGdBQVJDTHcrdGNnL2dDZEFRN3czV0MveFhVQUFFUWkvQTc4dytFY3YvLy96Z2VkQXBBT0JoMSswQTRHSFgySzhaQVVJbEYrT2d3OWYvL2kvaFpPL3QxREZiL0ZkQUFBUkRwUmYvLy8vOTErRlpYNkRQQS8vK0R4QXhXL3hYUUFBRVFpOGRmWGx2Snc0di9WcmdZTHdFUXZoZ3ZBUkJYaS9nN3huTVBpd2VGd0hRQy85Q0R4d1E3L25MeFgxN0RpLzlXdUNBdkFSQytJQzhCRUZlTCtEdkdjdytMQjRYQWRBTC8wSVBIQkR2K2N2RmZYc09MLzFXTDdEUEFPVVVJYWdBUGxNQm9BQkFBQUZEL0ZlUUFBUkNqckdRQkVJWEFkUUpkd3pQQVFLTUVld0VRWGNPRFBRUjdBUkFEZFZkVE05czVIZWg2QVJCWGl6MTRBQUVRZmpOV2l6WHNlZ0VRZzhZUWFBQ0FBQUJxQVA5Mi9QOFY3QUFCRVA4MmFnRC9OYXhrQVJELzE0UEdGRU03SGVoNkFSQjgyRjcvTmV4NkFSQnFBUDgxckdRQkVQL1hYMXYvTmF4a0FSRC9GZWdBQVJDREpheGtBUkFBdzhPTC8xV0w3RkZSVnVnQjF2Ly9pL0NGOWcrRVJnRUFBSXRXWEtGb1dBRVFWNHQ5Q0l2S1V6azVkQTZMMkd2YkRJUEJEQVBhTzh0eTdtdkFEQVBDTzhoekNEazVkUVNMd2VzQ004Q0Z3SFFLaTFnSWlWMzhoZHQxQnpQQTZmc0FBQUNEK3dWMURJTmdDQUF6d0VEcDZnQUFBSVA3QVErRTNnQUFBSXRPWUlsTitJdE5ESWxPWUl0SUJJUDVDQStGdUFBQUFJc05YRmdCRUlzOVlGZ0JFSXZSQS9rNzEzMGthOGtNaTM1Y2cyUTVDQUNMUFZ4WUFSQ0xIV0JZQVJCQ0E5K0R3UXc3MDN6aWkxMzhpd0NMZm1ROWpnQUF3SFVKeDBaa2d3QUFBT3RlUFpBQUFNQjFDY2RHWklFQUFBRHJUajJSQUFEQWRRbkhSbVNFQUFBQTZ6NDlrd0FBd0hVSngwWmtoUUFBQU9zdVBZMEFBTUIxQ2NkR1pJSUFBQURySGoyUEFBREFkUW5IUm1TR0FBQUE2dzQ5a2dBQXdIVUh4MFpraWdBQUFQOTJaR29JLzlOWmlYNWs2d2VEWUFnQVVmL1RpMFg0V1lsR1lJUEkvMXRmWHNuRGkvOVZpK3k0WTNOdDREbEZDSFVOLzNVTVVPaUkvdi8vV1ZsZHd6UEFYY1BNYUlDSkFCQmsvelVBQUFBQWkwUWtFSWxzSkJDTmJDUVFLK0JUVmxlaEhGQUJFREZGL0RQRlVJbGw2UDkxK0l0Ri9NZEYvUDcvLy8rSlJmaU5SZkJrb3dBQUFBRERpMDN3WklrTkFBQUFBRmxmWDE1YmkrVmRVY1BNek16TXpNek1pLzlWaSt5RDdCaFRpMTBNVm90ekNETTFIRkFCRUZlTEJzWkYvd0RIUmZRQkFBQUFqWHNRZy9qK2RBMkxUZ1FEenpNTU9PaWJzLy8vaTA0TWkwWUlBODh6RERqb2k3UC8vNHRGQ1BaQUJHWVBoUllCQUFDTFRSQ05WZWlKVS95TFd3eUpSZWlKVGV5RCsvNTBYNDFKQUkwRVc0dE1oaFNOUklZUWlVWHdpd0NKUmZpRnlYUVVpOWZvS0JRQUFNWkYvd0dGd0h4QWYwZUxSZmlMMklQNC9uWE9nSDMvQUhRa2l3YUQrUDUwRFl0T0JBUFBNd3c0NkJpei8vK0xUZ3lMVmdnRHp6TU1PdWdJcy8vL2kwWDBYMTViaStWZHc4ZEY5QUFBQUFEcnlZdE5DSUU1WTNOdDRIVXBnejNRTEFFUUFIUWdhTkFzQVJEbzB6WUFBSVBFQklYQWRBK0xWUWhxQVZML0ZkQXNBUkNEeEFpTFRRem95eE1BQUl0RkREbFlESFFTYUJ4UUFSQlhpOU9MeU9qT0V3QUFpMFVNaTAzNGlVZ01pd2FEK1A1MERZdE9CQVBQTXd3NDZJV3kvLytMVGd5TFZnZ0R6ek1NT3VoMXN2Ly9pMFh3aTBnSWk5Zm9ZUk1BQUxyKy8vLy9PVk1NRDRSUy8vLy9hQnhRQVJCWGk4dm9lUk1BQU9rYy8vLy9pLzlWaSt5RDdCQ2hIRkFCRUlObCtBQ0RaZndBVTFlL1R1WkF1N3NBQVAvL084ZDBEWVhEZEFuMzBLTWdVQUVRNjJCV2pVWDRVUDhWL0FBQkVJdDEvRE4xK1A4VitBQUJFRFB3L3hWY0FBRVFNL0QvRmZRQUFSQXo4STFGOEZEL0ZmQUFBUkNMUmZRelJmQXo4RHYzZFFlK1QrWkF1K3NMaGZOMUI0dkd3ZUFRQy9DSk5SeFFBUkQzMW9rMUlGQUJFRjVmVzhuRGd5VUFld0VRQU1PTC8xWlhNL2Evc0dRQkVJTTg5WFJZQVJBQmRSNk5CUFZ3V0FFUWlUaG9vQThBQVA4d2c4Y1k2QW81QUFCWldZWEFkQXhHZy80a2ZOSXp3RUJmWHNPREpQVndXQUVRQURQQTYvR0wvMU9MSGNnQUFSQld2bkJZQVJCWGl6NkYvM1FUZzM0RUFYUU5WLy9UVitpbXVmLy9neVlBV1lQR0NJSCtrRmtCRUh6Y3ZuQllBUkJmaXdhRndIUUpnMzRFQVhVRFVQL1RnOFlJZ2Y2UVdRRVFmT1plVzhPTC8xV0w3SXRGQ1A4MHhYQllBUkQvRlFBQkFSQmR3Mm9NYU1nd0FSRG9zZnovL3pQL1I0bDk1RFBiT1Iyc1pBRVFkUmpvOVRNQUFHb2U2RU15QUFCby93QUFBT2grOFAvL1dWbUxkUWlOTlBWd1dBRVFPUjUwQkl2SDYyNXFHT2dBNy8vL1dZdjRPL3QxRCtnWXYvLy94d0FNQUFBQU04RHJVV29LNkZrQUFBQlppVjM4T1I1MUxHaWdEd0FBVitnQk9BQUFXVm1Gd0hVWFYralV1UC8vV2VqaXZ2Ly94d0FNQUFBQWlWM2s2d3VKUHVzSFYraTV1UC8vV2NkRi9QNy8vLy9vQ1FBQUFJdEY1T2hKL1AvL3cyb0s2Q2ovLy85Wnc0di9WWXZzaTBVSVZvMDB4WEJZQVJDRFBnQjFFMURvSXYvLy8xbUZ3SFVJYWhIb2N1Ly8vMW4vTnY4VkJBRUJFRjVkdzR2L1ZZdnNpdzNvZWdFUW9leDZBUkJyeVJRRHlPc1JpMVVJSzFBTWdmb0FBQkFBY2dtRHdCUTd3WExyTThCZHc0di9WWXZzZyt3UWkwMElpMEVRVm90MURGZUwvaXQ1RElQRy9NSHZENHZQYWNrRUFnQUFqWXdCUkFFQUFJbE44SXNPU1lsTi9QYkJBUStGMHdJQUFGT05IREdMRTRsVjlJdFcvSWxWK0l0VjlJbGREUGJDQVhWMHdmb0VTb1A2UDNZRGFqOWFpMHNFTzBzSWRVSzdBQUFBZ0lQNklITVppOHJUNjQxTUFnVDMweUZjdUVUK0NYVWppMDBJSVJuckhJMUs0TlByalV3Q0JQZlRJWnk0eEFBQUFQNEpkUWFMVFFnaFdRU0xYUXlMVXdpTFd3U0xUZndEVGZTSldnU0xWUXlMV2dTTFVnaUpVd2lKVGZ5TDBjSDZCRXFEK2o5MkEyby9Xb3RkK0lQakFZbGQ5QStGandBQUFDdDErSXRkK01IN0JHby9pWFVNUzE0NzNuWUNpOTREVGZpTDBjSDZCRXFKVGZ3NzFuWUNpOVk3Mm5SZWkwME1pM0VFTzNFSWRUdStBQUFBZ0lQN0lITVhpOHZUN3ZmV0lYUzRSUDVNQXdSMUlZdE5DQ0V4NnhxTlMrRFQ3dmZXSWJTNHhBQUFBUDVNQXdSMUJvdE5DQ0Z4Qkl0TkRJdHhDSXRKQklsT0JJdE5ESXR4Qkl0SkNJbE9DSXQxRE9zRGkxMElnMzMwQUhVSU85b1BoSUFBQUFDTFRmQ05ETkdMV1FTSlRnaUpYZ1NKY1FTTFRnU0pjUWlMVGdRN1RnaDFZSXBNQWdTSVRRLyt3WWhNQWdTRCtpQnpKWUI5RHdCMURvdkt1d0FBQUlEVDY0dE5DQWtadXdBQUFJQ0x5dFByalVTNFJBa1k2eW1BZlE4QWRSQ05TdUM3QUFBQWdOUHJpMDBJQ1ZrRWpVcmd1Z0FBQUlEVDZvMkV1TVFBQUFBSkVJdEYvSWtHaVVRdy9JdEY4UDhJRDRYekFBQUFvUUJtQVJDRndBK0UyQUFBQUlzTi9Ib0JFSXMxN0FBQkVHZ0FRQUFBd2VFUEEwZ011d0NBQUFCVFVmL1dpdzM4ZWdFUW9RQm1BUkM2QUFBQWdOUHFDVkFJb1FCbUFSQ0xRQkNMRGZ4NkFSQ0RwSWpFQUFBQUFLRUFaZ0VRaTBBUS9raERvUUJtQVJDTFNCQ0FlVU1BZFFtRFlBVCtvUUJtQVJDRGVBai9kV1ZUYWdEL2NBei8xcUVBWmdFUS8zQVFhZ0QvTmF4a0FSRC9GWGdBQVJDTERlaDZBUkNoQUdZQkVHdkpGSXNWN0hvQkVDdklqVXdSN0ZHTlNCUlJVT2kydS8vL2kwVUlnOFFNL3czb2VnRVFPd1VBWmdFUWRnU0RiUWdVb2V4NkFSQ2o5SG9CRUl0RkNLTUFaZ0VRaVQzOGVnRVFXMTlleWNPaCtIb0JFRmFMTmVoNkFSQlhNLzg3OEhVMGc4QVFhOEFVVVA4MTdIb0JFRmYvTmF4a0FSRC9GUkFCQVJBN3gzVUVNOERyZUlNRitIb0JFQkNMTmVoNkFSQ2o3SG9CRUd2MkZBTTE3SG9CRUdqRVFRQUFhZ2ovTmF4a0FSRC9GUWdCQVJDSlJoQTd4M1RIYWdSb0FDQUFBR2dBQUJBQVYvOFZEQUVCRUlsR0REdkhkUkwvZGhCWC96V3NaQUVRL3hWNEFBRVE2NXVEVGdqL2lUNkpmZ1QvQmVoNkFSQ0xSaENEQ1ArTHhsOWV3NHYvVll2c1VWR0xUUWlMUVFoVFZvdHhFRmN6MitzREE4QkRoY0I5K1l2RGFjQUVBZ0FBallRd1JBRUFBR28vaVVYNFdvbEFDSWxBQklQQUNFcDE5R29FaS90b0FCQUFBTUhuRHdONURHZ0FnQUFBVi84VkRBRUJFSVhBZFFpRHlQL3BuUUFBQUkyWEFIQUFBSWxWL0R2NmQwT0x5aXZQd2VrTWpVY1FRWU5JK1ArRGlPd1BBQUQvalpEOER3QUFpUkNOa1B6di8vL0hRUHp3RHdBQWlWQUV4NERvRHdBQThBOEFBQVVBRUFBQVNYWExpMVg4aTBYNEJmZ0JBQUNOVHd5SlNBU0pRUWlOU2d5SlNBaUpRUVNEWko1RUFEUC9SNG04bnNRQUFBQ0tSa09LeVA3QmhNQ0xSUWlJVGtOMUF3bDRCTG9BQUFDQWk4dlQ2dmZTSVZBSWk4TmZYbHZKdzR2L1ZZdnNnK3dNaTAwSWkwRVFVMWFMZFJCWGkzME1pOWNyVVF5RHhoZkI2ZytMeW1uSkJBSUFBSTJNQVVRQkFBQ0pUZlNMVC95RDV2QkpPL0dOZkRuOGl4K0pUUkNKWGZ3UGpsVUJBQUQyd3dFUGhVVUJBQUFEMlR2ekQ0ODdBUUFBaTAzOHdma0VTWWxOK0lQNVAzWUdhajlaaVUzNGkxOEVPMThJZFVPN0FBQUFnSVA1SUhNYTArdUxUZmlOVEFFRTk5TWhYSkJFL2dsMUpvdE5DQ0VaNngrRHdlRFQ2NHROK0kxTUFRVDMweUdja01RQUFBRCtDWFVHaTAwSUlWa0VpMDhJaTE4RWlWa0VpMDhFaTM4SWlYa0lpMDBRSzg0QlRmeURmZndBRDQ2bEFBQUFpMzM4aTAwTXdmOEVUNDFNTWZ5RC96OTJBMm8vWDR0ZDlJMGMrNGxkRUl0YkJJbFpCSXRkRUlsWkNJbExCSXRaQklsTENJdFpCRHRaQ0hWWGlrd0hCSWhORS83QmlFd0hCSVAvSUhNY2dIMFRBSFVPaTgrN0FBQUFnTlByaTAwSUNSbU5SSkJFaTgvcklJQjlFd0IxRUkxUDRMc0FBQUNBMCt1TFRRZ0pXUVNOaEpERUFBQUFqVS9ndWdBQUFJRFQ2Z2tRaTFVTWkwMzhqVVF5L0lrSWlVd0IvT3NEaTFVTWpVWUJpVUw4aVVReStPazhBUUFBTThEcE9BRUFBQStOTHdFQUFJdGREQ2wxRUkxT0FZbEwvSTFjTS95TGRSREIvZ1JPaVYwTWlVdjhnLzQvZGdOcVAxNzJSZndCRDRXQUFBQUFpM1g4d2Y0RVRvUCtQM1lEYWo5ZWkwOEVPMDhJZFVLN0FBQUFnSVArSUhNWmk4N1Q2NDEwQmdUMzB5RmNrRVQrRG5VamkwMElJUm5ySEkxTzROUHJqVXdHQlBmVElaeVF4QUFBQVA0SmRRYUxUUWdoV1FTTFhReUxUd2lMZHdTSmNRU0xkd2lMVHdTSmNRaUxkUkFEZGZ5SmRSREIvZ1JPZy80L2RnTnFQMTZMVGZTTkRQR0xlUVNKU3dpSmV3U0pXUVNMU3dTSldRaUxTd1E3U3doMVY0cE1CZ1NJVFEvK3dZaE1CZ1NEL2lCekhJQjlEd0IxRG92T3Z3QUFBSURUNzR0TkNBazVqVVNRUkl2TzZ5Q0FmUThBZFJDTlR1Qy9BQUFBZ05QdmkwMElDWGtFallTUXhBQUFBSTFPNExvQUFBQ0EwK29KRUl0RkVJa0RpVVFZL0RQQVFGOWVXOG5EaS85VmkreUQ3QlNoNkhvQkVJdE5DR3ZBRkFNRjdIb0JFSVBCRjRQaDhJbE44TUg1QkZOSmcva2dWbGQ5QzRQTy85UHVnMDM0LytzTmc4SGdnOHIvTS9iVDZvbFYrSXNOOUhvQkVJdlo2eEdMVXdTTE95TlYrQ1ArQzlkMUNvUERGSWxkQ0R2WWN1ZzcySFYvaXgzc2VnRVE2eEdMVXdTTE95TlYrQ1ArQzlkMUNvUERGSWxkQ0R2WmN1ZzcyWFZiNnd5RGV3Z0FkUXFEd3hTSlhRZzcySEx3TzloMU1Zc2Q3SG9CRU9zSmczc0lBSFVLZzhNVWlWMElPOWx5OER2WmRSWG9vUHIvLzR2WWlWMEloZHQxQnpQQTZRa0NBQUJUNkRyNy8vOVppMHNRaVFHTFF4Q0RPUDkwNVlrZDlIb0JFSXRERUlzUWlWWDhnL3IvZEJTTGpKREVBQUFBaTN5UVJDTk4rQ1ArQzg5MUtZTmwvQUNMa01RQUFBQ05TRVNMT1NOVitDUCtDOWQxRHY5Ri9JdVJoQUFBQUlQQkJPdm5pMVg4aThwcHlRUUNBQUNOakFGRUFRQUFpVTMwaTB5UVJEUC9JODUxRW91TWtNUUFBQUFqVGZocUlGL3JBd1BKUjRYSmZmbUxUZlNMVlBrRWl3b3JUZkNMOGNIK0JFNkQvaitKVGZoK0Eyby9YanYzRDRRQkFRQUFpMG9FTzBvSWRWeUQveUM3QUFBQWdIMG1pOC9UNjR0Ti9JMThPQVQzMDRsZDdDTmNpRVNKWEloRS9nOTFNNHRON0l0ZENDRUw2eXlOVCtEVDY0dE4vSTJNaU1RQUFBQ05mRGdFOTlNaEdmNFBpVjNzZFF1TFhRaUxUZXdoU3dUckE0dGRDSU45K0FDTFNnaUxlZ1NKZVFTTFNnU0xlZ2lKZVFnUGhJMEFBQUNMVGZTTkRQR0xlUVNKU2dpSmVnU0pVUVNMU2dTSlVRaUxTZ1E3U2doMVhvcE1CZ1NJVFF2K3dZUCtJSWhNQmdSOUk0QjlDd0IxQzc4QUFBQ0FpODdUN3drN2k4Ni9BQUFBZ05QdmkwMzhDWHlJUk9zcGdIMExBSFVOalU3Z3Z3QUFBSURUN3dsN0JJdE4vSTI4aU1RQUFBQ05UdUMrQUFBQWdOUHVDVGVMVGZpRnlYUUxpUXFKVEJIODZ3T0xUZmlMZGZBRDBZMU9BWWtLaVV3eS9JdDE5SXNPalhrQmlUNkZ5WFVhT3gwQVpnRVFkUktMVGZ3N0RmeDZBUkIxQjRNbEFHWUJFQUNMVGZ5SkNJMUNCRjllVzhuRFZZdnNnK3dFaVgzOGkzMElpMDBNd2VrSFpnL3Z3T3NJamFRa0FBQUFBSkJtRDM4SFpnOS9SeEJtRDM5SElHWVBmMGN3Wmc5L1IwQm1EMzlIVUdZUGYwZGdaZzkvUjNDTnY0QUFBQUJKZGRDTGZmeUw1VjNEVll2c2crd1FpWDM4aTBVSW1ZdjRNL29yK29QbkR6UDZLL3FGLzNVOGkwMFFpOUdENG4rSlZmUTd5blFTSzhwUlVPaHovLy8vZzhRSWkwVUlpMVgwaGRKMFJRTkZFQ3ZDaVVYNE04Q0xmZmlMVGZUenFvdEZDT3N1OTkrRHh4Q0pmZkF6d0l0OUNJdE44UE9xaTBYd2kwMElpMVVRQThncjBGSnFBRkhvZnYvLy80UEVESXRGQ0l0OS9JdmxYY05xREdqb01BRVE2Qkh3Ly8rRFpmd0FaZzhvd2NkRjVBRUFBQURySTR0RjdJc0Fpd0E5QlFBQXdIUUtQUjBBQU1CMEF6UEF3elBBUU1PTFplaURaZVFBeDBYOC92Ly8vNHRGNU9nVDhQLy93NHYvVll2c2crd1lNOEJUaVVYOGlVWDBpVVg0VTV4WWk4ZzFBQUFnQUZDZG5Gb3IwWFFmVVowendBK2lpVVgwaVYzb2lWWHNpVTN3dUFFQUFBQVBvb2xWL0lsRitGdjNSZndBQUFBRWRBN29YUC8vLzRYQWRBVXp3RURyQWpQQVc4bkQ2Sm4vLy8rajVIb0JFRFBBdzFXTDdJUHNDSWw5L0lsMStJdDFESXQ5Q0l0TkVNSHBCK3NHalpzQUFBQUFaZzl2Qm1ZUGIwNFFaZzl2VmlCbUQyOWVNR1lQZndkbUQzOVBFR1lQZjFjZ1pnOS9YekJtRDI5bVFHWVBiMjVRWmc5dmRtQm1EMjkrY0dZUGYyZEFaZzkvYjFCbUQzOTNZR1lQZjM5d2piYUFBQUFBamIrQUFBQUFTWFdqaTNYNGkzMzhpK1ZkdzFXTDdJUHNISWw5OUlsMStJbGQvSXRkREl2RG1ZdklpMFVJTThvcnlvUGhEelBLSzhxWmkvZ3oraXY2ZytjUE0vb3Irb3ZSQzlkMVNvdDFFSXZPZytGL2lVM29PL0YwRXl2eFZsTlE2Q2YvLy8rRHhBeUxSUWlMVGVpRnlYUjNpMTBRaTFVTUE5TXIwWWxWN0FQWUs5bUpYZkNMZGV5TGZmQ0xUZWp6cEl0RkNPdFRPODkxTmZmWmc4RVFpVTNraTNVTWkzMElpMDNrODZTTFRRZ0RUZVNMVlF3RFZlU0xSUkFyUmVSUVVsSG9UUC8vLzRQRURJdEZDT3NhaTNVTWkzMElpMDBRaTlIQjZRTHpwWXZLZytFRDg2U0xSUWlMWGZ5TGRmaUxmZlNMNVYzRGkvOVZpK3lMVFFoVE05dFdWenZMZEFlTGZRdzcrM2NiNkl1dy8vOXFGbDZKTUZOVFUxTlQ2QlN3Ly8rRHhCU0x4dXN3aTNVUU8vTjFCSWdaNjlxTDBZb0dpQUpDUmpyRGRBTlBkZk03KzNVUWlCbm9VTEQvLzJvaVdZa0lpL0hyd1RQQVgxNWJYY1BNek16TXpNek16TXpNek15TFRDUUU5OEVEQUFBQWRDU0tBWVBCQVlUQWRFNzN3UU1BQUFCMTd3VUFBQUFBamFRa0FBQUFBSTJrSkFBQUFBQ0xBYnIvL3Y1K0E5Q0Q4UDh6d29QQkJLa0FBUUdCZE9pTFFmeUV3SFF5aE9SMEpLa0FBUDhBZEJPcEFBQUEvM1FDNjgyTlFmK0xUQ1FFSzhIRGpVSCtpMHdrQkN2Qnc0MUIvWXRNSkFRcndjT05RZnlMVENRRUs4SERhZ3hvQ0RFQkVPanA3UC8vZzJYa0FJdDFDRHMxOEhvQkVIY2lhZ1RvMmZELy8xbURaZndBVnVqZytQLy9XWWxGNU1kRi9QNy8vLy9vQ1FBQUFJdEY1T2oxN1AvL3cyb0U2TlR2Ly85Wnc0di9WWXZzVm90MUNJUCs0QStIb1FBQUFGTlhpejBJQVFFUWd6MnNaQUVRQUhVWTZOY2pBQUJxSHVnbElnQUFhUDhBQUFEb1lPRC8vMWxab1FSN0FSQ0QrQUYxRG9YMmRBU0x4dXNETThCQVVPc2NnL2dEZFF0VzZGUC8vLzlaaGNCMUZvWDJkUUZHZzhZUGcrYndWbW9BL3pXc1pBRVEvOWVMMklYYmRTNXFERjQ1QlpocEFSQjBGZjkxQ09qcEF3QUFXWVhBZEErTGRRanBlLy8vLytpMnJ2Ly9pVERvcjY3Ly80a3dYNHZEVytzVVZ1akNBd0FBV2VpYnJ2Ly94d0FNQUFBQU04QmVYY05UVmxlTFZDUVFpMFFrRkl0TUpCaFZVbEJSVVdqVW5RQVFaUDgxQUFBQUFLRWNVQUVRTThTSlJDUUlaSWtsQUFBQUFJdEVKRENMV0FpTFRDUXNNeG1MY0F5RC92NTBPNHRVSkRTRCt2NTBCRHZ5ZGk2Tk5IYU5YTE1RaXd1SlNBeURld1FBZGN4b0FRRUFBSXREQ09oYUtRQUF1UUVBQUFDTFF3am9iQ2tBQU91d1pJOEZBQUFBQUlQRUdGOWVXOE9MVENRRTkwRUVCZ0FBQUxnQkFBQUFkRE9MUkNRSWkwZ0lNOGpvWUovLy8xV0xhQmovY0F6L2NCRC9jQlRvUHYvLy80UEVERjJMUkNRSWkxUWtFSWtDdUFNQUFBRERWWXRNSkFpTEtmOXhIUDl4R1A5eEtPZ1YvLy8vZzhRTVhjSUVBRlZXVjFPTDZqUEFNOXN6MGpQMk0vLy8wVnRmWGwzRGkrcUw4WXZCYWdIb3R5Z0FBRFBBTTlzenlUUFNNLy8vNWxXTDdGTldWMm9BYWdCb2U1NEFFRkhvRDBJQUFGOWVXMTNEVll0c0pBaFNVZjkwSkJUb3RQNy8vNFBFREYzQ0NBQ0wvMVdMN0ZPTFhRaFdWNHY1eHdmUUNnRVFpd09Gd0hRbVVPanEvUC8vaS9CR1Z1aTcvZi8vV1ZtSlJ3U0Z3SFFTL3pOV1VPaGIvUC8vZzhRTTZ3U0Rad1FBeDBjSUFRQUFBSXZIWDE1YlhjSUVBSXYvVll2c2k4R0xUUWpIQU5BS0FSQ0xDWU5nQ0FDSlNBUmR3Z2dBaS85VmkreFRpMTBJVm92eHh3YlFDZ0VRaTBNSWlVWUloY0NMUXdSWGRER0Z3SFFuVU9odi9QLy9pL2hIVitoQS9mLy9XVm1KUmdTRndIUVkvM01FVjFEbzMvdi8vNFBFRE9zSmcyWUVBT3NEaVVZRVg0dkdYbHRkd2dRQWcza0lBTWNCMEFvQkVIUUovM0VFNkVpbS8vOVp3NHRCQklYQWRRVzQyQW9CRU1PTC8xV0w3RmFMOGVqUS8vLy85a1VJQVhRSFZ1akRuZi8vV1l2R1hsM0NCQUNMLzFXTDdGRlRWbGYvTlNoOEFSRG9IcnovLy84MUpId0JFSXY0aVgzODZBNjgvLytMOEZsWk8vY1Bnb01BQUFDTDNpdmZqVU1FZy9nRWNuZFg2RWtuQUFDTCtJMURCRms3K0hOSXVBQUlBQUE3K0hNQ2k4Y0R4enZIY2c5US8zWDg2RFBjLy85WldZWEFkUmFOUnhBN3gzSkFVUDkxL09nZDNQLy9XVm1Gd0hReHdmc0NVSTAwbU9ncHUvLy9XYU1vZkFFUS8zVUk2QnU3Ly8rSkJvUEdCRmJvRUx2Ly8xbWpKSHdCRUl0RkNGbnJBalBBWDE1YnljT0wvMVpxQkdvZzZJZmIvLytMOEZibzZici8vNFBFREtNb2ZBRVFveVI4QVJDRjluVUZhaGhZWHNPREpnQXp3RjdEYWd4b0tERUJFT2lCNlAvLzZJZmMvLytEWmZ3QS8zVUk2UGorLy85WmlVWGt4MFg4L3YvLy8rZ0pBQUFBaTBYazZKM28vLy9ENkdiYy8vL0RpLzlWaSt6L2RRam90Ly8vLy9mWUc4RDMyRmxJWGNPTC8xV0w3SXRGQ0tOQVpnRVFYY09MLzFXTDdQODFRR1lCRU9qVnV2Ly9XWVhBZEEvL2RRai8wRm1Gd0hRRk04QkFYY016d0YzRGkvOVZpK3lEN0NDTFJRaFdWMm9JV2I3c0NnRVFqWDNnODZXSlJmaUxSUXhmaVVYOFhvWEFkQXoyQUFoMEI4ZEY5QUJBbVFHTlJmUlEvM1h3LzNYay8zWGcveFVZQVFFUXljSUlBSXYvVll2c2kwVUloY0IwRW9Qb0NJRTQzZDBBQUhVSFVPZzZwUC8vV1YzRGkvOVZpK3lEN0JTaEhGQUJFRFBGaVVYOFUxWXoyMWVMOFRrZFJHWUJFSFU0VTFNei8wZFhhQXdMQVJCb0FBRUFBRlAvRlNRQkFSQ0Z3SFFJaVQxRVpnRVE2eFgvRlJ3QUFSQ0QrSGgxQ3NjRlJHWUJFQUlBQUFBNVhSUitJb3RORkl0RkVFazRHSFFJUUR2TGRmYUR5ZitMUlJRcndVZzdSUlI5QVVDSlJSU2hSR1lCRUlQNEFnK0VyQUVBQUR2REQ0U2tBUUFBZy9nQkQ0WE1BUUFBaVYzNE9WMGdkUWlMQm90QUJJbEZJSXMxSUFFQkVEUEFPVjBrVTFQL2RSUVBsY0QvZFJDTkJNVUJBQUFBVVA5MUlQL1dpL2c3K3crRWp3RUFBSDVEYXVBejBsajM5NFA0QW5JM2pVUS9DRDBBQkFBQWR4UG9YU2NBQUl2RU84TjBITWNBek13QUFPc1JVT2pqK2YvL1dUdkRkQW5IQU4zZEFBQ0R3QWlKUmZUckE0bGQ5RGxkOUErRVBnRUFBRmYvZGZUL2RSVC9kUkJxQWY5MUlQL1doY0FQaE9NQUFBQ0xOU1FCQVJCVFUxZi9kZlQvZFF6L2RRai8xb3ZJaVUzNE84c1BoTUlBQUFEM1JRd0FCQUFBZENrNVhSd1BoTEFBQUFBN1RSd1BqNmNBQUFEL2RSei9kUmhYLzNYMC8zVU0vM1VJLzlicGtBQUFBRHZMZmtWcTREUFNXUGZ4Zy9nQ2NqbU5SQWtJUFFBRUFBQjNGdWllSmdBQWkvUTc4M1JxeHdiTXpBQUFnOFlJNnhwUTZDSDUvLzlaTzhOMENjY0EzZDBBQUlQQUNJdnc2d0l6OWp2emRFSC9kZmhXVi85MTlQOTFEUDkxQ1A4VkpBRUJFSVhBZENKVFV6bGRISFVFVTFQckJ2OTFIUDkxR1A5MStGWlQvM1VnL3hYY0FBRVFpVVg0VnVpNC9mLy9XZjkxOU9pdi9mLy9pMFg0V2VsWkFRQUFpVjMwaVYzd09WMElkUWlMQm90QUZJbEZDRGxkSUhVSWl3YUxRQVNKUlNEL2RRam82eU1BQUZtSlJleUQrUDkxQnpQQTZTRUJBQUE3UlNBUGhOc0FBQUJUVTQxTkZGSC9kUkJRLzNVZzZBa2tBQUNEeEJpSlJmUTd3M1RVaXpVY0FRRVFVMVAvZFJSUS8zVU0vM1VJLzlhSlJmZzd3M1VITS9icHR3QUFBSDQ5Zy9qZ2R6aUR3QWc5QUFRQUFIY1c2SWdsQUFDTC9EdjdkTjNIQjh6TUFBQ0R4d2pyR2xEb0Mvai8vMWs3dzNRSnh3RGQzUUFBZzhBSWkvanJBalAvTy90MHRQOTErRk5YNkwraC8vK0R4QXovZGZoWC8zVVUvM1gwLzNVTS8zVUkvOWFKUmZnN3czVUVNL2JySmY5MUhJMUYrUDkxR0ZCWC8zVWcvM1hzNkZnakFBQ0w4SWwxOElQRUdQZmVHL1lqZGZoWDZJMzgvLzlaNnhyL2RSei9kUmovZFJUL2RSRC9kUXovZFFqL0ZSd0JBUkNMOERsZDlIUUovM1gwNkxxZy8vOVppMFh3TzhOMEREbEZHSFFIVU9pbm9QLy9XWXZHaldYZ1gxNWJpMDM4TTgzb0tKai8vOG5EaS85VmkreUQ3QkQvZFFpTlRmRG9NNXIvLy85MUtJMU44UDkxSlA5MUlQOTFIUDkxR1A5MUZQOTFFUDkxRE9nby9QLy9nOFFnZ0gzOEFIUUhpMDM0ZzJGdy9jbkRpLzlWaSt4UlVhRWNVQUVRTThXSlJmeWhTR1lCRUZOV005dFhpL2s3dzNVNmpVWDRVRFAyUmxab0RBc0JFRmIvRlN3QkFSQ0Z3SFFJaVRWSVpnRVE2elQvRlJ3QUFSQ0QrSGgxQ21vQ1dLTklaZ0VRNndXaFNHWUJFSVA0QWcrRXp3QUFBRHZERDRUSEFBQUFnL2dCRDRYb0FBQUFpVjM0T1YwWWRRaUxCNHRBQklsRkdJczFJQUVCRURQQU9WMGdVMVAvZFJBUGxjRC9kUXlOQk1VQkFBQUFVUDkxR1AvV2kvZzcrdytFcXdBQUFINDhnZi93Ly85L2R6U05SRDhJUFFBRUFBQjNFK2loSXdBQWk4UTd3M1FjeHdETXpBQUE2eEZRNkNmMi8vOVpPOE4wQ2NjQTNkMEFBSVBBQ0l2WWhkdDBhWTBFUDFCcUFGUG8zWi8vLzRQRURGZFQvM1VRLzNVTWFnSC9kUmovMW9YQWRCSC9kUlJRVS85MUNQOFZMQUVCRUlsRitGUG95ZnIvLzR0RitGbnJkVFAyT1YwY2RRaUxCNHRBRklsRkhEbGRHSFVJaXdlTFFBU0pSUmovZFJ6b0RDRUFBRm1EK1A5MUJEUEE2MGM3UlJoMEhsTlRqVTBRVWY5MURGRC9kUmpvTkNFQUFJdndnOFFZTy9OMDNJbDFEUDkxRlA5MUVQOTFEUDkxQ1A5MUhQOFZLQUVCRUl2NE8vTjBCMWJvcUo3Ly8xbUx4NDFsN0Y5ZVc0dE4vRFBONkNtVy8vL0p3NHYvVll2c2crd1EvM1VJalUzdzZEU1kvLy8vZFNTTlRmRC9kU0QvZFJ6L2RSai9kUlQvZFJEL2RRem9GdjcvLzRQRUhJQjkvQUIwQjR0TitJTmhjUDNKdzR2L1ZZdnNWb3QxQ0lYMkQ0U0JBUUFBLzNZRTZEaWUvLy8vZGdqb01KNy8vLzkyRE9nb252Ly8vM1lRNkNDZS8vLy9kaFRvR0o3Ly8vOTJHT2dRbnYvLy96Ym9DWjcvLy85MklPZ0Judi8vLzNZazZQbWQvLy8vZGlqbzhaMy8vLzkyTE9qcG5mLy8vM1l3Nk9HZC8vLy9kalRvMlozLy8vOTJIT2pSbmYvLy8zWTQ2TW1kLy8vL2Rqem93WjMvLzRQRVFQOTJRT2kybmYvLy8zWkU2SzZkLy8vL2Rram9wcDMvLy85MlRPaWVuZi8vLzNaUTZKYWQvLy8vZGxUb2pwMy8vLzkyV09pR25mLy8vM1pjNkg2ZC8vLy9kbURvZHAzLy8vOTJaT2h1bmYvLy8zWm82R2FkLy8vL2Rtem9YcDMvLy85MmNPaFduZi8vLzNaMDZFNmQvLy8vZG5qb1JwMy8vLzkyZk9nK25mLy9nOFJBLzdhQUFBQUE2RENkLy8vL3RvUUFBQURvSlozLy8vKzJpQUFBQU9nYW5mLy8vN2FNQUFBQTZBK2QvLy8vdHBBQUFBRG9CSjMvLy8rMmxBQUFBT2o1blAvLy83YVlBQUFBNk82Yy8vLy90cHdBQUFEbzQ1ei8vLysyb0FBQUFPalluUC8vLzdha0FBQUE2TTJjLy8vL3RxZ0FBQURvd3B6Ly80UEVMRjVkdzR2L1ZZdnNWb3QxQ0lYMmREV0xCanNGWUZvQkVIUUhVT2lmblAvL1dZdEdCRHNGWkZvQkVIUUhVT2lOblAvL1dZdDJDRHMxYUZvQkVIUUhWdWg3blAvL1dWNWR3NHYvVll2c1ZvdDFDSVgyZEg2TFJndzdCV3hhQVJCMEIxRG9XWnovLzFtTFJoQTdCWEJhQVJCMEIxRG9SNXovLzFtTFJoUTdCWFJhQVJCMEIxRG9OWnovLzFtTFJoZzdCWGhhQVJCMEIxRG9JNXovLzFtTFJodzdCWHhhQVJCMEIxRG9FWnovLzFtTFJpQTdCWUJhQVJCMEIxRG8vNXYvLzFtTGRpUTdOWVJhQVJCMEIxYm83WnYvLzFsZVhjT0wvMVdMN0l0RkNGTXoyMVpYTzhOMEI0dDlERHY3ZHh2bzRLSC8vMm9XWG9rd1UxTlRVMVBvYWFILy80UEVGSXZHNnp5TGRSQTc4M1VFaUJqcjJvdlFPQnAwQkVKUGRmZzcrM1R1aWc2SUNrSkdPc3QwQTA5MTh6djdkUkNJR09pWm9mLy9haUpaaVFpTDhldTFNOEJmWGx0ZHc4ek16TXpNVll2c1ZqUEFVRkJRVUZCUVVGQ0xWUXlOU1FDS0FnckFkQW1Ed2dFUHF3UWs2L0dMZFFpRHlmK05TUUNEd1FHS0JnckFkQW1EeGdFUG93UWtjKzZMd1lQRUlGN0p3NHYvVll2c1UxYUxkUWd6MjFjNVhSUjFFRHZ6ZFJBNVhReDFFalBBWDE1YlhjTTc4M1FIaTMwTU8vdDNHK2dNb2YvL2FoWmVpVEJUVTFOVFUraVZvUC8vZzhRVWk4YnIxVGxkRkhVRWlCN3J5b3RWRUR2VGRRU0lIdXZSZzMwVS80dkdkUStLQ29nSVFFSTZ5M1FlVDNYejZ4bUtDb2dJUUVJNnkzUUlUM1FGLzAwVWRlNDVYUlIxQW9nWU8vdDFpNE45RlA5MUQ0dEZER3BRaUZ3Ry8xanBlUC8vLzRnZTZKS2cvLzlxSWxtSkNJdng2NExNek16TXpGV0w3Rll6d0ZCUVVGQlFVRkJRaTFVTWpVa0FpZ0lLd0hRSmc4SUJENnNFSk92eGkzVUlpLytLQmdyQWRBeUR4Z0VQb3dRa2MvR05SditEeENCZXljT0wvMVdMN0lQc0VQOTFDSTFOOE9qUmsvLy9nMzBVLzMwRU04RHJFdjkxR1A5MUZQOTFFUDkxRFA4VkxBRUJFSUI5L0FCMEI0dE4rSU5oY1AzSnc0di9WWXZzVVZHTFJReFdpM1VJaVVYNGkwVVFWMWFKUmZ6b3BoNEFBSVBQLzFrN3gzVVI2TnVmLy8vSEFBa0FBQUNMeDR2WDYwci9kUlNOVGZ4Ui8zWDRVUDhWTkFFQkVJbEYrRHZIZFJQL0ZSd0FBUkNGd0hRSlVPak5uLy8vV2V2UGk4YkIrQVdMQklVZ2V3RVFnK1lmd2VZR2pVUXdCSUFnL1l0RitJdFYvRjlleWNOcUZHaElNUUVRNk1IYy8vK0R6ditKZGR5SmRlQ0xSUWlEK1A1MUhPaHluLy8vZ3lBQTZGZWYvLy9IQUFrQUFBQ0x4b3ZXNmRBQUFBQXovenZIZkFnN0JRaDdBUkJ5SWVoSW4vLy9pVGpvTHAvLy84Y0FDUUFBQUZkWFYxZFg2TGFlLy8rRHhCVHJ5SXZJd2ZrRmpSeU5JSHNCRUl2d2crWWZ3ZVlHaXdzUHZrd3hCSVBoQVhVbTZBZWYvLytKT09qdG52Ly94d0FKQUFBQVYxZFhWMWZvZFo3Ly80UEVGSVBLLzR2QzYxdFE2QUllQUFCWmlYMzhpd1AyUkRBRUFYUWMvM1VVLzNVUS8zVU0vM1VJNktuKy8vK0R4QkNKUmR5SlZlRHJHdWlmbnYvL3h3QUpBQUFBNktlZS8vK0pPSU5OM1ArRFRlRC94MFg4L3YvLy8rZ01BQUFBaTBYY2kxWGc2QVRjLy8vRC8zVUk2RDhlQUFCWnc0di9WWXZzdU9RYUFBRG9KUjhBQUtFY1VBRVFNOFdKUmZ5TFJReFdNL2FKaFRUbC8vK0p0VGpsLy8rSnRURGwvLzg1ZFJCMUJ6UEE2ZWtHQUFBN3huVW42RFdlLy8rSk1PZ2Judi8vVmxaV1ZsYkhBQllBQUFEb281My8vNFBFRklQSS8rbStCZ0FBVTFlTGZRaUx4OEg0QlkwMGhTQjdBUkNMQm9Qbkg4SG5CZ1BIaWxna0F0dlErNG0xS09YLy80aWRKK1gvLzREN0FuUUZnUHNCZFRDTFRSRDMwZmJCQVhVbTZNeWQvLzh6OW9rdzZMQ2QvLzlXVmxaV1ZzY0FGZ0FBQU9nNG5mLy9nOFFVNlVNR0FBRDJRQVFnZEJGcUFtb0FhZ0QvZFFqb2Z2My8vNFBFRVA5MUNPaHBCd0FBV1lYQUQ0U2RBZ0FBaXdiMlJBY0VnQStFa0FJQUFPaXdyLy8vaTBCc004azVTQlNOaFJ6bC8vOFBsTUZRaXdiL05BZUpqU0RsLy8vL0ZVQUJBUkNGd0ErRVlBSUFBRFBKT1kwZzVmLy9kQWlFMncrRVVBSUFBUDhWUEFFQkVJdWROT1gvLzRtRkhPWC8velBBaVlVODVmLy9PVVVRRDRaQ0JRQUFpWVZFNWYvL2lvVW41Zi8vaE1BUGhXY0JBQUNLQzR1MUtPWC8velBBZ1BrS0Q1VEFpWVVnNWYvL2l3WUR4NE40T0FCMEZZcFFOSWhWOUloTjlZTmdPQUJxQW8xRjlGRHJTdysrd1ZEb0M1SC8vMW1Gd0hRNmk0MDA1Zi8vSzhzRFRSQXp3RUE3eUErR3BRRUFBR29DallWQTVmLy9VMURva2dzQUFJUEVESVA0L3crRXNRUUFBRVAvaFVUbC8vL3JHMm9CVTQyRlFPWC8vMURvYmdzQUFJUEVESVA0L3crRWpRUUFBRFBBVUZCcUJZMU45RkZxQVkyTlFPWC8vMUZRLzdVYzVmLy9RLytGUk9YLy8vOFYzQUFCRUl2d2hmWVBoRndFQUFCcUFJMkZQT1gvLzFCV2pVWDBVSXVGS09YLy80c0EvelFIL3hVNEFRRVFoY0FQaENrRUFBQ0xoVVRsLy8rTGpURGwvLzhEd1RtMVBPWC8vNG1GT09YLy93K01GUVFBQUlPOUlPWC8vd0FQaE0wQUFBQnFBSTJGUE9YLy8xQnFBWTFGOUZDTGhTamwvLytMQU1aRjlBMy9OQWYvRlRnQkFSQ0Z3QStFMEFNQUFJTzlQT1gvL3dFUGpNOERBQUQvaFREbC8vLy9oVGpsLy8vcGd3QUFBRHdCZEFROEFuVWhEN2N6TThsbWcvNEtENVRCUTBPRGhVVGwvLzhDaWJWQTVmLy9pWTBnNWYvL1BBRjBCRHdDZFZML3RVRGwvLy9vUXhzQUFGbG1PNFZBNWYvL0Q0Vm9Bd0FBZzRVNDVmLy9Bb085SU9YLy93QjBLV29OV0ZDSmhVRGwvLy9vRmhzQUFGbG1PNFZBNWYvL0Q0VTdBd0FBLzRVNDVmLy8vNFV3NWYvL2kwVVFPWVZFNWYvL0Q0TDUvZi8vNlNjREFBQ0xEb29ULzRVNDVmLy9pRlFQTklzT2lVUVBPT2tPQXdBQU04bUxCZ1BIOWtBRWdBK0V2d0lBQUl1Rk5PWC8vNG1OUU9YLy80VGJENFhLQUFBQWlZVTg1Zi8vT1UwUUQ0WWdBd0FBNndhTHRTamwvLytMalR6bC8vK0RwVVRsLy84QUs0MDA1Zi8vallWSTVmLy9PMDBRY3ptTGxUemwvLy8vaFR6bC8vK0tFa0dBK2dwMUVQK0ZNT1gvLzhZQURVRC9oVVRsLy8rSUVFRC9oVVRsLy8rQnZVVGwvLy8vRXdBQWNzS0wySTJGU09YLy95dllhZ0NOaFN6bC8vOVFVNDJGU09YLy8xQ0xCdjgwQi84Vk9BRUJFSVhBRDRSQ0FnQUFpNFVzNWYvL0FZVTQ1Zi8vTzhNUGpEb0NBQUNMaFR6bC8vOHJoVFRsLy84N1JSQVBna3ovLy8vcElBSUFBSW1GUk9YLy80RDdBZytGMFFBQUFEbE5FQStHVFFJQUFPc0dpN1VvNWYvL2k0MUU1Zi8vZzZVODVmLy9BQ3VOTk9YLy80MkZTT1gvL3p0TkVITkdpNVZFNWYvL2c0VkU1Zi8vQWcrM0VrRkJab1A2Q25VV2c0VXc1Zi8vQW1vTlcyYUpHRUJBZzRVODVmLy9Bb09GUE9YLy93Sm1pUkJBUUlHOVBPWC8vLzRUQUFCeXRZdllqWVZJNWYvL0s5aHFBSTJGTE9YLy8xQlRqWVZJNWYvL1VJc0cvelFIL3hVNEFRRVFoY0FQaEdJQkFBQ0xoU3psLy84QmhUamwvLzg3d3crTVdnRUFBSXVGUk9YLy95dUZOT1gvL3p0RkVBK0NQLy8vLytsQUFRQUFPVTBRRDRaOEFRQUFpNDFFNWYvL2c2VTg1Zi8vQUN1Tk5PWC8vMm9DallWSStmLy9YanRORUhNOGk1VkU1Zi8vRDdjU0FiVkU1Zi8vQTg1bWcvb0tkUTVxRFZ0bWlSZ0R4Z0cxUE9YLy93RzFQT1gvLzJhSkVBUEdnYjA4NWYvL3FBWUFBSEsvTS9aV1ZtaFZEUUFBalkzdzYvLy9VWTJOU1BuLy95dkJtU3ZDMGZoUWk4RlFWbWpwL1FBQS94WGNBQUVRaTlnNzNnK0Vsd0FBQUdvQWpZVXM1Zi8vVUl2REs4WlFqWVExOE92Ly8xQ0xoU2psLy8rTEFQODBCLzhWT0FFQkVJWEFkQXdEdFN6bC8vODczbi9MNnd6L0ZSd0FBUkNKaFVEbC8vODczbjljaTRWRTVmLy9LNFUwNWYvL2lZVTQ1Zi8vTzBVUUQ0SUsvLy8vNno5cUFJMk5MT1gvLzFIL2RSRC90VFRsLy8vL01QOFZPQUVCRUlYQWRCV0xoU3psLy8rRHBVRGwvLzhBaVlVNDVmLy82d3ovRlJ3QUFSQ0poVURsLy8rRHZUamwvLzhBZFd5RHZVRGwvLzhBZEMxcUJWNDV0VURsLy85MUZPaWpsLy8veHdBSkFBQUE2S3VYLy8rSk1Pcy8vN1ZBNWYvLzZLK1gvLzlaNnpHTHRTamwvLytMQnZaRUJ3UkFkQStMaFRUbC8vK0FPQnAxQkRQQTZ5VG9ZNWYvLzhjQUhBQUFBT2hybC8vL2d5QUFnOGovNnd5TGhUamwvLzhyaFREbC8vOWZXNHROL0RQTlh1aTNpUC8veWNOcUVHaG9NUUVRNkhYVS8vK0xSUWlEK1A1MUcrZ3ZsLy8vZ3lBQTZCU1gvLy9IQUFrQUFBQ0R5UC9wblFBQUFEUC9POGQ4Q0RzRkNIc0JFSEloNkFhWC8vK0pPT2pzbHYvL3h3QUpBQUFBVjFkWFYxZm9kSmIvLzRQRUZPdkppOGpCK1FXTkhJMGdld0VRaS9DRDVoL0I1Z2FMQ3crK1RERUVnK0VCZEw5UTZPWVZBQUJaaVgzOGl3UDJSREFFQVhRVy8zVVEvM1VNLzNVSTZDNzQvLytEeEF5SlJlVHJGdWlKbHYvL3h3QUpBQUFBNkpHVy8vK0pPSU5ONVAvSFJmeisvLy8vNkFrQUFBQ0xSZVRvOWRQLy84UC9kUWpvTUJZQUFGbkRpLzlWaSt6L0JWQm1BUkJvQUJBQUFPZ2d4di8vV1l0TkNJbEJDSVhBZEEyRFNRd0l4MEVZQUJBQUFPc1JnMGtNQkkxQkZJbEJDTWRCR0FJQUFBQ0xRUWlEWVFRQWlRRmR3NHYvVll2c2kwVUlnL2orZFEvby9wWC8vOGNBQ1FBQUFEUEFYY05XTS9ZN3hud0lPd1VJZXdFUWNoem80SlgvLzFaV1ZsWld4d0FKQUFBQTZHaVYvLytEeEJRendPc2FpOGlENEIvQitRV0xESTBnZXdFUXdlQUdENzVFQVFTRDRFQmVYY080b0ZvQkVNT2g0SG9CRUZacUZGNkZ3SFVIdUFBQ0FBRHJCanZHZlFlTHhxUGdlZ0VRYWdSUTZLREYvLzlaV2FQY2FnRVFoY0IxSG1vRVZvazE0SG9CRU9pSHhmLy9XVm1qM0dvQkVJWEFkUVZxR2xoZXd6UFN1YUJhQVJEckJhSGNhZ0VRaVF3Q2c4RWdnOElFZ2ZrZ1hRRVFmT3BxL2w0ejBybXdXZ0VRVjR2Q3dmZ0Zpd1NGSUhzQkVJdjZnK2Nmd2VjR2l3UUhnL2ovZEFnN3huUUVoY0IxQW9reGc4RWdRb0g1RUZzQkVIek9YelBBWHNQb0VCZ0FBSUE5bEdNQkVBQjBCZWpaRlFBQS96WGNhZ0VRNk1PTy8vOVp3NHYvVll2c1ZvdDFDTGlnV2dFUU8vQnlJb0grQUYwQkVIY2FpODRyeU1INUJZUEJFRkhvL2RYLy80Rk9EQUNBQUFCWjZ3cUR4aUJXL3hVRUFRRVFYbDNEaS85VmkreUxSUWlEK0JSOUZvUEFFRkRvME5YLy80dEZESUZJREFDQUFBQlpYY09MUlF5RHdDQlEveFVFQVFFUVhjT0wvMVdMN0l0RkNMbWdXZ0VRTzhGeUh6MEFYUUVRZHhpQllBei9mLy8vSzhIQitBV0R3QkJRNkszVS8vOVpYY09Ed0NCUS94VUFBUUVRWGNPTC8xV0w3SXROQ0lQNUZJdEZESDBUZ1dBTS8zLy8vNFBCRUZIb2Z0VC8vMWxkdzRQQUlGRC9GUUFCQVJCZHc0di9WWXZzaTBVSVZqUDJPOFoxSGVqamsvLy9WbFpXVmxiSEFCWUFBQURvYTVQLy80UEVGSVBJLytzRGkwQVFYbDNEaS85VmkreUQ3QkNoSEZBQkVEUEZpVVg4VTFhTGRRejJSZ3hBVncrRk5nRUFBRmJvcHYvLy8xbTdHRmdCRUlQNC8zUXVWdWlWLy8vL1dZUDQvblFpVnVpSi8vLy93ZmdGVm8wOGhTQjdBUkRvZWYvLy80UGdIMW5CNEFZREIxbnJBb3ZEaWtBa0pIODhBZytFNkFBQUFGYm9XUC8vLzFtRCtQOTBMbGJvVFAvLy8xbUQrUDUwSWxib1FQLy8vOEg0QlZhTlBJVWdld0VRNkRELy8vK0Q0Qjlad2VBR0F3ZFo2d0tMdzRwQUpDUi9QQUVQaEo4QUFBQlc2QS8vLy85Wmcvai9kQzVXNkFQLy8vOVpnL2orZENKVzZQZisvLy9CK0FWV2pUeUZJSHNCRU9qbi92Ly9nK0FmV2NIZ0JnTUhXZXNDaThQMlFBU0FkRjMvZFFpTlJmUnFCVkNOUmZCUTZNRVlBQUNEeEJDRndIUUh1UC8vQUFEclhUUC9PWDN3ZmpEL1RnUjRFb3NHaWt3OTlJZ0lpdzRQdGdGQmlRN3JEZysrUkQzMFZsRG9GcW4vLzFsWmcvai9kTWhITzMzd2ZOQm1pMFVJNnlDRFJnVCtlQTJMRG90RkNHYUpBWU1HQXVzTkQ3ZEZDRlpRNkhnVkFBQlpXWXROL0Y5ZU04MWI2TUNELy8vSnc0di9WbGN6LzQyM0tGMEJFUDgyNkxhaC8vK0R4d1JaaVFhRC95aHk2RjlldzZFY1VBRVFnOGdCTThrNUJWUm1BUkFQbE1HTHdjT0wvMVdMN0lQc0VGTldpM1VNTTlzNzgzUVZPVjBRZEJBNEhuVVNpMFVJTzhOMEJUUEpab2tJTThCZVc4bkQvM1VValUzdzZHNkYvLytMUmZBNVdCUjFINHRGQ0R2RGRBZG1EN1lPWm9rSU9GMzhkQWVMUmZpRFlIRDlNOEJBNjhxTlJmQlFEN1lHVU9qQmhmLy9XVm1Gd0hSOWkwWHdpNGlzQUFBQWcva0JmaVU1VFJCOElEUFNPVjBJRDVYQ1V2OTFDRkZXYWduL2NBVC9GU0FCQVJDRndJdEY4SFVRaTAwUU80aXNBQUFBY2lBNFhnRjBHNHVBckFBQUFEaGQvQStFWmYvLy80dE4rSU5oY1AzcFdmLy8vK2d4a2YvL3h3QXFBQUFBT0YzOGRBZUxSZmlEWUhEOWc4ai82VHIvLy84endEbGRDQStWd0ZEL2RRaUxSZkJxQVZacUNmOXdCUDhWSUFFQkVJWEFENFU2Ly8vLzY3cUwvMVdMN0dvQS8zVVEvM1VNLzNVSTZOVCsvLytEeEJCZHc4ek1Wb3RFSkJRTHdIVW9pMHdrRUl0RUpBd3owdmZ4aTlpTFJDUUk5L0dMOEl2RDkyUWtFSXZJaThiM1pDUVFBOUhyUjR2SWkxd2tFSXRVSkF5TFJDUUkwZW5SMjlIcTBkZ0x5WFgwOS9PTDhQZGtKQlNMeUl0RUpCRDM1Z1BSY2c0N1ZDUU1kd2h5RHp0RUpBaDJDVTRyUkNRUUcxUWtGRFBiSzBRa0NCdFVKQXozMnZmWWc5b0FpOHFMMDR2Wmk4aUx4bDdDRUFCcURHaUlNUUVRNkgvTi8vK0xUUWd6L3p2UGRpNXE0Rmd6MHZmeE8wVU1HOEJBZFIvb0ZwRC8vOGNBREFBQUFGZFhWMWRYNko2UC8vK0R4QlF6d09uVkFBQUFENjlOREl2eGlYVUlPL2QxQXpQMlJqUGJpVjNrZy83Z2QybURQUVI3QVJBRGRVdUR4ZytENXZDSmRReUxSUWc3QmZCNkFSQjNOMm9FNkJEUi8vOVppWDM4LzNVSTZCYlovLzlaaVVYa3gwWDgvdi8vLytoZkFBQUFpMTNrTzk5MEVmOTFDRmRUNkEySy8vK0R4QXc3MzNWaFZtb0kveldzWkFFUS94VUlBUUVRaTlnNzMzVk1PVDJZYVFFUWRETlc2SWprLy85WmhjQVBoWEwvLy8rTFJSQTd4dytFVVAvLy84Y0FEQUFBQU9sRi8vLy9NLytMZFF4cUJPaTB6Ly8vV2NNNzMzVU5pMFVRTzhkMEJzY0FEQUFBQUl2RDZMUE0vLy9EYWhCb3FERUJFT2hoelAvL2kxMEloZHQxRHY5MURPaXMzLy8vV2VuTUFRQUFpM1VNaGZaMURGUG8zNGovLzFucHR3RUFBSU05QkhzQkVBTVBoWk1CQUFBei80bDk1SVArNEErSGlnRUFBR29FNkIzUS8vOVppWDM4VStoRzBQLy9XWWxGNER2SEQ0U2VBQUFBT3pYd2VnRVFkMGxXVTFEb0tOWC8vNFBFRElYQWRBV0pYZVRyTlZibzk5Zi8vMW1KUmVRN3gzUW5pMFA4U0R2R2NnS0x4bEJULzNYazZIT0ovLzlUNlBiUC8vK0pSZUJUVU9nYzBQLy9nOFFZT1gza2RVZzc5M1VHTS9aR2lYVU1nOFlQZytid2lYVU1WbGYvTmF4a0FSRC9GUWdCQVJDSlJlUTd4M1FnaTBQOFNEdkdjZ0tMeGxCVC8zWGs2QitKLy85VC8zWGc2TS9QLy8rRHhCVEhSZnorLy8vLzZDNEFBQUNEZmVBQWRUR0Y5blVCUm9QR0Q0UG04SWwxREZaVGFnRC9OYXhrQVJEL0ZSQUJBUkNMK09zU2kzVU1pMTBJYWdUb1RzNy8vMW5EaTMza2hmOFBoYjhBQUFBNVBaaHBBUkIwTEZibzNPTC8vMW1Gd0ErRjB2Ny8vK2l0amYvL09YM2dkV3lMOFA4VkhBQUJFRkRvV0kzLy8xbUpCdXRmaGY4UGhZTUFBQURvaUkzLy96bDk0SFJveHdBTUFBQUE2M0dGOW5VQlJsWlRhZ0QvTmF4a0FSRC9GUkFCQVJDTCtJWC9kVlk1QlpocEFSQjBORmJvYytMLy8xbUZ3SFFmZy83Z2RzMVc2R1BpLy85WjZEeU4vLy9IQUF3QUFBQXp3T2pBeXYvL3crZ3BqZi8vNlh6Ly8vK0YvM1VXNkJ1Ti8vK0w4UDhWSEFBQkVGRG95NHovLzRrR1dZdkg2OUtMLzFXTDdGRlJVNHRkQ0ZaWE0vWXovNGw5L0RzYy9WQmRBUkIwQ1VlSmZmeUQveGR5N29QL0Z3K0Rkd0VBQUdvRDZNSVdBQUJaZy9nQkQ0UTBBUUFBYWdQb3NSWUFBRm1Gd0hVTmd6M1FYd0VRQVErRUd3RUFBSUg3L0FBQUFBK0VRUUVBQUdpOEdnRVF1eFFEQUFCVHYxaG1BUkJYNk9QYi8vK0R4QXlGd0hRTlZsWldWbGJvNm9yLy80UEVGR2dFQVFBQXZuRm1BUkJXYWdER0JYVm5BUkFBL3hYTUFBRVFoY0IxSm1pa0dnRVFhUHNDQUFCVzZLSGIvLytEeEF5RndIUVBNOEJRVUZCUVVPaW1pdi8vZzhRVVZ1ajUyLy8vUUZtRCtEeDJPRmJvN052Ly80UHVPd1BHYWdPNWJHa0JFR2pJQ2dFUUs4aFJVT2pJNnYvL2c4UVVoY0IwRVRQMlZsWldWbGJvWTRyLy80UEVGT3NDTS9ab29Cb0JFRk5YNk9QcC8vK0R4QXlGd0hRTlZsWldWbGJvUDRyLy80UEVGSXRGL1A4MHhWUmRBUkJUVitpKzZmLy9nOFFNaGNCMERWWldWbFpXNkJxSy8vK0R4QlJvRUNBQkFHaDRHZ0VRVitnZ0ZBQUFnOFFNNnpKcTlQOFZ2QUFCRUl2WU85NTBKSVA3LzNRZmFnQ05SZmhRalRUOVZGMEJFUDgyNkRmYi8vOVpVUDgyVS84Vk9BRUJFRjllVzhuRGFnUG9SaFVBQUZtRCtBRjBGV29ENkRrVkFBQlpoY0IxSDRNOTBGOEJFQUYxRm1qOEFBQUE2Q24rLy85by93QUFBT2dmL3YvL1dWbkR6TXpNek16TXpNek16TXpNek15TC8xV0w3SXROQ0xoTldnQUFaamtCZEFRendGM0RpMEU4QThHQk9GQkZBQUIxN3pQU3VRc0JBQUJtT1VnWUQ1VENpOEpkdzh6TXpNek16TXpNek16TWkvOVZpK3lMUlFpTFNEd0R5QSszUVJSVFZnKzNjUVl6MGxlTlJBZ1loZloyRzR0OURJdElERHY1Y2dtTFdBZ0QyVHY3Y2dwQ2c4QW9POVp5NkRQQVgxNWJYY1BNek16TXpNek16TXpNek15TC8xV0w3R3IrYU1neEFSQm9nSWtBRUdTaEFBQUFBRkNEN0FoVFZsZWhIRkFCRURGRitEUEZVSTFGOEdTakFBQUFBSWxsNk1kRi9BQUFBQUJvQUFBQUVPZ3EvLy8vZzhRRWhjQjBWWXRGQ0MwQUFBQVFVR2dBQUFBUTZGRC8vLytEeEFpRndIUTdpMEFrd2VnZjk5Q0Q0QUhIUmZ6Ky8vLy9pMDN3WklrTkFBQUFBRmxmWGx1TDVWM0RpMFhzaXdpTEFUUFNQUVVBQU1BUGxNS0x3c09MWmVqSFJmeisvLy8vTThDTFRmQmtpUTBBQUFBQVdWOWVXNHZsWGNOcUNHam9NUUVRNkFmSC8vL29DSnovLzR0QWVJWEFkQmFEWmZ3QS85RHJCelBBUU1PTFplakhSZnorLy8vLzZORVRBQURvSU1mLy84UG8yNXYvLzR0QWZJWEFkQUwvME9tMC8vLy9hZ2hvQ0RJQkVPaTd4di8vL3pWc2FRRVE2R3FaLy85WmhjQjBGb05sL0FELzBPc0hNOEJBdzR0bDZNZEYvUDcvLy8vb2ZmLy8vOHhvRGNJQUVPakVtUC8vV2FOc2FRRVF3NHYvVll2c2kwVUlvM0JwQVJDamRHa0JFS040YVFFUW8zeHBBUkJkdzR2L1ZZdnNpMFVJaXcxb1dBRVFWamxRQkhRUGkvRnI5Z3dEZFFpRHdBdzd4bkxzYThrTUEwMElYanZCY3dVNVVBUjBBalBBWGNQL05YaHBBUkRvMkpqLy8xbkRhaUJvS0RJQkVPZ1F4di8vTS8rSmZlU0pmZGlMWFFpRCt3dC9USFFWaThOcUFsa3J3WFFpSzhGMENDdkJkR1Fyd1hWRTZIR2EvLytMK0lsOTJJWC9kUlNEeVAvcFlRRUFBTDV3YVFFUW9YQnBBUkRyWVA5M1hJdlQ2RjMvLy8rTDhJUEdDSXNHNjFxTHc0UG9EM1E4ZytnR2RDdElkQnpvVklqLy84Y0FGZ0FBQURQQVVGQlFVRkRvMm9mLy80UEVGT3V1dm5ocEFSQ2hlR2tCRU9zV3ZuUnBBUkNoZEdrQkVPc0t2bnhwQVJDaGZHa0JFTWRGNUFFQUFBQlE2QlNZLy8rSlJlQlpNOENEZmVBQkQ0VFlBQUFBT1VYZ2RRZHFBK2hOdS8vL09VWGtkQWRRNkRuSi8vOVpNOENKUmZ5RCt3aDBDb1A3QzNRRmcvc0VkUnVMVDJDSlRkU0pSMkNEK3doMVFJdFBaSWxOME1kSFpJd0FBQUNEK3doMUxvc05YRmdCRUlsTjNJc05ZRmdCRUlzVlhGZ0JFQVBLT1UzY2ZSbUxUZHhyeVF5TFYxeUpSQkVJLzBYYzY5dm9mSmYvLzRrR3gwWDgvdi8vLytnVkFBQUFnL3NJZFIvL2QyUlQvMVhnV2VzWmkxMElpMzNZZzMza0FIUUlhZ0RveDhmLy8xbkRVLzlWNEZtRCt3aDBDb1A3QzNRRmcvc0VkUkdMUmRTSlIyQ0Qrd2gxQm90RjBJbEhaRFBBNkxMRS8vL0RpLzlWaSt5TFJRaWpoR2tCRUYzRGkvOVZpK3lMUlFpamtHa0JFRjNEaS85VmkreUxSUWlqbEdrQkVGM0RhaEJvU0RJQkVPZ3p4UC8vZzJYOEFQOTFEUDkxQ1A4VlNBRUJFSWxGNU9zdmkwWHNpd0NMQUlsRjREUEpQUmNBQU1BUGxNR0x3Y09MWmVpQmZlQVhBQURBZFFocUNQOFZyQUFCRUlObDVBREhSZnorLy8vL2kwWGs2Q1hFLy8vRGkvOVZpK3lEN0JEL2RRaU5UZkRvSUhyLy93KzJSUXlMVGZTS1ZSU0VWQUVkZFI2RGZSQUFkQktMVGZDTGljZ0FBQUFQdHdSQkkwVVE2d0l6d0lYQWRBTXp3RUNBZmZ3QWRBZUxUZmlEWVhEOXljT0wvMVdMN0dvRWFnRC9kUWhxQU9pYS8vLy9nOFFRWGNQTXpNek1pMFFrQ0l0TUpCQUx5SXRNSkF4MUNZdEVKQVQzNGNJUUFGUDM0WXZZaTBRa0NQZGtKQlFEMkl0RUpBajM0UVBUVzhJUUFJdi9WWXZzYWdwcUFQOTFDT2c5RGdBQWc4UU1YY1BNekZXTDdGTldWMVZxQUdvQWFCVEdBQkQvZFFqb2Rob0FBRjFmWGx1TDVWM0RpMHdrQlBkQkJBWUFBQUM0QVFBQUFIUXlpMFFrRkl0SS9EUEk2QmgzLy85VmkyZ1FpMUFvVW90UUpGTG9GQUFBQUlQRUNGMkxSQ1FJaTFRa0VJa0N1QU1BQUFERFUxWlhpMFFrRUZWUWF2NW9ITVlBRUdUL05RQUFBQUNoSEZBQkVEUEVVSTFFSkFSa293QUFBQUNMUkNRb2kxZ0lpM0FNZy83L2REcURmQ1FzLzNRR08zUWtMSFl0alRSMml3eXppVXdrRElsSURJTjhzd1FBZFJkb0FRRUFBSXRFc3dqb1NRQUFBSXRFc3dqb1h3QUFBT3UzaTB3a0JHU0pEUUFBQUFDRHhCaGZYbHZETThCa2l3MEFBQUFBZ1hrRUhNWUFFSFVRaTFFTWkxSU1PVkVJZFFXNEFRQUFBTU5UVWJzUVhnRVE2d3RUVWJzUVhnRVFpMHdrRElsTENJbERCSWxyREZWUlVGaFpYVmxid2dRQS85RERhaEJvYURJQkVPamh3Zi8vTThDTFhRZ3ovenZmRDVYQU84ZDFIZWlBaFAvL3h3QVdBQUFBVjFkWFYxZm9DSVQvLzRQRUZJUEkvK3RUZ3owRWV3RVFBM1U0YWdUb3FzWC8vMW1KZmZ4VDZOUEYvLzlaaVVYZ084ZDBDNHR6L0lQdUNZbDE1T3NEaTNYa3gwWDgvdi8vLytnbEFBQUFPWDNnZFJCVFYvODFyR1FCRVA4VlRBRUJFSXZ3aThib29jSC8vOE16LzR0ZENJdDE1R29FNkhqRS8vOVp3NHYvVll2c2crd01vUnhRQVJBenhZbEYvR29HalVYMFVHZ0VFQUFBLzNVSXhrWDZBUDhWTUFFQkVJWEFkUVdEeVAvckNvMUY5RkRvMHYzLy8xbUxUZnd6emVnM2RmLy95Y09MLzFXTDdJUHNOS0VjVUFFUU04V0pSZnlMUlJDTFRSaUpSZGlMUlJSVGlVWFFpd0JXaVVYY2kwVUlWelAvaVUzTWlYM2dpWDNVTzBVTUQ0UmZBUUFBaXpWOEFBRVFqVTNvVVZELzFvc2RJQUVCRUlYQWRGNkRmZWdCZFZpTlJlaFEvM1VNLzlhRndIUkxnMzNvQVhWRmkzWGN4MFhVQVFBQUFJUCsvM1VNLzNYWTZQclMvLytMOEZsR08vZCtXNEgrOFAvL2YzZFRqVVEyQ0QwQUJBQUFkeS9vR2dFQUFJdkVPOGQwT01jQXpNd0FBT3N0VjFmL2Rkei9kZGhxQWY5MUNQL1RpL0E3OTNYRE04RHAwUUFBQUZEb2hOUC8vMWs3eDNRSnh3RGQzUUFBZzhBSWlVWGs2d09KZmVRNWZlUjAySTBFTmxCWC8zWGs2REo5Ly8rRHhBeFcvM1hrLzNYYy8zWFlhZ0gvZFFqLzA0WEFkSCtMWGN3NzMzUWRWMWYvZFJ4VFZ2OTE1RmYvZFF6L0Zkd0FBUkNGd0hSZ2lWM2c2MXVMSGR3QUFSQTVmZFIxRkZkWFYxZFcvM1hrVi85MURQL1RpL0E3OTNROFZtb0I2SFN5Ly85WldZbEY0RHZIZEN0WFYxWlFWdjkxNUZmL2RRei8wenZIZFE3L2RlRG9ISHovLzFtSmZlRHJDNE45M1A5MEJZdE4wSWtCLzNYazZLelgvLzlaaTBYZ2pXWEFYMTViaTAzOE04M29nM1AvLzhuRHpNek16TXpNek16TXpNek16RkdOVENRSUs4aUQ0UThEd1J2SkM4Rlo2YW9DQUFCUmpVd2tDQ3ZJZytFSEE4RWJ5UXZCV2VtVUFnQUFpLzlWaSt5TFRRaFRNOXM3eTFaWGZGczdEUWg3QVJCelU0dkJ3ZmdGaS9HTlBJVWdld0VRaXdlRDVoL0I1Z1lEeHZaQUJBRjBOWU00LzNRd2d6M1FYd0VRQVhVZEs4dDBFRWwwQ0VsMUUxTnE5T3NJVTJyMTZ3TlRhdmIvRlZnQUFSQ0xCNE1NQnY4endPc1Y2RmVCLy8vSEFBa0FBQURvWDRILy80a1lnOGovWDE1YlhjT0wvMVdMN0l0RkNJUDQvblVZNkVPQi8vK0RJQURvS0lILy84Y0FDUUFBQUlQSS8xM0RWalAyTzhaOElqc0ZDSHNCRUhNYWk4aUQ0Qi9CK1FXTERJMGdld0VRd2VBR0E4SDJRQVFCZFNUb0FvSC8vNGt3Nk9pQS8vOVdWbFpXVnNjQUNRQUFBT2h3Z1AvL2c4UVVnOGovNndLTEFGNWR3Mm9NYUlneUFSRG9DNzcvLzR0OUNJdkh3ZmdGaS9lRDVoL0I1Z1lETklVZ2V3RVF4MFhrQVFBQUFEUGJPVjRJZFRacUN1amx3Zi8vV1lsZC9EbGVDSFVhYUtBUEFBQ05SZ3hRNkluNS8vOVpXWVhBZFFPSlhlVC9SZ2pIUmZ6Ky8vLy82REFBQUFBNVhlUjBIWXZId2ZnRmcrY2Z3ZWNHaXdTRklIc0JFSTFFT0F4US94VUVBUUVRaTBYazZNdTkvLy9ETTl1TGZRaHFDdWlsd1AvL1djT0wvMVdMN0l0RkNJdklnK0Fmd2ZrRml3eU5JSHNCRU1IZ0JvMUVBUXhRL3hVQUFRRVFYY09MLzFXTDdJUHNFS0VjVUFFUU04V0pSZnhXTS9ZNU5kQmVBUkIwVDRNOVZGOEJFUDUxQmVpV0N3QUFvVlJmQVJDRCtQOTFCN2ovL3dBQTYzQldqVTN3VVdvQmpVMElVVkQvRlVBQUFSQ0Z3SFZuZ3ozUVhnRVFBblhhL3hVY0FBRVFnL2g0ZGMrSk5kQmVBUkJXVm1vRmpVWDBVR29CalVVSVVGYi9GVkFBQVJCUS94WGNBQUVRaXcxVVh3RVFnL24vZEtKV2pWWHdVbENOUmZSUVVmOFZWQUFCRUlYQWRJMW1pMFVJaTAzOE04MWU2TTF3Ly8vSnc4Y0YwRjRCRUFFQUFBRHI0OHpNek16TXpNek16TXpNVVkxTUpBUXJ5QnZBOTlBanlJdkVKUUR3Ly84N3lISUtpOEZabElzQWlRUWt3eTBBRUFBQWhRRHI2V29RYUtneUFSRG9TYnovL3pQYmlWM2thZ0hvUThELy8xbUpYZnhxQTErSmZlQTdQZUI2QVJCOVY0djN3ZVlDb2R4cUFSQUR4amtZZEVTTEFQWkFESU4wRDFEb1FRc0FBRm1EK1A5MEEvOUY1SVAvRkh3b29keHFBUkNMQkFhRHdDQlEveFhJQUFFUW9keHFBUkQvTkFib2dIai8vMW1oM0dvQkVJa2NCa2ZybnNkRi9QNy8vLy9vQ1FBQUFJdEY1T2dGdlAvL3cyb0I2T1MrLy85Wnc0di9WWXZzVTFhTGRRaUxSZ3lMeUlEaEF6UGJnUGtDZFVDcENBRUFBSFE1aTBZSVY0cytLL2lGLzM0c1YxQlc2RC9xLy85WlVPajY1di8vZzhRTU84ZDFENHRHRElUQWVRK0Q0UDJKUmd6ckI0Tk9EQ0NEeS85ZmkwWUlnMllFQUlrR1hvdkRXMTNEaS85VmkreFdpM1VJaGZaMUNWYm9OUUFBQUZuckwxYm9mUC8vLzFtRndIUUZnOGovNngvM1Jnd0FRQUFBZEJSVzZOYnAvLzlRNk1NS0FBQlo5OWhaRzhEckFqUEFYbDNEYWhSb3lESUJFT2o2dXYvL00vK0pmZVNKZmR4cUFlanh2di8vV1lsOS9EUDJpWFhnT3pYZ2VnRVFENDJEQUFBQW9keHFBUkNOQkxBNU9IUmVpd0QyUUF5RGRGWlFWdWpiNlAvL1dWa3owa0tKVmZ5aDNHb0JFSXNFc0l0SURQYkJnM1F2T1ZVSWRSRlE2RXIvLy85Wmcvai9kQjcvUmVUckdUbDlDSFVVOXNFQ2RBOVE2Qy8vLy85Wmcvai9kUU1KUmR5SmZmem9DQUFBQUVicmhEUC9pM1hnb2R4cUFSRC9OTEJXNk9Uby8vOVpXY1BIUmZ6Ky8vLy82QklBQUFDRGZRZ0JpMFhrZEFPTFJkem9lN3IvLzhOcUFlaGF2Zi8vV2NOcUFlZ2YvLy8vV2NPTC8xV0w3RkZXaTNVTVZ1alE2UC8vaVVVTWkwWU1XYWlDZFJub3Qzei8vOGNBQ1FBQUFJTk9EQ0M0Ly84QUFPazlBUUFBcUVCMERlaWFmUC8veHdBaUFBQUE2K0dvQVhRWGcyWUVBS2dRRDRTTkFBQUFpMDRJZytEK2lRNkpSZ3lMUmd5RFpnUUFnMlg4QUZOcUFvUGc3MXNMdzRsR0RLa01BUUFBZFN6b3FPYi8vNFBBSUR2d2RBem9uT2IvLzRQQVFEdndkUTMvZFF6b0tlYi8vMW1Gd0hVSFZ1alY1Zi8vV2ZkR0RBZ0JBQUJYRDRTREFBQUFpMFlJaXo2TlNBS0pEb3RPR0N2NEs4dUpUZ1NGLzM0ZFYxRC9kUXpveU9ULy80UEVESWxGL090T2c4Z2dpVVlNNlQzLy8vK0xUUXlEK2Y5MEc0UDUvblFXaThHRDRCK0wwY0g2QmNIZ0JnTUVsU0I3QVJEckJiZ1lXQUVROWtBRUlIUVZVMm9BYWdCUjZERGMvLzhqd29QRUVJUDQvM1F0aTBZSWkxMElab2tZNngxcUFvMUYvRkQvZFF5TCs0dGRDR2FKWGZ6b1VPVC8vNFBFRElsRi9EbDkvSFFMZzA0TUlMai8vd0FBNndlTHd5WC8vd0FBWDF0ZXljT0wvMVdMN0lQc0VGTldpM1VNTTl0WGkzMFFPL04xRkR2N2RoQ0xSUWc3dzNRQ2lSZ3p3T21EQUFBQWkwVUlPOE4wQTRNSS80SC8vLy8vZjNZYjZDRjcvLzlxRmw1VFUxTlRVNGt3NktwNi8vK0R4QlNMeHV0Vy8zVVlqVTN3NktCdS8vK0xSZkE1V0JRUGhad0FBQUJtaTBVVXVmOEFBQUJtTzhGMk5qdnpkQTg3KzNZTFYxTlc2RkoxLy8rRHhBem96bnIvLzhjQUtnQUFBT2pEZXYvL2l3QTRYZngwQjR0TitJTmhjUDFmWGx2Snd6dnpkREk3KzNjczZLTjYvLzlxSWw1VFUxTlRVNGt3NkN4Ni8vK0R4QlE0WGZ3UGhIbi8vLytMUmZpRFlIRDk2VzMvLy8rSUJvdEZDRHZEZEFiSEFBRUFBQUE0WGZ3UGhDWC8vLytMUmZpRFlIRDk2Um4vLy8rTlRReFJVMWRXYWdHTlRSUlJVNGxkRFA5d0JQOFYzQUFCRUR2RGRCUTVYUXdQaFY3Ly8vK0xUUWc3eTNTOWlRSHJ1ZjhWSEFBQkVJUDRlZytGUlAvLy96dnpENFJuLy8vL08vc1BobC8vLy85WFUxYm9lM1QvLzRQRURPbFAvLy8vaS85VmkreHFBUDkxRlA5MUVQOTFEUDkxQ09oOC92Ly9nOFFVWGNOcUF1aStxdi8vV2NPTC8xV0w3SVBzRkZaWC8zVUlqVTNzNkZ4dC8vK0xSUkNMZFF3ei96dkhkQUtKTUR2M2RTem9wWG4vLzFkWFYxZFh4d0FXQUFBQTZDMTUvLytEeEJTQWZmZ0FkQWVMUmZTRFlIRDlNOERwMkFFQUFEbDlGSFFNZzMwVUFuekpnMzBVSkgvRGkwM3NVNG9laVgzOGpYNEJnN21zQUFBQUFYNFhqVVhzVUErMncyb0lVT2dtQndBQWkwM3NnOFFNNnhDTGtjZ0FBQUFQdHNNUHR3UkNnK0FJaGNCMEJZb2ZSK3ZIZ1BzdGRRYURUUmdDNndXQSt5dDFBNG9mUjR0RkZJWEFENHhMQVFBQWcvZ0JENFJDQVFBQWcvZ2tENDg1QVFBQWhjQjFLb0Q3TUhRSngwVVVDZ0FBQU9zMGlnYzhlSFFOUEZoMENjZEZGQWdBQUFEckljZEZGQkFBQUFEckNvUDRFSFVUZ1Bzd2RRNktCeng0ZEFROFdIVUVSNG9mUjR1eHlBQUFBTGovLy8vL005TDNkUlFQdHNzUHR3eE85c0VFZEFnUHZzdUQ2VERyRy9mQkF3RUFBSFF4aXN1QTZXR0ErUmtQdnN0M0E0UHBJSVBCeVR0TkZITVpnMDBZQ0RsRi9ISW5kUVE3eW5ZaGcwMFlCSU45RUFCMUk0dEZHRStvQ0hVZ2czMFFBSFFEaTMwTWcyWDhBT3RiaTEzOEQ2OWRGQVBaaVYzOGloOUg2NHUrLy8vL2Y2Z0VkUnVvQVhVOWcrQUNkQW1CZmZ3QUFBQ0Fkd21Gd0hVck9YWDhkaWJvQkhqLy8vWkZHQUhIQUNJQUFBQjBCb05OL1AvckQvWkZHQUpxQUZnUGxjQUR4b2xGL0l0RkVJWEFkQUtKT1BaRkdBSjBBL2RkL0lCOStBQjBCNHRGOUlOZ2NQMkxSZnpyR0l0RkVJWEFkQUtKTUlCOStBQjBCNHRGOUlOZ2NQMHp3RnRmWHNuRGkvOVZpK3d6d0ZEL2RSRC9kUXovZFFnNUJUUmpBUkIxQjJnQVdBRVE2d0ZRNkt2OS8vK0R4QlJkdzR2L1ZZdnNnK3dVVTFaWDZHU0gvLytEWmZ3QWd6MWdhZ0VRQUl2WUQ0V09BQUFBYUh3YkFSRC9GVVFCQVJDTCtJWC9ENFFxQVFBQWl6V1lBQUVRYUhBYkFSQlgvOWFGd0ErRUZBRUFBRkRvcm9iLy84Y0VKR0FiQVJCWG8yQnFBUkQvMWxEb21ZYi8vOGNFSkV3YkFSQlhvMlJxQVJELzFsRG9oSWIvLzhjRUpEQWJBUkJYbzJocUFSRC8xbERvYjRiLy8xbWpjR29CRUlYQWRCUm9HQnNCRUZmLzFsRG9WNGIvLzFtamJHb0JFS0ZzYWdFUU84TjBUemtkY0dvQkVIUkhVT2kxaHYvLy96VndhZ0VRaS9Eb3FJYi8vMWxaaS9pRjluUXNoZjkwS1AvV2hjQjBHWTFOK0ZGcURJMU43RkZxQVZELzE0WEFkQWIyUmZRQmRRbUJUUkFBQUNBQTZ6bWhaR29CRUR2RGREQlE2R1dHLy85WmhjQjBKZi9RaVVYOGhjQjBIS0ZvYWdFUU84TjBFMURvU0liLy8xbUZ3SFFJLzNYOC85Q0pSZnovTldCcUFSRG9NSWIvLzFtRndIUVEvM1VRLzNVTS8zVUkvM1g4LzlEckFqUEFYMTVieWNPTC8xV0w3SXROQ0ZZejlqdk9mQjZEK1FKK0RJUDVBM1VVb2N4ZkFSRHJLS0hNWHdFUWlRM01Yd0VRNnh2bzNIWC8vMVpXVmxaV3h3QVdBQUFBNkdSMS8vK0R4QlNEeVA5ZVhjT0wvMVdMN0lIc0tBTUFBS0VjVUFFUU04V0pSZnoyQmVCZUFSQUJWblFJYWdyb2wrai8vMW5vdXV6Ly80WEFkQWhxRnVpODdQLy9XZllGNEY0QkVBSVBoTW9BQUFDSmhlRDkvLytKamR6OS8vK0psZGo5Ly8rSm5kVDkvLytKdGREOS8vK0p2Y3o5Ly85bWpKWDQvZi8vWm95TjdQMy8vMmFNbmNqOS8vOW1qSVhFL2YvL1pveWx3UDMvLzJhTXJiejkvLytjajRYdy9mLy9pM1VFalVVRWlZWDAvZi8veDRVdy9mLy9BUUFCQUltMTZQMy8vNHRBL0dwUWlZWGsvZi8vallYWS9QLy9hZ0JRNkhCdi8vK05oZGo4Ly8rRHhBeUpoU2o5Ly8rTmhURDkvLzlxQU1lRjJQei8veFVBQUVDSnRlVDgvLytKaFN6OS8vLy9GWEFBQVJDTmhTajkvLzlRL3hWc0FBRVFhZ1BvQ0tqLy84ek16TXpNek16TXpGV0w3RmRXVTR0TkVBdkpkRTJMZFFpTGZReTNRYk5hdGlDTlNRQ0tKZ3JraWdkMEp3ckFkQ09EeGdHRHh3RTY1M0lHT3VOM0FnTG1Pc2R5QmpyRGR3SUN4anJnZFF1RDZRRjEwVFBKT3VCMENibi8vLy8vY2dMMzJZdkJXMTVmeWNNendGQlFhZ05RYWdOb0FBQUFRR2lJR3dFUS94VVlBQUVRbzFSZkFSRERvVlJmQVJCV2l6VTBBQUVRZy9qL2RBaUQrUDUwQTFELzFxRlFYd0VRZy9qL2RBaUQrUDUwQTFELzFsN0RpLzlWaSt4VFZvdDFDRmN6LzRQTC96djNkUnpvM25QLy8xZFhWMWRYeHdBV0FBQUE2R1p6Ly8rRHhCUUx3K3RDOWtZTWczUTNWdWhSOWYvL1Zvdlk2TEVEQUFCVzZMYmYvLzlRNk5nQ0FBQ0R4QkNGd0gwRmc4di82eEdMUmh3N3gzUUtVT2g2YmYvL1dZbCtISWwrREl2RFgxNWJYY05xREdqd01nRVE2TUN3Ly8rRFRlVC9NOENMZFFnei96djNENVhBTzhkMUhlaGJjLy8veHdBV0FBQUFWMWRYVjFmbzQzTC8vNFBFRklQSS8rc005a1lNUUhRTWlYNE1pMFhrNk1Pdy8vL0RWdWhXM3YvL1dZbDkvRmJvS3YvLy8xbUpSZVRIUmZ6Ky8vLy82QVVBQUFEcjFZdDFDRmJvcE43Ly8xbkRhaEJvRURNQkVPaEVzUC8vaTBVSWcvaitkUlBvNjNMLy84Y0FDUUFBQUlQSS8rbXFBQUFBTTlzN3czd0lPd1VJZXdFUWNocm95bkwvLzhjQUNRQUFBRk5UVTFOVDZGSnkvLytEeEJUcjBJdkl3ZmtGalR5TklIc0JFSXZ3ZytZZndlWUdpdzhQdmt3T0JJUGhBWFRHVU9qRThmLy9XWWxkL0lzSDlrUUdCQUYwTWY5MUNPZzQ4Zi8vV1ZEL0ZUQUFBUkNGd0hVTC94VWNBQUVRaVVYazZ3T0pYZVE1WGVSMEdlaHBjdi8vaTAza2lRam9USEwvLzhjQUNRQUFBSU5ONVAvSFJmeisvLy8vNkFrQUFBQ0xSZVRvdjYvLy84UC9kUWpvK3ZILy8xbkRpLzlWaSt5RDdCaFQvM1VRalUzbzZLOWwvLytMWFFpTlF3RTlBQUVBQUhjUGkwWG9pNERJQUFBQUQ3Y0VXT3QxaVYwSXdYMElDSTFGNkZDTFJRZ2wvd0FBQUZEb0FXYi8vMWxaaGNCMEVvcEZDR29DaUVYNGlGMzV4a1g2QUZuckNqUEppRjM0eGtYNUFFR0xSZWhxQWY5d0ZQOXdCSTFGL0ZCUmpVWDRVSTFGNkdvQlVPanl6UC8vZzhRZ2hjQjFFRGhGOUhRSGkwWHdnMkJ3L1RQQTZ4UVB0MFg4STBVTWdIMzBBSFFIaTAzd2cyRncvVnZKdzR2L1ZZdnNWb3QxQ0ZkVzZCbncvLzlaZy9qL2RGQ2hJSHNCRUlQK0FYVUo5b0NFQUFBQUFYVUxnLzRDZFJ6MlFFUUJkQlpxQXVqdTcvLy9hZ0dMK09qbDcvLy9XVms3eDNRY1Z1alo3Ly8vV1ZEL0ZUUUFBUkNGd0hVSy94VWNBQUVRaS9qckFqUC9WdWcxNy8vL2k4YkIrQVdMQklVZ2V3RVFnK1lmd2VZR1djWkVNQVFBaGY5MERGZm9BWEgvLzFtRHlQL3JBalBBWDE1ZHcyb1FhREF6QVJEb0Q2Ny8vNHRGQ0lQNC9uVWI2TWx3Ly8rRElBRG9ybkQvLzhjQUNRQUFBSVBJLyttT0FBQUFNLzg3eDN3SU93VUlld0VRY2lIb29IRC8vNGs0Nklady8vL0hBQWtBQUFCWFYxZFhWK2dPY1AvL2c4UVU2OG1MeU1INUJZMGNqU0I3QVJDTDhJUG1IOEhtQm9zTEQ3NU1NUVNENFFGMHYxRG9nTy8vLzFtSmZmeUxBL1pFTUFRQmRBNy9kUWpveS83Ly8xbUpSZVRyRCtncmNQLy94d0FKQUFBQWcwM2svOGRGL1A3Ly8vL29DUUFBQUl0RjVPaWVyZi8vdy85MUNPalo3Ly8vV2NPTC8xV0w3RmFMZFFpTFJneW9nM1FlcUFoMEd2OTJDT2pTYWYvL2dXWU05L3YvL3pQQVdZa0dpVVlJaVVZRVhsM0R6TXpNek16TXpNek16TXpNekkxQy8xdkRqYVFrQUFBQUFJMWtKQUF6d0lwRUpBaFRpOWpCNEFpTFZDUUk5OElEQUFBQWRCV0tDb1BDQVRyTGRNK0V5WFJSOThJREFBQUFkZXNMMkZlTHc4SGpFRllMMklzS3YvLysvbjZMd1l2M004c0Q4QVA1Zy9IL2cvRC9NODh6eG9QQ0JJSGhBQUVCZ1hVY0pRQUJBWUYwMHlVQUFRRUJkUWlCNWdBQUFJQjF4RjVmV3pQQXc0dEMvRHJEZERhRXdIVHZPdU4wSjRUa2RPZkI2QkE2dzNRVmhNQjAzRHJqZEFhRTVIVFU2NVplWDQxQy8xdkRqVUwrWGw5Ync0MUMvVjVmVzhPTlF2eGVYMXZEaS85V2kvR0xCb1hBZEFwUTZORm8vLytESmdCWmcyWUVBSU5tQ0FCZXc0di9WbW9ZaS9GcUFGYm9SR24vLzRQRURJdkdYc05xREdoUU13RVE2QUdzLy8rRFpmd0FVZjhWUkFBQkVJTmw1QURySG90RjdJc0Fpd0F6eVQwWEFBREFENVRCaThIRGkyWG94MFhrRGdBSGdNZEYvUDcvLy8rTFJlVG9DS3ovLzhPTC8xV0w3SXRGQ0lYQWZBNDdRUVI5Q1lzSmpRU0JYY0lFQUdvQWFnQnFBV2lNQUFEQS94VVlBUUVRekl2L1ZvdnhqVTRVNkdiLy8vOHp3SWxHTElsR01JbEdOSXZHWHNPTC8xYUw4WTFHRkZEL0ZjZ0FBUkNOVGl4ZTZTRC8vLytMLzFXTDdGWlhpL0dOZmhSWC94VUVBUUVRaTBZd2kwMElPOGgvSTRYSmZCODd5SFVPaTNZSVYvOFZBQUVCRUl2RzZ4WlJqVTRzNkdULy8vK0xNT3ZvVi84VkFBRUJFRFBBWDE1ZHdnUUFpLzlXaS9Ib2MvLy8vN2dBQUFBUWpVNFV4d1k0QUFBQWlVWUlpVVlFeDBZTUFBa0FBTWRHRUtBYkFSRG8xZjcvLzRYQWZRZkdCZFJxQVJBQmk4WmV3NEI1Q0FESEFiQWJBUkIwRG90SkJJWEpkQWRSL3hYb0FBRVF3NHYvVll2cy8zVUlhZ0QvY1FUL0ZRZ0JBUkJkd2dRQWkvOVZpK3lEZlFnQWRBNy9kUWhxQVA5eEJQOFZlQUFCRUYzQ0JBQ0wvMVdMN0RQQU9VVUlkUW4vZFF5TEFmOFE2eUU1UlF4MURQOTFDSXNCLzFBRU04RHJFUDkxRFA5MUNGRC9jUVQvRlJBQkFSQmR3Z2dBaS85Vmkrei9kUWhxQVA5eEJQOFZUQUVCRUYzQ0JBQ0wvMVdMN0ZhTDhlaFQvLy8vOWtVSUFYUUhWdWhkWHYvL1dZdkdYbDNDQkFDTC8xV0w3SXZCaTAwSWlVZ0V4d0RFR3dFUU04bkhRQlFDQUFBQWlVZ01pVWdRWm9sSUdHYUpTQnFKUUFoZHdnUUFpLzlWaSt5TFJRejNaUkNGMG5jRmcvai9kZ2U0VndBSGdGM0RpMDBJaVFFendGM0RpLzlWaSt5TFNRU0xBVjMvWUFRejBvMUJGRUx3RDhFUWpVRUl3NHZCdzR2L1ZZdnM5a1VJQVZhTDhjY0d4QnNCRUhRSFZ1akhYZi8vV1l2R1hsM0NCQUNMLzFXTDdJdEZESXRORUlQSy95dlFPOUZ6QjdoWEFBZUFYY01Ed1l0TkNJa0JNOEJkdzR2L1ZZdnNWb3QxQ0ZmL2RReUR4Z2lENXZpTlJRaFdVSXY1NkZiLy8vK0R4QXlGd0h3Mi8zVUlqVVVJYWhCUTZLYi8vLytEeEF5RndId2hpMDhFLzNVSWl3SC9FSVhBZEJOT2cyQUVBSWs0eDBBTUFRQUFBSWx3Q09zQ004QmZYbDNDQ0FDTC8xV0w3RmFMZFF4WC8zVVFnOFlJZytiNGpVVU1WbENMK2VqeS92Ly9nOFFNaGNCOExmOTFESTFGREdvUVVPaEMvLy8vZzhRTWhjQjhHUDkxREl0UEJQOTFDSXNCLzFBSWhjQjBCazZKY0FqckFqUEFYMTVkd2d3QXpQOGxGQUVCRUl2L1ZZdnNVVk9MUlF5RHdBeUpSZnhraXgwQUFBQUFpd05rb3dBQUFBQ0xSUWlMWFF5TGJmeUxZL3ovNEZ2SndnZ0FXRm1IQkNULzRJdi9WWXZzVVZGVFZsZGtpelVBQUFBQWlYWDh4MFg0OU9BQUVHb0EvM1VNLzNYNC8zVUk2SmIvLy8rTFJReUxRQVNENFAyTFRReUpRUVJraXowQUFBQUFpMTM4aVR0a2lSMEFBQUFBWDE1YnljSUlBRldMN0lQc0NGTldWL3lKUmZ3endGQlFVUDkxL1A5MUZQOTFFUDkxRFA5MUNPZ0dEd0FBZzhRZ2lVWDRYMTViaTBYNGkrVmR3NHYvVll2c1Z2eUxkUXlMVGdnenp1anRXLy8vYWdCVy8zWVUvM1lNYWdEL2RSRC9kaEQvZFFqb3lRNEFBSVBFSUY1ZHc0di9WWXZzZyt3NFU0RjlDQ01CQUFCMUVyZ3g0Z0FRaTAwTWlRRXp3RURwc0FBQUFJTmwyQURIUmR4ZDRnQVFvUnhRQVJDTlRkZ3p3WWxGNEl0RkdJbEY1SXRGRElsRjZJdEZISWxGN0l0RklJbEY4SU5sOUFDRFpmZ0FnMlg4QUlsbDlJbHQrR1NoQUFBQUFJbEYySTFGMkdTakFBQUFBTWRGeUFFQUFBQ0xSUWlKUmN5TFJSQ0pSZERvRUh6Ly80dUFnQUFBQUlsRjFJMUZ6RkNMUlFqL01QOVYxRmxaZzJYSUFJTjkvQUIwRjJTTEhRQUFBQUNMQTR0ZDJJa0RaSWtkQUFBQUFPc0ppMFhZWktNQUFBQUFpMFhJVzhuRGkvOVZpK3hSVS95TFJReUxTQWd6VFF6bzRWci8vNHRGQ0l0QUJJUGdablFSaTBVTXgwQWtBUUFBQURQQVFPdHM2MnBxQVl0RkRQOXdHSXRGRFA5d0ZJdEZEUDl3REdvQS8zVVFpMFVNLzNBUS8zVUk2Sk1OQUFDRHhDQ0xSUXlEZUNRQWRRdi9kUWovZFF6by9QMy8vMm9BYWdCcUFHb0FhZ0NOUmZ4UWFDTUJBQURvb2Y3Ly80UEVISXRGL0l0ZERJdGpISXRySVAvZ004QkFXOG5EaS85VmkreFJVMVpYaTMwSWkwY1FpM2NNaVVYOGk5N3JMWVArLzNVRjZEcmYvLytMVGZ4T2k4WnJ3QlFEd1l0TkVEbElCSDBGTzBnSWZnV0QvdjkxQ2Y5TkRJdGRDSWwxQ0lOOURBQjl5b3RGRkVhSk1JdEZHSWtZTzE4TWR3UTc4M1lGNlBYZS8vK0x4bXZBRkFORi9GOWVXOG5EaS85VmkreUxSUXhXaTNVSWlRYm9vbnIvLzR1QW1BQUFBSWxHQk9pVWV2Ly9pYkNZQUFBQWk4WmVYY09MLzFXTDdPaC9ldi8vaTRDWUFBQUE2d3FMQ0R0TkNIUUtpMEFFaGNCMThrQmR3elBBWGNPTC8xV0w3RmJvVjNyLy80dDFDRHV3bUFBQUFIVVI2RWQ2Ly8rTFRnU0ppSmdBQUFCZVhjUG9ObnIvLzR1QW1BQUFBT3NKaTBnRU8vRjBENHZCZzNnRUFIWHhYbDNwUzk3Ly80dE9CSWxJQk92U2kvOVZpK3lEN0JpaEhGQUJFSU5sNkFDTlRlZ3p3WXROQ0lsRjhJdEZESWxGOUl0RkZFREhSZXhUNFFBUWlVMzRpVVg4WktFQUFBQUFpVVhvalVYb1pLTUFBQUFBLzNVWVVmOTFFT2pKREFBQWk4aUxSZWhrb3dBQUFBQ0x3Y25EaS85VmkreFdqVVVJVUl2eDZCQzYvLy9IQnRnc0FSQ0x4bDVkd2dRQXh3SFlMQUVRNmNXNi8vK0wvMVdMN0ZhTDhjY0cyQ3dCRU9peXV2Ly85a1VJQVhRSFZ1aWxXUC8vV1l2R1hsM0NCQUNMLzFXTDdGWlhpMzBJaTBjRWhjQjBSNDFRQ0lBNkFIUS9pM1VNaTA0RU84RjBGSVBCQ0ZGUzZBMXIvLzlaV1lYQWRBUXp3T3NrOWdZQ2RBWDJCd2gwOG90RkVJc0FxQUYwQmZZSEFYVGtxQUowQmZZSEFuVGJNOEJBWDE1ZHc0di9WWXZzaTBVSWl3Q0xBRDFOVDBQZ2RCZzlZM050NEhVcjZPSjQvLytEb0pBQUFBQUE2YjNjLy8vbzBYai8vNE80a0FBQUFBQitET2pEZVAvL0JaQUFBQUQvQ0RQQVhjTnFFR2l3TlFFUTZLYWovLytMZlJDTFhRaUJmd1NBQUFBQWZ3WVB2bk1JNndPTGN3aUpkZVRvakhqLy93V1FBQUFBL3dDRFpmd0FPM1VVZEdXRC92OStCVHQzQkh3RjZLRGMvLytMeHNIZ0E0dFBDQVBJaXpHSmRlREhSZndCQUFBQWcza0VBSFFWaVhNSWFBTUJBQUJUaTA4SS8zUUJCT2hHQ3dBQWcyWDhBT3NhLzNYczZDMy8vLzladzR0bDZJTmwvQUNMZlJDTFhRaUxkZUNKZGVUcmxzZEYvUDcvLy8vb0dRQUFBRHQxRkhRRjZEVGMvLytKY3dqb09LUC8vOE9MWFFpTGRlVG83WGYvLzRPNGtBQUFBQUIrRE9qZmQvLy9CWkFBQUFEL0NNT0xBSUU0WTNOdDRIVTRnM2dRQTNVeWkwZ1VnZmtnQlpNWmRCQ0IrU0VGa3hsMENJSDVJZ1dUR1hVWGczZ2NBSFVSNktGMy8vOHp5VUdKaUF3Q0FBQ0x3Y016d01OcUNHallOUUVRNklDaS8vK0xUUWlGeVhRcWdUbGpjMjNnZFNLTFFSeUZ3SFFiaTBBRWhjQjBGSU5sL0FCUS8zRVk2UGo1Ly8vSFJmeisvLy8vNkkraS8vL0RNOEE0UlF3UGxjRERpMlhvNkNYYi8vL01pLzlWaSt5TFRReUxBVmFMZFFnRHhvTjVCQUI4RUl0UkJJdEpDSXMwTW9zTURnUEtBOEZlWGNPTC8xV0w3SVBzRElYL2RRcm9OdHYvLytqbDJ2Ly9nMlg0QUlNL0FNWkYvd0IrVTFOV2kwVUlpMEFjaTBBTWl4aU5jQVNGMjM0emkwWDR3ZUFFaVVYMGkwMEkvM0VjaXdaUWkwY0VBMFgwVU9oZi9mLy9nOFFNaGNCMUNrdUR4Z1NGMjMvYzZ3VEdSZjhCLzBYNGkwWDRPd2Q4c1Y1YmlrWC95Y05xQkxoTDlBQVE2T01KQUFEb2lIYi8vNE80bEFBQUFBQjBCZWl0MnYvL2cyWDhBT2lSMnYvL2cwMzgvK2hQMnYvLzZHTjIvLytMVFFocUFHb0FpWWlVQUFBQTZFaTUvLy9NYWl4b1VEWUJFT2crb2YvL2k5bUxmUXlMZFFpSlhlU0RaY3dBaTBmOGlVWGMvM1lZalVYRVVPaHUrLy8vV1ZtSlJkam9HWGIvLzR1QWlBQUFBSWxGMU9nTGR2Ly9pNENNQUFBQWlVWFE2UDExLy8rSnNJZ0FBQURvOG5YLy80dE5FSW1JakFBQUFJTmwvQUF6d0VDSlJSQ0pSZnovZFJ6L2RSaFQvM1VVVitpOCsvLy9nOFFVaVVYa2cyWDhBT3R2aTBYczZPSDkvLy9EaTJYbzZLOTEvLytEb0F3Q0FBQUFpM1VVaTMwTWdYNEVnQUFBQUg4R0Q3NVBDT3NEaTA4SWkxNFFnMlhnQUl0RjREdEdESE1ZYThBVUE4T0xVQVE3eW41QU8wZ0lmenVMUmdpTFROQUlVVlpxQUZmb3Avei8vNFBFRUlObDVBQ0RaZndBaTNVSXgwWDgvdi8vLzhkRkVBQUFBQURvRkFBQUFJdEY1T2gxb1AvL3cvOUY0T3VuaTMwTWkzVUlpMFhjaVVmOC8zWFk2THI2Ly85WjZCWjEvLytMVGRTSmlJZ0FBQURvQ0hYLy80dE4wSW1JakFBQUFJRStZM050NEhWQ2czNFFBM1U4aTBZVVBTQUZreGwwRGowaEJaTVpkQWM5SWdXVEdYVWtnMzNNQUhVZWczM2tBSFFZLzNZWTZEejYvLzlaaGNCMEMvOTFFRmJvSmYzLy8xbFp3Mm9NYUhnMkFSRG9vcC8vL3pQU2lWWGtpMFVRaTBnRU84b1BoRmdCQUFBNFVRZ1BoRThCQUFDTFNBZzd5blVNOXdBQUFBQ0FENFE4QVFBQWl3Q0xkUXlGd0hnRWpYUXhESWxWL0RQYlExT29DSFJCaTMwSS8zY1k2T0lIQUFCWldZWEFENFR5QUFBQVUxYm8wUWNBQUZsWmhjQVBoT0VBQUFDTFJ4aUpCb3RORklQQkNGRlE2T3o4Ly85WldZa0c2Y3NBQUFDTGZSU0xSUWovY0JpRUgzUkk2Sm9IQUFCWldZWEFENFNxQUFBQVUxYm9pUWNBQUZsWmhjQVBoSmtBQUFEL2R4U0xSUWovY0JoVzZONWgvLytEeEF5RGZ4UUVENFdDQUFBQWl3YUZ3SFI4ZzhjSVYrdWNPVmNZZFRqb1RRY0FBRmxaaGNCMFlWTlc2RUFIQUFCWldZWEFkRlQvZHhTRHh3aFhpMFVJLzNBWTZGLzgvLzlaV1ZCVzZJMWgvLytEeEF6ck9lZ1ZCd0FBV1ZtRndIUXBVMWJvQ0FjQUFGbFpoY0IwSFA5M0dPajZCZ0FBV1lYQWRBLzJCd1JxQUZnUGxjQkFpVVhrNndYb2lOZi8vOGRGL1A3Ly8vK0xSZVRyRGpQQVFNT0xaZWpvSk5mLy96UEE2SFdlLy8vRGFnaG9tRFlCRU9nam52Ly9pMFVROXdBQUFBQ0FkQVdMWFF6ckNvdElDSXRWREkxY0VReURaZndBaTNVVVZsRC9kUXlMZlFoWDZFYisvLytEeEJCSWRCOUlkVFJxQVkxR0NGRC9keGpvcHZ2Ly8xbFpVUDkyR0ZQb2MvWC8vK3NZalVZSVVQOTNHT2lNKy8vL1dWbFEvM1lZVStoWjlmLy94MFg4L3YvLy8randuZi8vd3pQQVFNT0xaZWpvaTliLy84eUwvMVdMN0lOOUdBQjBFUDkxR0ZOVy8zVUk2RmIvLy8rRHhCQ0RmU0FBLzNVSWRRTlc2d1AvZFNEb0YvWC8vLzgzLzNVVS8zVVFWdWl1K2YvL2kwY0VhQUFCQUFEL2RSeEEvM1VVaVVZSS8zVU1pMHNNVnY5MUNPajErLy8vZzhRb2hjQjBCMVpRNktIMC8vOWR3NHYvVll2c1VWRldpM1VJZ1Q0REFBQ0FENFRhQUFBQVYrZ1ljdi8vZzdpQUFBQUFBSFEvNkFweS8vK051SUFBQUFEb3FtLy8vemtIZEN1QlBrMVBRK0IwSS85MUpQOTFJUDkxR1A5MUZQOTFFUDkxREZib08vWC8vNFBFSElYQUQ0V0xBQUFBaTMwWWczOE1BSFVGNlBYVi8vK0xkUnlOUmZoUWpVWDhVRmIvZFNCWDZJUDIvLytMK0l0Ri9JUEVGRHRGK0hOYlV6czNmRWM3ZHdSL1FvdEhESXRQRU1IZ0JBUEJpMGowaGNsMEJvQjVDQUIxS28xWThQWURRSFVpLzNVa2kzVU0vM1VnYWdEL2RSai9kUlQvZFJEL2RRam90LzcvLzR0MUhJUEVIUDlGL0l0Ri9JUEhGRHRGK0hLblcxOWV5Y09MLzFXTDdJUHNMSXROREZPTFhSaUxRd1E5Z0FBQUFGWlh4a1gvQUg4R0Q3NUpDT3NEaTBrSWcvbi9pVTM0ZkFRN3lId0Y2RHZWLy8rTGRRaS9ZM050NERrK0Q0VzZBZ0FBZzM0UUE3c2dCWk1aRDRVWUFRQUFpMFlVTzhOMEVqMGhCWk1aZEFzOUlnV1RHUStGL3dBQUFJTitIQUFQaGZVQUFBRG93WEQvLzRPNGlBQUFBQUFQaExVQ0FBRG9yM0QvLzR1d2lBQUFBSWwxQ09paGNQLy9pNENNQUFBQWFnRldpVVVRNkJ3RUFBQlpXWVhBZFFYb3VOVC8vemsrZFNhRGZoQURkU0NMUmhRN3czUU9QU0VGa3hsMEJ6MGlCWk1aZFF1RGZod0FkUVhvanRULy8raFdjUC8vZzdpVUFBQUFBSFI4NkVody8vK0x1SlFBQUFEb1BYRC8vLzkxQ0RQMmliQ1VBQUFBNkJuNS8vOVpoTUIxVHpQYk9SOStIWXRIQkl0TUF3Um9oRjhCRU9oa1VQLy9oTUIxRFVhRHd4QTdOM3pqNk9mVC8vOXFBZjkxQ09oaytQLy9XVmxvNEN3QkVJMU4xT2czOXYvL2FMUTJBUkNOUmRSUTZOQ3kvLytMZFFpL1kzTnQ0RGsrRDRXSUFRQUFnMzRRQXcrRmZnRUFBSXRHRkR2RGRCSTlJUVdUR1hRTFBTSUZreGtQaFdVQkFBQ0xmUmlEZnd3QUQ0YS9BQUFBalVYa1VJMUY4RkQvZGZqL2RTQlg2RnYwLy8rRHhCU0wrSXRGOER0RjVBK0Rsd0FBQUl0RitEa0hENCtCQUFBQU8wY0VmM3lMUnhDSlJmU0xSd3lKUmVpRndINXNpMFljaTBBTWpWZ0Vpd0NKUmV5RndINGovM1ljaXdOUS8zWDBpVVhnNk5IMS8vK0R4QXlGd0hVYS8wM3NnOE1FT1VYc2Y5My9UZWlEUmZRUWczM29BSCsrNnlqL2RTU0xYZlQvZFNER1JmOEIvM1hnLzNVWS8zVVUvM1VRVm90MURPaEwvUC8vaTNVSWc4UWMvMFh3ZzhjVTZWMy8vLytMZlJpQWZSd0FkQXBxQVZib092Zi8vMWxaZ0gzL0FBK0ZyZ0FBQUlzSEpmLy8veDg5SVFXVEdRK0NuQUFBQUl0L0hJWC9ENFNSQUFBQVZ1aUo5Ly8vV1lUQUQ0V0NBQUFBNkk5dS8vL29pbTcvLytpRmJ2Ly9pYkNJQUFBQTZIcHUvLytEZlNRQWkwMFFpWWlNQUFBQVZuVUYvM1VNNndQL2RTVG9BUEgvLzR0MUdHci9WdjkxRlA5MURPaVU5Zi8vZzhRUS8zWWM2S2ozLy8rTFhSaURld3dBZGlhQWZSd0FENFVwL3YvLy8zVWsvM1VnLzNYNFUvOTFGUDkxRVA5MURGYm80UHYvLzRQRUlPZ05idi8vZzdpVUFBQUFBSFFGNkRMUy8vOWZYbHZKdzR2L1ZZdnNWdjkxQ0l2eDZNdXUvLy9IQnRnc0FSQ0x4bDVkd2dRQWkvOVZpK3hUVmxmbzBHMy8vNE80REFJQUFBQ0xSUmlMVFFpL1kzTnQ0TDcvLy84ZnV5SUZreGwxSUlzUk85ZDBHb0g2SmdBQWdIUVNpeEFqMWp2VGNncjJRQ0FCRDRXVEFBQUE5a0VFWm5RamczZ0VBQStFZ3dBQUFJTjlIQUIxZldyL1VQOTFGUDkxRE9pMjlQLy9nOFFRNjJxRGVBd0FkUktMRUNQV2dmb2hCWk1aY2xpRGVCd0FkRkk1T1hVeWcza1FBM0lzT1ZrVWRpZUxVUnlMVWdpRjBuUWREN1oxSkZiL2RTRC9kUnhRLzNVVS8zVVEvM1VNVWYvU2c4UWc2eC8vZFNEL2RSei9kU1JRLzNVVS8zVVEvM1VNVWVqQisvLy9nOFFnTThCQVgxNWJYY1BNVll2c2crd0VVMUdMUlF5RHdBeUpSZnlMUlFoVi8zVVFpMDBRaTIzODZMWFYvLzlXVi8vUVgxNkwzVjJMVFJCVmkrdUIrUUFCQUFCMUJia0NBQUFBVWVpVDFmLy9YVmxieWNJTUFGQmsvelVBQUFBQWpVUWtEQ3RrSkF4VFZsZUpLSXZvb1J4UUFSQXp4VkNKWmZEL2RmekhSZnovLy8vL2pVWDBaS01BQUFBQXc0di9WWXZzTThCQWczMElBSFVDTThCZHc4ek16TXpNek16TXpNek16SXRGOElQZ0FRK0VEQUFBQUlObDhQNkxSUWpwT0Q3Ly84T0xWQ1FJalVJTWkwcnNNOGpvV2t2Ly83aW9Nd0VRNlJudi8vL016TXpNek16TXpNek16TXlMUmZDRDRBRVBoQXdBQUFDRFpmRCtpMFVJNmZnOS8vL0RpMVFrQ0kxQ0RJdEs5RFBJNkJwTC8vKzQxRE1CRU9uWjd2Ly96TXpNek16TXpNek16TXpNaTBYd2crQUJENFFNQUFBQWcyWHcvb3RGQ09tNFBmLy93NHRVSkFpTlFneUxTdkF6eU9qYVN2Ly91QUEwQVJEcG1lNy8vOHpNek16TXpNek16TXpNekl0RkNPbUlQZi8vaTFRa0NJMUNESXRLOERQSTZLdEsvLys0TERRQkVPbHE3di8vek16TXpNek16TXpNek16TXpJMUY3T2xJSGYvL2pVWHc2VkE5Ly8rTFZDUUlqVUlNaTByd004am9jMHIvLzdoZ05BRVE2VEx1Ly8vTXpNek16STFGOE9rb1BmLy9pMVFrQ0kxQ0RJdEs5RFBJNkV0Sy8vKzRqRFFCRU9rSzd2Ly96TXpNek16TXpNek16TXpNekkxMTZPbVlIdi8vaTFRa0NJMUNESXRLNkRQSTZCdEsvLys0dURRQkVPbmE3Zi8vek16TXpNek16TXpNek16TXpJMTE1T2xvSHYvL2kxUWtDSTFDREl0SzVEUEk2T3RKLy8rNDVEUUJFT21xN2YvL3pNek16TXpNek16TXpNek16STJGMk5qLy8rbVZQUC8vallYUTJQLy82WW84Ly8rTnRjRFkvLy9wSHg3Ly80MkYxTmovLytsMFBQLy9pMVFrQ0kxQ0RJdUt1TmovL3pQSTZKUkovLytMU3ZnenlPaUtTZi8vdUNnMUFSRHBTZTMvLzh6TXpNek16TXpNek16TXpJdEY3SVBnQVErRURBQUFBSU5sN1A2TFJRanBLRHovLzhPTFZDUUlqVUlNaTByc004am9Ta24vLzdoVU5RRVE2UW50Ly8vTXpNek16TXpNek16TXpNeU5SZXpwK0R2Ly80MUY4T253Ty8vL2kxUWtDSTFDREl0SzdEUEk2Qk5KLy8rNGlEVUJFT25TN1AvL2kxUWtDSTFDREl0SzdEUEk2UGhJLy8rNEtEWUJFT20zN1AvL3VYUnFBUkRvbmVuLy8yalQ5QUFRNkZXcy8vOVp3LzhWeEFBQkVHamQ5QUFReHdXc2FnRVFzQnNCRUtPd2FnRVF4Z1cwYWdFUUFPZ3RyUC8vV2NOb3JHb0JFTG00YWdFUTZGdnEvLzlvNS9RQUVPZ1NyUC8vV2NQSEJRaGpBUkFVQWdFUXVRaGpBUkRwa2FyLy83bDBhZ0VRNmNuby8vKzVyR29CRU9sbTZmLy94d1c0YWdFUXhCc0JFTU1BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUQ0T1FFQTZEa0JBTm81QVFESU9RRUFERG9CQUFBQUFBQVNQd0VBQ0RrQkFCZzVBUUFvT1FFQU9Ea0JBRW81QVFBZ1B3RUFiRGtCQUhvNUFRQ1FPUUVBQWo4QkFEUS9BUUJhT1FFQUpEd0JBT3crQVFEY1BnRUF6RDRCQUdnNkFRQitPZ0VBa0RvQkFLUTZBUUM0T2dFQTFEb0JBUEk2QVFBR093RUFFanNCQUI0N0FRQTJPd0VBVGpzQkFGZzdBUUJrT3dFQWRqc0JBSW83QVFDY093RUFxanNCQUxZN0FRREVPd0VBempzQkFONDdBUURtT3dFQTlEc0JBQVk4QVFBV1BBRUFVRDhCQURZOEFRQk9QQUVBWkR3QkFINDhBUUNXUEFFQXNEd0JBTVk4QVFEZ1BBRUE3andCQVB3OEFRQUtQUUVBSkQwQkFEUTlBUUJLUFFFQVpEMEJBSHc5QVFDVVBRRUFvRDBCQUxBOUFRQytQUUVBeWowQkFOdzlBUURzUFFFQUFqNEJBQkkrQVFBa1BnRUFOajRCQUVnK0FRQmFQZ0VBWmo0QkFIWStBUUNJUGdFQW1ENEJBTUErQVFBQUFBQUFMRG9CQUFBQUFBQktPZ0VBQUFBQUFLNDVBUUFBQUFBQVNnQUFnSkVBQUlCbkFBQ0FmUUFBZ0JFQUFJQUlBQUNBQUFBQUFBQUFBQUJtOUFBUWZQUUFFS1QwQUJBQUFBQUFBQUFBQUJ4WUFCQzFtUUFRWXFBQUVDNjJBQkFBQUFBQUFBQUFBTERYQUJEZnRnQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDelJaVEFBQUFBQUlBQUFCaEFBQUFPQzBCQURnWEFRQmlZV1FnWVd4c2IyTmhkR2x2YmdBQW5DMEJFRmcrQUJBQUFBQUEyRjhCRURCZ0FSRGtMUUVRcmxBQUVIcWZBQkFBQUFBQUFRSURCQVVHQndnSkNnc01EUTRQRUJFU0V4UVZGaGNZR1JvYkhCMGVIeUFoSWlNa0pTWW5LQ2txS3l3dExpOHdNVEl6TkRVMk56ZzVPanM4UFQ0L1FFRkNRMFJGUmtkSVNVcExURTFPVDFCUlVsTlVWVlpYV0ZsYVcxeGRYbDlnWVdKalpHVm1aMmhwYW10c2JXNXZjSEZ5YzNSMWRuZDRlWHA3ZkgxK2Z3QTlBQUFBUlc1amIyUmxVRzlwYm5SbGNnQUFBRXNBUlFCU0FFNEFSUUJNQURNQU1nQXVBRVFBVEFCTUFBQUFBQUJFWldOdlpHVlFiMmx1ZEdWeUFBQUFSbXh6Um5KbFpRQkdiSE5UWlhSV1lXeDFaUUJHYkhOSFpYUldZV3gxWlFCR2JITkJiR3h2WXdBQUFBQkRiM0pGZUdsMFVISnZZMlZ6Y3dBQWJRQnpBR01BYndCeUFHVUFaUUF1QUdRQWJBQnNBQUFBQUFBQUFBVUFBTUFMQUFBQUFBQUFBQjBBQU1BRUFBQUFBQUFBQUpZQUFNQUVBQUFBQUFBQUFJMEFBTUFJQUFBQUFBQUFBSTRBQU1BSUFBQUFBQUFBQUk4QUFNQUlBQUFBQUFBQUFKQUFBTUFJQUFBQUFBQUFBSkVBQU1BSUFBQUFBQUFBQUpJQUFNQUlBQUFBQUFBQUFKTUFBTUFJQUFBQUFBQUFBQ0JEYjIxd2JHVjBaU0JQWW1wbFkzUWdURzlqWVhSdmNpY0FBQUFnUTJ4aGMzTWdTR2xsY21GeVkyaDVJRVJsYzJOeWFYQjBiM0luQUFBQUFDQkNZWE5sSUVOc1lYTnpJRUZ5Y21GNUp3QUFJRUpoYzJVZ1EyeGhjM01nUkdWelkzSnBjSFJ2Y2lCaGRDQW9BQ0JVZVhCbElFUmxjMk55YVhCMGIzSW5BQUFBWUd4dlkyRnNJSE4wWVhScFl5QjBhSEpsWVdRZ1ozVmhjbVFuQUdCdFlXNWhaMlZrSUhabFkzUnZjaUJqYjNCNUlHTnZibk4wY25WamRHOXlJR2wwWlhKaGRHOXlKd0FBWUhabFkzUnZjaUIyWW1GelpTQmpiM0I1SUdOdmJuTjBjblZqZEc5eUlHbDBaWEpoZEc5eUp3QUFBQUJnZG1WamRHOXlJR052Y0hrZ1kyOXVjM1J5ZFdOMGIzSWdhWFJsY21GMGIzSW5BQUJnWkhsdVlXMXBZeUJoZEdWNGFYUWdaR1Z6ZEhKMVkzUnZjaUJtYjNJZ0p3QUFBQUJnWkhsdVlXMXBZeUJwYm1sMGFXRnNhWHBsY2lCbWIzSWdKd0FBWUdWb0lIWmxZM1J2Y2lCMlltRnpaU0JqYjNCNUlHTnZibk4wY25WamRHOXlJR2wwWlhKaGRHOXlKd0JnWldnZ2RtVmpkRzl5SUdOdmNIa2dZMjl1YzNSeWRXTjBiM0lnYVhSbGNtRjBiM0luQUFBQVlHMWhibUZuWldRZ2RtVmpkRzl5SUdSbGMzUnlkV04wYjNJZ2FYUmxjbUYwYjNJbkFBQUFBR0J0WVc1aFoyVmtJSFpsWTNSdmNpQmpiMjV6ZEhKMVkzUnZjaUJwZEdWeVlYUnZjaWNBQUFCZ2NHeGhZMlZ0Wlc1MElHUmxiR1YwWlZ0ZElHTnNiM04xY21VbkFBQUFBR0J3YkdGalpXMWxiblFnWkdWc1pYUmxJR05zYjNOMWNtVW5BQUJnYjIxdWFTQmpZV3hzYzJsbkp3QUFJR1JsYkdWMFpWdGRBQUFBSUc1bGQxdGRBQUJnYkc5allXd2dkbVowWVdKc1pTQmpiMjV6ZEhKMVkzUnZjaUJqYkc5emRYSmxKd0JnYkc5allXd2dkbVowWVdKc1pTY0FZRkpVVkVrQUFBQmdSVWdBWUhWa2RDQnlaWFIxY201cGJtY25BR0JqYjNCNUlHTnZibk4wY25WamRHOXlJR05zYjNOMWNtVW5BQUJnWldnZ2RtVmpkRzl5SUhaaVlYTmxJR052Ym5OMGNuVmpkRzl5SUdsMFpYSmhkRzl5SndBQVlHVm9JSFpsWTNSdmNpQmtaWE4wY25WamRHOXlJR2wwWlhKaGRHOXlKd0JnWldnZ2RtVmpkRzl5SUdOdmJuTjBjblZqZEc5eUlHbDBaWEpoZEc5eUp3QUFBQUJnZG1seWRIVmhiQ0JrYVhOd2JHRmpaVzFsYm5RZ2JXRndKd0FBWUhabFkzUnZjaUIyWW1GelpTQmpiMjV6ZEhKMVkzUnZjaUJwZEdWeVlYUnZjaWNBWUhabFkzUnZjaUJrWlhOMGNuVmpkRzl5SUdsMFpYSmhkRzl5SndBQUFBQmdkbVZqZEc5eUlHTnZibk4wY25WamRHOXlJR2wwWlhKaGRHOXlKd0FBQUdCelkyRnNZWElnWkdWc1pYUnBibWNnWkdWemRISjFZM1J2Y2ljQUFBQUFZR1JsWm1GMWJIUWdZMjl1YzNSeWRXTjBiM0lnWTJ4dmMzVnlaU2NBQUFCZ2RtVmpkRzl5SUdSbGJHVjBhVzVuSUdSbGMzUnlkV04wYjNJbkFBQUFBR0IyWW1GelpTQmtaWE4wY25WamRHOXlKd0FBWUhOMGNtbHVaeWNBQUFBQVlHeHZZMkZzSUhOMFlYUnBZeUJuZFdGeVpDY0FBQUFBWUhSNWNHVnZaaWNBQUFBQVlIWmpZV3hzSndCZ2RtSjBZV0pzWlNjQUFBQmdkbVowWVdKc1pTY0FBQUJlUFFBQWZEMEFBQ1k5QUFBOFBEMEFQajQ5QUNVOUFBQXZQUUFBTFQwQUFDczlBQUFxUFFBQWZId0FBQ1ltQUFCOEFBQUFYZ0FBQUg0QUFBQW9LUUFBTEFBQUFENDlBQUErQUFBQVBEMEFBRHdBQUFBbEFBQUFMd0FBQUMwK0tnQW1BQUFBS3dBQUFDMEFBQUF0TFFBQUt5c0FBQ29BQUFBdFBnQUFiM0JsY21GMGIzSUFBQUFBVzEwQUFDRTlBQUE5UFFBQUlRQUFBRHc4QUFBK1BnQUFJR1JsYkdWMFpRQWdibVYzQUFBQUFGOWZkVzVoYkdsbmJtVmtBRjlmY21WemRISnBZM1FBQUY5ZmNIUnlOalFBWDE5amJISmpZV3hzQUFBQVgxOW1ZWE4wWTJGc2JBQUFYMTkwYUdselkyRnNiQUFBWDE5emRHUmpZV3hzQUFBQVgxOXdZWE5qWVd3QUFBQUFYMTlqWkdWamJBQmZYMkpoYzJWa0tBQUFBQUE4Q1FFUU5Ba0JFQ2dKQVJBY0NRRVFFQWtCRUFRSkFSRDRDQUVROEFnQkVPUUlBUkRZQ0FFUW9nSUJFQndFQVJBQUJBRVE3QU1CRU13REFSQ3dBd0VRMEFnQkVNZ0lBUkNnQWdFUXhBZ0JFTUFJQVJDOENBRVF1QWdCRUxRSUFSQ3dDQUVRcEFnQkVLQUlBUkNjQ0FFUW1BZ0JFSlFJQVJDUUNBRVFqQWdCRUlnSUFSQ0VDQUVRZ0FnQkVId0lBUkI0Q0FFUWRBZ0JFSEFJQVJCc0NBRVFhQWdCRUdRSUFSQmdDQUVRWEFnQkVGZ0lBUkJVQ0FFUVVBZ0JFRXdJQVJCSUNBRVFSQWdCRUVBSUFSQThDQUVRT0FnQkVEUUlBUkF3Q0FFUUxBZ0JFQ2dJQVJBY0NBRVFFQWdCRUFnSUFSRDhCd0VRNUFjQkVOZ0hBUkRFQndFUXBBY0JFSVFIQVJCa0J3RVFSQWNCRUNRSEFSQUFCd0VRNUFZQkVNQUdBUkNnQmdFUWVBWUJFRndHQVJCTUJnRVFTQVlCRUVBR0FSQXdCZ0VRREFZQkVBUUdBUkQ0QlFFUTZBVUJFTXdGQVJDc0JRRVFoQVVCRUZ3RkFSQTBCUUVRQ0FVQkVPd0VBUkRJQkFFUXBBUUJFSGdFQVJCTUJBRVFNQVFCRUtJQ0FSQXVMaTRBWkM0QkVJZWZBQkI2bndBUVZXNXJibTkzYmlCbGVHTmxjSFJwYjI0QUFBQmpjMjNnQVFBQUFBQUFBQUFBQUFBQUF3QUFBQ0FGa3hrQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBS0FBb0FDZ0FLQUFvQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUVnQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFoQUNFQUlRQWhBQ0VBSVFBaEFDRUFJUUFoQUFRQUJBQUVBQVFBQkFBRUFBUUFJRUFnUUNCQUlFQWdRQ0JBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBUUFCQUFFQUFRQUJBQUVBQ0NBSUlBZ2dDQ0FJSUFnZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUVBQVFBQkFBRUFBZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUdnQUtBQW9BQ2dBS0FBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFCSUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBSVFBaEFDRUFJUUFoQUNFQUlRQWhBQ0VBSVFBRUFBUUFCQUFFQUFRQUJBQUVBQ0JBWUVCZ1FHQkFZRUJnUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkVBQVFBQkFBRUFBUUFCQUFnZ0dDQVlJQmdnR0NBWUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FSQUFFQUFRQUJBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFTQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFGQUFVQUJBQUVBQVFBQkFBRUFBVUFCQUFFQUFRQUJBQUVBQVFBQUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVRQUFFQkFRRUJBUUVCQVFFQkFRRUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCRUFBQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQVFFQUFBQUFnSUdDZzRTRmhvZUlpWXFMakkyT2o1Q1JrcE9VbFphWG1KbWFtNXlkbnArZ29hS2pwS1dtcDZpcHFxdXNyYTZ2c0xHeXM3UzF0cmU0dWJxN3ZMMit2OERCd3NQRXhjYkh5TW5LeTh6TnpzL1EwZExUMU5YVzE5aloydHZjM2Q3ZjRPSGk0K1RsNXVmbzZlcnI3TzN1Ny9EeDh2UDA5ZmIzK1BuNisvejkvdjhBQVFJREJBVUdCd2dKQ2dzTURRNFBFQkVTRXhRVkZoY1lHUm9iSEIwZUh5QWhJaU1rSlNZbktDa3FLeXd0TGk4d01USXpORFUyTnpnNU9qczhQVDQvUUdGaVkyUmxabWRvYVdwcmJHMXViM0J4Y25OMGRYWjNlSGw2VzF4ZFhsOWdZV0pqWkdWbVoyaHBhbXRzYlc1dmNIRnljM1IxZG5kNGVYcDdmSDErZjRDQmdvT0VoWWFIaUltS2k0eU5qbytRa1pLVGxKV1dsNWlabXB1Y25aNmZvS0dpbzZTbHBxZW9xYXFycksydXI3Q3hzck8wdGJhM3VMbTZ1N3k5dnIvQXdjTER4TVhHeDhqSnlzdk16YzdQME5IUzA5VFYxdGZZMmRyYjNOM2UzK0RoNHVQazVlYm42T25xNit6dDd1L3c4Zkx6OVBYMjkvajUrdnY4L2Y3L2dJR0NnNFNGaG9lSWlZcUxqSTJPajVDUmtwT1VsWmFYbUptYW01eWRucCtnb2FLanBLV21wNmlwcXF1c3JhNnZzTEd5czdTMXRyZTR1YnE3dkwyK3Y4REJ3c1BFeGNiSHlNbkt5OHpOenMvUTBkTFQxTlhXMTlqWjJ0dmMzZDdmNE9IaTQrVGw1dWZvNmVycjdPM3U3L0R4OHZQMDlmYjMrUG42Ky96OS92OEFBUUlEQkFVR0J3Z0pDZ3NNRFE0UEVCRVNFeFFWRmhjWUdSb2JIQjBlSHlBaElpTWtKU1luS0NrcUt5d3RMaTh3TVRJek5EVTJOemc1T2pzOFBUNC9RRUZDUTBSRlJrZElTVXBMVEUxT1QxQlJVbE5VVlZaWFdGbGFXMXhkWGw5Z1FVSkRSRVZHUjBoSlNrdE1UVTVQVUZGU1UxUlZWbGRZV1ZwN2ZIMStmNENCZ29PRWhZYUhpSW1LaTR5TmpvK1FrWktUbEpXV2w1aVptcHVjblo2Zm9LR2lvNlNscHFlb3FhcXJySzJ1cjdDeHNyTzB0YmEzdUxtNnU3eTl2ci9Bd2NMRHhNWEd4OGpKeXN2TXpjN1AwTkhTMDlUVjF0ZlkyZHJiM04zZTMrRGg0dVBrNWVibjZPbnE2K3p0N3UvdzhmTHo5UFgyOS9qNSt2djgvZjcvU0VnNmJXMDZjM01BQUFBQVpHUmtaQ3dnVFUxTlRTQmtaQ3dnZVhsNWVRQk5UUzlrWkM5NWVRQUFBQUJRVFFBQVFVMEFBRVJsWTJWdFltVnlBQUFBQUU1dmRtVnRZbVZ5QUFBQUFFOWpkRzlpWlhJQVUyVndkR1Z0WW1WeUFBQUFRWFZuZFhOMEFBQktkV3g1QUFBQUFFcDFibVVBQUFBQVFYQnlhV3dBQUFCTllYSmphQUFBQUVabFluSjFZWEo1QUFBQUFFcGhiblZoY25rQVJHVmpBRTV2ZGdCUFkzUUFVMlZ3QUVGMVp3QktkV3dBU25WdUFFMWhlUUJCY0hJQVRXRnlBRVpsWWdCS1lXNEFVMkYwZFhKa1lYa0FBQUFBUm5KcFpHRjVBQUJVYUhWeWMyUmhlUUFBQUFCWFpXUnVaWE5rWVhrQUFBQlVkV1Z6WkdGNUFFMXZibVJoZVFBQVUzVnVaR0Y1QUFCVFlYUUFSbkpwQUZSb2RRQlhaV1FBVkhWbEFFMXZiZ0JUZFc0QUtBQnVBSFVBYkFCc0FDa0FBQUFBQUNodWRXeHNLUUFBQUFBQUFBWUFBQVlBQVFBQUVBQURCZ0FHQWhBRVJVVkZCUVVGQlFVMU1BQlFBQUFBQUNnZ09GQllCd2dBTnpBd1YxQUhBQUFnSUFnQUFBQUFDR0JvWUdCZ1lBQUFlSEI0ZUhoNENBY0lBQUFIQUFnSUNBQUFDQUFJQUFjSUFBQUFBQUFBQUFhQWdJYUFnWUFBQUJBRGhvQ0dnb0FVQlFWRlJVV0ZoWVVGQUFBd01JQlFnSWdBQ0FBb0p6aFFWNEFBQndBM01EQlFVSWdBQUFBZ0tJQ0lnSUFBQUFCZ2FHQm9hR2dJQ0FkNGNIQjNjSEFJQ0FBQUNBQUlBQWNJQUFBQWNuVnVkR2x0WlNCbGNuSnZjaUFBQUEwS0FBQlVURTlUVXlCbGNuSnZjZzBLQUFBQVUwbE9SeUJsY25KdmNnMEtBQUFBQUVSUFRVRkpUaUJsY25KdmNnMEtBQUJTTmpBek5BMEtRVzRnWVhCd2JHbGpZWFJwYjI0Z2FHRnpJRzFoWkdVZ1lXNGdZWFIwWlcxd2RDQjBieUJzYjJGa0lIUm9aU0JESUhKMWJuUnBiV1VnYkdsaWNtRnllU0JwYm1OdmNuSmxZM1JzZVM0S1VHeGxZWE5sSUdOdmJuUmhZM1FnZEdobElHRndjR3hwWTJGMGFXOXVKM01nYzNWd2NHOXlkQ0IwWldGdElHWnZjaUJ0YjNKbElHbHVabTl5YldGMGFXOXVMZzBLQUFBQUFBQUFVall3TXpNTkNpMGdRWFIwWlcxd2RDQjBieUIxYzJVZ1RWTkpUQ0JqYjJSbElHWnliMjBnZEdocGN5QmhjM05sYldKc2VTQmtkWEpwYm1jZ2JtRjBhWFpsSUdOdlpHVWdhVzVwZEdsaGJHbDZZWFJwYjI0S1ZHaHBjeUJwYm1ScFkyRjBaWE1nWVNCaWRXY2dhVzRnZVc5MWNpQmhjSEJzYVdOaGRHbHZiaTRnU1hRZ2FYTWdiVzl6ZENCc2FXdGxiSGtnZEdobElISmxjM1ZzZENCdlppQmpZV3hzYVc1bklHRnVJRTFUU1V3dFkyOXRjR2xzWldRZ0tDOWpiSElwSUdaMWJtTjBhVzl1SUdaeWIyMGdZU0J1WVhScGRtVWdZMjl1YzNSeWRXTjBiM0lnYjNJZ1puSnZiU0JFYkd4TllXbHVMZzBLQUFCU05qQXpNZzBLTFNCdWIzUWdaVzV2ZFdkb0lITndZV05sSUdadmNpQnNiMk5oYkdVZ2FXNW1iM0p0WVhScGIyNE5DZ0FBQUFBQUFGSTJNRE14RFFvdElFRjBkR1Z0Y0hRZ2RHOGdhVzVwZEdsaGJHbDZaU0IwYUdVZ1ExSlVJRzF2Y21VZ2RHaGhiaUJ2Ym1ObExncFVhR2x6SUdsdVpHbGpZWFJsY3lCaElHSjFaeUJwYmlCNWIzVnlJR0Z3Y0d4cFkyRjBhVzl1TGcwS0FBQlNOakF6TUEwS0xTQkRVbFFnYm05MElHbHVhWFJwWVd4cGVtVmtEUW9BQUZJMk1ESTREUW90SUhWdVlXSnNaU0IwYnlCcGJtbDBhV0ZzYVhwbElHaGxZWEFOQ2dBQUFBQlNOakF5TncwS0xTQnViM1FnWlc1dmRXZG9JSE53WVdObElHWnZjaUJzYjNkcGJ5QnBibWwwYVdGc2FYcGhkR2x2YmcwS0FBQUFBRkkyTURJMkRRb3RJRzV2ZENCbGJtOTFaMmdnYzNCaFkyVWdabTl5SUhOMFpHbHZJR2x1YVhScFlXeHBlbUYwYVc5dURRb0FBQUFBVWpZd01qVU5DaTBnY0hWeVpTQjJhWEowZFdGc0lHWjFibU4wYVc5dUlHTmhiR3dOQ2dBQUFGSTJNREkwRFFvdElHNXZkQ0JsYm05MVoyZ2djM0JoWTJVZ1ptOXlJRjl2Ym1WNGFYUXZZWFJsZUdsMElIUmhZbXhsRFFvQUFBQUFVall3TVRrTkNpMGdkVzVoWW14bElIUnZJRzl3Wlc0Z1kyOXVjMjlzWlNCa1pYWnBZMlVOQ2dBQUFBQlNOakF4T0EwS0xTQjFibVY0Y0dWamRHVmtJR2hsWVhBZ1pYSnliM0lOQ2dBQUFBQlNOakF4TncwS0xTQjFibVY0Y0dWamRHVmtJRzExYkhScGRHaHlaV0ZrSUd4dlkyc2daWEp5YjNJTkNnQUFBQUJTTmpBeE5nMEtMU0J1YjNRZ1pXNXZkV2RvSUhOd1lXTmxJR1p2Y2lCMGFISmxZV1FnWkdGMFlRMEtBQTBLVkdocGN5QmhjSEJzYVdOaGRHbHZiaUJvWVhNZ2NtVnhkV1Z6ZEdWa0lIUm9aU0JTZFc1MGFXMWxJSFJ2SUhSbGNtMXBibUYwWlNCcGRDQnBiaUJoYmlCMWJuVnpkV0ZzSUhkaGVTNEtVR3hsWVhObElHTnZiblJoWTNRZ2RHaGxJR0Z3Y0d4cFkyRjBhVzl1SjNNZ2MzVndjRzl5ZENCMFpXRnRJR1p2Y2lCdGIzSmxJR2x1Wm05eWJXRjBhVzl1TGcwS0FBQUFVall3TURrTkNpMGdibTkwSUdWdWIzVm5hQ0J6Y0dGalpTQm1iM0lnWlc1MmFYSnZibTFsYm5RTkNnQlNOakF3T0EwS0xTQnViM1FnWlc1dmRXZG9JSE53WVdObElHWnZjaUJoY21kMWJXVnVkSE1OQ2dBQUFGSTJNREF5RFFvdElHWnNiMkYwYVc1bklIQnZhVzUwSUhOMWNIQnZjblFnYm05MElHeHZZV1JsWkEwS0FBQUFBRTFwWTNKdmMyOW1kQ0JXYVhOMVlXd2dReXNySUZKMWJuUnBiV1VnVEdsaWNtRnllUUFBQUFBS0NnQUFQSEJ5YjJkeVlXMGdibUZ0WlNCMWJtdHViM2R1UGdBQVVuVnVkR2x0WlNCRmNuSnZjaUVLQ2xCeWIyZHlZVzA2SUFBQUFGTjFiazF2YmxSMVpWZGxaRlJvZFVaeWFWTmhkQUFBQUVwaGJrWmxZazFoY2tGd2NrMWhlVXAxYmtwMWJFRjFaMU5sY0U5amRFNXZka1JsWXdBQUFBQkhaWFJRY205alpYTnpWMmx1Wkc5M1UzUmhkR2x2YmdCSFpYUlZjMlZ5VDJKcVpXTjBTVzVtYjNKdFlYUnBiMjVCQUFBQVIyVjBUR0Z6ZEVGamRHbDJaVkJ2Y0hWd0FBQkhaWFJCWTNScGRtVlhhVzVrYjNjQVRXVnpjMkZuWlVKdmVFRUFWVk5GVWpNeUxrUk1UQUFBUTA5T1QxVlVKQUFRV1MrMktHWFJFWllSQUFENEhnME40RDFNT1c4ODBoR0Jld0RBVDNsNnQyamVBQkIvM2dBUW5ONEFFTmJlQUJEdDNnQVF5dDhBRUdQZkFCQXU0QUFRY2Q4QUVIL2ZBQkNDM3dBUUFBQUFBQzBBTFFBZ0FFTUFWUUJUQUZRQVR3Qk5BQ0FBUVFCREFGUUFTUUJQQUU0QUlBQXRBQzBBSUFBQUFBQUFVd0JsQUhRQVVBQnlBRzhBY0FCbEFISUFkQUI1QURvQUlBQk9BR0VBYlFCbEFEMEFBQUFBQUZNQVpRQjBBRkFBY2dCdkFIQUFaUUJ5QUhRQWVRQTZBQ0FBVmdCaEFHd0FkUUJsQUQwQUFBQkhBR1VBZEFCUUFISUFid0J3QUdVQWNnQjBBSGtBT2dBZ0FFNEFZUUJ0QUdVQVBRQUFBQUFBUndCbEFIUUFVQUJ5QUc4QWNBQmxBSElBZEFCNUFEb0FJQUJXQUdFQWJBQjFBR1VBUFFBQUFGTUFkUUJpQUhNQWRBQlFBSElBYndCd0FHVUFjZ0IwQUdrQVpRQnpBRG9BSUFCSkFHNEFjQUIxQUhRQVBRQUFBRk1BYndCMUFISUFZd0JsQUVRQWFRQnlBQUFBVHdCeUFHa0Fad0JwQUc0QVlRQnNBRVFBWVFCMEFHRUFZZ0JoQUhNQVpRQUFBQUFBV3dCVEFHOEFkUUJ5QUdNQVpRQkVBR2tBY2dCZEFBQUFXd0JQQUhJQWFRQm5BR2tBYmdCaEFHd0FSQUJoQUhRQVlRQmlBR0VBY3dCbEFGMEFBQUFBQUZNQWRRQmlBSE1BZEFCUUFISUFid0J3QUdVQWNnQjBBR2tBWlFCekFEb0FJQUJQQUhVQWRBQndBSFVBZEFBOUFBQUFBQUJUQUhVQVlnQnpBSFFBVndCeUFHRUFjQUJ3QUdVQVpBQkJBSElBWndCMUFHMEFaUUJ1QUhRQWN3QTZBQ0FBVXdCMEFHRUFjZ0IwQUM0QUFBQkNBRm9BTGdCV0FFVUFVZ0FBQUFBQVZRQkpBRXdBWlFCMkFHVUFiQUFBQUZjQVVnQkJBRkFBVUFCRkFFUUFYd0JCQUZJQVJ3QlZBRTBBUlFCT0FGUUFVd0FBQUZBQUFBQkNBRm9BTGdCR0FFa0FXQUJGQUVRQVh3QkpBRTRBVXdCVUFFRUFUQUJNQUY4QVFRQlNBRWNBVlFCTkFFVUFUZ0JVQUZNQUFBQUFBRElBQUFCQ0FGb0FMZ0JWQUVrQVRnQlBBRTRBUlFCZkFFa0FUZ0JUQUZRQVFRQk1BRXdBWHdCQkFGSUFSd0JWQUUwQVJRQk9BRlFBVXdBQUFETUFBQUJDQUZvQUxnQlZBRWtBUWdCQkFGTUFTUUJEQUY4QVNRQk9BRk1BVkFCQkFFd0FUQUJmQUVFQVVnQkhBRlVBVFFCRkFFNEFWQUJUQUFBQUFBQTBBQUFBUWdCYUFDNEFWUUJKQUZJQVJRQkVBRlVBUXdCRkFFUUFYd0JKQUU0QVV3QlVBRUVBVEFCTUFGOEFRUUJTQUVjQVZRQk5BRVVBVGdCVUFGTUFBQUFBQURVQUFBQkNBRm9BTGdCVkFFa0FSZ0JWQUV3QVRBQmZBRWtBVGdCVEFGUUFRUUJNQUV3QVh3QkJBRklBUndCVkFFMEFSUUJPQUZRQVV3QUFBQ0FBQUFBQUFBQUFVd0IxQUdJQWN3QjBBRmNBY2dCaEFIQUFjQUJsQUdRQVFRQnlBR2NBZFFCdEFHVUFiZ0IwQUhNQU9nQWdBRk1BYUFCdkFIY0FJQUJYQUZJQVFRQlFBRkFBUlFCRUFGOEFRUUJTQUVjQVZRQk5BRVVBVGdCVUFGTUFJQUIzQUdFQWNnQnVBR2tBYmdCbkFDNEFBQUFBQUUwQVV3QkpBQ0FBVndCeUFHRUFjQUJ3QUdVQWNnQUFBRlFBYUFCbEFDQUFWd0JTQUVFQVVBQlFBRVVBUkFCZkFFRUFVZ0JIQUZVQVRRQkZBRTRBVkFCVEFDQUFZd0J2QUcwQWJRQmhBRzRBWkFBZ0FHd0FhUUJ1QUdVQUlBQnpBSGNBYVFCMEFHTUFhQUFnQUdrQWN3QWdBRzhBYmdCc0FIa0FJQUJ6QUhVQWNBQndBRzhBY2dCMEFHVUFaQUFnQUdJQWVRQWdBRTBBVXdCSkFDQUFjQUJoQUdNQWF3QmhBR2NBWlFCekFDQUFZd0J2QUcwQWNBQnBBR3dBWlFCa0FDQUFZZ0I1QUNBQWRBQm9BR1VBSUFCUUFISUFid0JtQUdVQWN3QnpBR2tBYndCdUFHRUFiQUFnQUhZQVpRQnlBSE1BYVFCdkFHNEFJQUJ2QUdZQUlBQk5BRk1BU1FBZ0FGY0FjZ0JoQUhBQWNBQmxBSElBTGdBZ0FFMEFid0J5QUdVQUlBQnBBRzRBWmdCdkFISUFiUUJoQUhRQWFRQnZBRzRBSUFCcEFITUFJQUJoQUhZQVlRQnBBR3dBWVFCaUFHd0FaUUFnQUdFQWRBQWdBSGNBZHdCM0FDNEFaUUI0QUdVQWJRQnpBR2tBTGdCakFHOEFiUUF1QUFBQVV3QjFBR0lBY3dCMEFGY0FjZ0JoQUhBQWNBQmxBR1FBUVFCeUFHY0FkUUJ0QUdVQWJnQjBBSE1BT2dBZ0FFUUFid0J1QUdVQUxnQUFBQUFBVWdCbEFHRUFaQUJTQUdVQVp3QlRBSFFBY2dBNkFDQUFTd0JsQUhrQVBRQUFBQUFBTEFBZ0FGWUFZUUJzQUhVQVpRQk9BR0VBYlFCbEFEMEFBQUFBQUN3QUlBQXpBRElBSUFCaUFHa0FkQUFBQUFBQUxBQWdBRFlBTkFBZ0FHSUFhUUIwQUFBQUFBQXNBQ0FBWkFCbEFHWUFZUUIxQUd3QWRBQUFBRklBWlFCaEFHUUFVZ0JsQUdjQVV3QjBBSElBT2dBZ0FGWUFZUUJzQUhVQVpRQTlBQUFBQUFBQUFBQUFVZ0JsQUdFQVpBQlNBR1VBWndCVEFIUUFjZ0E2QUNBQVZRQnVBR0VBWWdCc0FHVUFJQUIwQUc4QUlBQnhBSFVBWlFCeUFIa0FJQUJ6QUhRQWNnQnBBRzRBWndBZ0FIWUFZUUJzQUhVQVpRQXVBQUFBQUFBQUFGSUFaUUJoQUdRQVVnQmxBR2NBVXdCMEFISUFPZ0FnQUZVQWJnQmhBR0lBYkFCbEFDQUFkQUJ2QUNBQWJ3QndBR1VBYmdBZ0FHc0FaUUI1QUM0QUFBQlRBR1VBZEFCRUFGY0Fid0J5QUdRQVZnQmhBR3dBZFFCbEFEb0FJQUJWQUc0QVlRQmlBR3dBWlFBZ0FIUUFid0FnQUhNQVpRQjBBQ0FBUkFCWEFFOEFVZ0JFQUNBQWFRQnVBQ0FBY2dCbEFHY0FhUUJ6QUhRQWNnQjVBQzRBQUFCVEFHVUFkQUJFQUZjQWJ3QnlBR1FBVmdCaEFHd0FkUUJsQURvQUlBQkxBR1VBZVFBZ0FHNEFZUUJ0QUdVQVBRQUFBQUFBVXdCbEFIUUFSQUJYQUc4QWNnQmtBRllBWVFCc0FIVUFaUUE2QUNBQVZnQmhBR3dBZFFCbEFDQUFiZ0JoQUcwQVpRQTlBQUFBQUFCVEFHVUFkQUJFQUZjQWJ3QnlBR1FBVmdCaEFHd0FkUUJsQURvQUlBQmlBR2tBZEFCdUFHVUFjd0J6QUNBQWFRQnpBQ0FBTmdBMEFBQUFBQUJUQUdVQWRBQkVBRmNBYndCeUFHUUFWZ0JoQUd3QWRRQmxBRG9BSUFCaUFHa0FkQUJ1QUdVQWN3QnpBQ0FBYVFCekFDQUFNd0F5QUFBQUFBQUFBQUFBVXdCbEFIUUFSQUJYQUc4QWNnQmtBRllBWVFCc0FIVUFaUUE2QUNBQVZRQnVBR0VBWWdCc0FHVUFJQUIwQUc4QUlBQnZBSEFBWlFCdUFDQUFjZ0JsQUdjQWFRQnpBSFFBY2dCNUFDQUFhd0JsQUhrQUxnQUFBRVFBWlFCc0FHVUFkQUJsQUZJQVpRQm5BRllBWVFCc0FIVUFaUUE2QUNBQVZRQnVBR0VBWWdCc0FHVUFJQUIwQUc4QUlBQmtBR1VBYkFCbEFIUUFaUUFnQUhZQVlRQnNBSFVBWlFBZ0FHa0FiZ0FnQUhJQVpRQm5BR2tBY3dCMEFISUFlUUF1QUFBQVJBQmxBR3dBWlFCMEFHVUFVZ0JsQUdjQVZnQmhBR3dBZFFCbEFEb0FJQUJMQUdVQWVRQWdBRzRBWVFCdEFHVUFQUUFBQUVRQVpRQnNBR1VBZEFCbEFGSUFaUUJuQUZZQVlRQnNBSFVBWlFBNkFDQUFWZ0JoQUd3QWRRQmxBQ0FBYmdCaEFHMEFaUUE5QUFBQVJBQmxBR3dBWlFCMEFHVUFVZ0JsQUdjQVZnQmhBR3dBZFFCbEFEb0FJQUJpQUdrQWRBQnVBR1VBY3dCekFDQUFhUUJ6QUNBQU5nQTBBQUFBUkFCbEFHd0FaUUIwQUdVQVVnQmxBR2NBVmdCaEFHd0FkUUJsQURvQUlBQmlBR2tBZEFCdUFHVUFjd0J6QUNBQWFRQnpBQ0FBTXdBeUFBQUFBQUFBQUVRQVpRQnNBR1VBZEFCbEFGSUFaUUJuQUZZQVlRQnNBSFVBWlFBNkFDQUFWUUJ1QUdFQVlnQnNBR1VBSUFCMEFHOEFJQUJ2QUhBQVpRQnVBQ0FBY2dCbEFHY0FhUUJ6QUhRQWNnQjVBQ0FBYXdCbEFIa0FMZ0FBQUFBQVRRQnZBR1FBYVFCbUFIa0FVZ0JsQUdjQWFRQnpBSFFBY2dCNUFEb0FJQUJUQUhRQVlRQnlBSFFBTGdBQUFBQUFRd0IxQUhNQWRBQnZBRzBBUVFCakFIUUFhUUJ2QUc0QVJBQmhBSFFBWVFBQUFBQUFUUUJ2QUdRQWFRQm1BSGtBVWdCbEFHY0FhUUJ6QUhRQWNnQjVBRG9BSUFCQkFIQUFjQUJzQUdrQVl3QmhBSFFBYVFCdkFHNEFJQUJwQUdRQUlBQnBBSE1BSUFCbEFHMEFjQUIwQUhrQUxnQUFBQUFBQUFBQUFGTUFUd0JHQUZRQVZ3QkJBRklBUlFCY0FFMEFhUUJqQUhJQWJ3QnpBRzhBWmdCMEFGd0FWd0JwQUc0QVpBQnZBSGNBY3dCY0FFTUFkUUJ5QUhJQVpRQnVBSFFBVmdCbEFISUFjd0JwQUc4QWJnQmNBRlVBYmdCcEFHNEFjd0IwQUdFQWJBQnNBRndBQUFBQUFGVUFiZ0JwQUc0QWN3QjBBR0VBYkFCc0FGTUFkQUJ5QUdrQWJnQm5BQUFBQUFBQUFFMEFid0JrQUdrQVpnQjVBRklBWlFCbkFHa0Fjd0IwQUhJQWVRQTZBQ0FBUlFCeUFISUFid0J5QUNBQVp3QmxBSFFBZEFCcEFHNEFad0FnQUZVQWJnQnBBRzRBY3dCMEFHRUFiQUJzQUZNQWRBQnlBR2tBYmdCbkFDQUFkZ0JoQUd3QWRRQmxBQ0FBWmdCeUFHOEFiUUFnQUhJQVpRQm5BR2tBY3dCMEFISUFlUUF1QUFBQUFBQlRBSGtBY3dCMEFHVUFiUUJEQUc4QWJRQndBRzhBYmdCbEFHNEFkQUFBQUUwQWJ3QmtBR2tBWmdCNUFGSUFaUUJuQUdrQWN3QjBBSElBZVFBNkFDQUFSQUJ2QUc0QVpRQXVBQUFBVlFCdUFHa0FiZ0J6QUhRQVlRQnNBR3dBVndCeUFHRUFjQUJ3QUdVQVpBQTZBQ0FBVXdCMEFHRUFjZ0IwQUM0QUFBQUFBRlVBVUFCSEFGSUFRUUJFQUVrQVRnQkhBRkFBVWdCUEFFUUFWUUJEQUZRQVF3QlBBRVFBUlFBQUFBQUFRZ0JhQUM0QVZ3QlNBRUVBVUFCUUFFVUFSQUJmQUVFQVVBQlFBRWtBUkFBQUFBQUFRZ0JhQUM0QVJnQkpBRmdBUlFCRUFGOEFWUUJPQUVrQVRnQlRBRlFBUVFCTUFFd0FYd0JCQUZJQVJ3QlZBRTBBUlFCT0FGUUFVd0FBQUFBQUFBQUFBRlVBYmdCcEFHNEFjd0IwQUdFQWJBQnNBRmNBY2dCaEFIQUFjQUJsQUdRQU9nQWdBRklBWlFCbkFHa0Fjd0IwQUhJQWVRQWdBR3NBWlFCNUFDQUFiZ0JoQUcwQVpRQTlBQUFBQUFBQUFBQUFWUUJ1QUdrQWJnQnpBSFFBWVFCc0FHd0FWd0J5QUdFQWNBQndBR1VBWkFBNkFDQUFVZ0JsQUcwQWJ3QjJBR1VBSUFCMEFHZ0FaUUFnQUhNQWVRQnpBSFFBWlFCdEFDQUFZd0J2QUcwQWNBQnZBRzRBWlFCdUFIUUFJQUJsQUc0QWRBQnlBSGtBTGdBQUFBQUFBQUFBQUZVQWJnQnBBRzRBY3dCMEFHRUFiQUJzQUZjQWNnQmhBSEFBY0FCbEFHUUFPZ0FnQUU0QWJ3QWdBSFVBYmdCcEFHNEFjd0IwQUdFQWJBQnNBQ0FBY3dCMEFISUFhUUJ1QUdjQUlBQjNBR0VBY3dBZ0FHWUFid0IxQUc0QVpBQXVBQUFBQUFCVkFHNEFhUUJ1QUhNQWRBQmhBR3dBYkFCWEFISUFZUUJ3QUhBQVpRQmtBRG9BSUFCVkFHNEFhUUJ1QUhNQWRBQmhBR3dBYkFCbEFISUFQUUFBQUFBQUlnQUFBRlVBYmdCcEFHNEFjd0IwQUdFQWJBQnNBRmNBY2dCaEFIQUFjQUJsQUdRQU9nQWdBR1VBZUFCbEFERUFQUUFBQUZVQWJnQnBBRzRBY3dCMEFHRUFiQUJzQUZjQWNnQmhBSEFBY0FCbEFHUUFPZ0FnQUhBQVlRQnlBR0VBYlFCekFERUFQUUFBQUFBQVFnQmFBQzRBVlFCSkFFNEFUd0JPQUVVQVh3QlZBRTRBU1FCT0FGTUFWQUJCQUV3QVRBQmZBRUVBVWdCSEFGVUFUUUJGQUU0QVZBQlRBQUFBUWdCYUFDNEFWUUJKQUVJQVFRQlRBRWtBUXdCZkFGVUFUZ0JKQUU0QVV3QlVBRUVBVEFCTUFGOEFRUUJTQUVjQVZRQk5BRVVBVGdCVUFGTUFBQUFBQUFBQUFBQkNBRm9BTGdCVkFFa0FVZ0JGQUVRQVZRQkRBRVVBUkFCZkFGVUFUZ0JKQUU0QVV3QlVBRUVBVEFCTUFGOEFRUUJTQUVjQVZRQk5BRVVBVGdCVUFGTUFBQUFBQUVJQVdnQXVBRlVBU1FCR0FGVUFUQUJNQUY4QVZRQk9BRWtBVGdCVEFGUUFRUUJNQUV3QVh3QkJBRklBUndCVkFFMEFSUUJPQUZRQVV3QUFBRlVBYmdCcEFHNEFjd0IwQUdFQWJBQnNBRmNBY2dCaEFIQUFjQUJsQUdRQU9nQWdBRXdBWVFCMUFHNEFZd0JvQUNBQWRBQm9BR1VBSUFCMUFHNEFhUUJ1QUhNQWRBQmhBR3dBYkFCbEFISUFMZ0FBQUZVQWJnQnBBRzRBY3dCMEFHRUFiQUJzQUZjQWNnQmhBSEFBY0FCbEFHUUFPZ0FnQUdVQWVBQmxBRElBUFFBQUFGVUFiZ0JwQUc0QWN3QjBBR0VBYkFCc0FGY0FjZ0JoQUhBQWNBQmxBR1FBT2dBZ0FIQUFZUUJ5QUdFQWJRQnpBRElBUFFBQUFBQUFjZ0IxQUc0QVlRQnpBQUFBVXdCb0FHVUFiQUJzQUVVQWVBQmxBR01BZFFCMEFHVUFSUUI0QUNBQVpnQmhBR2tBYkFCbEFHUUFJQUFvQUNVQVpBQXBBQzRBQUFCVkFHNEFhUUJ1QUhNQWRBQmhBR3dBYkFCWEFISUFZUUJ3QUhBQVpRQmtBRG9BSUFCRUFHOEFiZ0JsQUM0QUFBQ1U1Z0FRZUM0QkVKL2tBQkI2bndBUVltRmtJR1Y0WTJWd2RHbHZiZ0FBQUVnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQnhRQVJEUUxnRVFFUUFBQUZKVFJGTXhzYjhPeXN4SVQ1WkZiUUpBWFg2M0FRQUFBRU02WEhOek1seFFjbTlxWldOMGMxeE5jMmxYY21Gd2NHVnlYRTF6YVVOMWMzUnZiVUZqZEdsdmJuTmNVbVZzWldGelpWeE5jMmxEZFhOMGIyMUJZM1JwYjI1ekxuQmtZZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUVVQUVRc0MwQkVBQUFBQUFBQUFBQUFRQUFBTUF0QVJESUxRRVFBQUFBQUFSUUFSQUFBQUFBQUFBQUFQLy8vLzhBQUFBQVFBQUFBTEF0QVJBQUFBQUFBQUFBQUFBQUFBQzBVUUVRK0MwQkVBQUFBQUFBQUFBQUFnQUFBQWd1QVJBVUxnRVFNQzRCRUFBQUFBQzBVUUVRQVFBQUFBQUFBQUQvLy8vL0FBQUFBRUFBQUFENExRRVEwRkVCRUFBQUFBQUFBQUFBLy8vLy93QUFBQUJBQUFBQVRDNEJFQUFBQUFBQUFBQUFBUUFBQUZ3dUFSQXdMZ0VRQUFBQUFBQUFBQUFBQUFBQUFBQUFBTkJSQVJCTUxnRVFBQUFBQUFBQUFBQUFBQUFBaEY4QkVJd3VBUkFBQUFBQUFBQUFBQUlBQUFDY0xnRVFxQzRCRURBdUFSQUFBQUFBaEY4QkVBRUFBQUFBQUFBQS8vLy8vd0FBQUFCQUFBQUFqQzRCRUFBQUFBQUFBQUFBQUFBQUFJQ0pBQURVblFBQUhNWUFBRlBoQUFCZDRnQUE2ZkVBQUNueUFBQnA4Z0FBbVBJQUFORHlBQUQ0OGdBQUtQTUFBRmp6QUFDczh3QUErZk1BQUREMEFBQkw5QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEKy8vLy9BQUFBQU5ULy8vOEFBQUFBL3YvLy8zUkVBQkNGUkFBUUFBQUFBUDcvLy84QUFBQUExUC8vL3dBQUFBRCsvLy8vQUFBQUFCWkdBQkFBQUFBQS92Ly8vd0FBQUFEVS8vLy9BQUFBQVA3Ly8vOEFBQUFBN0U4QUVBQUFBQUNqVUFBUUFBQUFBSlF2QVJBQ0FBQUFvQzhCRUx3dkFSQUFBQUFBdEZFQkVBQUFBQUQvLy8vL0FBQUFBQXdBQUFEVlVBQVFBQUFBQU5CUkFSQUFBQUFBLy8vLy93QUFBQUFNQUFBQUI1OEFFUDcvLy84QUFBQUExUC8vL3dBQUFBRCsvLy8vQUFBQUFCVlVBQkFBQUFBQS92Ly8vd0FBQUFETS8vLy9BQUFBQVA3Ly8vOEFBQUFBNDFjQUVBQUFBQUQrLy8vL0FBQUFBTlQvLy84QUFBQUEvdi8vL3dBQUFBQlRXd0FRQUFBQUFQNy8vLzhBQUFBQTFQLy8vd0FBQUFEKy8vLy9BQUFBQUpWZEFCRCsvLy8vQUFBQUFLUmRBQkQrLy8vL0FBQUFBTmovLy84QUFBQUEvdi8vL3dBQUFBQlhYd0FRL3YvLy93QUFBQUJqWHdBUS92Ly8vd0FBQUFESS8vLy9BQUFBQVA3Ly8vOEFBQUFBRjM4QUVBQUFBQUQrLy8vL0FBQUFBSXovLy84QUFBQUEvdi8vLzkrQkFCRGpnUUFRQUFBQUFQNy8vLzhBQUFBQTFQLy8vd0FBQUFEKy8vLy9BQUFBQUIyTkFCQUFBQUFBL3YvLy93QUFBQURVLy8vL0FBQUFBUDcvLy84Z21RQVFQSmtBRUFBQUFBRCsvLy8vQUFBQUFOVC8vLzhBQUFBQS92Ly8vd0FBQUFCeG5BQVFBQUFBQVA3Ly8vOEFBQUFBMVAvLy93QUFBQUQrLy8vL0FBQUFBTW1nQUJBQUFBQUEvdi8vL3dBQUFBRE0vLy8vQUFBQUFQNy8vLzhBQUFBQVlxMEFFQUFBQUFEKy8vLy9BQUFBQU5ELy8vOEFBQUFBL3YvLy93QUFBQUJ4dFFBUUFBQUFBUDcvLy84QUFBQUExUC8vL3dBQUFBRCsvLy8vQUFBQUFJeThBQkFBQUFBQS92Ly8vd0FBQUFEUS8vLy9BQUFBQVA3Ly8vOEFBQUFBOGIwQUVBQUFBQUQrLy8vL0FBQUFBTmovLy84QUFBQUEvdi8vLzl2QkFCRHZ3UUFRQUFBQUFQNy8vLzhBQUFBQTJQLy8vd0FBQUFEKy8vLy9MY0lBRURIQ0FCQUFBQUFBL3YvLy93QUFBQURZLy8vL0FBQUFBUDcvLy85OXdnQVFnY0lBRUFBQUFBRCsvLy8vQUFBQUFNRC8vLzhBQUFBQS92Ly8vd0FBQUFCeXhBQVFBQUFBQVA3Ly8vOEFBQUFBMFAvLy93QUFBQUQrLy8vL0FzVUFFQm5GQUJBQUFBQUEvdi8vL3dBQUFBRFEvLy8vQUFBQUFQNy8vLzhBQUFBQXhjY0FFQUFBQUFEKy8vLy9BQUFBQU5ULy8vOEFBQUFBL3YvLy93QUFBQUNieXdBUUFBQUFBUDcvLy84QUFBQUEwUC8vL3dBQUFBRCsvLy8vQUFBQUFHSE5BQkFBQUFBQS92Ly8vd0FBQUFETS8vLy9BQUFBQVA3Ly8vOEFBQUFBNjg0QUVBQUFBQUFBQUFBQXQ4NEFFUDcvLy84QUFBQUExUC8vL3dBQUFBRCsvLy8vQUFBQUFNWFlBQkFBQUFBQS92Ly8vd0FBQUFEUS8vLy9BQUFBQVA3Ly8vOEFBQUFBcDlrQUVBQUFBQUQrLy8vL0FBQUFBTkQvLy84QUFBQUEvdi8vL3dBQUFBREkyd0FRQUFBQUFQNy8vLzhBQUFBQTFQLy8vd0FBQUFEKy8vLy9NTjBBRUVUZEFCQUFBQUFBWUY4QkVBQUFBQUQvLy8vL0FBQUFBQVFBQUFBQUFBQUFBUUFBQUd3ekFSQUFBQUFBQUFBQUFBQUFBQUNJTXdFUS8vLy8vOUR4QUJBaUJaTVpBUUFBQUtBekFSQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUVBQUFELy8vLy9FUElBRUNJRmt4a0JBQUFBekRNQkVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFBQVAvLy8vOVE4Z0FRSWdXVEdRRUFBQUQ0TXdFUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBLy8vLy81RHlBQkFpQlpNWkFRQUFBQ1EwQVJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQUQvLy8vL3dQSUFFQUFBQUFESThnQVFJZ1dUR1FJQUFBQlFOQUVRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkFBQUEvLy8vLy9EeUFCQWlCWk1aQVFBQUFJUTBBUkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFQUFBRC8vLy8vSVBNQUVDSUZreGtCQUFBQXNEUUJFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVFBQUFQLy8vLzlROHdBUUlnV1RHUUVBQUFEY05BRVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCQUFBQS8vLy8vNER6QUJBQUFBQUFpL01BRUFFQUFBQ1c4d0FRQWdBQUFLSHpBQkFpQlpNWkJBQUFBQWcxQVJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQUQvLy8vLzRQTUFFQ0lGa3hrQkFBQUFURFVCRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFBUC8vLy84ZzlBQVFBQUFBQUNqMEFCQWlCWk1aQWdBQUFIZzFBUkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFQUFBQUFBQUFBL3YvLy93QUFBQURRLy8vL0FBQUFBUDcvLy84QUFBQUFMdVlBRUFBQUFBRHc1UUFRK3VVQUVQNy8vLzhBQUFBQTJQLy8vd0FBQUFEKy8vLy8xK1lBRU9EbUFCQkFBQUFBQUFBQUFBQUFBQUMrNXdBUS8vLy8vd0FBQUFELy8vLy9BQUFBQUFBQUFBQUFBQUFBQVFBQUFBRUFBQUQwTlFFUUlnV1RHUUlBQUFBRU5nRVFBUUFBQUJRMkFSQUFBQUFBQUFBQUFBQUFBQUFCQUFBQUFBQUFBUDcvLy84QUFBQUF0UC8vL3dBQUFBRCsvLy8vQUFBQUFQYm9BQkFBQUFBQVp1Z0FFRy9vQUJEKy8vLy9BQUFBQU5ULy8vOEFBQUFBL3YvLy85M3FBQkRoNmdBUUFBQUFBUDcvLy84QUFBQUEyUC8vL3dBQUFBRCsvLy8vZHVzQUVIcnJBQkFBQUFBQWxPUUFFQUFBQUFERU5nRVFBZ0FBQU5BMkFSQzhMd0VRQUFBQUFJUmZBUkFBQUFBQS8vLy8vd0FBQUFBTUFBQUFMUEFBRU9RNEFRQUFBQUFBQUFBQUFBQTVBUUJzQVFFQWtEY0JBQUFBQUFBQUFBQUFvRGtCQUJnQUFRRGNPQUVBQUFBQUFBQUFBQUM4T1FFQVpBRUJBSGczQVFBQUFBQUFBQUFBQUI0NkFRQUFBQUVBekRnQkFBQUFBQUFBQUFBQVBqb0JBRlFCQVFEVU9BRUFBQUFBQUFBQUFBQmNPZ0VBWEFFQkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUErRGtCQU9nNUFRRGFPUUVBeURrQkFBdzZBUUFBQUFBQUVqOEJBQWc1QVFBWU9RRUFLRGtCQURnNUFRQktPUUVBSUQ4QkFHdzVBUUI2T1FFQWtEa0JBQUkvQVFBMFB3RUFXamtCQUNROEFRRHNQZ0VBM0Q0QkFNdytBUUJvT2dFQWZqb0JBSkE2QVFDa09nRUF1RG9CQU5RNkFRRHlPZ0VBQmpzQkFCSTdBUUFlT3dFQU5qc0JBRTQ3QVFCWU93RUFaRHNCQUhZN0FRQ0tPd0VBbkRzQkFLbzdBUUMyT3dFQXhEc0JBTTQ3QVFEZU93RUE1anNCQVBRN0FRQUdQQUVBRmp3QkFGQS9BUUEyUEFFQVRqd0JBR1E4QVFCK1BBRUFsandCQUxBOEFRREdQQUVBNER3QkFPNDhBUUQ4UEFFQUNqMEJBQ1E5QVFBMFBRRUFTajBCQUdROUFRQjhQUUVBbEQwQkFLQTlBUUN3UFFFQXZqMEJBTW85QVFEY1BRRUE3RDBCQUFJK0FRQVNQZ0VBSkQ0QkFEWStBUUJJUGdFQVdqNEJBR1krQVFCMlBnRUFpRDRCQUpnK0FRREFQZ0VBQUFBQUFDdzZBUUFBQUFBQVNqb0JBQUFBQUFDdU9RRUFBQUFBQUVvQUFJQ1JBQUNBWndBQWdIMEFBSUFSQUFDQUNBQUFnQUFBQUFCdGMya3VaR3hzQUFJQ1IyVjBUR0Z6ZEVWeWNtOXlBQUJCQTB4dllXUlNaWE52ZFhKalpRQUFWQU5NYjJOclVtVnpiM1Z5WTJVQUFMRUVVMmw2Wlc5bVVtVnpiM1Z5WTJVQUFFNEJSbWx1WkZKbGMyOTFjbU5sVndCTkFVWnBibVJTWlhOdmRYSmpaVVY0VndCU0FFTnNiM05sU0dGdVpHeGxBUGtFVjJGcGRFWnZjbE5wYm1kc1pVOWlhbVZqZEFDa0FrZGxkRlpsY25OcGIyNUZlRmNBUzBWU1RrVk1Nekl1Wkd4c0FBQVZBazFsYzNOaFoyVkNiM2hYQUZWVFJWSXpNaTVrYkd3QUFFZ0NVbVZuUkdWc1pYUmxWbUZzZFdWWEFEQUNVbVZuUTJ4dmMyVkxaWGtBWVFKU1pXZFBjR1Z1UzJWNVJYaFhBRzRDVW1WblVYVmxjbmxXWVd4MVpVVjRWd0FBZmdKU1pXZFRaWFJXWVd4MVpVVjRWd0FBUVVSV1FWQkpNekl1Wkd4c0FBQWhBVk5vWld4c1JYaGxZM1YwWlVWNFZ3QlRTRVZNVERNeUxtUnNiQUJGQUZCaGRHaEdhV3hsUlhocGMzUnpWd0JUU0V4WFFWQkpMbVJzYkFERkFVZGxkRU4xY25KbGJuUlVhSEpsWVdSSlpBQUFoZ0ZIWlhSRGIyMXRZVzVrVEdsdVpVRUF3QVJVWlhKdGFXNWhkR1ZRY205alpYTnpBQURBQVVkbGRFTjFjbkpsYm5SUWNtOWpaWE56QU5NRVZXNW9ZVzVrYkdWa1JYaGpaWEIwYVc5dVJtbHNkR1Z5QUFDbEJGTmxkRlZ1YUdGdVpHeGxaRVY0WTJWd2RHbHZia1pwYkhSbGNnQUFBMGx6UkdWaWRXZG5aWEpRY21WelpXNTBBTThDU0dWaGNFWnlaV1VBQUhJQlIyVjBRMUJKYm1adkFPOENTVzUwWlhKc2IyTnJaV1JKYm1OeVpXMWxiblFBQU9zQ1NXNTBaWEpzYjJOclpXUkVaV055WlcxbGJuUUFBR2dCUjJWMFFVTlFBQUEzQWtkbGRFOUZUVU5RQUFBS0EwbHpWbUZzYVdSRGIyUmxVR0ZuWlFBWUFrZGxkRTF2WkhWc1pVaGhibVJzWlZjQUFFVUNSMlYwVUhKdlkwRmtaSEpsYzNNQUFNY0VWR3h6UjJWMFZtRnNkV1VBeFFSVWJITkJiR3h2WXdBQXlBUlViSE5UWlhSV1lXeDFaUURHQkZSc2MwWnlaV1VBY3dSVFpYUk1ZWE4wUlhKeWIzSUFBTElFVTJ4bFpYQUFHUUZGZUdsMFVISnZZMlZ6Y3dCdkJGTmxkRWhoYm1Sc1pVTnZkVzUwQUFCa0FrZGxkRk4wWkVoaGJtUnNaUUFBOHdGSFpYUkdhV3hsVkhsd1pRQmlBa2RsZEZOMFlYSjBkWEJKYm1adlFRRFJBRVJsYkdWMFpVTnlhWFJwWTJGc1UyVmpkR2x2YmdBVEFrZGxkRTF2WkhWc1pVWnBiR1ZPWVcxbFFRQUFZQUZHY21WbFJXNTJhWEp2Ym0xbGJuUlRkSEpwYm1kelFRRFlBVWRsZEVWdWRtbHliMjV0Wlc1MFUzUnlhVzVuY3dCaEFVWnlaV1ZGYm5acGNtOXViV1Z1ZEZOMGNtbHVaM05YQUJFRlYybGtaVU5vWVhKVWIwMTFiSFJwUW5sMFpRRGFBVWRsZEVWdWRtbHliMjV0Wlc1MFUzUnlhVzVuYzFjQUFNMENTR1ZoY0VOeVpXRjBaUUFBemdKSVpXRndSR1Z6ZEhKdmVRRHNCRlpwY25SMVlXeEdjbVZsQUtjRFVYVmxjbmxRWlhKbWIzSnRZVzVqWlVOdmRXNTBaWElBa3dKSFpYUlVhV05yUTI5MWJuUUFBTUVCUjJWMFEzVnljbVZ1ZEZCeWIyTmxjM05KWkFCNUFrZGxkRk41YzNSbGJWUnBiV1ZCYzBacGJHVlVhVzFsQURrRFRHVmhkbVZEY21sMGFXTmhiRk5sWTNScGIyNEFBTzRBUlc1MFpYSkRjbWwwYVdOaGJGTmxZM1JwYjI0QUFNc0NTR1ZoY0VGc2JHOWpBT2tFVm1seWRIVmhiRUZzYkc5akFBRFNBa2hsWVhCU1pVRnNiRzlqQUJnRVVuUnNWVzUzYVc1a0FMRURVbUZwYzJWRmVHTmxjSFJwYjI0QUFDc0RURU5OWVhCVGRISnBibWRCQUFCbkEwMTFiSFJwUW5sMFpWUnZWMmxrWlVOb1lYSUFMUU5NUTAxaGNGTjBjbWx1WjFjQUFHWUNSMlYwVTNSeWFXNW5WSGx3WlVFQUFHa0NSMlYwVTNSeWFXNW5WSGx3WlZjQUFBUUNSMlYwVEc5allXeGxTVzVtYjBFQUFHWUVVMlYwUm1sc1pWQnZhVzUwWlhJQUFDVUZWM0pwZEdWR2FXeGxBSm9CUjJWMFEyOXVjMjlzWlVOUUFBQ3NBVWRsZEVOdmJuTnZiR1ZOYjJSbEFBQThBMHh2WVdSTWFXSnlZWEo1UVFBQTR3SkpibWwwYVdGc2FYcGxRM0pwZEdsallXeFRaV04wYVc5dVFXNWtVM0JwYmtOdmRXNTBBTlFDU0dWaGNGTnBlbVVBQUljRVUyVjBVM1JrU0dGdVpHeGxBQUFhQlZkeWFYUmxRMjl1YzI5c1pVRUFzQUZIWlhSRGIyNXpiMnhsVDNWMGNIVjBRMUFBQUNRRlYzSnBkR1ZEYjI1emIyeGxWd0NJQUVOeVpXRjBaVVpwYkdWQkFGY0JSbXgxYzJoR2FXeGxRblZtWm1WeWN3QUE0Z0pKYm1sMGFXRnNhWHBsUTNKcGRHbGpZV3hUWldOMGFXOXVBRW9DUjJWMFVISnZZMlZ6YzBobFlYQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUhORmxNQUFBQUF0ajhCQUFFQUFBQURBQUFBQXdBQUFKZy9BUUNrUHdFQXNEOEJBSEFnQUFCQUZnQUEwQ01BQU1zL0FRRGRQd0VBOWo4QkFBQUFBUUFDQUUxemFVTjFjM1J2YlVGamRHbHZibk11Wkd4c0FGOU5iMlJwWm5sU1pXZHBjM1J5ZVVBMEFGOVRkV0p6ZEZkeVlYQndaV1JCY21kMWJXVnVkSE5BTkFCZlZXNXBibk4wWVd4c1YzSmhjSEJsWkc0FRRVFBQUlCRUFBQUFBQXVQMEZXZEhsd1pWOXBibVp2UUVBQVR1WkF1N0VadjBRQUFBQUFBQUFBQUFBQUFBQUJBQUFBRmdBQUFBSUFBQUFDQUFBQUF3QUFBQUlBQUFBRUFBQUFHQUFBQUFVQUFBQU5BQUFBQmdBQUFBa0FBQUFIQUFBQURBQUFBQWdBQUFBTUFBQUFDUUFBQUF3QUFBQUtBQUFBQndBQUFBc0FBQUFJQUFBQURBQUFBQllBQUFBTkFBQUFGZ0FBQUE4QUFBQUNBQUFBRUFBQUFBMEFBQUFSQUFBQUVnQUFBQklBQUFBQ0FBQUFJUUFBQUEwQUFBQTFBQUFBQWdBQUFFRUFBQUFOQUFBQVF3QUFBQUlBQUFCUUFBQUFFUUFBQUZJQUFBQU5BQUFBVXdBQUFBMEFBQUJYQUFBQUZnQUFBRmtBQUFBTEFBQUFiQUFBQUEwQUFBQnRBQUFBSUFBQUFIQUFBQUFjQUFBQWNnQUFBQWtBQUFBR0FBQUFGZ0FBQUlBQUFBQUtBQUFBZ1FBQUFBb0FBQUNDQUFBQUNRQUFBSU1BQUFBV0FBQUFoQUFBQUEwQUFBQ1JBQUFBS1FBQUFKNEFBQUFOQUFBQW9RQUFBQUlBQUFDa0FBQUFDd0FBQUtjQUFBQU5BQUFBdHdBQUFCRUFBQURPQUFBQUFnQUFBTmNBQUFBTEFBQUFHQWNBQUF3QUFBQU1BQUFBQ0FBQUFPd0JBUkFBQUFBQUFBQUFBQUFBQUFEc0FRRVFBQUlCRUFBQUFBQXVQMEZXWW1Ga1gyRnNiRzlqUUhOMFpFQkFBQUFDQVJBQUFBQUFMajlCVm1WNFkyVndkR2x2YmtCemRHUkFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFBQUFBQUFBQUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCaFltTmtaV1puYUdscWEyeHRibTl3Y1hKemRIVjJkM2g1ZWdBQUFBQUFBRUZDUTBSRlJrZElTVXBMVEUxT1QxQlJVbE5VVlZaWFdGbGFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRQUFBQUFBQUFJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVlXSmpaR1ZtWjJocGFtdHNiVzV2Y0hGeWMzUjFkbmQ0ZVhvQUFBQUFBQUJCUWtORVJVWkhTRWxLUzB4TlRrOVFVVkpUVkZWV1YxaFpXZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRHdVUUVRQVFJRUNLUURBQUJnZ25tQ0lRQUFBQUFBQUFDbTN3QUFBQUFBQUtHbEFBQUFBQUFBZ1ovZy9BQUFBQUJBZm9EOEFBQUFBS2dEQUFEQm85cWpJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdmNEFBQUFBQUFCQS9nQUFBQUFBQUxVREFBREJvOXFqSUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFnZjRBQUFBQUFBQkIvZ0FBQUFBQUFMWURBQURQb3VTaUdnRGxvdWlpV3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ2Y0QUFBQUFBQUJBZnFIK0FBQUFBRkVGQUFCUjJsN2FJQUJmMm1yYU1nQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdkUFkzdUQ1QUFBeGZvSCtBQUFBQUJRT0FSRCsvLy8vUXdBQUFBQUFBQUFCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFHRmNCRUFBQUFBQUFBQUFBQUFBQUFCaFhBUkFBQUFBQUFBQUFBQUFBQUFBWVZ3RVFBQUFBQUFBQUFBQUFBQUFBR0ZjQkVBQUFBQUFBQUFBQUFBQUFBQmhYQVJBQUFBQUFBQUFBQUFBQUFBQUJBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFBR0JhQVJBQUFBQUFBQUFBQUJBTUFSQ1lFQUVRR0JJQkVLQlpBUkFnVndFUUFRQUFBQ0JYQVJEd1VRRVEvLy8vLy8vLy8vOHZmd0FRQUFBQUFQLy8vLytBQ2dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVFBQUFBQXdBQUFBY0FBQUI0QUFBQUNnQUFBQUFBQUFBQUFBQUFBUUFBQUFBQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQUFBQUFBQVFBQUFBQUFBQUFCQUFBQUFBQUFBQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBQUFBQkFBQUFBQUFBQUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFCQUFBQUFBQUFBQUVBQUFBQUFBQUFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEc0FRRVFFQXdCRUJJT0FSQUFBQUFBUUJRQkVEd1VBUkE0RkFFUU5CUUJFREFVQVJBc0ZBRVFLQlFCRUNBVUFSQVlGQUVRRUJRQkVBUVVBUkQ0RXdFUThCTUJFT1FUQVJEZ0V3RVEzQk1CRU5nVEFSRFVFd0VRMEJNQkVNd1RBUkRJRXdFUXhCTUJFTUFUQVJDOEV3RVF1Qk1CRUxRVEFSQ3NFd0VRb0JNQkVKZ1RBUkNRRXdFUTBCTUJFSWdUQVJDQUV3RVFlQk1CRUd3VEFSQmtFd0VRV0JNQkVFd1RBUkJJRXdFUVJCTUJFRGdUQVJBa0V3RVFHQk1CRUFrRUFBQUJBQUFBQUFBQUFLQlpBUkF1QUFBQVhGb0JFRXhtQVJCTVpnRVFUR1lCRUV4bUFSQk1aZ0VRVEdZQkVFeG1BUkJNWmdFUVRHWUJFSDkvZjM5L2YzOS9ZRm9CRUFFQUFBQXVBQUFBQVFBQUFPQnFBUkFBQUFBQTRHb0JFQUVCQUFBQUFBQUFBQUFBQUFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFnQUFBQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDQUFBQUFnlVGQUVRUkJRQkVQclJBQkQ2MFFBUSt0RUFFUHJSQUJENjBRQVErdEVBRVByUkFCRDYwUUFRK3RFQUVQclJBQkFDQUFBQVNCb0JFQWdBQUFBY0dnRVFDUUFBQVBBWkFSQUtBQUFBV0JrQkVCQUFBQUFzR1FFUUVRQUFBUHdZQVJBU0FBQUEyQmdCRUJNQUFBQ3NHQUVRR0FBQUFIUVlBUkFaQUFBQVRCZ0JFQm9BQUFBVUdBRVFHd0FBQU53WEFSQWNBQUFBdEJjQkVCNEFBQUNVRndFUUh3QUFBREFYQVJBZ0FBQUErQllCRUNFQUFBQUFGZ0VRSWdBQUFHQVZBUkI0QUFBQVVCVUJFSGtBQUFCQUZRRVFlZ0FBQURBVkFSRDhBQUFBTEJVQkVQOEFBQUFjRlFFUUFBQUFBQUFBQUFBZ0JaTVpBQUFBQUFBQUFBQUFBQUFBZ0hBQUFBRUFBQUR3OGYvL0FBQUFBRkJUVkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJRUkZRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBTUY0QkVIQmVBUkQvLy8vL0FBQUFBQUFBQUFELy8vLy9BQUFBQUFBQUFBQUNBQUFBQUFBQUFBQUFBQUFBQUFBQUF3QUFBUC8vLy84ZUFBQUFPd0FBQUZvQUFBQjRBQUFBbHdBQUFMVUFBQURVQUFBQTh3QUFBQkVCQUFBd0FRQUFUZ0VBQUcwQkFBRC8vLy8vSGdBQUFEb0FBQUJaQUFBQWR3QUFBSllBQUFDMEFBQUEwd0FBQVBJQUFBQVFBUUFBTHdFQUFFMEJBQUJzQVFBQUFBQUFBUDcvLy8vKy8vLy9BQUFBQUFBQUFBQUFBZ0VRQUFBQUFDNC9RVlpEUVhSc1JYaGpaWEIwYVc5dVFFRlVURUJBQU93QkFSQUFBZ0VRQUFBQUFDNC9RVlppWVdSZlpYaGpaWEIwYVc5dVFITjBaRUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQUFBQUFCQUJnQUFBQVlBQUNBQUFBQUFBQUFBQUFFQUFBQUFBQUJBQUlBQUFBd0FBQ0FBQUFBQUFBQUFBQUVBQUFBQUFBQkFBa0VBQUJJQUFBQVdJQUJBRm9CQUFEa0JBQUFBQUFBQUR4aGMzTmxiV0pzZVNCNGJXeHVjejBpZFhKdU9uTmphR1Z0WVhNdGJXbGpjbTl6YjJaMExXTnZiVHBoYzIwdWRqRWlJRzFoYm1sbVpYTjBWbVZ5YzJsdmJqMGlNUzR3SWo0TkNpQWdQSFJ5ZFhOMFNXNW1ieUI0Yld4dWN6MGlkWEp1T25OamFHVnRZWE10YldsamNtOXpiMlowTFdOdmJUcGhjMjB1ZGpNaVBnMEtJQ0FnSUR4elpXTjFjbWwwZVQ0TkNpQWdJQ0FnSUR4eVpYRjFaWE4wWldSUWNtbDJhV3hsWjJWelBnMEtJQ0FnSUNBZ0lDQThjbVZ4ZFdWemRHVmtSWGhsWTNWMGFXOXVUR1YyWld3Z2JHVjJaV3c5SW1GelNXNTJiMnRsY2lJZ2RXbEJZMk5sYzNNOUltWmhiSE5sSWo0OEwzSmxjWFZsYzNSbFpFVjRaV04xZEdsdmJreGxkbVZzUGcwS0lDQWdJQ0FnUEM5eVpYRjFaWE4wWldSUWNtbDJhV3hsWjJWelBnMEtJQ0FnSUR3dmMyVmpkWEpwZEhrK0RRb2dJRHd2ZEhKMWMzUkpibVp2UGcwS1BDOWhjM05sYldKc2VUNVFRVkJCUkVSSlRrZFlXRkJCUkVSSlRrZFFRVVJFU1U1SFdGaFFRVVJFU1U1SFVFRkVSRWxPUjFoWVVFRkVSRWxPUjFCQlJFUkpUa2RZV0ZCQlJFUkpUa2RRUVVSRVNVNUhXRmhRUVVRQUVBQUE5QUFBQUNjd1RqQlZNSHd3Z0RDRU1JZ3c3VEQ4TUEweFNqRjBNWlF4eVRFQ01na3laakoyTXBjeVZqTmtNeFkwSnpSRE5GYzBwelR6TkNZMU56VmlOWEExZmpXYU5hazF6RFZPTmx3MmJEWjZOb28yeURiV051WTJJRGNuTjJRM2tqZWdOOTQzOERjV09GTTRXRGhvT0hZNHNEaTFPTVU0MHpqa09CYzVIRGtzT1RvNXlUbk9PZHc1NFRudk9mMDVORHBET2tnNlVEcFpPdFk2N0RvYU8ySTdlRHVPTzZZN3dqdk5PeGc4ZER6UlBDYzlPRDFNUFZ3OTFqM25QVE0rVFQ1blBuRStmejZLUG84K29UNm9QcjQrMVQ3Z1B2SSsrVDQyUDBjL2xqK21QN2svd3ovT1A5ay8zai93UC9jL0FDQUFBSWdBQUFBTk1DUXdMekJCTUVnd2dUQ1RNS3N3MWpBSU10UXlXak9NTStFeit6TWRORTQwWURSeU5MRTAyVFZnTm8wMnBEYkNOdUkyRHpjZU56WTNZVGVTTjdVM2xEaTlPTTg0M2pqd09BTTVSRGxYT1dNNWRqbUNPWlU1MWpsZU91WTZUenVBTzZrNzZEdEJQRTQ4Vmp4bFBHczhFejRlUGlRK2hqK1ZQNnMvc3o4QUFBQXdBQUJFQUFBQWNqTjZNNll6dFRQbU0rNHpWalJrTko0MHBqUTJOVVkxZVRXQk5iTTEwVFVIT3pJOU9EMCtQVVE5U2oxUVBWWTlUVDZlUDZZL3V6L0dQd0FBQUVBQUFGQUJBQUMrTUJZeXBES3BNck15NXpML01nY3pEVE5UTTFremRET2tNOEF6MkRNck5GZzB4alRNTk5JMDJEVGVOT1EwNnpUeU5QazBBRFVITlE0MUZUVWROU1UxTFRVNU5VSTFSelZOTlZjMVlEVnJOWGMxZkRXTU5aRTFseldkTmJNMXVqWEROZFUxSkRZcU5qczJjRGI2Tmk4M1NEZFBOMWMzWERkZ04yUTNqVGV6TjlFMzJEZmNOK0EzNURmb04rdzM4RGYwTno0NFJEaElPRXc0VURpMk9NRTQzRGpqT09nNDdEandPQkU1T3psdE9YUTVlRGw4T1lBNWhEbUlPWXc1a0RuYU9lQTU1RG5vT2V3NVBqcFFPaUk3TERzNU8xUTdXenR6TzU4N3V6dmVPL0U3U2p4L1BKZzhuenluUEt3OHNEeTBQTjA4QXowaFBTZzlMRDB3UFRROU9EMDhQVUE5UkQyT1BaUTltRDJjUGFBOUJqNFJQaXcrTXo0NFBqdytRRDVoUG9zK3ZUN0VQc2crekQ3UVB0USsyRDdjUHVBK0tqOHdQelEvT0Q4OFA0Zy9xRCt0UHdBQUFGQUFBQVFCQUFDT01Kc3dwVEM0TU9jd0dqRWdNU2d4TlRGSk1ia3g5akVOTW9BemtUUExNOWd6NGpQd00va3pBelEzTkVJMFREUmxORzgwZ2pTbU5OMDBFalVsTlpVMXNqWDZOV1kyaFRiNk5nWTNHVGNyTjBZM1RqZFdOMjAzaGplaU42czNzVGU2Tjc4M3pqZjFOeDQ0THpoU09CYzVRVG1NT2RnNUp6cHZPdFU2N0RyOU9qazdaenR0TzNnN2hEdVpPNkE3dER1N08rSTc2RHZ6Ty84N0ZEd2JQQzg4Tmp4T1BGbzhZRHhzUEhzOGdUeUtQSlk4cER5cVBMWTh2RHpKUE5NODJqenlQQUU5Q0QwVlBUZzlUVDF6UGJNOXVUM2pQZWs5QlQ0ZFBrTSt2VDdnUHVvK0lqOHFQM1kvaGorTVA1Zy9uait1UDdRL3lUL1hQK0kvNlQ4QVlBQUFnQUFBQUFRd0NUQVJNQmN3SGpBa01Dc3dNVEE1TUVBd1JUQk5NRll3WWpCbk1Hd3djakIyTUh3d2dUQ0hNSXd3bXpDeE1Md3d3VERNTU5FdzNERGhNTzR3L0RBQ01ROHhMekUxTVZFeGxERWFNaXd5TlRJK01rd3liak4xTTRRMGF6VjZOWlUxdWpqOU9ZUTd0RHZhTzhJOThELzBQL2cvL0Q4QUFBQndBQUNVQUFBQUFEQUVNQWd3RERBY01CZ3hNREZVTVdRMHFEVXJOMXMzZ1RkcE9aQTdsRHVZTzV3N29EdWtPNmc3ckR2S085TTczenNXUEI4OEt6eGtQRzA4ZVR5ZFBLWTgwenp1UFBROC9Ud0VQU1k5aFQyTlBhQTlxejJ3UGNBOXlqM1JQZHc5NVQzN1BRWStJRDRzUGpRK1JENVpQcGsrcGo3UVB0VSs0RDdsUGdNL2p6K2NQNlUvdVQvYVArQS9BQUFBZ0FBQTVBQUFBQkl3YVRCeE1MRXd1ekRqTVB3d1BURnRNWDh4MFRIWE1mc3hHVEk3TWtZeVZUS05NcGN5NXpMeU12d3lEVE1ZTThzMDNEVGtOT28wN3pUMU5HRTFaelY5TllnMW56V3JOYmcxdnpYMk5VVTJXRGFLTnFNMnNqYTNOdGcyM1RZUk54WTNKRGNzTnpnM1B6ZElOMXMzWlRkeE4zbzNnamVNTjVJM21EZTZOek00T1RoU09GZzRJVGsrT1pJNWJEcDBPb3c2cERyN09oVTdPRHRGTzFFN1dUdGhPMjA3a1R1Wk82UTdzVHU0TzhJNzdEdjZPd0E4SXp3cVBFTThWenhkUEdZOGVUeWRQREk5VWoxZ1BXVTlxRCsyUDd3LzFqL2JQK28vOHo4QWtBQUFnQUFBQUFBd0N6QWRNREF3T3pCQk1FY3dUREJWTUhJd2VEQ0RNSWd3a0RDV01LQXdwekM3TU1Jd3lERFdNTjB3NGpEck1QZ3cvakFZTVNreEx6RkFNYVV4UVRWTk5ZQTFwalhnTlNVMitEY0RPQXM0QmptN09TNDhRRHlRUEpZOHRqenRQUDQ4V1QxbFBYRStwajcyUGhVL2FqK0NQN00vdmo4QUFBQ2dBQUI4QUFBQU9EQlJNSG93ZnpDV01POHcvREF1TVdFeGtqR2tNYkV4dlRISE1jOHgyakVLTWpveTBUS0JNNlF6SWpUek5IczFoVFdkTmFRMXJqVzJOY00xeWpYNk5aTTJDRGNWT1NjNU9UbGJPVzA1ZnptUk9hTTV0VG5IT2JzN0Vqd2ZQRGc4Vmp5VVBNTThmRDNoUFpVK3RUNmxQODQvQUFBQXNBQUFvQUFBQUNjd3RUR1ZNbDR6anpPbE0rWXpCVFNpTk5ZMEJUV0NOZWsxRmpZcE5pODJTVFpZTm1VMmNUYUJOb2cybHphak5yQTIxRGJtTnZRMkNUY1ROemszYkRkN040UTNxRGZYTnhnNE9UaGJPS1E0N1RpZU9iZzV3emxvT3RZNm1EdjBPd2s4VHp4VlBHRTh0anpwUENFOWpEMlNQZU05NlQwTlBqQStaRDVxUG5ZK3ZUN2xQaHcvTkQ4L1AyTS9iRDl6UDN3L3ZEL0JQK2svQU1BQUFNZ0FBQUFPTURNd1JqQmVNSEF3bERCWU1WMHhiekdOTWFFeHB6RVFNbHd5WnpLU01wMHlxekt3TXJVeXVqTEtNdmt5QnpOT00xTXptRE9kTTZRenFUT3dNN1V6SkRRdE5ETTB2VFRNTk5zMDVEVDVOQ2sxQ0RadE5uazI4VFlMTnhRM05qZHVON0UzdHpmZk4vdzNLRGhoT0c0NFRUbGNPUjg2THpwS09tbzZ3RHJST2d3N0tEdURPNDQ3dkR2S085azc1enZ2Ty93N0dqd2tQQzA4T0R4TlBGUThXanh3UElzOHpqenZQUHM4SWowdlBUUTlRajBkUGtBK1N6NXVQcjArQUFBQTBBQUFtQUFBQUFjd0RqQ1NNYkF4UlRSTU5ITTBnVFNITkpjMG5EUzBOTG8weVRUUE5ONDA1RFR5TlBzMENqVVBOUmsxSnpWbk5ZUTFvVFhnTmVjMTdUVWROaWcyU3pZUE54dzNvRGVtTjZzM3NUZTROOG8zVnpqVE9QODRKemxlT1dnNWdEcTlPc2M2M3pvSU96dzdhenNXUFNZOWhUMnhQYzA5NlQwQlBoZytOVDVFUGxNK1l6NTNQcFEremo3bFBoMC9rRDhBQUFEZ0FBQXdBQUFBakREZ01Ka3hzVEcyTVI4MFB6U0pOSlkwcVRSeE5aYzJrRGZaTjNVNTlEb01Qak0rUUQ0QUFBRHdBQUJJQUFBQVBqQ1VNZnN4T3pKN01xb3k0aklLTXpvemFqUExNd3MwUWpSZE5HYzBjVFIrTklNMGlUU05OSkkwbURTbE5LbzB0RFRCTk1VMHlqVFVOTjQwNlRUdE5BQUFBUUR3QUFBQWpER1FNWlF4b0RHa01hZ3hyREc0TWJ3eC9ERUFNZ2d5RERJUU1oUXlHREpJT1V3NVVEbFVPVmc1WERsZ09XUTVhRGxzT1hBNWREbDRPWHc1Z0RtRU9ZZzVqRG1RT1pRNW1EbWNPYUE1cERtb09hdzVzRG0wT2JnNXZEbkFPY1E1eURuTU9kQTUxRG5ZT2R3NTREbmtPZWc1N0Rud09mUTUrRG44T1FBNkJEb0lPZ3c2RURvVU9oZzZIRG9nT2lRNktEb3NPakE2TkRvNE9qdzZRRHBFT2tnNlREcFFPbFE2V0RwY09tQTZaRHBvT213NmNEcDBPbmc2ZkRxQU9vUTZpRHFNT3BBNmxEcVlPcHc2b0Rxa09xZzZyRHF3T3JRNnVEcThPc0E2eERyTU90QTYxRG9BQUFBUUFRQWdBQUFBc0R1ME83Zzd2RHZBTzhRN3lEdk1POUE3MUR2WU93QUFBQ0FCQUdRQUFBRFFQTlE4MkR6Y1BDdzlNRDJvUGF3OXZEM0FQY2c5NEQzd1BmUTlCRDRJUGd3K0ZENHNQakErU0Q1WVBsdytjRDUwUG9RK2lENllQcHcrb0Q2b1BzQStQRDlBUDJBL2dEK0lQNUEvbUQrY1A2US91RC9BUDlRLzhEOEFBQUF3QVFDOEFBQUFFREF3TUZBd1hEQjRNSVF3b0RDOE1NQXc0REQ4TUFBeElERkFNV0F4Z0RHZ01jQXgzREhnTWZ3eEFESWNNaUF5UURKY01tQXlnREtnTXNBeTRETHNNZ2d6S0ROSU0yUXphRE53TTR3em5ET2tNN0F6MERQY00vd3pDRFFvTkRRMFZEUmNOR2cwaURTVU5MUTB3RFRnTk93MEREVVVOUncxSkRVd05WQTFYRFY4TllRMWtEWElOZEExMURYc05mQTFBRFlrTmpBMk9EWm9ObkEyZERhTU5wQTJyRGF3TnJnMndEYklOc3cyMURib05nQUFBRkFCQVB3QUFBQUFNQVF3b0RHd01iUXgwREVZTmhBM2VEZUlONWczcURlNE45dzM2RGZzTi9BMzlEZjROd0E0QkRnUU9KQTVsRG1ZT2FBNXBEbW9PYXc1c0RtME9iZzV2RG5BT2NRNXlEbk1PZEE1MURuWU9kdzU0RG5rT2VnNTdEbndPZlE1K0RuOE9RQTZCRG9JT2d3NkVEb1VPaGc2SERvZ09pUTZLRG9zT2pBNk5EbzRPanc2UURwRU9rZzZXRHBnT21RNmFEcHNPbkE2ZERwNE9udzZnRHFFT3BBNm9EcW9PaUE5SkQwb1BTdzlNRDAwUFRnOVBEMUFQVVE5U0QxTVBWUTlYRDFrUFd3OWREMThQWVE5akQyVVBadzlwRDJzUGJROXZEM0VQY3c5MUQzY1BlUTk3RDMwUGZ3OUJENndQclErWUQrkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQXdNREF3TURBd0FBQUFBQUFBQUFJMVZBQUFBQUFBQUNBQUFBVU9kQUFBZ0FBQUFrNTBBQUNRQUFBUGptUUFBS0FBQUFZT1pBQUJBQUFBQTA1a0FBRVFBQUFBVG1RQUFTQUFBQTRPVkFBQk1BQUFDMDVVQUFHQUFBQUh6bFFBQVpBQUFBVk9WQUFCb0FBQUFjNVVBQUd3QUFBT1RrUUFBY0FBQUF2T1JBQUI0QUFBQ2M1RUFBSHdBQUFEamtRQUFnQUFBQUFPUkFBQ0VBQUFBSTQwQUFJZ0FBQUdqaVFBQjRBQUFBV09KQUFIa0FBQUJJNGtBQWVnQUFBRGppUUFEOEFBQUFOT0pBQVA4QUFBQWs0a0FBQXdBQUFBY0FBQUI0QUFBQUNnQUFBUC8vLy8rQUNnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUQvLy8vLy8vLy8veEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRQUFBQUFBQUFJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQmhZbU5rWldabmFHbHFhMnh0Ym05d2NYSnpkSFYyZDNoNWVnQUFBQUFBQUVGQ1EwUkZSa2RJU1VwTFRFMU9UMUJSVWxOVVZWWlhXRmxhQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUFBQUFBQUFBSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFZV0pqWkdWbVoyaHBhbXRzYlc1dmNIRnljM1IxZG5kNGVYb0FBQUFBQUFCQlFrTkVSVVpIU0VsS1MweE5UazlRVVZKVFZGVldWMWhaV2dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFnRmtFQUFRSUVDS1FEQUFCZ2dubUNJUUFBQUFBQUFBQ20zd0FBQUFBQUFLR2xBQUFBQUFBQWdaL2cvQUFBQUFCQWZvRDhBQUFBQUtnREFBREJvOXFqSUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFnZjRBQUFBQUFBQkEvZ0FBQUFBQUFMVURBQURCbzlxaklBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ2Y0QUFBQUFBQUJCL2dBQUFBQUFBTFlEQUFEUG91U2lHZ0Rsb3VpaVd3QUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdmNEFBQUFBQUFCQWZxSCtBQUFBQUZFRkFBQlIybDdhSUFCZjJtcmFNZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFnZFBZM3VENUFBQXhmb0grQUFBQUFEVHRRQUQrLy8vL1F3QUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBU0J0QkFBQUFBQUFBQUFBQUFBQUFBRWdiUVFBQUFBQUFBQUFBQUFBQUFBQklHMEVBQUFBQUFBQUFBQUFBQUFBQVNCdEJBQUFBQUFBQUFBQUFBQUFBQUVnYlFRQUFBQUFBQUFBQUFBQUFBQUFCQUFBQUFRQUFBQUFBQUFBQUFBQUFBQUFBQUhnZVFRQUFBQUFBQUFBQUFERHJRQUM0NzBBQU9QRkFBTGdkUVFCUUcwRUFBUUFBQUZBYlFRQWdGa0VBV09sQUFFanBRQUF0dkVBQUxieEFBQzI4UUFBdHZFQUFMYnhBQUMyOFFBQXR2RUFBTGJ4QUFDMjhRQUF0dkVBQUFBQUFBQUFBQUFBQUFBQUFBUUFBQUFBQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQUFBQUFBQVFBQUFBQUFBQUFCQUFBQUFBQUFBQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBQUFBQkFBQUFBQUFBQUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFCQUFBQUFBQUFBQUVBQUFBQUFBQUFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ0JaTVpBQUFBQUFBQUFBQUFBQUFBQWdBQUFBQUFBQUFBQUFBQUFBQUFBRERyUUFBeTdVQUFZUE5BQUZ6elFBQlk4MEFBVlBOQUFGRHpRQUJNODBBQVNQTkFBRUR6UUFBNDgwQUFNUE5BQUNUelFBQVk4MEFBRVBOQUFBVHpRQUFBODBBQS9QSkFBUGp5UUFEMDhrQUE4UEpBQU96eVFBRG84a0FBNVBKQUFPRHlRQURjOGtBQTJQSkFBTlR5UUFETThrQUF3UEpBQUxqeVFBQ3c4a0FBOFBKQUFLanlRQUNnOGtBQW1QSkFBSXp5UUFDRThrQUFlUEpBQUd6eVFBQm84a0FBWlBKQUFGanlRQUJFOGtBQU9QSkFBQWtFQUFBQkFBQUFBQUFBQUxnZFFRQXVBQUFBZEI1QkFKUXFRUUNVS2tFQWxDcEJBSlFxUVFDVUtrRUFsQ3BCQUpRcVFRQ1VLa0VBbENwQkFIOS9mMzkvZjM5L2VCNUJBQUVBQUFBdUFBQUFBUUFBQUFBQUFBQUFBQUFBL3YvLy8vNy8vLzhBQUFBQUFBQUFBQU1BQUFBQUFBQUFBQUFBQUFBQUFBQ0FjQUFBQVFBQUFQRHgvLzhBQUFBQVVGTlVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFGQkVWQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRHdIa0VBTUI5QkFQLy8vLzhBQUFBQUFBQUFBUC8vLy84QUFBQUFBQUFBQVAvLy8vOGVBQUFBT3dBQUFGb0FBQUI0QUFBQWx3QUFBTFVBQUFEVUFBQUE4d0FBQUJFQkFBQXdBUUFBVGdFQUFHMEJBQUQvLy8vL0hnQUFBRG9BQUFCWkFBQUFkd0FBQUpZQUFBQzBBQUFBMHdBQUFQSUFBQUFRQVFBQUx3RUFBRTBCQUFCc0FRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFBQUFBQUFFQUdBQUFBQmdBQUlBQUFBQUFBQUFBQUFRQUFBQUFBQUVBQVFBQUFEQUFBSUFBQUFBQUFBQUFBQVFBQUFBQUFBRUFDUVFBQUVnQUFBQllRQUVBV2dFQUFPUUVBQUFBQUFBQVBHRnpjMlZ0WW14NUlIaHRiRzV6UFNKMWNtNDZjMk5vWlcxaGN5MXRhV055YjNOdlpuUXRZMjl0T21GemJTNTJNU0lnYldGdWFXWmxjM1JXWlhKemFXOXVQU0l4TGpBaVBnMEtJQ0E4ZEhKMWMzUkpibVp2SUhodGJHNXpQU0oxY200NmMyTm9aVzFoY3kxdGFXTnliM052Wm5RdFkyOXRPbUZ6YlM1Mk15SStEUW9nSUNBZ1BITmxZM1Z5YVhSNVBnMEtJQ0FnSUNBZ1BISmxjWFZsYzNSbFpGQnlhWFpwYkdWblpYTStEUW9nSUNBZ0lDQWdJRHh5WlhGMVpYTjBaV1JGZUdWamRYUnBiMjVNWlhabGJDQnNaWFpsYkQwaVlYTkpiblp2YTJWeUlpQjFhVUZqWTJWemN6MGlabUZzYzJVaVBqd3ZjbVZ4ZFdWemRHVmtSWGhsWTNWMGFXOXVUR1YyWld3K0RRb2dJQ0FnSUNBOEwzSmxjWFZsYzNSbFpGQnlhWFpwYkdWblpYTStEUW9nSUNBZ1BDOXpaV04xY21sMGVUNE5DaUFnUEM5MGNuVnpkRWx1Wm04K0RRbzhMMkZ6YzJWdFlteDVQbEJCVUVGRVJFbE9SMWhZVUVGRVJFbE9SMUJCUkVSSlRrZFlXRkJCUkVSSlRrZFFRVVJFU1U1SFdGaFFRVVJFU1U1SFVFRkVSRWxPUjFoWVVFRkVSRWxPUjFCQlJFUkpUa2RZV0ZCQlJBQVFBQUNjQUFBQUNqQkxNSXd3WGpGcU1Yc3hqakdUTVpveHdqSGRNZXd4RGpJbk1sWXljVEtBTXFFeXlETGtNazR6Z3pPcE03UXp1VFBBTStZejh6UCtNd00wQ2pRdE5FYzBZalJ4Tkk0MHJqVEpOTmcwRHpVVU5SdzFDVFlwTmxjMmhqYklOdFkyNkRZRE54STNNVGMyTno0M1hUZGlOMm8za1Rldk43bzN2emZHTitvMy9EY0NPRWs0VGpoV09LYzR3ampYT2x3N2VqeHhQd0FnQUFEQUFBQUFoakYvTWdJekRETXZNMVF6YURONk00RXpoek9aTTZFenJETUJOQXMwV2pUa05PbzA4RFQyTlB3MEFqVUpOUkExRnpVZU5TVTFMRFV6TlRzMVF6VkxOVmMxWURWbE5XczFkVFYrTllrMWxUV2FOYW8xcnpXMU5iczEwVFhZTmVjMStUWExOdFUyNGpiOU5nUTNIRGRJTjJRM2h6ZWFOMms1Y0Ruek9mczVFRG9iT3BvNzREM25QZms5L3owWlBpZytOVDVCUGxFK1dENW5Qbk0rZ0Q2a1ByWSt4RDdaUHVNK0NUODhQMHMvVkQ5NFA2Yy90ajhBQUFBd0FBQm9BQUFBZGpHdE1jd3g2ekZCTW1ReWhqS1JNc2N5MXpJRU13d3pLek03TTAwelVqT2RNN296RWpUc05QUTBERFVrTlhzMW9UV3ROYmsyRURjZE56MDNWemVMTjdvM0ZUazRPVU01WmptMU9YNDY4enBSUEdjOC9Ud3pQYncrZEQ5K1B3QUFBRUFBQUtBQUFBQXlNRUV3dURERk1KMHhwekZGTW9JeXRqTGxNaUEwaWpUdk5LTTF3eld6TnR3Mk5UZkRPS001YkRxZE9yTTY5RG9UTzdBNzVEc1RQTG84N3p3SVBRODlGejBjUFNBOUpEMU5QWE05a1QyWVBadzlvRDJrUGFnOXJEMndQYlE5L2owRVBnZytERDRRUG5ZK2dUNmNQcU0rcUQ2c1ByQSswVDc3UGkwL05EODRQencvUUQ5RVAwZy9URDlRUDVvL29EK2tQNmcvckQvNFB3QlFBQUFFQVFBQUNqQlpNRjh3Y0RDYU1OY3c0VEQ1TUNJeFZqR0ZNV0F5WmpKN01vUXlzVExNTXRJeTJ6TGlNZ1F6WXpOck0zNHppVE9PTTU0enFET3ZNN296d3pQWk0rUXovak1LTkJJMElqUTNOSGMwaERTdU5MTTB2alRETk9FMGtqV2ZOYncxOHpVTE5oWTJPalpETmtvMlV6YVROcGcyd0RibE5nbzNIVGMxTjBjM2F6ZWxOeDQ0SkRnOU9FTTQ2emoyT0RVNWNqbUJPZE01M2pub09mazVCRHB2TzNzN2dUdUdPNHc3OWp2OU94SThUVHhtUEcwOGdUeWlQS2c4Mmp3eFBUazllVDJEUGFzOXhEMEZQalUrUno2WlBwOCt3ajdIUHVnKzdUNFNQeGcvSXo4dlAwUS9TejlmUDJZL2pUK1RQNTQvcWorL1A4WS8yai9oUC9rL0FHQUFBQ1FCQUFBRk1Bc3dGekFtTUN3d05UQkJNRTh3VlRCaE1HY3dkREIrTUlVd25UQ3NNTE13d0REak1QZ3dIakZlTVdReGpqR1VNYkF4eURIdU1XZ3lpektWTXMweTFUSWZNeVl6UVROR00wNHpWRE5iTTJFemFETnVNM1l6ZlRPQ000b3prek9mTTZRenFUT3ZNN016dVRPK004UXp5VFBZTSs0eitUUCtNd2swRGpRWk5CNDBLelE1TkQ4MFREUnNOSEkwampTK05NTTAwVFRnTkFNMUVEVWNOU1ExTERVNE5WdzFaRFZ2TmJrMXhqWGZOZjAxT3pacU5obzNnVGV1TnlJNFh6aDJPT2s1K2prME9rRTZTenBaT21JNmJEcWdPcXM2dFRyT090ZzY2em9QTzBZN2V6dU9PLzQ3R3p4alBNODg3anhqUFc4OWdqMlVQYTg5dHoyL1BkWTk3ejBMUGhRK0dqNGpQaWcrTno1ZVBvYyttRDY3UG9BL3FqLzFQd0J3QUFCUUFBQUFRVENRTU5nd1BqRlZNV1l4b2pIUk1mSXhGREpkTXFZeVZ6T0tNNU16bnpQV005OHo2ek1rTkMwME9UUlFORnMwbGpVRU5pczNKemcvT0dNNGN6dTNQRG8rYWo2UVBnQUFBSUFBQUhRQUFBQjRNSjh5b3pLbk1xc3lyekt6TXJjeXV6TEVOR2MxaURXVU5iczF5RFhOTmRzMUNqWVJOaHMyUlRaVE5sazJmRGFETnB3MnNEYTJOcjgyMGpiMk5vczNxemRET2NNNUxqcEJPbDA2YnpxQ09wUTYxRHIwT3RjOStUMHhQbG8rZHo2Q1Bwayt2ajdWUG9vL0FBQUFrQUFBb0FBQUFMTXdWekZnTVhVeHBURllNbDB5YnpLTk1xRXlwekljTTRFempUTUZOQjgwS0RSWE5HbzBlelNnTk5zMDZ6UUdOU1kxZkRXTk5jZzE1RFUvTmtvMmVEYUdObzgyenpiaE5rTTNVRGQ0TjZvM3NqZndOeWs0VlRoOU9MUTR2amp3T2FVNnRUckRPc3M2MkRyMk9nQTdDVHNVT3lrN01EczJPMHc3WnpzY1BTRTlaejkxUDNzL2xUK2FQNmsvc2orL1A4by8zRC92UC9vL0FLQUFBTWdBQUFBQU1BWXdDekFVTURFd056QkNNRWN3VHpCVk1GOHdaakI2TUlFd2h6Q1ZNSnd3b1RDcU1MY3d2VERYTU9ndzdqRC9NR1F4QURVTU5UODFaVFdmTmVRMXR6ZkNOOG8zM3pjV09DRTRNVGc4T0xZNHp6ajRPUDA0RkRsdE9YSTVkemw4T1l3NXV6bkpPUkE2RlRwYU9sODZaanByT25JNmR6cm1PdTg2OVRwL080NDduVHVxTytFNzd6djFPd1U4Q2p3aVBDZzhOenc5UEV3OFVqeGdQR2s4ZUR4OVBJYzhsVHpWUFBJOER6M2ZQdVkrN0Q3RFA5VS80ai91UC9nL0FBQUFzQUFBZUFBQUFBQXdDekE3TUdzd0FqR3lNZFV4VXpJa002d3p0alBPTTlVejN6UG5NL1F6K3pNck5NUTBPVFZHTjFnM2FqZU1ONTQzc0RmQ045UTM1amY0TnpvNlFUckZPK003T1R4TFBKczhvVHpCUFBnOENUMVNQYTQ5d3owSlBnOCtHejV3UHFNKzJ6NUdQMHcvblQralA4Yy82ajhBd0FBQXRBQUFBQjR3SkRBd01IY3dzekF4TVRneHRERzdNUll5UXpLUk1tWXpOVFE3TkVBMFJqUk5ORjgwcWpUZk5QZzAvelFITlF3MUVEVVVOVDAxWXpXQk5ZZzFqRFdRTlpRMW1EV2NOYUExcERYdU5mUTErRFg4TlFBMlpqWnhOb3cya3phWU5wdzJvRGJCTnVzMkhUY2tOeWczTERjd056UTNPRGM4TjBBM2lqZVFONVEzbURlY04vRTMvRGNmT09NNDhEai9PRGM1ZWptQU9hZzV4VG54T1NvNk56b1dPeVU3SkQ0clBvQStBQUFBMEFBQURBQUFBSkF3QUFBQTRBQUFIQUFBQUdReGFERnNNWEF4ZERHQU1ZUXh2REhBTVFBQUFQQUFBSEFBQUFBRU9RZzVxRG5JT2VnNUNEb29Pa1E2U0RwUU9sUTZjRHFRT3JBNnZEcllPdmc2R0RzNE8xZzdkRHQ0TzVnN3BEdkFPOHc3NkRzSVBDZzhTRHhvUElnOHFEekVQTWc4NUR6b1BBZzlLRDAwUFZBOWJEMXdQWXc5a0Qyd1BkQTk4RDBRUGpBK1VENEFBQUFRQVFEb0FBQUFnREdJTVFBMUREVVVOUncxSkRVc05UUTFQRFZFTlV3MVZEVmNOV1ExYkRWME5YdzFoRFdNTlpRMW5EV2tOYXcxdERXOE5VZzZRRHVvTzdnN3lEdllPK2c3RER3WVBCdzhJRHdrUENnOE1EdzBQRGc4UER4QVBFUThTRHhNUEZBOFZEeFlQRnc4WUR4a1BMQTl0RDI0UGJ3OXdEM0VQY2c5ekQzUVBkUTkyRDNjUGVBOTVEM29QZXc5OEQzMFBmZzkvRDBBUGdRK0NENE1QaEErRkQ0WVBodytJRDRrUGlnK0xENHdQalErT0Q0OFBrQStSRDVJUGt3K1VENVVQbGcrWEQ1Z1BuQStlRDU4UG9BK2hENklQb3cra0Q2VVBwZytuRDZvrQUFEQUFBQUJBQUFBUC8vQUFDNEFBQUFBQUFBQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlBQUFBQU9IN29PQUxRSnpTRzRBVXpOSVZSb2FYTWdjSEp2WjNKaGJTQmpZVzV1YjNRZ1ltVWdjblZ1SUdsdUlFUlBVeUJ0YjJSbExnME5DaVFBQUFBQUFBQUFVRVVBQUV3QkF3RFdZRjVUQUFBQUFBQUFBQURnQUFJQkN3RUlBQUFjQUFBQUNBQUFBQUFBQU80N0FBQUFJQUFBQUVBQUFBQUFRQUFBSUFBQUFBSUFBQVFBQUFBQUFBQUFCQUFBQUFBQUFBQUFnQUFBQUFJQUFBQUFBQUFDQUVDRkFBQVFBQUFRQUFBQUFCQUFBQkFBQUFBQUFBQVFBQUFBQUFBQUFBQUFBQUNjT3dBQVR3QUFBQUJBQUFEQUJRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQmdBQUFNQUFBQTJEb0FBQndBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ0FBQUFnQUFBQUFBQUFBQUFBQUFBZ2dBQUJJQUFBQUFBQUFBQUFBQUFBdWRHVjRkQUFBQVBRYkFBQUFJQUFBQUJ3QUFBQUNBQUFBQUFBQUFBQUFBQUFBQUFBZ0FBQmdMbkp6Y21NQUFBREFCUUFBQUVBQUFBQUdBQUFBSGdBQUFBQUFBQUFBQUFBQUFBQUFRQUFBUUM1eVpXeHZZd0FBREFBQUFBQmdBQUFBQWdBQUFDUUFBQUFBQUFBQUFBQUFBQUFBQUVBQUFFSUFBQUFBQUFBQUFBQUFBQUFBQUFBQTBEc0FBQUFBQUFCSUFBQUFBZ0FGQUlnbkFBQlFFd0FBQVFBQUFBd0FBQVlZSmdBQWNBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBMkFpZ1FBQUFLQWlnSUFBQUdLZ1lxQmlvR0toTXdCUURRQUFBQUFRQUFFWElCQUFCd0tCRUFBQXB5RXdBQWNDZ1NBQUFLY3hNQUFBb0tCbThVQUFBS0Fuc0NBQUFFYnhVQUFBcHlKd0FBY0c4V0FBQUtDd2R5TVFBQWNCZU5Bd0FBQVEwSkZnSjdCUUFBQkc4VkFBQUtvZ2x2RndBQUNpWUhja2tBQUhBWWpRTUFBQUVUQkJFRUZuSlJBQUJ3b2hFRUYzSnBBQUJ3b2hFRWJ4Y0FBQW9tQjI4WUFBQUtCbThVQUFBS0Fuc0hBQUFFYnhVQUFBcHljd0FBY0c4WkFBQUtEQWdzSlFoeWZ3QUFjQmVOQXdBQUFSTUZFUVVXQjI4YUFBQUtieHNBQUFxaUVRVnZGd0FBQ2lZb0hBQUFDaW9HS25vRExCTUNld0VBQUFRc0N3SjdBUUFBQkc4ZEFBQUtBZ01vSGdBQUNpb0FBQUFETUFRQUd3UUFBQUFBQUFBQ2N4OEFBQXA5QWdBQUJBSnpJQUFBQ24wREFBQUVBbk1nQUFBS2ZRUUFBQVFDY3g4QUFBcDlCUUFBQkFKeklBQUFDbjBHQUFBRUFuTWZBQUFLZlFjQUFBUUNjeUVBQUFwOUNBQUFCQUlvSWdBQUNnSjdBZ0FBQkI4V0h5WnpJd0FBQ204a0FBQUtBbnNDQUFBRWNvY0FBSEJ2SlFBQUNnSjdBZ0FBQkNEc0FBQUFIeFJ6SmdBQUNtOG5BQUFLQW5zQ0FBQUVGbThvQUFBS0Fuc0NBQUFFY3BrQUFIQnZLUUFBQ2dKN0F3QUFCQmR2S2dBQUNnSjdBd0FBQkI4VEh4WnpJd0FBQ204a0FBQUtBbnNEQUFBRWNxc0FBSEJ2SlFBQUNnSjdBd0FBQkI4M0h3MXpKZ0FBQ204bkFBQUtBbnNEQUFBRUYyOG9BQUFLQW5zREFBQUVjcmtBQUhCdktRQUFDZ0o3QXdBQUJBTCtCZ01BQUFaekt3QUFDbThzQUFBS0Fuc0VBQUFFRjI4cUFBQUtBbnNFQUFBRUh4TWZVWE1qQUFBS2J5UUFBQW9DZXdRQUFBUnl5d0FBY0c4bEFBQUtBbnNFQUFBRUh6VWZEWE1tQUFBS2J5Y0FBQW9DZXdRQUFBUVlieWdBQUFvQ2V3UUFBQVJ5MlFBQWNHOHBBQUFLQW5zRkFBQUVIeFlmWVhNakFBQUtieVFBQUFvQ2V3VUFBQVJ5NndBQWNHOGxBQUFLQW5zRkFBQUVJT3dBQUFBZkZITW1BQUFLYnljQUFBb0Nld1VBQUFRWmJ5Z0FBQW9DZXdVQUFBUnkvUUFBY0c4cEFBQUtBbnNHQUFBRUYyOHFBQUFLQW5zR0FBQUVIeE1naVFBQUFITWpBQUFLYnlRQUFBb0Nld1lBQUFSeUZRRUFjRzhsQUFBS0Fuc0dBQUFFSHlRZkRYTW1BQUFLYnljQUFBb0Nld1lBQUFRYWJ5Z0FBQW9DZXdZQUFBUnlJd0VBY0c4cEFBQUtBbnNHQUFBRUF2NEdCQUFBQm5NckFBQUtieXdBQUFvQ2V3Y0FBQVFmRmlDWkFBQUFjeU1BQUFwdkpBQUFDZ0o3QndBQUJISnpBQUJ3YnlVQUFBb0Nld2NBQUFRZzdBQUFBQjhVY3lZQUFBcHZKd0FBQ2dKN0J3QUFCQnR2S0FBQUNnSjdCd0FBQkhJdkFRQndieWtBQUFvQ2V3Y0FBQVFDL2dZR0FBQUdjeXNBQUFwdkxRQUFDZ0o3Q0FBQUJCOW1JTUFBQUFCekl3QUFDbThrQUFBS0Fuc0lBQUFFY2swQkFIQnZKUUFBQ2dKN0NBQUFCQjlMSHhkekpnQUFDbThuQUFBS0Fuc0lBQUFFSEc4b0FBQUtBbnNJQUFBRWNsMEJBSEJ2S1FBQUNnSjdDQUFBQkJkdkxnQUFDZ0o3Q0FBQUJBTCtCZ1VBQUFaekt3QUFDbThzQUFBS0FpSUFBTUJBSWdBQVVFRnpMd0FBQ2lnd0FBQUtBaGNvTVFBQUNnSWdIQUVBQUNEakFBQUFjeVlBQUFvb01nQUFDZ0lvTXdBQUNnSjdDQUFBQkc4MEFBQUtBaWd6QUFBS0Fuc0hBQUFFYnpRQUFBb0NLRE1BQUFvQ2V3WUFBQVJ2TkFBQUNnSW9Nd0FBQ2dKN0JRQUFCRzgwQUFBS0FpZ3pBQUFLQW5zRUFBQUVielFBQUFvQ0tETUFBQW9DZXdNQUFBUnZOQUFBQ2dJb013QUFDZ0o3QWdBQUJHODBBQUFLQW5KckFRQndLQ1VBQUFvQ2NuY0JBSEJ2S1FBQUNnSUMvZ1lDQUFBR2N5c0FBQW9vTlFBQUNnSVdLRFlBQUFvQ0tEY0FBQW9xR240SkFBQUVLbFp6Q2dBQUJpZzZBQUFLZEFNQUFBS0FDUUFBQkNvZUFpZzdBQUFLS2xvb1BRQUFDaFlvUGdBQUNuTUJBQUFHS0Q4QUFBb3FIZ0lvUVFBQUNpb0FFekFEQUMwQUFBQUNBQUFSZmdvQUFBUXRJSEtKQVFCdzBBVUFBQUlvUWdBQUNtOURBQUFLYzBRQUFBb0tCb0FLQUFBRWZnb0FBQVFxR240TEFBQUVLaDRDZ0FzQUFBUXF0QUFBQU03Szc3NEJBQUFBa1FBQUFHeFRlWE4wWlcwdVVtVnpiM1Z5WTJWekxsSmxjMjkxY21ObFVtVmhaR1Z5TENCdGMyTnZjbXhwWWl3Z1ZtVnljMmx2YmoweUxqQXVNQzR3TENCRGRXeDBkWEpsUFc1bGRYUnlZV3dzSUZCMVlteHBZMHRsZVZSdmEyVnVQV0kzTjJFMVl6VTJNVGt6TkdVd09Ea2pVM2x6ZEdWdExsSmxjMjkxY21ObGN5NVNkVzUwYVcxbFVtVnpiM1Z5WTJWVFpYUUNBQUFBQUFBQUFBQUFBQUJRUVVSUVFVUlF0QUFBQUxRQUFBRE95dSsrQVFBQUFKRUFBQUJzVTNsemRHVnRMbEpsYzI5MWNtTmxjeTVTWlhOdmRYSmpaVkpsWVdSbGNpd2diWE5qYjNKc2FXSXNJRlpsY25OcGIyNDlNaTR3TGpBdU1Dd2dRM1ZzZEhWeVpUMXVaWFYwY21Gc0xDQlFkV0pzYVdOTFpYbFViMnRsYmoxaU56ZGhOV00xTmpFNU16UmxNRGc1STFONWMzUmxiUzVTWlhOdmRYSmpaWE11VW5WdWRHbHRaVkpsYzI5MWNtTmxVMlYwQWdBQUFBQUFBQUFBQUFBQVVFRkVVRUZFVUxRQUFBQkNVMHBDQVFBQkFBQUFBQUFNQUFBQWRqSXVNQzQxTURjeU53QUFBQUFGQUd3QUFBQW9CZ0FBSTM0QUFKUUdBQUJZQ0FBQUkxTjBjbWx1WjNNQUFBQUE3QTRBQU9nQkFBQWpWVk1BMUJBQUFCQUFBQUFqUjFWSlJBQUFBT1FRQUFCc0FnQUFJMEpzYjJJQUFBQUFBQUFBQWdBQUFWY1ZvZ0VKQVFBQUFQb0JNd0FXQUFBQkFBQUFNd0FBQUFVQUFBQUxBQUFBRUFBQUFBd0FBQUJGQUFBQUZRQUFBQUlBQUFBQ0FBQUFBd0FBQUFRQUFBQUJBQUFBQlFBQUFBSUFBQUFBQUFvQUFRQUFBQUFBQmdDYUFJVUFDZ0M3QUtZQURnRGNBSjhBRGdEcEFKOEFDZ0JPQVRnQkJnQ0FBWVVBQmdDUkFZVUFCZ0M3QVlVQURnQUVBdk1CRGdBMUFpQUNEZ0N3QXA0Q0RnREhBcDRDRGdEa0FwNENEZ0FEQTU0Q0RnQWNBNTRDRGdBMUE1NENEZ0JRQTU0Q0RnQnJBNTRDRGdDakE0UUREZ0MzQTRRRERnREZBNTRDRGdEZUE1NENEZ0FPQlBzRFh3QWlCQUFBRGdCUkJERUVEZ0J4QkRFRURnQ1BCSjhBRGdDckJKOEFFZ0RTQkxrRUVnRGhCTGtFQmdEL0JJVUFCZ0JBQllVQURnQlJCWjhBRmdCNkJXc0ZGZ0NXQldzRkRnREhCWjhBQmdEdUJZVUFGZ0FWQm1zRkJnQWJCb1VBQmdCRUJvVUFmd0J6QmdBQURnQzJCakVFQ2dEcEJ0RUdDZ0FIQjZZQURnQWhCNThBRGdCdEIvc0REZ0NLQjU4QURnQ1BCNThBRGdDekI1NENDZ0RKQnpnQkNnRGlCemdCQUFBQUFBRUFBQUFBQUFFQUFRQUJBQkFBSndBdEFBVUFBUUFCQUFBQkVBQkdBRThBQ1FBSkFBa0FnQUVRQUhNQUxRQU5BQW9BREFBQUFCQUFld0JQQUEwQUNnQU5BQUVBV1FFVkFBRUFpQUVlQUFFQWx3RWlBQUVBbmdFaUFBRUFwUUVlQUFFQXJnRWlBQUVBdFFFZUFBRUF3Z0VtQUJFQXlnRXFBQkVBRkFJOEFCRUFRUUpBQUZBZ0FBQUFBSVlZNHdBS0FBRUFYaUFBQUFBQWdRRHpBQTRBQVFCZ0lBQUFBQUNCQVA0QURnQURBR0lnQUFBQUFJRUFDd0VPQUFVQVpDQUFBQUFBZ1FBWUFRNEFCd0JBSVFBQUFBQ0JBQ1lCRGdBSkFFSWhBQUFBQU1RQVpBRVpBQXNBWkNFQUFBQUFnUUJzQVFvQURBQ0xKUUFBQUFDV0NOb0JMZ0FNQUtnbEFBQUFBSVlZNHdBS0FBd0FraVVBQUFBQWtSZ0FCemdBREFDd0pRQUFBQUNSQU80Qk9BQU1BTWNsQUFBQUFJTVk0d0FLQUF3QTBDVUFBQUFBa3doUkFrUUFEQUFKSmdBQUFBQ1RDR1VDU1FBTUFCQW1BQUFBQUpNSWNRSk9BQXdBQUFBQkFJVUNBQUFDQUl3Q0FBQUJBSVVDQUFBQ0FJd0NBQUFCQUlVQ0FBQUNBSXdDQUFBQkFJVUNBQUFDQUl3Q0FBQUJBSVVDQUFBQ0FJd0NBQUFCQUk0Q0FBQUJBSmdDV1FEakFGNEFZUURqQUY0QWFRRGpBRjRBY1FEakFGNEFlUURqQUY0QWdRRGpBRjRBaVFEakFGNEFrUURqQUY0QW1RRGpBQmtBb1FEakFGNEFxUURqQUY0QXNRRGpBRjRBdVFEakFHTUF5UURqQUdrQTBRRGpBQW9BQ1FEakFBb0EyUUNiQkc0QTRRQ3lCSElBNlFEakFGNEE2UUR5QklJQStRQUhCWWNBOFFBUUJZc0E2UUFVQlpJQTZRQWJCUW9BOFFBcEJZc0E2UUF1QlljQUdRQTNCWWNBQVFGTUJUZ0FDUUZrQVFvQUNRQmtBUmtBTVFEakFBb0FPUURqQUFvQVFRRGpBQW9BK1FCZEJRb0FJd0FCQUU4QUFRQVdBQWNBRVFBSEFBOEFCUUJJQUFFQVNBQUJBQVVBRFFBR0FBSUFOd0FCQUF3QUFnQTJBQUVBQ2dBQ0FJUUFBUUFIQUFNQVpnQUJBQXNBQWdBakFBRUFDQUFJQURjQUFRQStBQUVBTUFBQkFBZ0FEd0FoQUFFQUJBQUNBRDhBQVFBREFBSUFCd0FCQUI4QUFRQVlBQUVBRXdBQkFHNEFBUUFIQUE4QUN3QURBRHNBQVFBS0FBSUFmZ0FCQUFvQUFnQitBQUVBWUFBQkFDTUFBUUFHQUFJQVlBQUJBQTRBQWdBNEFBRUFEZ0FGQUFnQUJBQU1BQVVBRHdBREFCRUFBd0FUQUFFQURBQUNBQThBQXdBTkFBSUFEd0FDQUE0QUFnQVdBQUlBRWdBRUFCTUFCd0FtQUFFQUVBQUNBQ01BQWdBV0FBSUFFUUFEQUJJQUFRQVlBQUlBR0FBQkFCSUFBZ0JxQUFFQUVRQUJBQk1BQWdBVEFBRUFFZ0FDQUJrQUFRQUpBQUlBQVFBQkFBa0FBUUFPQUFJQURBQUJBQUFBQUFBVEFBSUFFQUFDQUJFQUFnQVVBQUlBRVFBQkFCRUFBUUFVQUFFQUV3QUJBQXdBQVFBUEFBRUFGZ0FCQUMwQUJBQXNBQUVBR2dBQkFCc0FBUUFJQUFFQUFRQURBQXNBQVFBTEFBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFZQUFRQUJBQUVBQUFBQUFBQUFBQUFPQUFFQUNnQUJBQmdBQVFBQkFBRUFBQUFBQUFBQUFBQWJBQUVBQVFBSUFCd0FBUUFlQUFFQUd3QUJBQUFBQUFBZEFBRUFIZ0FCQUNBQUFRQWRBQUVBREFBQkFBUUFBUUFNQUFFQUN3QUJBQ1lBQVFBUEFBRUFCQUFCQUFzQUFRQTNBQUVBRGdBQkFBY0FBd0FVQUFFQUZnQUJBQ3NBQVFCQ0FBVUFDUUFCQUFzQUFRQWpBQUVBQ0FBQkFBb0FBUUFqQUFFQUJBQUJBQVlBQVFBakFBRUFCQUFCQUFZQUFRQWpBQUVBRVFBQkFCTUFBUUFBQUFBQUZnQUJBQWNBQVFBbUFBTUFCUUFDQUFBQUFBQUVBQUlBQmdBQ0FBc0FGUUFGQUFVQUFRQXNBQW9BQVFBVEFBSUFDd0FHQUFNQUFnQUlBQUlBQ1FBQ0FBZ0FBZ0FHQUFZQUJnQUdBQVlBQmdBR0FBWUFCZ0FHQUNJQUlnQWlBQ2tBS1FBcEFDb0FLZ0FxQUNzQUt3QXZBQzhBTHdBdkFDOEFMd0ExQURVQU5RQTlBRDBBUFFBOUFEMEFUUUJOQUUwQVRRQk5BRTBBVFFCTkFGd0FYQUJoQUdFQVlRQmhBR0VBWVFCaEFHRUFid0J2QUhJQWNnQnlBSE1BY3dCekFIUUFkQUIzQUhjQWR3QjNBSGNBZHdDQ0FJSUFoZ0NHQUlZQWhnQ0dBSVlBa0FDUUFKQUFrQUNRQUpBQWtBQUJnQUtBQTRBRWdBV0FCb0FIZ0FpQUNZQUtnQUdBQW9BRGdBR0FBb0FEZ0FHQUFvQURnQUdBQW9BQmdBS0FBNEFFZ0FXQUJvQUJnQUtBQTRBQmdBS0FBNEFFZ0FXQUFZQUNnQU9BQklBRmdBYUFCNEFJZ0FHQUFvQUJnQUtBQTRBRWdBV0FCb0FIZ0FpQUFZQUNnQUdBQW9BRGdBR0FBb0FEZ0FHQUFvQUJnQUtBQTRBRWdBV0FCb0FCZ0FLQUFZQUNnQU9BQklBRmdBYUFBWUFDZ0FPQUJJQUZnQWFBQjRBQ0FBVUFFQUFTQUE4QUVRQU9BQTBBREFBTEFDTUFKUUFuQUNNQUpRQW5BQ01BSlFBbkFBRUFMUUF2QURFQU5BQTNBQ1VBT2dBMUFFa0FTd0FqQUFRQVFBQkRBRVlBVFFCUEFGRUFDd0JVQUZZQU5BQTNBRjBBWHdCaEFGOEFaQUJuQUdrQWF3QTNBQ2NBQVFBdEFDTUFKUUFuQUNNQUpRQW5BQ1VBQ3dCNEFIb0FmQUIrQUlBQVFBQ0NBQWNBaGdDSUFJb0FBUUFIQUY4QWtRQ1RBSlVBYXdBM0FKa0Ftd0FnclNDdEJJMEVrUVNSLzUwQ2xTQ2QvNTMvblVpdC81MENsVWl0LzUwQ2xVaXQvNTBDbFVpdEFJbElyU2FkU0kwQ2hmK2RTSjFJclVpZC80OUlyUUtGU0ozL25RU1JKcTBtblVDZi81OENsUUtGU0owQ2hTYXRTSzFJclVpTi80OEVnVWlkRkowQ2xRU0JTSzBBaVVpdC81MENsVWl0LzUwQ2xmK3QvNDhDcFFTQlFKLy9uU0NkU0oxSXJRQ1BTSzBDaGYrUC81OEFuMGlOSnEwVXZSUzkvNzBFb2YrZFNJMFNBQUlBR1FBQkFBa0FBZ0FCQUFFQUNRQUJBQTRBQWdBTUFBRUFDd0FDQUJFQkVRRUFBUHNBK3dBQUFBQUFBQUFCQUFDQUFnQUFnQUFBQUFEOEFBOEJEQUFCQUE4QUFRQVdBQUVBTFFBRUFDd0FBUUFhQUFFQUd3QUJBQWdBQVFDUkFNOEEwUURTQU4wQTRRRGpBT2NBNlFEcUFPc0E3UUR1QU84QThBRHhBUE1BOUFEMkFQZ0ErZ0Q5QUJFQjBBRFFBTkFBM2dEaUFPUUE2QURvQU9nQTZBRG9BT2dBNkFEb0FQSUFFQUgxQVBjQStRRDdBUDRBQ0FBQkFCc0FBUUFCQUFrQUhBQUJBQjRBQVFBYkFBRUFIQUFCQUIwQUFRQWVBQUVBSUFBQkFLZ0FxUUFCQUFFQUJnQUJBQXdBQVFBTEFBRUFKZ0FCQUE4QUFRQUVBQUVBQ3dBQkFCUUFBUUFPQUFFQUJ3QURBQ1lBQXdBV0FBRUFLd0FCQUVJQUJRQUdBQ0lBS1FBcUFDc0FMd0ExQUQwQVRRQmNBR0VBYndCeUFITUFkQUIzQUlJQWhnQ1FBQUVBQmdBQkFDTUFBUUFSQUFFQUV3QUJBQlFBQVFBV0FBRUEvdjhBQUFZQkFnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUxWemRXY0xoc1FrNWNJQUNzcythNHdBQUFBVUFBQUFBTUFBQUFCQUFBQUtBQUFBQUFBQUlBd0FBQUFEd0FBQURnQUFBQUFBQUFBQUFBQUFBSUFBQUN3QkFBQUV3QUFBQWtFQUFBZkFBQUFDQUFBQUZBQWJ3QjNBR1VBY2dCVkFIQUFBQUJrUjNWcFpFRWdjM1J5YVc1bklFZFZTVVFnZFc1cGNYVmxJSFJ2SUhSb2FYTWdZMjl0Y0c5dVpXNTBMQ0IyWlhKemFXOXVMQ0JoYm1RZ2JHRnVaM1ZoWjJVdVJHbHlaV04wYjNKNVgwUnBjbVZqZEc5eWVWSmxjWFZwY21Wa0lHdGxlU0J2WmlCaElFUnBjbVZqZEc5eWVTQjBZV0pzWlNCeVpXTnZjbVF1SUZSb2FYTWdhWE1nWVdOMGRXRnNiSGtnWVNCd2NtOXdaWEowZVNCdVlXMWxJSGRvYjNObElIWmhiSFZsSUdOdmJuUmhhVzV6SUhSb1pTQmhZM1IxWVd3Z2NHRjBhQ3dnYzJWMElHVnBkR2hsY2lCaWVTQjBhR1VnUVhCd1UyVmhjbU5vSUdGamRHbHZiaUJ2Y2lCM2FYUm9JSFJvWlNCa1pXWmhkV3gwSUhObGRIUnBibWNnYjJKMFlXbHVaV1FnWm5KdmJTQjBhR1VnUkdseVpXTjBiM0o1SUhSaFlteGxMa0YwZEhKcFluVjBaWE5TWlcxdmRHVWdaWGhsWTNWMGFXOXVJRzl3ZEdsdmJpd2diMjVsSUc5bUlHbHljMFZ1ZFcxQklHTnZibVJwZEdsdmJtRnNJSE4wWVhSbGJXVnVkQ0IwYUdGMElIZHBiR3dnWkdsellXSnNaU0IwYUdseklHTnZiWEJ2Ym1WdWRDQnBaaUIwYUdVZ2MzQmxZMmxtYVdWa0lHTnZibVJwZEdsdmJpQmxkbUZzZFdGMFpYTWdkRzhnZEdobElDZFVjblZsSnlCemRHRjBaUzRnU1dZZ1lTQmpiMjF3YjI1bGJuUWdhWE1nWkdsellXSnNaV1FzSUdsMElIZHBiR3dnYm05MElHSmxJR2x1YzNSaGJHeGxaQ3dnY21WbllYSmtiR1Z6Y3lCdlppQjBhR1VnSjBGamRHbHZiaWNnYzNSaGRHVWdZWE56YjJOcFlYUmxaQ0IzYVhSb0lIUm9aU0JqYjIxd2IyNWxiblF1UzJWNVVHRjBhRVpwYkdVN1VtVm5hWE4wY25rN1QwUkNRMFJoZEdGVGIzVnlZMlZGYVhSb1pYSWdkR2hsSUhCeWFXMWhjbmtnYTJWNUlHbHVkRzhnZEdobElFWnBiR1VnZEdGaWJHVXNJRkpsWjJsemRISjVJSFJoWW14bExDQnZjaUJQUkVKRFJHRjBZVk52ZFhKalpTQjBZV0pzWlM0Z1ZHaHBjeUJsZUhSeVlXTjBJSEJoZEdnZ2FYTWdjM1J2Y21Wa0lIZG9aVzRnZEdobElHTnZiWEJ2Ym1WdWRDQnBjeUJwYm5OMFlXeHNaV1FzSUdGdVpDQnBjeUIxYzJWa0lIUnZJR1JsZEdWamRDQjBhR1VnY0hKbGMyVnVZMlVnYjJZZ2RHaGxJR052YlhCdmJtVnVkQ0JoYm1RZ2RHOGdjbVYwZFhKdUlIUm9aU0J3WVhSb0lIUnZJR2wwTGtOMWMzUnZiVUZqZEdsdmJsQnlhVzFoY25rZ2EyVjVMQ0J1WVcxbElHOW1JR0ZqZEdsdmJpd2dibTl5YldGc2JIa2dZWEJ3WldGeWN5QnBiaUJ6WlhGMVpXNWpaU0IwWVdKc1pTQjFibXhsYzNNZ2NISnBkbUYwWlNCMWMyVXVWR2hsSUc1MWJXVnlhV01nWTNWemRHOXRJR0ZqZEdsdmJpQjBlWEJsTENCamIyNXphWE4wYVc1bklHOW1JSE52ZFhKalpTQnNiMk5oZEdsdmJpd2dZMjlrWlNCMGVYQmxMQ0JsYm5SeWVTd2diM0IwYVc5dUlHWnNZV2R6TGxOdmRYSmpaVU4xYzNSdmJWTnZkWEpqWlZSb1pTQjBZV0pzWlNCeVpXWmxjbVZ1WTJVZ2IyWWdkR2hsSUhOdmRYSmpaU0J2WmlCMGFHVWdZMjlrWlM1VVlYSm5aWFJHYjNKdFlYUjBaV1JGZUdObFkzVjBhVzl1SUhCaGNtRnRaWFJsY2l3Z1pHVndaVzVrY3lCdmJpQjBhR1VnZEhsd1pTQnZaaUJqZFhOMGIyMGdZV04wYVc5dVJYaDBaVzVrWldSVWVYQmxRU0J1ZFcxbGNtbGpJR04xYzNSdmJTQmhZM1JwYjI0Z2RIbHdaU0IwYUdGMElHVjRkR1Z1WkhNZ1kyOWtaU0IwZVhCbElHOXlJRzl3ZEdsdmJpQm1iR0ZuY3lCdlppQjBhR1VnVkhsd1pTQmpiMngxYlc0dVZXNXBjWFZsSUdsa1pXNTBhV1pwWlhJZ1ptOXlJR1JwY21WamRHOXllU0JsYm5SeWVTd2djSEpwYldGeWVTQnJaWGt1SUVsbUlHRWdjSEp2Y0dWeWRIa2dZbmtnZEdocGN5QnVZVzFsSUdseklHUmxabWx1WldRc0lHbDBJR052Ym5SaGFXNXpJSFJvWlNCbWRXeHNJSEJoZEdnZ2RHOGdkR2hsSUdScGNtVmpkRzl5ZVM1RWFYSmxZM1J2Y25sZlVHRnlaVzUwVW1WbVpYSmxibU5sSUhSdklIUm9aU0JsYm5SeWVTQnBiaUIwYUdseklIUmhZbXhsSUhOd1pXTnBabmxwYm1jZ2RHaGxJR1JsWm1GMWJIUWdjR0Z5Wlc1MElHUnBjbVZqZEc5eWVTNGdRU0J5WldOdmNtUWdjR0Z5Wlc1MFpXUWdkRzhnYVhSelpXeG1JRzl5SUhkcGRHZ2dZU0JPZFd4c0lIQmhjbVZ1ZENCeVpYQnlaWE5sYm5SeklHRWdjbTl2ZENCdlppQjBhR1VnYVc1emRHRnNiQ0IwY21WbExrUmxabUYxYkhSRWFYSlVhR1VnWkdWbVlYVnNkQ0J6ZFdJdGNHRjBhQ0IxYm1SbGNpQndZWEpsYm5RbmN5QndZWFJvTGtabFlYUjFjbVZRY21sdFlYSjVJR3RsZVNCMWMyVmtJSFJ2SUdsa1pXNTBhV1o1SUdFZ2NHRnlkR2xqZFd4aGNpQm1aV0YwZFhKbElISmxZMjl5WkM1R1pXRjBkWEpsWDFCaGNtVnVkRTl3ZEdsdmJtRnNJR3RsZVNCdlppQmhJSEJoY21WdWRDQnlaV052Y21RZ2FXNGdkR2hsSUhOaGJXVWdkR0ZpYkdVdUlFbG1JSFJvWlNCd1lYSmxiblFnYVhNZ2JtOTBJSE5sYkdWamRHVmtMQ0IwYUdWdUlIUm9aU0J5WldOdmNtUWdkMmxzYkNCdWIzUWdZbVVnYVc1emRHRnNiR1ZrTGlCT2RXeHNJR2x1WkdsallYUmxjeUJoSUhKdmIzUWdhWFJsYlFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkVCNHdDb0FQa0FnQVd1QVBrQWpRVmVBQmtCNHdDb0FQa0Ftd1cxQVBrQXBBVnBBUGtBc1FWZUFQa0F1Z1VaQUNFQjR3QzhBUGtBMUFYQ0FQa0EzZ1hDQUNrQitRVVpBREVCNHdESkFEa0JMQWJQQURrQlVnYldBQWtBWkFhMUFQa0FoUWJkQUVrQkVBWGpBQWtBa2diQ0FQa0Ftd1laQVBrQXFBWUtBRkVCNHdBS0FGa0I0d0R1QUdFQkZBZE5BUkVBNHdBS0FHa0I0d0FLQUFFQk5BYzRBQUVCUndkV0FRRUJhUWRiQVhFQjR3QUtBQmtBNHdBS0FIa0JvUWVpQVhrQnZBZXJBVWtBNHdDeEFaRUI0d0MrQVM0QUd3RHNBUzRBZXdCS0FpNEFNd0R5QVM0QUN3RE9BUzRBRXdEc0FTNEFJd0RzQVM0QUt3RE9BUzRBVXdBS0FpNEFjd0JCQWk0QVN3RHNBUzRBT3dEc0FTNEFZd0EwQWk0QWF3REZBVWtBS3dMRkFXTUF5d0gwQUdNQXd3SHBBR2tBS3dMRkFhTUFBd0xwQUtNQXd3SHBBS01BeXdGaEFZQUI0d0hwQUprQXVRRURBQUVBQlFBQ0FBQUE1Z0V6QUFBQUJBSlVBQUFBZlFKWkFBSUFDUUFEQUFJQURnQUZBQUlBRHdBSEFBRUFFQUFIQUFTQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUMwQUFBQUNBQUFBQUFBQUFBQUFBQUFCQUlVQUFBQUFBQUlBQUFBQUFBQUFBQUFBQUFFQW53QUFBQUFBQWdBQUFBQUFBQUFBQUFBQUFRRFRBQUFBQUFBQ0FBQUFBQUFBQUFBQUFBQjVBTGtFQUFBQUFBSUFBQUFBQUFBQUFBQUFBSGtBYXdVQUFBQUFBQUFBQUFFQUFBRDNCd0FBdUFBQUFBRUFBQUFnQ0FBQUFBQUFBQUE4VFc5a2RXeGxQZ0JYYVc1a2IzZHpSbTl5YlhOQmNIQnNhV05oZEdsdmJqRXVaWGhsQUVadmNtMHhBRmRwYm1SdmQzTkdiM0p0YzBGd2NHeHBZMkYwYVc5dU1RQlRaWFIwYVc1bmN3QlhhVzVrYjNkelJtOXliWE5CY0hCc2FXTmhkR2x2YmpFdVVISnZjR1Z5ZEdsbGN3QlFjbTluY21GdEFGSmxjMjkxY21ObGN3QlRlWE4wWlcwdVYybHVaRzkzY3k1R2IzSnRjd0JHYjNKdEFGTjVjM1JsYlFCVGVYTjBaVzB1UTI5dVptbG5kWEpoZEdsdmJnQkJjSEJzYVdOaGRHbHZibE5sZEhScGJtZHpRbUZ6WlFCdGMyTnZjbXhwWWdCUFltcGxZM1FBTG1OMGIzSUFSWFpsYm5SQmNtZHpBRVp2Y20weFgweHZZV1FBYkdGaVpXd3hYME5zYVdOckFHeGhZbVZzTTE5RGJHbGphd0JpZFhSMGIyNHhYME5zYVdOckFHZHliM1Z3WDFSbGVIUkRhR0Z1WjJWa0FGTjVjM1JsYlM1RGIyMXdiMjVsYm5STmIyUmxiQUJKUTI5dWRHRnBibVZ5QUdOdmJYQnZibVZ1ZEhNQVJHbHpjRzl6WlFCSmJtbDBhV0ZzYVhwbFEyOXRjRzl1Wlc1MEFGUmxlSFJDYjNnQWRYTmxjbTVoYldVQVRHRmlaV3dBYkdGaVpXd3hBR3hoWW1Wc01nQndZWE56ZDI5eVpBQnNZV0psYkRNQVozSnZkWEFBUW5WMGRHOXVBR0oxZEhSdmJqRUFaR1ZtWVhWc2RFbHVjM1JoYm1ObEFHZGxkRjlFWldaaGRXeDBBRVJsWm1GMWJIUUFUV0ZwYmdCVGVYTjBaVzB1VW1WemIzVnlZMlZ6QUZKbGMyOTFjbU5sVFdGdVlXZGxjZ0J5WlhOdmRYSmpaVTFoYmdCVGVYTjBaVzB1UjJ4dlltRnNhWHBoZEdsdmJnQkRkV3gwZFhKbFNXNW1id0J5WlhOdmRYSmpaVU4xYkhSMWNtVUFaMlYwWDFKbGMyOTFjbU5sVFdGdVlXZGxjZ0JuWlhSZlEzVnNkSFZ5WlFCelpYUmZRM1ZzZEhWeVpRQkRkV3gwZFhKbEFITmxibVJsY2dCbEFHUnBjM0J2YzJsdVp3QjJZV3gxWlFCVGVYTjBaVzB1VW1WbWJHVmpkR2x2YmdCQmMzTmxiV0pzZVZScGRHeGxRWFIwY21saWRYUmxBRUZ6YzJWdFlteDVSR1Z6WTNKcGNIUnBiMjVCZEhSeWFXSjFkR1VBUVhOelpXMWliSGxEYjI1bWFXZDFjbUYwYVc5dVFYUjBjbWxpZFhSbEFFRnpjMlZ0WW14NVEyOXRjR0Z1ZVVGMGRISnBZblYwWlFCQmMzTmxiV0pzZVZCeWIyUjFZM1JCZEhSeWFXSjFkR1VBUVhOelpXMWliSGxEYjNCNWNtbG5hSFJCZEhSeWFXSjFkR1VBUVhOelpXMWliSGxVY21Ga1pXMWhjbXRCZEhSeWFXSjFkR1VBUVhOelpXMWliSGxEZFd4MGRYSmxRWFIwY21saWRYUmxBRk41YzNSbGJTNVNkVzUwYVcxbExrbHVkR1Z5YjNCVFpYSjJhV05sY3dCRGIyMVdhWE5wWW14bFFYUjBjbWxpZFhSbEFFZDFhV1JCZEhSeWFXSjFkR1VBUVhOelpXMWliSGxXWlhKemFXOXVRWFIwY21saWRYUmxBRUZ6YzJWdFlteDVSbWxzWlZabGNuTnBiMjVCZEhSeWFXSjFkR1VBVTNsemRHVnRMa1JwWVdkdWIzTjBhV056QUVSbFluVm5aMkZpYkdWQmRIUnlhV0oxZEdVQVJHVmlkV2RuYVc1blRXOWtaWE1BVTNsemRHVnRMbEoxYm5ScGJXVXVRMjl0Y0dsc1pYSlRaWEoyYVdObGN3QkRiMjF3YVd4aGRHbHZibEpsYkdGNFlYUnBiMjV6UVhSMGNtbGlkWFJsQUZKMWJuUnBiV1ZEYjIxd1lYUnBZbWxzYVhSNVFYUjBjbWxpZFhSbEFFVnVkbWx5YjI1dFpXNTBBR2RsZEY5TllXTm9hVzVsVG1GdFpRQlRkSEpwYm1jQVEyOXVZMkYwQUZONWMzUmxiUzVFYVhKbFkzUnZjbmxUWlhKMmFXTmxjd0JFYVhKbFkzUnZjbmxGYm5SeWVRQkVhWEpsWTNSdmNubEZiblJ5YVdWekFHZGxkRjlEYUdsc1pISmxiZ0JEYjI1MGNtOXNBR2RsZEY5VVpYaDBBRUZrWkFCSmJuWnZhMlVBUTI5dGJXbDBRMmhoYm1kbGN3QkdhVzVrQUdkbGRGOVFZWFJvQUZSdlUzUnlhVzVuQUVGd2NHeHBZMkYwYVc5dUFFVjRhWFFBU1VScGMzQnZjMkZpYkdVQVUzVnpjR1Z1WkV4aGVXOTFkQUJUZVhOMFpXMHVSSEpoZDJsdVp3QlFiMmx1ZEFCelpYUmZURzlqWVhScGIyNEFjMlYwWDA1aGJXVUFVMmw2WlFCelpYUmZVMmw2WlFCelpYUmZWR0ZpU1c1a1pYZ0FjMlYwWDFSbGVIUUFjMlYwWDBGMWRHOVRhWHBsQUVWMlpXNTBTR0Z1Wkd4bGNnQmhaR1JmUTJ4cFkyc0FZV1JrWDFSbGVIUkRhR0Z1WjJWa0FFSjFkSFJ2YmtKaGMyVUFjMlYwWDFWelpWWnBjM1ZoYkZOMGVXeGxRbUZqYTBOdmJHOXlBRk5wZW1WR0FFTnZiblJoYVc1bGNrTnZiblJ5YjJ3QWMyVjBYMEYxZEc5VFkyRnNaVVJwYldWdWMybHZibk1BUVhWMGIxTmpZV3hsVFc5a1pRQnpaWFJmUVhWMGIxTmpZV3hsVFc5a1pRQnpaWFJmUTJ4cFpXNTBVMmw2WlFCRGIyNTBjbTlzUTI5c2JHVmpkR2x2YmdCblpYUmZRMjl1ZEhKdmJITUFZV1JrWDB4dllXUUFVbVZ6ZFcxbFRHRjViM1YwQUZCbGNtWnZjbTFNWVhsdmRYUUFRMjl0Y0dsc1pYSkhaVzVsY21GMFpXUkJkSFJ5YVdKMWRHVUFVM2x6ZEdWdExrTnZaR1ZFYjIwdVEyOXRjR2xzWlhJQVIyVnVaWEpoZEdWa1EyOWtaVUYwZEhKcFluVjBaUUF1WTJOMGIzSUFVMlYwZEdsdVozTkNZWE5sQUZONWJtTm9jbTl1YVhwbFpBQlRWRUZVYUhKbFlXUkJkSFJ5YVdKMWRHVUFSVzVoWW14bFZtbHpkV0ZzVTNSNWJHVnpBRk5sZEVOdmJYQmhkR2xpYkdWVVpYaDBVbVZ1WkdWeWFXNW5SR1ZtWVhWc2RBQlNkVzRBUkdWaWRXZG5aWEpPYjI1VmMyVnlRMjlrWlVGMGRISnBZblYwWlFCVWVYQmxBRkoxYm5ScGJXVlVlWEJsU0dGdVpHeGxBRWRsZEZSNWNHVkdjbTl0U0dGdVpHeGxBRUZ6YzJWdFlteDVBR2RsZEY5QmMzTmxiV0pzZVFCRlpHbDBiM0pDY205M2MyRmliR1ZCZEhSeWFXSjFkR1VBUldScGRHOXlRbkp2ZDNOaFlteGxVM1JoZEdVQVYybHVaRzkzYzBadmNtMXpRWEJ3YkdsallYUnBiMjR4TGtadmNtMHhMbkpsYzI5MWNtTmxjd0JYYVc1a2IzZHpSbTl5YlhOQmNIQnNhV05oZEdsdmJqRXVVSEp2Y0dWeWRHbGxjeTVTWlhOdmRYSmpaWE11Y21WemIzVnlZMlZ6QUFBUlZ3QnBBRzRBVGdCVUFEb0FMd0F2QUFBVExBQmpBRzhBYlFCd0FIVUFkQUJsQUhJQUFBbDFBSE1BWlFCeUFBQVhVd0JsQUhRQVVBQmhBSE1BY3dCM0FHOEFjZ0JrQUFBSFVBQjFBSFFBQUJkRUFHVUFjd0JqQUhJQWFRQndBSFFBYVFCdkFHNEFBQWxWQUhNQVpRQnlBQUFMWndCeUFHOEFkUUJ3QUFBSFFRQmtBR1FBQUJGMUFITUFaUUJ5QUc0QVlRQnRBR1VBQUJGaUFHRUFZd0JyQUdRQWJ3QnZBSElBQUExc0FHRUFZZ0JsQUd3QU1RQUFFVlVBY3dCbEFISUFiZ0JoQUcwQVpRQUFEV3dBWVFCaUFHVUFiQUF5QUFBUlVBQmhBSE1BY3dCM0FHOEFjZ0JrQUFBUmNBQmhBSE1BY3dCM0FHOEFjZ0JrQUFBWGNBQmhBSE1BY3dCM0FHOEFjZ0JrQURFQU1nQXpBQUFOYkFCaEFHSUFaUUJzQURNQUFBdEhBSElBYndCMUFIQUFBQjFCQUdRQWJRQnBBRzRBYVFCekFIUUFjZ0JoQUhRQWJ3QnlBSE1BQUE5aUFIVUFkQUIwQUc4QWJnQXhBQUFOUXdCeUFHVUFZUUIwQUdVQUFBdEdBRzhBY2dCdEFERUFBQkZWQUhNQVpRQnlBQ0FBUVFCa0FHUUFBRnRYQUdrQWJnQmtBRzhBZHdCekFFWUFid0J5QUcwQWN3QkJBSEFBY0FCc0FHa0FZd0JoQUhRQWFRQnZBRzRBTVFBdUFGQUFjZ0J2QUhBQVpRQnlBSFFBYVFCbEFITUFMZ0JTQUdVQWN3QnZBSFVBY2dCakFHVUFjd0FBQUFBQS9lcmR0Tmp5clVXTzRkM0F6Y2VhSXdBSXQzcGNWaGswNElrRElBQUJCaUFDQVJ3U0VRTUdFaFVFSUFFQkFnTUdFaGtEQmhJZEF3WVNJUU1HRWd3RUFBQVNEQVFJQUJJTUF3QUFBUU1HRWlVREJoSXBCQUFBRWlVRUFBQVNLUVVBQVFFU0tRUUlBQklsQkFnQUVpa0VJQUVCRGdVZ0FRRVJZUVFnQVFFSUF3QUFEZ1lBQXc0T0RnNElzRDlmZnhIVkNqb0VJQUFTZVFNZ0FBNEdJQUlTZFE0T0JpQUNIQTRkSEE0SEJoSjFFblVTZFIwY0hSd2RIQVVnQWdFSUNBWWdBUUVSZ0lrR0lBRUJFWUNOQlNBQ0FSd1lCaUFCQVJLQWtRVWdBZ0VNREFZZ0FRRVJnSmtHSUFFQkVZQ2hCU0FBRW9DbEJTQUJBUko5QkFFQUFBQUZJQUlCRGc1WUFRQkxUV2xqY205emIyWjBMbFpwYzNWaGJGTjBkV1JwYnk1RlpHbDBiM0p6TGxObGRIUnBibWR6UkdWemFXZHVaWEl1VTJWMGRHbHVaM05UYVc1bmJHVkdhV3hsUjJWdVpYSmhkRzl5QnprdU1DNHdMakFBQUFnQUFSS0FzUktBc1FRQUFRRUNCUUFCQVJJRlFBRUFNMU41YzNSbGJTNVNaWE52ZFhKalpYTXVWRzl2YkhNdVUzUnliMjVuYkhsVWVYQmxaRkpsYzI5MWNtTmxRblZwYkdSbGNnY3lMakF1TUM0d0FBQUlBQUVTZ0wwUmdNRUZJQUFTZ01VSElBSUJEaEtBeFFRSEFSSWxCaUFCQVJHQXpRZ0JBQUlBQUFBQUFCMEJBQmhYYVc1a2IzZHpSbTl5YlhOQmNIQnNhV05oZEdsdmJqRUFBQVVCQUFBQUFCY0JBQkpEYjNCNWNtbG5hSFFnd3FrZ0lESXdNVFFBQUNrQkFDUTVaamszWm1SaU9TMWlNRFkxTFRRd1ltVXRZakZrWXkweU1EUmpPR1JrT1RBd056SUFBQXdCQUFjeExqQXVNQzR3QUFBSUFRQUlBQUFBQUFBZUFRQUJBRlFDRmxkeVlYQk9iMjVGZUdObGNIUnBiMjVVYUhKdmQzTUJBQUFBQUFBQUFOWmdYbE1BQUFBQUFnQUFBS2NBQUFEME9nQUE5QndBQUZKVFJGUEw1YWQ2TlIyclNZUmZTTjhrNXQrM0FRQUFBRU02WEZWelpYSnpYR0ZrWVcxY1JHOWpkVzFsYm5SelhGWnBjM1ZoYkNCVGRIVmthVzhnTWpBd09GeFFjbTlxWldOMGMxeFhhVzVrYjNkelJtOXliWE5CY0hCc2FXTmhkR2x2YmpGY1YybHVaRzkzYzBadmNtMXpRWEJ3YkdsallYUnBiMjR4WEc5aWFseFNaV3hsWVhObFhGZHBibVJ2ZDNOR2IzSnRjMEZ3Y0d4cFkyRjBhVzl1TVM1d1pHSUFBTVE3QUFBQUFBQUFBQUFBQU40N0FBQUFJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEUU93QUFBQUFBQUFBQUFBQUFBRjlEYjNKRmVHVk5ZV2x1QUcxelkyOXlaV1V1Wkd4c0FBQUFBQUQvSlFBZ1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUFFQUFBQUNBQUFJQVlBQUFBT0FBQWdBQUFBQUFBQUFBQUFBQUFBQUFBQVFBQkFBQUFVQUFBZ0FBQUFBQUFBQUFBQUFBQUFBQUFBUUFCQUFBQWFBQUFnQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVFBQUFBQUFrQUFBQUtCQUFBQXdBd0FBQUFBQUFBQUFBQURRUXdBQTZnRUFBQUFBQUFBQUFBQUFNQU0wQUFBQVZnQlRBRjhBVmdCRkFGSUFVd0JKQUU4QVRnQmZBRWtBVGdCR0FFOEFBQUFBQUwwRTcvNEFBQUVBQUFBQkFBQUFBQUFBQUFFQUFBQUFBRDhBQUFBQUFBQUFCQUFBQUFFQUFBQUFBQUFBQUFBQUFBQUFBQUJFQUFBQUFRQldBR0VBY2dCR0FHa0FiQUJsQUVrQWJnQm1BRzhBQUFBQUFDUUFCQUFBQUZRQWNnQmhBRzRBY3dCc0FHRUFkQUJwQUc4QWJnQUFBQUFBQUFDd0JKQUNBQUFCQUZNQWRBQnlBR2tBYmdCbkFFWUFhUUJzQUdVQVNRQnVBR1lBYndBQUFHd0NBQUFCQURBQU1BQXdBREFBTUFBMEFHSUFNQUFBQUZ3QUdRQUJBRVlBYVFCc0FHVUFSQUJsQUhNQVl3QnlBR2tBY0FCMEFHa0Fid0J1QUFBQUFBQlhBR2tBYmdCa0FHOEFkd0J6QUVZQWJ3QnlBRzBBY3dCQkFIQUFjQUJzQUdrQVl3QmhBSFFBYVFCdkFHNEFNUUFBQUFBQU1BQUlBQUVBUmdCcEFHd0FaUUJXQUdVQWNnQnpBR2tBYndCdUFBQUFBQUF4QUM0QU1BQXVBREFBTGdBd0FBQUFYQUFkQUFFQVNRQnVBSFFBWlFCeUFHNEFZUUJzQUU0QVlRQnRBR1VBQUFCWEFHa0FiZ0JrQUc4QWR3QnpBRVlBYndCeUFHMEFjd0JCQUhBQWNBQnNBR2tBWXdCaEFIUUFhUUJ2QUc0QU1RQXVBR1VBZUFCbEFBQUFBQUJJQUJJQUFRQk1BR1VBWndCaEFHd0FRd0J2QUhBQWVRQnlBR2tBWndCb0FIUUFBQUJEQUc4QWNBQjVBSElBYVFCbkFHZ0FkQUFnQUtrQUlBQWdBRElBTUFBeEFEUUFBQUJrQUIwQUFRQlBBSElBYVFCbkFHa0FiZ0JoQUd3QVJnQnBBR3dBWlFCdUFHRUFiUUJsQUFBQVZ3QnBBRzRBWkFCdkFIY0Fjd0JHQUc4QWNnQnRBSE1BUVFCd0FIQUFiQUJwQUdNQVlRQjBBR2tBYndCdUFERUFMZ0JsQUhnQVpRQUFBQUFBVkFBWkFBRUFVQUJ5QUc4QVpBQjFBR01BZEFCT0FHRUFiUUJsQUFBQUFBQlhBR2tBYmdCa0FHOEFkd0J6QUVZQWJ3QnlBRzBBY3dCQkFIQUFjQUJzQUdrQVl3QmhBSFFBYVFCdkFHNEFNUUFBQUFBQU5BQUlBQUVBVUFCeUFHOEFaQUIxQUdNQWRBQldBR1VBY2dCekFHa0Fid0J1QUFBQU1RQXVBREFBTGdBd0FDNEFNQUFBQURnQUNBQUJBRUVBY3dCekFHVUFiUUJpQUd3QWVRQWdBRllBWlFCeUFITUFhUUJ2QUc0QUFBQXhBQzRBTUFBdUFEQUFMZ0F3QUFBQTc3dS9QRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpVlZSR0xUZ2lJSE4wWVc1a1lXeHZibVU5SW5sbGN5SS9QZzBLUEdGemMyVnRZbXg1SUhodGJHNXpQU0oxY200NmMyTm9aVzFoY3kxdGFXTnliM052Wm5RdFkyOXRPbUZ6YlM1Mk1TSWdiV0Z1YVdabGMzUldaWEp6YVc5dVBTSXhMakFpUGcwS0lDQThZWE56WlcxaWJIbEpaR1Z1ZEdsMGVTQjJaWEp6YVc5dVBTSXhMakF1TUM0d0lpQnVZVzFsUFNKTmVVRndjR3hwWTJGMGFXOXVMbUZ3Y0NJdlBnMEtJQ0E4ZEhKMWMzUkpibVp2SUhodGJHNXpQU0oxY200NmMyTm9aVzFoY3kxdGFXTnliM052Wm5RdFkyOXRPbUZ6YlM1Mk1pSStEUW9nSUNBZ1BITmxZM1Z5YVhSNVBnMEtJQ0FnSUNBZ1BISmxjWFZsYzNSbFpGQnlhWFpwYkdWblpYTWdlRzFzYm5NOUluVnlianB6WTJobGJXRnpMVzFwWTNKdmMyOW1kQzFqYjIwNllYTnRMbll6SWo0TkNpQWdJQ0FnSUNBZ1BISmxjWFZsYzNSbFpFVjRaV04xZEdsdmJreGxkbVZzSUd4bGRtVnNQU0poYzBsdWRtOXJaWElpSUhWcFFXTmpaWE56UFNKbVlXeHpaU0l2UGcwS0lDQWdJQ0FnUEM5eVpYRjFaWE4wWldSUWNtbDJhV3hsWjJWelBnMEtJQ0FnSUR3dmMyVmpkWEpwZEhrK0RRb2dJRHd2ZEhKMWMzUkpibVp2UGcwS1BDOWhjM05sYldKc2VUNE5DZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFNQUFBREFBQUFQQTdnpaWFF1SUNCVWFHVWdaR1ZtWVhWc2RDQnBjeUFpUVV4TUlpNUJZM1JwYjI1UWNtOXdaWEowZVZSb1pTQndjbTl3WlhKMGVTQjBieUJ6WlhRZ2QyaGxiaUJoSUhCeWIyUjFZM1FnYVc0Z2RHaHBjeUJ6WlhRZ2FYTWdabTkxYm1RdVEyOXpkRWx1YVhScFlXeHBlbVZHYVd4bFEyOXpkRU52YzNSR2FXNWhiR2w2WlVsdWMzUmhiR3hXWVd4cFpHRjBaVWx1YzNSaGJHeEpibWwwYVdGc2FYcGxTVzV6ZEdGc2JFRmtiV2x1VUdGamEyRm5aVWx1YzNSaGJHeEdhV3hsYzBsdWMzUmhiR3hHYVc1aGJHbDZaVVY0WldOMWRHVkJZM1JwYjI1UWRXSnNhWE5vUm1WaGRIVnlaWE5RZFdKc2FYTm9VSEp2WkhWamRHSjZMbGR5WVhCd1pXUlRaWFIxY0ZCeWIyZHlZVzFpZWk1RGRYTjBiMjFCWTNScGIyNUViR3hpZWk1UWNtOWtkV04wUTI5dGNHOXVaVzUwZTBWRVJURXdSalpETFRNd1JqUXROREpEUVMxQ05VTTNMVUZFUWprd05VVTBOVUpHUTMxQ1dpNUpUbE5VUVV4TVJrOU1SRVZTY21Wbk9VTkJSVFUzUVVZM1FqbEdRalJGUmpJM01EWkdPVFZDTkVJNE0wSTBNVGxUWlhSUWNtOXdaWEowZVVadmNrUmxabVZ5Y21Wa1lub3VUVzlrYVdaNVVtVm5hWE4wY25sYlFsb3VWMUpCVUZCRlJGOUJVRkJKUkYxaWVpNVRkV0p6ZEZkeVlYQndaV1JCY21kMWJXVnVkSE5mVTNWaWMzUlhjbUZ3Y0dWa1FYSm5kVzFsYm5SelFEUmllaTVTZFc1WGNtRndjR1ZrVTJWMGRYQmJZbm91VTJWMGRYQlRhWHBsWFNBaVcxTnZkWEpqWlVScGNsMWNMaUlnVzBKYUxrbE9VMVJCVEV4ZlUxVkRRMFZUVTE5RFQwUkZVMTBnS2x0Q1dpNUdTVmhGUkY5SlRsTlVRVXhNWDBGU1IxVk5SVTVVVTExYlYxSkJVRkJGUkY5QlVrZFZUVVZPVkZOZFgwMXZaR2xtZVZKbFoybHpkSEo1UURSaWVpNVZibWx1YzNSaGJHeFhjbUZ3Y0dWa1gxVnVhVzV6ZEdGc2JGZHlZWEJ3WldSQU5GQnliMmR5WVcxR2FXeGxjMFp2YkdSbGNtSjRhblpwYkhjM2ZGdENXaTVEVDAxUVFVNVpUa0ZOUlYxVVFWSkhSVlJFU1ZJdVUyOTFjbU5sUkdseVVISnZaSFZqZEVabFlYUjFjbVZOWVdsdUlFWmxZWFIxY21WUWNtOWtkV04wU1dOdmJrWnBibVJTWld4aGRHVmtVSEp2WkhWamRITk1ZWFZ1WTJoRGIyNWthWFJwYjI1elZtRnNhV1JoZEdWUWNtOWtkV04wU1VSTmFXZHlZWFJsUm1WaGRIVnlaVk4wWVhSbGMxQnliMk5sYzNORGIyMXdiMjVsYm5SelZXNXdkV0pzYVhOb1JtVmhkSFZ5WlhOU1pXMXZkbVZTWldkcGMzUnllVlpoYkhWbGMxZHlhWFJsVW1WbmFYTjBjbmxXWVd4MVpYTlNaV2RwYzNSbGNsVnpaWEpTWldkcGMzUmxjbEJ5YjJSMVkzUlNaVzF2ZG1WRmVHbHpkR2x1WjFCeWIyUjFZM1J6VGs5VUlGSkZUVTlXUlNCK1BTSkJURXdpSUVGT1JDQk9UMVFnVlZCSFVrRkVSVkJTVDBSVlExUkRUMFJGVWtWTlQxWkZJSDQ5SUNKQlRFd2lJRUZPUkNCT1QxUWdWVkJIVWtGRVNVNUhVRkpQUkZWRFZFTlBSRVZPVDFRZ1YwbFlYMFJQVjA1SFVrRkVSVjlFUlZSRlExUkZSRVJ2ZDI1bmNtRmtaWE1nWVhKbElHNXZkQ0JoYkd4dmQyVmtMa0ZNVEZWVFJWSlRNVUZTVUU1UFVrVlFRVWxTUVZKUVRrOU5UMFJKUmxsQlVsQlFVazlFVlVOVVNVTlBUa0ZTVUVoRlRGQk1TVTVMYUhSMGNEb3ZMM2QzZHk1bGVHVnRjMmt1WTI5dFFWSlFWVkpNU1U1R1QwRkNUMVZVUVZKUVEwOU5UVVZPVkZOTlUwa2dWR1Z0Y0d4aGRHVXVRVkpRUTA5T1ZFRkRWRTE1SUdOdmJuUmhZM1FnYVc1bWIzSnRZWFJwYjI0dVFWSlFWVkpNVlZCRVFWUkZTVTVHVDAxNUlIVndaR0YwWlNCcGJtWnZjbTFoZEdsdmJpNUNXaTVXUlZKR1Fsb3VWMUpCVUZCRlJGOUJVRkJKUkhzMU5qWXlPRGt4TWkwNFJVUTBMVFE0UlVZdFFVTTFNaTFGUlRnelFURkNSa0pHTVRGOVgybHpNVUphTGtOUFRWQkJUbGxPUVUxRlJWaEZUVk5KTGtOUFRVSmFMa2xPVTFSQlRFeGZVMVZEUTBWVFUxOURUMFJGVXpCQ1dpNUdTVmhGUkY5SlRsTlVRVXhNWDBGU1IxVk5SVTVVVXk5VFNVeEZUbFFnUWxvdVZVbE9UMDVGWDBsT1UxUkJURXhmUVZKSFZVMUZUbFJUSUVKYUxsVkpRa0ZUU1VOZlNVNVRWRUZNVEY5QlVrZFZUVVZPVkZOQ1dpNVZTVkpGUkZWRFJVUmZTVTVUVkVGTVRGOUJVa2RWVFVWT1ZGTkNXaTVWU1VaVlRFeGZTVTVUVkVGTVRGOUJVa2RWVFVWT1ZGTkNXaTVHU1ZoRlJGOVZUa2xPVTFSQlRFeGZRVkpIVlUxRlRsUlRRbG91VlVsT1QwNUZYMVZPU1U1VFZFRk1URjlCVWtkVlRVVk9WRk5DV2k1VlNVSkJVMGxEWDFWT1NVNVRWRUZNVEY5QlVrZFZUVVZPVkZOQ1dpNVZTVkpGUkZWRFJVUmZWVTVKVGxOVVFVeE1YMEZTUjFWTlJVNVVVMEphTGxWSlJsVk1URjlWVGtsT1UxUkJURXhmUVZKSFZVMUZUbFJUWW5vdVUyVjBkWEJUYVhwbE1qTXlPVFl3VFdGdWRXWmhZM1IxY21WeVVISnZaSFZqZEVOdlpHVjdNamN4UWtKRFJVUXRSak0yUVMwMFJUaEZMVUUxTnpZdE9UUTFOVVl3UTBFd01VRTRmVkJ5YjJSMVkzUk1ZVzVuZFdGblpURXdNek5RY205a2RXTjBUbUZ0WlUxVFNTQlhjbUZ3Y0dWeUlGUmxiWEJzWVhSbFVISnZaSFZqZEZabGNuTnBiMjR4TGpBdU1DNHdlME5ETURNMVF6RTRMVEJHUXpjdE5EY3dPQzA0T0RBMkxVUTBRakE1TVVVMU9VRkJOMzFUWldOMWNtVkRkWE4wYjIxUWNtOXdaWEowYVdWelYwbFlYMFJQVjA1SFVrRkVSVjlFUlZSRlExUkZSRHRYU1ZoZlZWQkhVa0ZFUlY5RVJWUkZRMVJGUkZOUFJsUlhRVkpGWEZ0Q1dpNURUMDFRUVU1WlRrRk5SVjFjVFZOSklGZHlZWEJ3WlhKY1NXNXpkR0ZzYkdWa1hGdENXaTVYVWtGUVVFVkVYMEZRVUVsRVhVeHZaMjl1VlhObGNsdE1iMmR2Jw0KDQogICAgdHJ5IHsNCiAgICAgICAgW1N5c3RlbS5Db252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZyggJEJpbmFyeSApIHwgU2V0LUNvbnRlbnQgLVBhdGggJFBhdGggLUVuY29kaW5nIEJ5dGUNCiAgICAgICAgV3JpdGUtVmVyYm9zZSAiTVNJIHdyaXR0ZW4gb3V0IHRvICckUGF0aCciDQoNCiAgICAgICAgJE91dCA9IE5ldy1PYmplY3QgUFNPYmplY3QNCiAgICAgICAgJE91dCB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdPdXRwdXRQYXRoJyAkUGF0aA0KICAgICAgICAkT3V0LlBTT2JqZWN0LlR5cGVOYW1lcy5JbnNlcnQoMCwgJ1Bvd2VyVXAuVXNlckFkZE1TSScpDQogICAgICAgICRPdXQNCiAgICB9DQogICAgY2F0Y2ggew0KICAgICAgICBXcml0ZS1XYXJuaW5nICJFcnJvciB3aGlsZSB3cml0aW5nIHRvIGxvY2F0aW9uICckUGF0aCc6ICRfIg0KICAgIH0NCn0NCg0KDQpmdW5jdGlvbiBJbnZva2UtRXZlbnRWd3JCeXBhc3Mgew0KPCMNCi5TWU5PUFNJUw0KDQpCeXBhc3NlcyBVQUMgYnkgcGVyZm9ybWluZyBhbiBpbWFnZSBoaWphY2sgb24gdGhlIC5tc2MgZmlsZSBleHRlbnNpb24NCk9ubHkgdGVzdGVkIG9uIFdpbmRvd3MgNyBhbmQgV2luZG93cyAxMA0KDQpBdXRob3I6IE1hdHQgTmVsc29uIChAZW5pZ21hMHgzKSAgDQpMaWNlbnNlOiBCU0QgMy1DbGF1c2UgIA0KUmVxdWlyZWQgRGVwZW5kZW5jaWVzOiBOb25lDQoNCi5QQVJBTUVURVIgQ29tbWFuZA0KDQogU3BlY2lmaWVzIHRoZSBjb21tYW5kIHlvdSB3YW50IHRvIHJ1biBpbiBhIGhpZ2gtaW50ZWdyaXR5IGNvbnRleHQuIEZvciBleGFtcGxlLCB5b3UgY2FuIHBhc3MgaXQgcG93ZXJzaGVsbC5leGUgZm9sbG93ZWQgYnkgYW55IGVuY29kZWQgY29tbWFuZCAicG93ZXJzaGVsbCAtZW5jIDxlbmNvZGVkQ29tbWFuZD4iDQoNCi5FWEFNUExFDQoNCkludm9rZS1FdmVudFZ3ckJ5cGFzcyAtQ29tbWFuZCAiQzpcV2luZG93c1xTeXN0ZW0zMlxXaW5kb3dzUG93ZXJTaGVsbFx2MS4wXHBvd2Vyc2hlbGwuZXhlIC1lbmMgSWdCSkFITUFJQUJGQUd3QVpRQjJBR0VBZEFCbEFHUUFPZ0FnQUNRQUtBQW9BRnNBVXdCbEFHTUFkUUJ5QUdrQWRBQjVBQzRBVUFCeUFHa0FiZ0JqQUdrQWNBQmhBR3dBTGdCWEFHa0FiZ0JrQUc4QWR3QnpBRkFBY2dCcEFHNEFZd0JwQUhBQVlRQnNBRjBBV3dCVEFHVUFZd0IxQUhJQWFRQjBBSGtBTGdCUUFISUFhUUJ1QUdNQWFRQndBR0VBYkFBdUFGY0FhUUJ1QUdRQWJ3QjNBSE1BU1FCa0FHVUFiZ0IwQUdrQWRBQjVBRjBBT2dBNkFFY0FaUUIwQUVNQWRRQnlBSElBWlFCdUFIUUFLQUFwQUNrQUxnQkpBSE1BU1FCdUFGSUFid0JzQUdVQUtBQmJBRk1BWlFCakFIVUFjZ0JwQUhRQWVRQXVBRkFBY2dCcEFHNEFZd0JwQUhBQVlRQnNBQzRBVndCcEFHNEFaQUJ2QUhjQWN3QkNBSFVBYVFCc0FIUUFTUUJ1QUZJQWJ3QnNBR1VBWFFBbkFFRUFaQUJ0QUdrQWJnQnBBSE1BZEFCeUFHRUFkQUJ2QUhJQUp3QXBBQ2tBSUFBdEFDQUFKQUFvQUVjQVpRQjBBQzBBUkFCaEFIUUFaUUFwQUNJQUlBQjhBQ0FBVHdCMUFIUUFMUUJHQUdrQWJBQmxBQ0FBUXdBNkFGd0FWUUJCQUVNQVFnQjVBSEFBWVFCekFITUFWQUJsQUhNQWRBQXVBSFFBZUFCMEFDQUFMUUJCQUhBQWNBQmxBRzRBWkFBPSINCg0KVGhpcyB3aWxsIHdyaXRlIG91dCAiSXMgRWxldmF0ZWQ6IFRydWUiIHRvIEM6XFVBQ0J5cGFzc1Rlc3QuDQojPg0KDQogICAgW0NtZGxldEJpbmRpbmcoU3VwcG9ydHNTaG91bGRQcm9jZXNzID0gJFRydWUsIENvbmZpcm1JbXBhY3QgPSAnTWVkaXVtJyldDQogICAgUGFyYW0gKA0KICAgICAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeSA9ICRUcnVlKV0NCiAgICAgICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0NCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgJENvbW1hbmQsDQoNCiAgICAgICAgW1N3aXRjaF0NCiAgICAgICAgJEZvcmNlDQogICAgKQ0KICAgICRDb25zZW50UHJvbXB0ID0gKEdldC1JdGVtUHJvcGVydHkgSEtMTTpcU09GVFdBUkVcTWljcm9zb2Z0XFdpbmRvd3NcQ3VycmVudFZlcnNpb25cUG9saWNpZXNcU3lzdGVtKS5Db25zZW50UHJvbXB0QmVoYXZpb3JBZG1pbg0KICAgICRTZWN1cmVEZXNrdG9wUHJvbXB0ID0gKEdldC1JdGVtUHJvcGVydHkgSEtMTTpcU09GVFdBUkVcTWljcm9zb2Z0XFdpbmRvd3NcQ3VycmVudFZlcnNpb25cUG9saWNpZXNcU3lzdGVtKS5Qcm9tcHRPblNlY3VyZURlc2t0b3ANCg0KICAgIGlmKCRDb25zZW50UHJvbXB0IC1FcSAyIC1BbmQgJFNlY3VyZURlc2t0b3BQcm9tcHQgLUVxIDEpew0KICAgICAgICAiVUFDIGlzIHNldCB0byAnQWx3YXlzIE5vdGlmeScuIFRoaXMgbW9kdWxlIGRvZXMgbm90IGJ5cGFzcyB0aGlzIHNldHRpbmcuIg0KICAgICAgICBleGl0DQogICAgfQ0KICAgIGVsc2V7DQogICAgICAgICNCZWdpbiBFeGVjdXRpb24NCiAgICAgICAgJG1zY0NvbW1hbmRQYXRoID0gIkhLQ1U6XFNvZnR3YXJlXENsYXNzZXNcbXNjZmlsZVxzaGVsbFxvcGVuXGNvbW1hbmQiDQogICAgICAgICRDb21tYW5kID0gJHBzaG9tZSArICdcJyArICRDb21tYW5kDQogICAgICAgICNBZGQgaW4gdGhlIG5ldyByZWdpc3RyeSBlbnRyaWVzIHRvIGhpamFjayB0aGUgbXNjIGZpbGUNCiAgICAgICAgaWYgKCRGb3JjZSAtb3IgKChHZXQtSXRlbVByb3BlcnR5IC1QYXRoICRtc2NDb21tYW5kUGF0aCAtTmFtZSAnKGRlZmF1bHQpJyAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSkgLWVxICRudWxsKSl7DQogICAgICAgICAgICBOZXctSXRlbSAkbXNjQ29tbWFuZFBhdGggLUZvcmNlIHwNCiAgICAgICAgICAgICAgICBOZXctSXRlbVByb3BlcnR5IC1OYW1lICcoRGVmYXVsdCknIC1WYWx1ZSAkQ29tbWFuZCAtUHJvcGVydHlUeXBlIHN0cmluZyAtRm9yY2UgfCBPdXQtTnVsbA0KICAgICAgICB9ZWxzZXsNCiAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIktleSBhbHJlYWR5IGV4aXN0cywgY29uc2lkZXIgdXNpbmcgLUZvcmNlIg0KICAgICAgICAgICAgZXhpdA0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKFRlc3QtUGF0aCAkbXNjQ29tbWFuZFBhdGgpIHsNCiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkNyZWF0ZWQgcmVnaXN0cnkgZW50cmllcyB0byBoaWphY2sgdGhlIG1zYyBleHRlbnNpb24iDQogICAgICAgIH1lbHNlew0KICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiRmFpbGVkIHRvIGNyZWF0ZSByZWdpc3RyeSBrZXksIGV4aXRpbmciDQogICAgICAgICAgICBleGl0DQogICAgICAgIH0NCg0KICAgICAgICAkRXZlbnR2d3JQYXRoID0gSm9pbi1QYXRoIC1QYXRoIChbRW52aXJvbm1lbnRdOjpHZXRGb2xkZXJQYXRoKCdTeXN0ZW0nKSkgLUNoaWxkUGF0aCAnZXZlbnR2d3IuZXhlJw0KICAgICAgICAjU3RhcnQgRXZlbnQgVmlld2VyDQogICAgICAgIGlmICgkUFNDbWRsZXQuU2hvdWxkUHJvY2VzcygkRXZlbnR2d3JQYXRoLCAnU3RhcnQgcHJvY2VzcycpKSB7DQogICAgICAgICAgICAkUHJvY2VzcyA9IFN0YXJ0LVByb2Nlc3MgLUZpbGVQYXRoICRFdmVudHZ3clBhdGggLVBhc3NUaHJ1DQogICAgICAgICAgICBXcml0ZS1WZXJib3NlICJTdGFydGVkIGV2ZW50dndyLmV4ZSINCiAgICAgICAgfQ0KDQogICAgICAgICNTbGVlcCA1IHNlY29uZHMgDQogICAgICAgIFdyaXRlLVZlcmJvc2UgIlNsZWVwaW5nIDUgc2Vjb25kcyB0byB0cmlnZ2VyIHBheWxvYWQiDQogICAgICAgIGlmICgtbm90ICRQU0JvdW5kUGFyYW1ldGVyc1snV2hhdElmJ10pIHsNCiAgICAgICAgICAgIFN0YXJ0LVNsZWVwIC1TZWNvbmRzIDUNCiAgICAgICAgfQ0KDQogICAgICAgICRtc2NmaWxlUGF0aCA9ICJIS0NVOlxTb2Z0d2FyZVxDbGFzc2VzXG1zY2ZpbGUiDQoNCiAgICAgICAgaWYgKFRlc3QtUGF0aCAkbXNjZmlsZVBhdGgpIHsNCiAgICAgICAgICAgICNSZW1vdmUgdGhlIHJlZ2lzdHJ5IGVudHJ5DQogICAgICAgICAgICBSZW1vdmUtSXRlbSAkbXNjZmlsZVBhdGggLVJlY3Vyc2UgLUZvcmNlDQogICAgICAgICAgICBXcml0ZS1WZXJib3NlICJSZW1vdmVkIHJlZ2lzdHJ5IGVudHJpZXMiDQogICAgICAgIH0NCg0KICAgICAgICBpZihHZXQtUHJvY2VzcyAtSWQgJFByb2Nlc3MuSWQgLUVycm9yQWN0aW9uIFNpbGVudGx5Q29udGludWUpew0KICAgICAgICAgICAgU3RvcC1Qcm9jZXNzIC1JZCAkUHJvY2Vzcy5JZA0KICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiS2lsbGVkIHJ1bm5pbmcgZXZlbnR2d3IgcHJvY2VzcyINCiAgICAgICAgfQ0KICAgIH0NCn0NCg0KDQpmdW5jdGlvbiBJbnZva2UtUHJpdmVzY0F1ZGl0IHsNCjwjDQouU1lOT1BTSVMNCg0KRXhlY3V0ZXMgYWxsIGZ1bmN0aW9ucyB0aGF0IGNoZWNrIGZvciB2YXJpb3VzIFdpbmRvd3MgcHJpdmlsZWdlIGVzY2FsYXRpb24gb3Bwb3J0dW5pdGllcy4NCg0KQXV0aG9yOiBXaWxsIFNjaHJvZWRlciAoQGhhcm1qMHkpICANCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZSAgDQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IE5vbmUgIA0KDQouREVTQ1JJUFRJT04NCg0KRXhlY3V0ZXMgYWxsIGZ1bmN0aW9ucyB0aGF0IGNoZWNrIGZvciB2YXJpb3VzIFdpbmRvd3MgcHJpdmlsZWdlIGVzY2FsYXRpb24gb3Bwb3J0dW5pdGllcy4NCg0KLlBBUkFNRVRFUiBGb3JtYXQNCg0KU3RyaW5nLiBGb3JtYXQgdG8gZGVjaWRlIG9uIHdoYXQgaXMgcmV0dXJuZWQgZnJvbSB0aGUgY29tbWFuZCwgYW4gT2JqZWN0IEFycmF5LCBMaXN0LCBvciBIVE1MIFJlcG9ydC4NCg0KLlBBUkFNRVRFUiBIVE1MUmVwb3J0DQoNCkRFUFJFQ0FURUQgLSBTd2l0Y2guIFdyaXRlIGEgSFRNTCB2ZXJzaW9uIG9mIHRoZSByZXBvcnQgdG8gU1lTVEVNLnVzZXJuYW1lLmh0bWwuIA0KU3VwZXJzZWRlZCBieSB0aGUgRm9ybWF0IHBhcmFtZXRlci4NCg0KLkVYQU1QTEUNCg0KSW52b2tlLVByaXZlc2NBdWRpdA0KDQpSdW5zIGFsbCBlc2NhbGF0aW9uIGNoZWNrcyBhbmQgb3V0cHV0cyBhIHN0YXR1cyByZXBvcnQgZm9yIGRpc2NvdmVyZWQgaXNzdWVzLg0KDQouRVhBTVBMRQ0KDQpJbnZva2UtUHJpdmVzY0F1ZGl0IC1Gb3JtYXQgSFRNTA0KDQpSdW5zIGFsbCBlc2NhbGF0aW9uIGNoZWNrcyBhbmQgb3V0cHV0cyBhIHN0YXR1cyByZXBvcnQgdG8gU1lTVEVNLnVzZXJuYW1lLmh0bWwNCmRldGFpbGluZyBhbnkgZGlzY292ZXJlZCBpc3N1ZXMuDQoNCiM+DQoNCiAgICBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNTaG91bGRQcm9jZXNzJywgJycpXQ0KICAgIFtDbWRsZXRCaW5kaW5nKCldDQogICAgUGFyYW0oDQogICAgICAgIFtWYWxpZGF0ZVNldCgnT2JqZWN0JywnTGlzdCcsJ0hUTUwnKV0NCiAgICAgICAgW1N0cmluZ10NCiAgICAgICAgJEZvcm1hdCA9ICdPYmplY3QnLA0KICAgICAgICBbU3dpdGNoXQ0KICAgICAgICAkSFRNTFJlcG9ydA0KICAgICkNCg0KICAgIGlmKCRIVE1MUmVwb3J0KXsgJEZvcm1hdCA9ICdIVE1MJyB9DQoNCiAgICBpZiAoJEZvcm1hdCAtZXEgJ0hUTUwnKSB7DQogICAgICAgICRIdG1sUmVwb3J0RmlsZSA9ICIkKCRFbnY6Q29tcHV0ZXJOYW1lKS4kKCRFbnY6VXNlck5hbWUpLmh0bWwiDQogICAgICAgICRIZWFkZXIgPSAiPHN0eWxlPiINCiAgICAgICAgJEhlYWRlciA9ICRIZWFkZXIgKyAiQk9EWXtiYWNrZ3JvdW5kLWNvbG9yOnBlYWNocHVmZjt9Ig0KICAgICAgICAkSGVhZGVyID0gJEhlYWRlciArICJUQUJMRXtib3JkZXItd2lkdGg6IDFweDtib3JkZXItc3R5bGU6IHNvbGlkO2JvcmRlci1jb2xvcjogYmxhY2s7Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTt9Ig0KICAgICAgICAkSGVhZGVyID0gJEhlYWRlciArICJUSHtib3JkZXItd2lkdGg6IDFweDtwYWRkaW5nOiAwcHg7Ym9yZGVyLXN0eWxlOiBzb2xpZDtib3JkZXItY29sb3I6IGJsYWNrO2JhY2tncm91bmQtY29sb3I6dGhpc3RsZX0iDQogICAgICAgICRIZWFkZXIgPSAkSGVhZGVyICsgIlREe2JvcmRlci13aWR0aDogM3B4O3BhZGRpbmc6IDBweDtib3JkZXItc3R5bGU6IHNvbGlkO2JvcmRlci1jb2xvcjogYmxhY2s7YmFja2dyb3VuZC1jb2xvcjpwYWxlZ29sZGVucm9kfSINCiAgICAgICAgJEhlYWRlciA9ICRIZWFkZXIgKyAiPC9zdHlsZT4iDQogICAgICAgIENvbnZlcnRUby1IVE1MIC1IZWFkICRIZWFkZXIgLUJvZHkgIjxIMT5Qb3dlclVwIHJlcG9ydCBmb3IgJyQoJEVudjpDb21wdXRlck5hbWUpLiQoJEVudjpVc2VyTmFtZSknPC9IMT4iIHwgT3V0LUZpbGUgJEh0bWxSZXBvcnRGaWxlDQogICAgfQ0KDQogICAgV3JpdGUtVmVyYm9zZSAiUnVubmluZyBJbnZva2UtUHJpdmVzY0F1ZGl0Ig0KDQogICAgJENoZWNrcyA9IEAoDQogICAgICAgICMgSW5pdGlhbCBhZG1pbiBjaGVja3MNCiAgICAgICAgQHsNCiAgICAgICAgICAgIFR5cGUgICAgPSAnVXNlciBIYXMgTG9jYWwgQWRtaW4gUHJpdmlsZWdlcycNCiAgICAgICAgICAgIENvbW1hbmQgPSB7IGlmICgoW1NlY3VyaXR5LlByaW5jaXBhbC5XaW5kb3dzUHJpbmNpcGFsXSBbU2VjdXJpdHkuUHJpbmNpcGFsLldpbmRvd3NJZGVudGl0eV06OkdldEN1cnJlbnQoKSkuSXNJblJvbGUoW1NlY3VyaXR5LlByaW5jaXBhbC5XaW5kb3dzQnVpbHRJblJvbGVdICJBZG1pbmlzdHJhdG9yIikpeyBOZXctT2JqZWN0IFBTT2JqZWN0IH0gfQ0KICAgICAgICB9LA0KICAgICAgICBAew0KICAgICAgICAgICAgVHlwZSAgICAgICAgPSAnVXNlciBJbiBMb2NhbCBHcm91cCB3aXRoIEFkbWluIFByaXZpbGVnZXMnDQogICAgICAgICAgICBDb21tYW5kICAgICA9IHsgaWYgKChHZXQtUHJvY2Vzc1Rva2VuR3JvdXAgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmRQcm9wZXJ0eSBTSUQpIC1jb250YWlucyAnUy0xLTUtMzItNTQ0Jyl7IE5ldy1PYmplY3QgUFNPYmplY3QgfSB9DQogICAgICAgICAgICBBYnVzZVNjcmlwdCA9IHsgJ0ludm9rZS1XU2NyaXB0VUFDQnlwYXNzIC1Db21tYW5kICIuLi4iJyB9DQogICAgICAgIH0sDQogICAgICAgIEB7DQogICAgICAgICAgICBUeXBlICAgICAgID0gJ1Byb2Nlc3MgVG9rZW4gUHJpdmlsZWdlcycNCiAgICAgICAgICAgIENvbW1hbmQgICAgPSB7IEdldC1Qcm9jZXNzVG9rZW5Qcml2aWxlZ2UgLVNwZWNpYWwgfCBXaGVyZS1PYmplY3QgeyRffSB9DQogICAgICAgIH0sDQogICAgICAgICMgU2VydmljZSBjaGVja3MNCiAgICAgICAgQHsNCiAgICAgICAgICAgIFR5cGUgICAgPSAnVW5xdW90ZWQgU2VydmljZSBQYXRocycNCiAgICAgICAgICAgIENvbW1hbmQgPSB7IEdldC1VbnF1b3RlZFNlcnZpY2UgfQ0KICAgICAgICB9LA0KICAgICAgICBAew0KICAgICAgICAgICAgVHlwZSAgICA9ICdNb2RpZmlhYmxlIFNlcnZpY2UgRmlsZXMnDQogICAgICAgICAgICBDb21tYW5kID0geyBHZXQtTW9kaWZpYWJsZVNlcnZpY2VGaWxlIH0NCiAgICAgICAgfSwNCiAgICAgICAgQHsNCiAgICAgICAgICAgIFR5cGUgICAgPSAnTW9kaWZpYWJsZSBTZXJ2aWNlcycNCiAgICAgICAgICAgIENvbW1hbmQgPSB7IEdldC1Nb2RpZmlhYmxlU2VydmljZSB9DQogICAgICAgIH0sDQogICAgICAgICMgRExMIGhpamFja2luZw0KICAgICAgICBAew0KICAgICAgICAgICAgVHlwZSAgICAgICAgPSAnJVBBVEglIC5kbGwgSGlqYWNrcycNCiAgICAgICAgICAgIENvbW1hbmQgICAgID0geyBGaW5kLVBhdGhETExIaWphY2sgfQ0KICAgICAgICAgICAgQWJ1c2VTY3JpcHQgPSB7ICJXcml0ZS1IaWphY2tEbGwgLURsbFBhdGggJyQoJF8uTW9kaWZpYWJsZVBhdGgpXHdsYnNjdHJsLmRsbCciIH0NCiAgICAgICAgfSwNCiAgICAgICAgIyBSZWdpc3RyeSBjaGVja3MNCiAgICAgICAgQHsNCiAgICAgICAgICAgIFR5cGUgICAgICAgID0gJ0Fsd2F5c0luc3RhbGxFbGV2YXRlZCBSZWdpc3RyeSBLZXknDQogICAgICAgICAgICBDb21tYW5kICAgICA9IHsgaWYgKEdldC1SZWdpc3RyeUFsd2F5c0luc3RhbGxFbGV2YXRlZCl7IE5ldy1PYmplY3QgUFNPYmplY3QgfSB9DQogICAgICAgICAgICBBYnVzZVNjcmlwdCA9IHsgJ1dyaXRlLVVzZXJBZGRNU0knIH0NCiAgICAgICAgfSwNCiAgICAgICAgQHsNCiAgICAgICAgICAgIFR5cGUgICAgPSAnUmVnaXN0cnkgQXV0b2xvZ29ucycNCiAgICAgICAgICAgIENvbW1hbmQgPSB7IEdldC1SZWdpc3RyeUF1dG9Mb2dvbiB9DQogICAgICAgIH0sDQogICAgICAgIEB7DQogICAgICAgICAgICBUeXBlICAgID0gJ01vZGlmaWFibGUgUmVnaXN0cnkgQXV0b3J1bicNCiAgICAgICAgICAgIENvbW1hbmQgPSB7IEdldC1Nb2RpZmlhYmxlUmVnaXN0cnlBdXRvUnVuIH0NCiAgICAgICAgfSwNCiAgICAgICAgIyBPdGhlciBjaGVja3MNCiAgICAgICAgQHsNCiAgICAgICAgICAgIFR5cGUgICAgPSAnTW9kaWZpYWJsZSBTY2hlZHVsZWQgVGFzayBGaWxlcycNCiAgICAgICAgICAgIENvbW1hbmQgPSB7IEdldC1Nb2RpZmlhYmxlU2NoZWR1bGVkVGFza0ZpbGUgfQ0KICAgICAgICB9LA0KICAgICAgICBAew0KICAgICAgICAgICAgVHlwZSAgICA9ICdVbmF0dGVuZGVkIEluc3RhbGwgRmlsZXMnDQogICAgICAgICAgICBDb21tYW5kID0geyBHZXQtVW5hdHRlbmRlZEluc3RhbGxGaWxlIH0NCiAgICAgICAgfSwNCiAgICAgICAgQHsNCiAgICAgICAgICAgIFR5cGUgICAgPSAnRW5jcnlwdGVkIHdlYi5jb25maWcgU3RyaW5ncycNCiAgICAgICAgICAgIENvbW1hbmQgPSB7IEdldC1XZWJDb25maWcgfCBXaGVyZS1PYmplY3QgeyRffSB9DQogICAgICAgIH0sDQogICAgICAgIEB7DQogICAgICAgICAgICBUeXBlICAgID0gJ0VuY3J5cHRlZCBBcHBsaWNhdGlvbiBQb29sIFBhc3N3b3JkcycNCiAgICAgICAgICAgIENvbW1hbmQgPSB7IEdldC1BcHBsaWNhdGlvbkhvc3QgfCBXaGVyZS1PYmplY3QgeyRffSB9DQogICAgICAgIH0sDQogICAgICAgIEB7DQogICAgICAgICAgICBUeXBlICAgID0gJ01jQWZlZSBTaXRlTGlzdC54bWwgZmlsZXMnDQogICAgICAgICAgICBDb21tYW5kID0geyBHZXQtU2l0ZUxpc3RQYXNzd29yZCB8IFdoZXJlLU9iamVjdCB7JF99IH0NCiAgICAgICAgfSwNCiAgICAgICAgQHsNCiAgICAgICAgICAgIFR5cGUgICAgPSAnQ2FjaGVkIEdQUCBGaWxlcycNCiAgICAgICAgICAgIENvbW1hbmQgPSB7IEdldC1DYWNoZWRHUFBQYXNzd29yZCB8IFdoZXJlLU9iamVjdCB7JF99IH0NCiAgICAgICAgfQ0KICAgICkNCg0KICAgIEZvckVhY2goJENoZWNrIGluICRDaGVja3Mpew0KICAgICAgICBXcml0ZS1WZXJib3NlICJDaGVja2luZyBmb3IgJCgkQ2hlY2suVHlwZSkuLi4iDQogICAgICAgICRSZXN1bHRzID0gLiAkQ2hlY2suQ29tbWFuZA0KICAgICAgICAkUmVzdWx0cyB8IFdoZXJlLU9iamVjdCB7JF99IHwgRm9yRWFjaC1PYmplY3Qgew0KICAgICAgICAgICAgJF8gfCBBZGQtTWVtYmVyIE5vdGVwcm9wZXJ0eSAnQ2hlY2snICRDaGVjay5UeXBlDQogICAgICAgICAgICBpZiAoJENoZWNrLkFidXNlU2NyaXB0KXsNCiAgICAgICAgICAgICAgICAkXyB8IEFkZC1NZW1iZXIgTm90ZXByb3BlcnR5ICdBYnVzZUZ1bmN0aW9uJyAoLiAkQ2hlY2suQWJ1c2VTY3JpcHQpDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgc3dpdGNoKCRGb3JtYXQpew0KICAgICAgICAgICAgT2JqZWN0IHsgJFJlc3VsdHMgfQ0KICAgICAgICAgICAgTGlzdCAgIHsgImBuYG5bKl0gQ2hlY2tpbmcgZm9yICQoJENoZWNrLlR5cGUpLi4uIjsgJFJlc3VsdHMgfCBGb3JtYXQtTGlzdCB9DQogICAgICAgICAgICBIVE1MICAgeyAkUmVzdWx0cyB8IENvbnZlcnRUby1IVE1MIC1IZWFkICRIZWFkZXIgLUJvZHkgIjxIMj4kKCRDaGVjay5UeXBlKTwvSDI+IiB8IE91dC1GaWxlIC1BcHBlbmQgJEh0bWxSZXBvcnRGaWxlIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGlmICgkRm9ybWF0IC1lcSAnSFRNTCcpIHsNCiAgICAgICAgV3JpdGUtVmVyYm9zZSAiWypdIFJlcG9ydCB3cml0dGVuIHRvICckSHRtbFJlcG9ydEZpbGUnIGBuIg0KICAgIH0NCn0NCg0KDQojIFBTUmVmbGVjdCBzaWduYXR1cmUgc3BlY2lmaWNhdGlvbnMNCiRNb2R1bGUgPSBOZXctSW5NZW1vcnlNb2R1bGUgLU1vZHVsZU5hbWUgUG93ZXJVcE1vZHVsZQ0KIyBbRGlhZ25vc3RpY3MuQ29kZUFuYWx5c2lzLlN1cHByZXNzTWVzc2FnZUF0dHJpYnV0ZSgnUFNBdm9pZFVzaW5nUG9zaXRpb25hbFBhcmFtZXRlcnMnLCAnJywgU2NvcGU9J0Z1bmN0aW9uJyldDQoNCiRGdW5jdGlvbkRlZmluaXRpb25zID0gQCgNCiAgICAoZnVuYyBrZXJuZWwzMiBHZXRDdXJyZW50UHJvY2VzcyAoW0ludFB0cl0pIEAoKSksDQogICAgKGZ1bmMga2VybmVsMzIgT3BlblByb2Nlc3MgKFtJbnRQdHJdKSBAKFtVSW50MzJdLCBbQm9vbF0sIFtVSW50MzJdKSAtU2V0TGFzdEVycm9yKSwNCiAgICAoZnVuYyBrZXJuZWwzMiBDbG9zZUhhbmRsZSAoW0Jvb2xdKSBAKFtJbnRQdHJdKSAtU2V0TGFzdEVycm9yKSwNCiAgICAoZnVuYyBhZHZhcGkzMiBPcGVuUHJvY2Vzc1Rva2VuIChbQm9vbF0pIEAoW0ludFB0cl0sIFtVSW50MzJdLCBbSW50UHRyXS5NYWtlQnlSZWZUeXBlKCkpIC1TZXRMYXN0RXJyb3IpDQogICAgKGZ1bmMgYWR2YXBpMzIgR2V0VG9rZW5JbmZvcm1hdGlvbiAoW0Jvb2xdKSBAKFtJbnRQdHJdLCBbVUludDMyXSwgW0ludFB0cl0sIFtVSW50MzJdLCBbVUludDMyXS5NYWtlQnlSZWZUeXBlKCkpIC1TZXRMYXN0RXJyb3IpLA0KICAgIChmdW5jIGFkdmFwaTMyIENvbnZlcnRTaWRUb1N0cmluZ1NpZCAoW0ludF0pIEAoW0ludFB0cl0sIFtTdHJpbmddLk1ha2VCeVJlZlR5cGUoKSkgLVNldExhc3RFcnJvciksDQogICAgKGZ1bmMgYWR2YXBpMzIgTG9va3VwUHJpdmlsZWdlTmFtZSAoW0ludF0pIEAoW0ludFB0cl0sIFtJbnRQdHJdLCBbU3RyaW5nXS5NYWtlQnlSZWZUeXBlKCksIFtJbnQzMl0uTWFrZUJ5UmVmVHlwZSgpKSAtU2V0TGFzdEVycm9yKSwNCiAgICAoZnVuYyBhZHZhcGkzMiBRdWVyeVNlcnZpY2VPYmplY3RTZWN1cml0eSAoW0Jvb2xdKSBAKFtJbnRQdHJdLCBbU2VjdXJpdHkuQWNjZXNzQ29udHJvbC5TZWN1cml0eUluZm9zXSwgW0J5dGVbXV0sIFtVSW50MzJdLCBbVUludDMyXS5NYWtlQnlSZWZUeXBlKCkpIC1TZXRMYXN0RXJyb3IpLA0KICAgIChmdW5jIGFkdmFwaTMyIENoYW5nZVNlcnZpY2VDb25maWcgKFtCb29sXSkgQChbSW50UHRyXSwgW1VJbnQzMl0sIFtVSW50MzJdLCBbVUludDMyXSwgW1N0cmluZ10sIFtJbnRQdHJdLCBbSW50UHRyXSwgW0ludFB0cl0sIFtJbnRQdHJdLCBbSW50UHRyXSwgW0ludFB0cl0pIC1TZXRMYXN0RXJyb3IgLUNoYXJzZXQgVW5pY29kZSksDQogICAgKGZ1bmMgYWR2YXBpMzIgQ2xvc2VTZXJ2aWNlSGFuZGxlIChbQm9vbF0pIEAoW0ludFB0cl0pIC1TZXRMYXN0RXJyb3IpLA0KICAgIChmdW5jIG50ZGxsIFJ0bEFkanVzdFByaXZpbGVnZSAoW1VJbnQzMl0pIEAoW0ludDMyXSwgW0Jvb2xdLCBbQm9vbF0sIFtJbnQzMl0uTWFrZUJ5UmVmVHlwZSgpKSkNCikNCg0KIyBodHRwczovL3JvaG5zcG93ZXJzaGVsbGJsb2cud29yZHByZXNzLmNvbS8yMDEzLzAzLzE5L3ZpZXdpbmctc2VydmljZS1hY2xzLw0KJFNlcnZpY2VBY2Nlc3NSaWdodHMgPSBwc2VudW0gJE1vZHVsZSBQb3dlclVwLlNlcnZpY2VBY2Nlc3NSaWdodHMgVUludDMyIEB7DQogICAgUXVlcnlDb25maWcgICAgICAgICAgICAgPSAgICcweDAwMDAwMDAxJw0KICAgIENoYW5nZUNvbmZpZyAgICAgICAgICAgID0gICAnMHgwMDAwMDAwMicNCiAgICBRdWVyeVN0YXR1cyAgICAgICAgICAgICA9ICAgJzB4MDAwMDAwMDQnDQogICAgRW51bWVyYXRlRGVwZW5kZW50cyAgICAgPSAgICcweDAwMDAwMDA4Jw0KICAgIFN0YXJ0ICAgICAgICAgICAgICAgICAgID0gICAnMHgwMDAwMDAxMCcNCiAgICBTdG9wICAgICAgICAgICAgICAgICAgICA9ICAgJzB4MDAwMDAwMjAnDQogICAgUGF1c2VDb250aW51ZSAgICAgICAgICAgPSAgICcweDAwMDAwMDQwJw0KICAgIEludGVycm9nYXRlICAgICAgICAgICAgID0gICAnMHgwMDAwMDA4MCcNCiAgICBVc2VyRGVmaW5lZENvbnRyb2wgICAgICA9ICAgJzB4MDAwMDAxMDAnDQogICAgRGVsZXRlICAgICAgICAgICAgICAgICAgPSAgICcweDAwMDEwMDAwJw0KICAgIFJlYWRDb250cm9sICAgICAgICAgICAgID0gICAnMHgwMDAyMDAwMCcNCiAgICBXcml0ZURhYyAgICAgICAgICAgICAgICA9ICAgJzB4MDAwNDAwMDAnDQogICAgV3JpdGVPd25lciAgICAgICAgICAgICAgPSAgICcweDAwMDgwMDAwJw0KICAgIFN5bmNocm9uaXplICAgICAgICAgICAgID0gICAnMHgwMDEwMDAwMCcNCiAgICBBY2Nlc3NTeXN0ZW1TZWN1cml0eSAgICA9ICAgJzB4MDEwMDAwMDAnDQogICAgR2VuZXJpY0FsbCAgICAgICAgICAgICAgPSAgICcweDEwMDAwMDAwJw0KICAgIEdlbmVyaWNFeGVjdXRlICAgICAgICAgID0gICAnMHgyMDAwMDAwMCcNCiAgICBHZW5lcmljV3JpdGUgICAgICAgICAgICA9ICAgJzB4NDAwMDAwMDAnDQogICAgR2VuZXJpY1JlYWQgICAgICAgICAgICAgPSAgICcweDgwMDAwMDAwJw0KICAgIEFsbEFjY2VzcyAgICAgICAgICAgICAgID0gICAnMHgwMDBGMDFGRicNCn0gLUJpdGZpZWxkDQoNCiRTaWRBdHRyaWJ1dGVzID0gcHNlbnVtICRNb2R1bGUgUG93ZXJVcC5TaWRBdHRyaWJ1dGVzIFVJbnQzMiBAew0KICAgIFNFX0dST1VQX01BTkRBVE9SWSAgICAgICAgICAgICAgPSAgICcweDAwMDAwMDAxJw0KICAgIFNFX0dST1VQX0VOQUJMRURfQllfREVGQVVMVCAgICAgPSAgICcweDAwMDAwMDAyJw0KICAgIFNFX0dST1VQX0VOQUJMRUQgICAgICAgICAgICAgICAgPSAgICcweDAwMDAwMDA0Jw0KICAgIFNFX0dST1VQX09XTkVSICAgICAgICAgICAgICAgICAgPSAgICcweDAwMDAwMDA4Jw0KICAgIFNFX0dST1VQX1VTRV9GT1JfREVOWV9PTkxZICAgICAgPSAgICcweDAwMDAwMDEwJw0KICAgIFNFX0dST1VQX0lOVEVHUklUWSAgICAgICAgICAgICAgPSAgICcweDAwMDAwMDIwJw0KICAgIFNFX0dST1VQX1JFU09VUkNFICAgICAgICAgICAgICAgPSAgICcweDIwMDAwMDAwJw0KICAgIFNFX0dST1VQX0lOVEVHUklUWV9FTkFCTEVEICAgICAgPSAgICcweEMwMDAwMDAwJw0KfSAtQml0ZmllbGQNCg0KJEx1aWRBdHRyaWJ1dGVzID0gcHNlbnVtICRNb2R1bGUgUG93ZXJVcC5MdWlkQXR0cmlidXRlcyBVSW50MzIgQHsNCiAgICBESVNBQkxFRCAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICAgJzB4MDAwMDAwMDAnDQogICAgU0VfUFJJVklMRUdFX0VOQUJMRURfQllfREVGQVVMVCAgICAgPSAgICcweDAwMDAwMDAxJw0KICAgIFNFX1BSSVZJTEVHRV9FTkFCTEVEICAgICAgICAgICAgICAgID0gICAnMHgwMDAwMDAwMicNCiAgICBTRV9QUklWSUxFR0VfUkVNT1ZFRCAgICAgICAgICAgICAgICA9ICAgJzB4MDAwMDAwMDQnDQogICAgU0VfUFJJVklMRUdFX1VTRURfRk9SX0FDQ0VTUyAgICAgICAgPSAgICcweDgwMDAwMDAwJw0KfSAtQml0ZmllbGQNCg0KJFNlY3VyaXR5RW50aXR5ID0gcHNlbnVtICRNb2R1bGUgUG93ZXJVcC5TZWN1cml0eUVudGl0eSBVSW50MzIgQHsNCiAgICBTZUNyZWF0ZVRva2VuUHJpdmlsZWdlICAgICAgICAgICAgICA9ICAgMQ0KICAgIFNlQXNzaWduUHJpbWFyeVRva2VuUHJpdmlsZWdlICAgICAgID0gICAyDQogICAgU2VMb2NrTWVtb3J5UHJpdmlsZWdlICAgICAgICAgICAgICAgPSAgIDMNCiAgICBTZUluY3JlYXNlUXVvdGFQcml2aWxlZ2UgICAgICAgICAgICA9ICAgNA0KICAgIFNlVW5zb2xpY2l0ZWRJbnB1dFByaXZpbGVnZSAgICAgICAgID0gICA1DQogICAgU2VNYWNoaW5lQWNjb3VudFByaXZpbGVnZSAgICAgICAgICAgPSAgIDYNCiAgICBTZVRjYlByaXZpbGVnZSAgICAgICAgICAgICAgICAgICAgICA9ICAgNw0KICAgIFNlU2VjdXJpdHlQcml2aWxlZ2UgICAgICAgICAgICAgICAgID0gICA4DQogICAgU2VUYWtlT3duZXJzaGlwUHJpdmlsZWdlICAgICAgICAgICAgPSAgIDkNCiAgICBTZUxvYWREcml2ZXJQcml2aWxlZ2UgICAgICAgICAgICAgICA9ICAgMTANCiAgICBTZVN5c3RlbVByb2ZpbGVQcml2aWxlZ2UgICAgICAgICAgICA9ICAgMTENCiAgICBTZVN5c3RlbXRpbWVQcml2aWxlZ2UgICAgICAgICAgICAgICA9ICAgMTINCiAgICBTZVByb2ZpbGVTaW5nbGVQcm9jZXNzUHJpdmlsZWdlICAgICA9ICAgMTMNCiAgICBTZUluY3JlYXNlQmFzZVByaW9yaXR5UHJpdmlsZWdlICAgICA9ICAgMTQNCiAgICBTZUNyZWF0ZVBhZ2VmaWxlUHJpdmlsZWdlICAgICAgICAgICA9ICAgMTUNCiAgICBTZUNyZWF0ZVBlcm1hbmVudFByaXZpbGVnZSAgICAgICAgICA9ICAgMTYNCiAgICBTZUJhY2t1cFByaXZpbGVnZSAgICAgICAgICAgICAgICAgICA9ICAgMTcNCiAgICBTZVJlc3RvcmVQcml2aWxlZ2UgICAgICAgICAgICAgICAgICA9ICAgMTgNCiAgICBTZVNodXRkb3duUHJpdmlsZWdlICAgICAgICAgICAgICAgICA9ICAgMTkNCiAgICBTZURlYnVnUHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICA9ICAgMjANCiAgICBTZUF1ZGl0UHJpdmlsZWdlICAgICAgICAgICAgICAgICAgICA9ICAgMjENCiAgICBTZVN5c3RlbUVudmlyb25tZW50UHJpdmlsZWdlICAgICAgICA9ICAgMjINCiAgICBTZUNoYW5nZU5vdGlmeVByaXZpbGVnZSAgICAgICAgICAgICA9ICAgMjMNCiAgICBTZVJlbW90ZVNodXRkb3duUHJpdmlsZWdlICAgICAgICAgICA9ICAgMjQNCiAgICBTZVVuZG9ja1ByaXZpbGVnZSAgICAgICAgICAgICAgICAgICA9ICAgMjUNCiAgICBTZVN5bmNBZ2VudFByaXZpbGVnZSAgICAgICAgICAgICAgICA9ICAgMjYNCiAgICBTZUVuYWJsZURlbGVnYXRpb25Qcml2aWxlZ2UgICAgICAgICA9ICAgMjcNCiAgICBTZU1hbmFnZVZvbHVtZVByaXZpbGVnZSAgICAgICAgICAgICA9ICAgMjgNCiAgICBTZUltcGVyc29uYXRlUHJpdmlsZWdlICAgICAgICAgICAgICA9ICAgMjkNCiAgICBTZUNyZWF0ZUdsb2JhbFByaXZpbGVnZSAgICAgICAgICAgICA9ICAgMzANCiAgICBTZVRydXN0ZWRDcmVkTWFuQWNjZXNzUHJpdmlsZWdlICAgICA9ICAgMzENCiAgICBTZVJlbGFiZWxQcml2aWxlZ2UgICAgICAgICAgICAgICAgICA9ICAgMzINCiAgICBTZUluY3JlYXNlV29ya2luZ1NldFByaXZpbGVnZSAgICAgICA9ICAgMzMNCiAgICBTZVRpbWVab25lUHJpdmlsZWdlICAgICAgICAgICAgICAgICA9ICAgMzQNCiAgICBTZUNyZWF0ZVN5bWJvbGljTGlua1ByaXZpbGVnZSAgICAgICA9ICAgMzUNCn0NCg0KJFNJRF9BTkRfQVRUUklCVVRFUyA9IHN0cnVjdCAkTW9kdWxlIFBvd2VyVXAuU2lkQW5kQXR0cmlidXRlcyBAew0KICAgIFNpZCAgICAgICAgID0gICBmaWVsZCAwIEludFB0cg0KICAgIEF0dHJpYnV0ZXMgID0gICBmaWVsZCAxIFVJbnQzMg0KfQ0KDQokVE9LRU5fVFlQRV9FTlVNID0gcHNlbnVtICRNb2R1bGUgUG93ZXJVcC5Ub2tlblR5cGVFbnVtIFVJbnQzMiBAew0KICAgIFByaW1hcnkgICAgICAgICA9IDENCiAgICBJbXBlcnNvbmF0aW9uICAgPSAyDQp9DQoNCiRUT0tFTl9UWVBFID0gc3RydWN0ICRNb2R1bGUgUG93ZXJVcC5Ub2tlblR5cGUgQHsNCiAgICBUeXBlICA9IGZpZWxkIDAgJFRPS0VOX1RZUEVfRU5VTQ0KfQ0KDQokU0VDVVJJVFlfSU1QRVJTT05BVElPTl9MRVZFTF9FTlVNID0gcHNlbnVtICRNb2R1bGUgUG93ZXJVcC5JbXBlcnNvbmF0aW9uTGV2ZWxFbnVtIFVJbnQzMiBAew0KICAgIEFub255bW91cyAgICAgICAgID0gICAwDQogICAgSWRlbnRpZmljYXRpb24gICAgPSAgIDENCiAgICBJbXBlcnNvbmF0aW9uICAgICA9ICAgMg0KICAgIERlbGVnYXRpb24gICAgICAgID0gICAzDQp9DQoNCiRJTVBFUlNPTkFUSU9OX0xFVkVMID0gc3RydWN0ICRNb2R1bGUgUG93ZXJVcC5JbXBlcnNvbmF0aW9uTGV2ZWwgQHsNCiAgICBJbXBlcnNvbmF0aW9uTGV2ZWwgID0gZmllbGQgMCAkU0VDVVJJVFlfSU1QRVJTT05BVElPTl9MRVZFTF9FTlVNDQp9DQoNCiRUT0tFTl9HUk9VUFMgPSBzdHJ1Y3QgJE1vZHVsZSBQb3dlclVwLlRva2VuR3JvdXBzIEB7DQogICAgR3JvdXBDb3VudCAgPSBmaWVsZCAwIFVJbnQzMg0KICAgIEdyb3VwcyAgICAgID0gZmllbGQgMSAkU0lEX0FORF9BVFRSSUJVVEVTLk1ha2VBcnJheVR5cGUoKSAtTWFyc2hhbEFzIEAoJ0J5VmFsQXJyYXknLCAzMikNCn0NCg0KJExVSUQgPSBzdHJ1Y3QgJE1vZHVsZSBQb3dlclVwLkx1aWQgQHsNCiAgICBMb3dQYXJ0ICAgICAgICAgPSAgIGZpZWxkIDAgJFNlY3VyaXR5RW50aXR5DQogICAgSGlnaFBhcnQgICAgICAgID0gICBmaWVsZCAxIEludDMyDQp9DQoNCiRMVUlEX0FORF9BVFRSSUJVVEVTID0gc3RydWN0ICRNb2R1bGUgUG93ZXJVcC5MdWlkQW5kQXR0cmlidXRlcyBAew0KICAgIEx1aWQgICAgICAgICA9ICAgZmllbGQgMCAkTFVJRA0KICAgIEF0dHJpYnV0ZXMgICA9ICAgZmllbGQgMSBVSW50MzINCn0NCg0KJFRPS0VOX1BSSVZJTEVHRVMgPSBzdHJ1Y3QgJE1vZHVsZSBQb3dlclVwLlRva2VuUHJpdmlsZWdlcyBAew0KICAgIFByaXZpbGVnZUNvdW50ICA9IGZpZWxkIDAgVUludDMyDQogICAgUHJpdmlsZWdlcyAgICAgID0gZmllbGQgMSAkTFVJRF9BTkRfQVRUUklCVVRFUy5NYWtlQXJyYXlUeXBlKCkgLU1hcnNoYWxBcyBAKCdCeVZhbEFycmF5JywgNTApDQp9DQoNCiRUeXBlcyA9ICRGdW5jdGlvbkRlZmluaXRpb25zIHwgQWRkLVdpbjMyVHlwZSAtTW9kdWxlICRNb2R1bGUgLU5hbWVzcGFjZSAnUG93ZXJVcC5OYXRpdmVNZXRob2RzJw0KJEFkdmFwaTMyID0gJFR5cGVzWydhZHZhcGkzMiddDQokS2VybmVsMzIgPSAkVHlwZXNbJ2tlcm5lbDMyJ10NCiROVERsbCAgICA9ICRUeXBlc1snbnRkbGwnXQ0KDQpTZXQtQWxpYXMgR2V0LUN1cnJlbnRVc2VyVG9rZW5Hcm91cFNpZCBHZXQtUHJvY2Vzc1Rva2VuR3JvdXANClNldC1BbGlhcyBJbnZva2UtQWxsQ2hlY2tzIEludm9rZS1Qcml2ZXNjQXVkaXQ=
